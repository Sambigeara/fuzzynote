<?xml version="1.0"?>
<body>
  <outline _complete="true" text="Buzzhire">
    <outline _complete="true" text="Dynamic pricing re-design">
      <outline text="Key metrics">
        <outline text="Location">
          <outline text="Pre-preprocessing of postcodes to calculate some model based on postcode plus some radius around. E.g. for central position in each postcode, calculate for all jobs in a 2 mile radius (or something)." />
          <outline text="Clean data">
            <outline text="(we only want to observe the relationship between location and fulfilment)." />
            <outline text="Remove jobs with short notice or short duration." />
            <outline text="Remove jobs with unusual prices - choose only standard priced jobs." />
          </outline>
          <outline text="Find relationship between cleaned data fulfilment and location (some percentage)." />
          <outline text="Method of separating postcodes">
            <outline text="Only count jobs in each postcode">
              <outline text="Some postcodes are much smaller than others so data richness wouldn't be consistent" />
            </outline>
            <outline text="Extend the postcodes by taking an X-mile radius around each job in a given postcode.">
              <outline text="Massively inefficient when running the analysis" />
            </outline>
            <outline text="Find the central point of each postcode area and take a radius around that.">
              <outline text="Radius would have to be &amp;gt;= smallest necessary to completely cover the largest postcode area." />
              <outline text="Requires pre-processing to obtain central coordinates" />
              <outline text="Requires more pre-processing to find the minimum required radius (unless we just set some safe guess)." />
            </outline>
          </outline>
        </outline>
        <outline text="Time to job">
          <outline text="Clean data">
            <outline text="Remove short length" />
            <outline text="Remove extreme locations, i.e. only locations with percentage fulfilment above a set percentage (deduced from curve)" />
            <outline text="Remove unusual prices" />
          </outline>
          <outline text="Find relationship against fulfilment as before." />
        </outline>
        <outline text="Job length">
          <outline text="Clean data">
            <outline text="Remove short duration" />
            <outline text="Remove extreme locations" />
            <outline text="Remove unusual prices" />
          </outline>
          <outline text="Find relationship against fulfilment." />
        </outline>
        <outline text="Supply and demand" />
      </outline>
      <outline text="Roadmap">
        <outline text="Analysis:">
          <outline text="Location">
            <outline text="Todo:">
              <outline text="Get fulfilment for each postcode area from cleaned data." />
              <outline text="Cleaned data = 1 day notice, shift duration &amp;gt; 4. GIVEN STATIC PRICE." />
              <outline text="Area measured as X-mile radius from centre coords of postcode." />
              <outline text="Output = filled bookings / total bookings." />
              <outline text="Script that analyses data and outputs above." />
            </outline>
            <outline text="&lt;b&gt;Date: By end of Fri 31/11&lt;/b&gt;" />
          </outline>
          <outline text="Time to job:">
            <outline text="Todo:">
              <outline text="Measure fulfilment % for a range of different notice periods." />
              <outline text="Cleaned data = shift duration &amp;gt; 4. Ignore hours outside of 11am-6am (or potentially clean further if output is still inconsistent).  GIVEN PRICE." />
              <outline text="Output = trend showing percentage fulfilment vs notice." />
            </outline>
            <outline text="&lt;b&gt;Date: By end of Tues 5/12&lt;/b&gt;" />
          </outline>
          <outline text="Job duration:">
            <outline text="Todo:">
              <outline text="Fulfilment v job length." />
              <outline text="Cleaned data = 1 day notice. GIVEN PRICE." />
              <outline text="Output = same as above." />
            </outline>
            <outline text="&lt;b&gt;Date: By end of Thurs 7/12.&lt;/b&gt;" />
          </outline>
          <outline text="Supply and demand.">
            <outline text="Excluding for first iteration of re-write." />
          </outline>
          <outline text="Will keep emergency ~1 day scheduled increases in place." />
        </outline>
        <outline text="Application:">
          <outline text="We will pre-process and store the results (for each scenario) for a range of prices against each metric individually.">
            <outline text="I.e. we will know what average fulfilment chance is for a range of prices from e.g. 10 -&amp;gt; 15." />
          </outline>
          <outline text="We can take the average chance of fulfilment by taking each metric output and taking an average (initial assumption that each metric is of equal weight)." />
          <outline text="When a scenario is queried:">
            <outline text="The average fulfilment chance for each metric will be queried, and the result average." />
            <outline text="We will then apply a price which will result in average fulfilment of X (98%?)" />
          </outline>
          <outline text="&lt;b&gt;Date: By end of Weds 13/12.&lt;/b&gt;" />
        </outline>
      </outline>
      <outline text="Implementation">
        <outline text="Mini roadmap">
          <outline text="Generate redash reporting for tracking 98% fulfilment and 2% commission (1-2d)">
            <outline _complete="true" text="Commission" />
            <outline text="Fulfilment">
              <outline text="Unable to do due to being unable to distinguish between CA and PA jobs." />
            </outline>
          </outline>
          <outline text="Finish tidying metric filtering (3d)">
            <outline text="Refactor query to filter on booking.freelancer_pay_per_hour" />
            <outline text="Booking status filtering OR case statement to limit job.bookings.count &amp;lt;= job.number_of_freelancers" />
            <outline text="Client filtering (Backups / Buzzhire clients etc)" />
            <outline text="Cleverer method of filtering on notice, taking business hours into account or some equivalent method">
              <outline text="Perhaps ignore hours between 11pm - 8am" />
            </outline>
          </outline>
          <outline text="Optimise initial price query time so response is a couple seconds at most">
            <outline text="Cache and store output from certain parts of the query (run periodically to refresh twice a day)">
              <outline text="Per metric:">
                <outline text="Location - all historical jobs in given radius wont change so store table &quot;Jobs in radius&quot; " />
                <outline text="Duration - store all jobs in set against different duration periods." />
                <outline text="Notice - as above" />
              </outline>
              <outline text="Look into efficient data structure storage (eg. adjacency list etc.)" />
            </outline>
            <outline text="" />
          </outline>
        </outline>
      </outline>
    </outline>
    <outline _complete="true" text="Finishing/handover">
      <outline _complete="true" text="Close off/hand over bugs">
        <outline _complete="true" text="https://bugs.bzzhr.net/ticket/123 Written a comment explaining my theory and asking for more feedback. Await feedback from ops team - my guess is that this was caused by an edge case (as design) delay in job posting. If there are no repeat occurrences then most likely not relevant anymore." />
      </outline>
      <outline _complete="true" text="Clean up backend branches" />
      <outline _complete="true" text="Address open PRs">
        <outline _complete="true" text="Dynamic pricing base price decrease" />
        <outline _complete="true" text="Email notification for last message">
          <outline _complete="true" text="Merged current dev branch" />
          <outline _complete="true" text="If there is time at the end, address Antoine's comments." />
        </outline>
        <outline _complete="true" text="Zego work (see below)">
          <outline text="Merged in dev" />
          <outline text="Outstanding work">
            <outline text="Reference:">
              <outline text="See previous email correspondence with Stuart for background (worth catching up on to understand some of the decisions made)." />
              <outline text="http://developer.zegocover.com/ for ref." />
            </outline>
            <outline text="Review by others and merge PR to dev." />
            <outline text="Test on our integration server using zego sandbox API. Zego have set up a buzzhire specific user on their end with pk=4 to match up with d1 on our server." />
            <outline _complete="true" text="Change explanation to NOT say we'll deal with payment, as we obviously wont... (or at least look in to it)" />
            <outline text="Coordinate with Zego to test with their production enviroment (including sign up process which was not testable on integration/sandbox environment)." />
          </outline>
        </outline>
      </outline>
      <outline _complete="true" text="Ensure google scripts are working" />
      <outline _complete="true" text="Agency refactor handover" />
      <outline _complete="true" text="Business reporting">
        <outline _complete="true" text="Transfer permissions of google sheets across" />
        <outline _complete="true" text="Business Review">
          <outline _complete="true" text="table of bookings by service (in the details tab)" />
          <outline _complete="true" text="list of top 20 clients by revenue for each month" />
          <outline _complete="true" text="PROFIT per booking by month" />
        </outline>
        <outline _complete="true" text="Freelancer stats and retention">
          <outline _complete="true" text="Generate cohort tables" />
          <outline _complete="true" text="Fix recent result giving two months of results" />
        </outline>
      </outline>
      <outline _complete="true" text="Dynamic pricing">
        <outline text="Handover docs">
          <outline text="Things to watch out for">
            <outline text="My main concern was the rates returning to base levels after xmas, but it seems that this has mostly occurred organically anyway. Even still, I've merged some changes on to dev which will reduce base rate more dramatically under decreasing conditions." />
          </outline>
          <outline text="Current implementation:">
            <outline text="Relies on " />
          </outline>
          <outline text="Potential future plans">
            <outline text="My belief was that the biggest beneficial impact to future dynamic pricing would come from a differ" />
          </outline>
        </outline>
      </outline>
      <outline _complete="true" text="Write summary for freelancer payment fix just in case." />
      <outline _complete="true" text="Comments on how old Google sheets translated to new data platform" />
    </outline>
    <outline _complete="true" text="Daily summaries">
      <outline text="Weds 20 -&amp;gt; Thurs 21">
        <outline text="Improvements to reporting following further feedback from Nick." />
        <outline text="Wrote improvement to paygrade code to enable easier price decrease to deal with quieter period after xmas.">
          <outline text="PR ready for review." />
          <outline text="Heavily commented to hopefully make easier to understand." />
        </outline>
        <outline text="Paygrade refactor">
          <outline text="Changes to driver/hospitality paygrade models to deal with unique agency constraints + migrations " />
          <outline text="Auto generation of other paygrade tables defaulting to buzzhire numbers." />
        </outline>
        <outline text="Agency paygrade settings">
          <outline text="Moved a section of global dynamic pricing values into a dictionary" />
          <outline text="Created JSONField which defaults to buzzhire numbers using said dictionary" />
          <outline text="Refactored all code to reference agency specific values rather than globals">
            <outline _complete="true" text="MAX_CLIENT_PAY_PER_HOUR_OPT_IN" />
            <outline _complete="true" text="DYNAMIC_PAYGRADE_NOTICE_THRESHOLD" />
            <outline _complete="true" text="DYNAMIC_PAYGRADE_KP_NOTICE_THRESHOLD" />
            <outline _complete="true" text="DYNAMIC_PAYGRADE_DURATION_THRESHOLD" />
            <outline _complete="true" text="DYNAMIC_SHORT_NOTICE_SURCHARGE_WEIGHTING" />
            <outline _complete="true" text="DYNAMIC_SHORT_DURATION_SURCHARGE_WEIGHTING" />
            <outline _complete="true" text="MAX_FULFILMENT_TIME" />
            <outline _complete="true" text="DYNAMIC_INTERVAL_INCREASE_PERCENTAGE" />
            <outline _complete="true" text="DYNAMIC_INCREASE_PERIOD_SECONDS" />
            <outline _complete="true" text="DYNAMIC_CLIENT_PRICE_CAP" />
          </outline>
        </outline>
      </outline>
      <outline text="Weds 27">
        <outline text="Fixed infinite recursion bugs with improved settings object, further bit of refactoring and then testing and pushed up to branch." />
        <outline text="Added in new global setting (which can be applied per agency as above) to allow for global disabling of dynamic pricing on a per-agency basis." />
        <outline text="Changed price multiplier for new years day." />
      </outline>
      <outline text="Friday 29">
        <outline text="Updated matching logic so freelancers are only matched to jobs based on agencies (and conversely new jobs will only be matched with freelancers in the correct agency)." />
        <outline text="Tested matching logic." />
        <outline text="Receiver function to create hire on new freelancer creation." />
        <outline text="Some fixes/alterations to Agency models and migrations to suit." />
        <outline text="Investigation into paygrade ticket on bug tracker." />
        <outline text="Started looking into Hire/Agent specific permissions for Bookings. Bit slower as I need to understand how current implementation works. Will continue properly next week." />
      </outline>
      <outline text="Mon 2">
        <outline text="Moved google sheet permissions/ownership from my buzzhire account to Antoines." />
        <outline text="Altered queryset in job viewset for freelancers and created queryset filter for agents." />
        <outline text="Altered permissions from admin to agent." />
        <outline text="Started general permissions refactor in separate branch." />
      </outline>
    </outline>
    <outline _complete="true" text="Todo">
      <outline _complete="true" text="Finish tidying up/debugging LazySettings object usage." />
      <outline _complete="true" text="Enable a global agency dynamic pricing toggle (so agencies can completely opt out of it, not just on a per job basis)" />
      <outline text="Clock-in/out agency support" />
      <outline text="Matching">
        <outline _complete="true" text="Invite agency freelancers only" />
        <outline text="Notification content to adapt to agency when inviting freelancers (big one)" />
      </outline>
      <outline text="Support for agents creating jobs with specific clients">
        <outline text="View" />
        <outline text="Serializer" />
      </outline>
      <outline text="Permissions">
        <outline text="queryset" />
        <outline text="global permissions" />
        <outline text="change serializer admin meta field filtering to be per agent" />
        <outline text="scope is_admin -&amp;gt; is_agent changes to within agency" />
        <outline text="Rename &quot;AdminJobList&quot; ?" />
      </outline>
      <outline _complete="true" text="Add receiver to auto create hire/freelancer defaulting to Buzzhire Agency if nothing else." />
    </outline>
  </outline>
  <outline text="Inbox">
    <outline text="Hip opener">
      <outline text="Prying squat, stand into glute/ham stretch (front bend), repeat" />
      <outline text="In prying squat, twist and reach with one hand whilst other pushes into opposite leg to open at an angle" />
      <outline text="Deep lunge, stretch forwards, stretch back, repeat (lean into both, opens up hip flexors and opposite glutes/hammies)" />
    </outline>
    <outline text="Boiler manual" _note="&lt;a href=&quot;https://library.plumbase.co.uk/flipbooks/RE/gloult230cxi_25037_t/mobile/index.html#p=35&quot;&gt;https://library.plumbase.co.uk/flipbooks/RE/gloult230cxi_25037_t/mobile/index.html#p=35&lt;/a&gt;" />
    <outline text="Conflict free data types" _note="&lt;a href=&quot;https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type&quot;&gt;https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type&lt;/a&gt;" />
    <outline text="Sudoku video" _note="&lt;a href=&quot;https://youtu.be/yKf9aUIxdb4?t=343&quot;&gt;https://youtu.be/yKf9aUIxdb4?t=343&lt;/a&gt;" />
    <outline text="Bent press programming" _note="&lt;a href=&quot;https://www.strongfirst.com/community/threads/bent-press-help-from-48kg-to-a-next-size-kettlebell.11262/&quot;&gt;https://www.strongfirst.com/community/threads/bent-press-help-from-48kg-to-a-next-size-kettlebell.11262/&lt;/a&gt;" />
    <outline text="Arbor Space beer" _note="&lt;a href=&quot;https://arbor-ales-online-shop.myshopify.com/collections/12-cases/products/space-hardware-6-6-alc-vol-case-of-12-pints&quot;&gt;https://arbor-ales-online-shop.myshopify.com/collections/12-cases/products/space-hardware-6-6-alc-vol-case-of-12-pints&lt;/a&gt;" />
    <outline text="Current version of aws cli" _note="aws-cli/1.16.280 Python/3.7.7 Darwin/18.7.0 botocore/1.13.16" />
    <outline text="Building a text editor in go" _note="&lt;a href=&quot;https://dev.to/faraazahmad/building-a-text-editor-in-go-38dl&quot;&gt;https://dev.to/faraazahmad/building-a-text-editor-in-go-38dl&lt;/a&gt;" />
    <outline text="Rip grep search algos blog" _note="https://blog.burntsushi.net/ripgrep/#searching" />
    <outline text="Killer Mike press conference" _note="&lt;a href=&quot;https://www.youtube.com/watch?v=sG0yrng0eY4&amp;app=desktop&quot;&gt;https://www.youtube.com/watch?v=sG0yrng0eY4&amp;amp;app=desktop&lt;/a&gt;" />
    <outline text="DynamoDB talk" _note="&lt;a href=&quot;https://www.youtube.com/watch?v=HaEPXoXVf2k&quot;&gt;https://www.youtube.com/watch?v=HaEPXoXVf2k&lt;/a&gt;" />
    <outline text="A Tour of Go" _note="&lt;a href=&quot;https://tour.golang.org/moretypes/18&quot;&gt;https://tour.golang.org/moretypes/18&lt;/a&gt;">
      <outline text="&lt;a href=&quot;https://blog.golang.org/defer-panic-and-recover&quot;&gt;https://blog.golang.org/defer-panic-and-recover&lt;/a&gt;" />
      <outline text="Interfaces (from ex python dev)" _note="&lt;a href=&quot;https://jordanorelli.com/post/32665860244/how-to-use-interfaces-in-go&quot;&gt;https://jordanorelli.com/post/32665860244/how-to-use-interfaces-in-go&lt;/a&gt;" />
    </outline>
    <outline text="Ultra running documentary" _note="&lt;a href=&quot;https://www.youtube.com/watch?v=DQSiygnDm-U&quot;&gt;https://www.youtube.com/watch?v=DQSiygnDm-U&lt;/a&gt;" />
    <outline text="Nuraloop" />
    <outline text="Thermostat instruction">
      <outline text="&lt;a href=&quot;https://assets.new.siemens.com/siemens/assets/api/uuid:1fa84e757f41525a62bb60d08b65400267f8bb3e/version:1502272376/rdj10rf-datasheet.pdf&quot;&gt;https://assets.new.siemens.com/siemens/assets/api/uuid:1fa84e757f41525a62bb60d08b65400267f8bb3e/version:1502272376/rdj10rf-datasheet.pdf&lt;/a&gt;" />
      <outline text="&lt;a href=&quot;https://www.manualslib.com/manual/946980/Siemens-Rdj10rf-Set.html&quot;&gt;https://www.manualslib.com/manual/946980/Siemens-Rdj10rf-Set.html&lt;/a&gt;" />
    </outline>
    <outline text="Pure scooters" />
    <outline text="Salary negotiation" _note="https://www.kalzumeus.com/2012/01/23/salary-negotiation/" />
    <outline text="CS:GO matches" _note="&lt;a href=&quot;https://on-winning.com/best-professional-csgo-matches/&quot;&gt;https://on-winning.com/best-professional-csgo-matches/&lt;/a&gt;">
      <outline text="&lt;a href=&quot;https://youtu.be/fT1f2_vSyuQ?t=1195&quot;&gt;https://youtu.be/fT1f2_vSyuQ?t=1195&lt;/a&gt;" />
      <outline text="NaVi vs Liquid" _note="&lt;a href=&quot;https://youtu.be/BNGFmUOVoTE?t=60&quot;&gt;https://youtu.be/BNGFmUOVoTE?t=60&lt;/a&gt;" />
    </outline>
    <outline text="css win98 stylesheet" _note="https://jdan.github.io/98.css/#button" />
    <outline text="Josh &amp;amp; Jas address" _note="10 Emerald Court, 20 Arla Place, Ruuslip, HA4 0GD" />
    <outline text="COD playthrough" _note="https://youtu.be/4MglAQncpTM?list=PLs1-UdHIwbo7Dd4u15e0TtlCkVbcZoYz2" />
    <outline text="Doom playthrough" _note="https://youtu.be/b7gIVnvmzko?list=PLs1-UdHIwbo4WJtoYSQ8JkFZYqMY1zhIa&amp;amp;t=262" />
    <outline text="South Coast Strength Club guy Tommy Cuff" />
    <outline text="American silk shorts" _note="www.zerofoxtrot.com" />
    <outline text="https://youtu.be/z7IsCnaba2Q?t=354" />
    <outline text="Claw grip mouse, Razer Viper" _note="https://www.razer.com/gb-en/gaming-mice/razer-viper" />
    <outline _complete="true" text="Aldi case ref no. A676062" />
    <outline _complete="true" text="Advent of code" _note="696520-20191202-d3f8c62a" />
    <outline text="Synology NAS" />
    <outline _complete="true" text="Flipbelt" />
    <outline _complete="true" text="hmm.txt" />
    <outline _complete="true" text="Prep">
      <outline text="https://www.quora.com/What-should-I-expect-in-a-Software-Engineer-interview-at-Google-and-how-should-I-prepare" />
    </outline>
    <outline _complete="true" text="Stacks and heap (and virtual memory vmm) article" _note="https://www.programmerinterview.com/index.php/data-structures/difference-between-stack-and-heap/" />
    <outline _complete="true" text="Dell monitor issues" _note="https://discussions.apple.com/thread/6703319" />
    <outline _complete="true" text="Ctrl-d / ctrl-c SO answer" _note="https://unix.stackexchange.com/questions/16333/how-to-signal-the-end-of-stdin-input" />
    <outline _complete="true" text="Annotated assembly repo https://gitlab.com/mcmfb/intro_x86-64" />
    <outline _complete="true" text="Destroy All Software" _note="https://www.destroyallsoftware.com/screencasts/catalog" />
    <outline _complete="true" text="Python talks">
      <outline text="https://www.youtube.com/watch?v=wf-BqAjZb8M" />
      <outline text="https://www.youtube.com/watch?v=RZ4Sn-Y7AP8" />
    </outline>
    <outline _complete="true" text="#kettlebells">
      <outline text="#kettlebells interesting article" _note="https://www.strongfirst.com/why-a-kettlebell/" />
      <outline text="#kettlebells Strength standards" _note="http://media.wix.com/ugd/f791d3_8a55dba1865e05af2203c6ccc41dfba3.pdf" />
      <outline text="#kettlebells pavel Simple and Sinister" _note="https://www.strongfirst.com/achieve/sinister/" />
      <outline text="#kettlebells comment with potential strength standards/routines" _note="https://www.reddit.com/r/kettlebell/comments/36vnfw/strength_standards_for_kettlebells/crk57xt?utm_source=share&amp;amp;utm_medium=web2x" />
      <outline text="https://youtu.be/C0B1SrcGAIA #kettlebell clean tips" />
      <outline text="#kettlebells Enter the kettlebell https://youtu.be/cKx8xE8jJZs" />
    </outline>
    <outline _complete="true" text="Refresh sound service on mac" _note="https://apple.stackexchange.com/questions/16842/restarting-sound-service" />
    <outline _complete="true" text="#kettlebells Kettlebell 5x5 https://www.bodybuilding.com/fun/kettlebell_5x5_training.htm">
      <outline text="Double KB front squats" />
      <outline text="Double KB push press/military press" />
      <outline text="Double KB windmill" />
    </outline>
    <outline _complete="true" text="Jacob and Charlie 19" />
    <outline _complete="true" text="Names in gym">
      <outline text="Ian, American" />
      <outline text="Nick, glasses" />
      <outline text="Sid, cambered bench" />
      <outline text="Alex, vivobarefoot boots" />
    </outline>
    <outline _complete="true" text="Gym">
      <outline text="Up to 180 on squat" />
      <outline text="Up to 120 on bench" />
      <outline text="Over week">
        <outline text="Squat">
          <outline text="190, 180, 180, 170, 190" />
        </outline>
        <outline text="Bench">
          <outline text="Weds 120, 115, 122.5" />
        </outline>
      </outline>
    </outline>
    <outline _complete="true" text="vim F9 breakpoint" _note="nmap &amp;lt;F9&amp;gt; oimport pdb; pdb.set_trace()&amp;lt;ESC&amp;gt;" />
    <outline _complete="true" text="OJT4JFACKG3GR25O" />
    <outline _complete="true" text="Straightteethdirect.com" />
    <outline _complete="true" text="https://www.asket.com/" />
    <outline _complete="true" text="Www.flowerbx.com" />
    <outline _complete="true" text="On `master` and new `broadcast` api.campaigns versions, need to return only those relevant to the service" _note="those with `mass_campaign.mass_campaign_configuration_id` NULL or NOT NULL)" />
    <outline _complete="true" text="https://github.com/rShetty/awesome-podcasts" />
    <outline _complete="true" text="https://www.destroyallsoftware.com/compendium/network-protocols?share_key=97d3ba4c24d21147" />
    <outline _complete="true" text="Instant pot cooking times https://cookingtimes.info/" _note="https://www.reddit.com/r/instantpot/comments/7r3qn7/minimalist_instant_pot_cooking_time_tables/" />
    <outline _complete="true" text="Make archive and move gravitapp into it" />
    <outline _complete="true" text="Alpine Elements ski company" />
    <outline _complete="true" text="The Experiment, Hackney Wick, pulp beer" />
    <outline _complete="true" text="Stour Space" />
    <outline _complete="true" text="Drinks">
      <outline text="Bottle beer x2" />
      <outline text="Draught lager x1" />
      <outline text="Draught ale x3" />
      <outline text="G+t x1" />
      <outline text="Water x3" />
    </outline>
    <outline _complete="true" text="Shark hoover warranty registration unique number 1547675607" />
  </outline>
  <outline text="Main">
    <outline text="Backlog" _note="Not for today">
      <outline text="#om Prep for Konrad">
        <outline _complete="true" text="CtCI pg 143?" />
        <outline _complete="true" text="Contact sync?" />
        <outline _complete="true" text="Data storage?" />
        <outline text="Mass email issues and re-arch/port to kube" />
        <outline text="Current configuration">
          <outline text="Two ECS clusters">
            <outline text="1 solely picks jobs off rabbitmq and processes them" />
            <outline text="1 consists of numerous workers" />
          </outline>
        </outline>
      </outline>
      <outline text="#om Add goals to lattice" />
      <outline text="#om #om-support Missoma link report error " _note="&lt;a href=&quot;https://ometria.atlassian.net/jira/software/projects/CCM/boards/59?selectedIssue=CCM-224&quot;&gt;https://ometria.atlassian.net/jira/software/projects/CCM/boards/59?selectedIssue=CCM-224&lt;/a&gt;">
        <outline text="Example endpoint" _note="&lt;a href=&quot;https://app.ometria.com/app/2ce0b6a271491b9c/api/report/email_trigger_campaign_heatmap_link_report/query?json=%7B%22campaign_id%22%3A46%7D&quot;&gt;https://app.ometria.com/app/2ce0b6a271491b9c/api/report/email_trigger_campaign_heatmap_link_report/query?json=%7B%22campaign_id%22%3A46%7D&lt;/a&gt;" />
        <outline text="Query never returning it" _note="SELECT&#10;  func.target_link_url                                      AS link_url,&#10;  func.target_link_name                                     AS link_name,&#10;  null                                                      AS block_type,&#10;  func.n_clicks                                             AS num_clicks,&#10;  func.n_clicks :: FLOAT / sum(func.n_clicks)&#10;  OVER ()                                                   AS percent_clicks,&#10;  func.n_unique_clicks                                      AS num_unique_clicks,&#10;  func.n_unique_clicks :: FLOAT / sum(func.n_unique_clicks)&#10;  OVER ()                                                   AS percent_unique_clicks&#10;FROM redshift_trigger_email_campaigns_click_report({{ account_id }},{{ campaign_id }}) func&#10;ORDER BY func.n_clicks DESC;" />
        <outline text="Equivalent broadcast endpoint" _note="Request URL:&lt;a href=&quot;https://app.ometria.com/app/2ce0b6a271491b9c/api/report/email_mass_campaign_heatmap_link_report/query?json=%7B%22campaign_id%22%3A494%7D&quot;&gt;https://app.ometria.com/app/2ce0b6a271491b9c/api/report/email_mass_campaign_heatmap_link_report/query?json=%7B%22campaign_id%22%3A494%7D&lt;/a&gt;" />
      </outline>
      <outline text="#om Tech radar">
        <outline text="Todo">
          <outline text="Fill out list with missing technolgies (e.g. what other things could be added to the sections)" _note="https://docs.google.com/document/d/189ASHpGXSay-RKSRIY_QARiC7-EWoimNYFaY8xNUJi4/edit" />
          <outline text="Write some summaries for some of the technologies" />
          <outline text="Add to the service" />
          <outline text="?Get input from other teams" />
        </outline>
        <outline text="Ref">
          <outline text="Repo" _note="https://github.com/Ometria/ometria.tech-radar" />
          <outline text="Current Ometria radar" _note="https://ometria-tech-radar.netlify.com/" />
          <outline text="Example thoughtworkds radar" _note="https://radar.thoughtworks.com/?sheetId=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2F18A7oDuavlh89rAmqcaXpqle8QLqIvlAkoEUxcObzuUM%2Fedit%23gid%3D1985253373" />
        </outline>
      </outline>
      <outline text="#life upgrade drive storage and re-upload photos off new phone" />
      <outline text="#om fix mass_email tests" />
      <outline text="#om investigate broken critical alert EmailLongSendingBatchesCount1h" />
      <outline text="#om add account optin tests to tree, mass_email and api.campaigns">
        <outline text="mass email">
          <outline text="branch add-account-optin-tests" />
          <outline text="changes currently stashed" />
        </outline>
        <outline text="segmentation_tree" _note="https://github.com/Ometria/ometria.lib.segmentation_tree/pull/2" />
        <outline text="api.campaigns" _note="https://github.com/Ometria/ometria.api.campaigns/pull/88" />
      </outline>
      <outline text="#life destroy and return old driving license " _note="Cut in half and return to: DVLA Swansea, SA99 1ZW" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;3&quot;&gt;Tue, Mar 3, 2020&lt;/time&gt; #om #proj-slos mass_email architectural diagram " />
      <outline text="#life #foobar 2.2" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;9&quot;&gt;Mon, Mar 9, 2020&lt;/time&gt; #om delete master_backup branch in api.campaigns " />
      <outline text="#om Update engineering.docs with info on how to update n email workers (ASG and task definition)">
        <outline text="In code" />
        <outline text="Manually" />
      </outline>
      <outline text="#life upload wedding photos somewhere" />
      <outline text="#life Contact standard life about updating online details" />
      <outline text="#om remove redundant code from mass_email" />
      <outline text="#om Finalise and deploy improved winner campaign stats PR" />
    </outline>
    <outline text="Ready" _note="Prioritise the day's work">
      <outline text="#om Senior Eng Recruitment scoresheet feedback" _note="&lt;a href=&quot;https://ometria.slack.com/archives/GVCBHS9QC/p1590142651000200&quot;&gt;https://ometria.slack.com/archives/GVCBHS9QC/p1590142651000200&lt;/a&gt;" />
      <outline _complete="true" text="#life Kim bday">
        <outline text="Write card, wrap presents" />
        <outline _complete="true" text="Dot to dot, colouring in headspace stuff" />
        <outline _complete="true" text="Nice pens" />
        <outline _complete="true" text="Fred perry top? Amy winehouse collection" _note="&lt;a href=&quot;https://www.fredperry.com/women/amy-winehouse-foundation/amy-winehouse-printed-t-shirt-sg8101-100.html&quot;&gt;https://www.fredperry.com/women/amy-winehouse-foundation/amy-winehouse-printed-t-shirt-sg8101-100.html&lt;/a&gt;" />
      </outline>
      <outline _complete="true" text="Broadcast segment last used">
        <outline text="Create mass_campaign.list_ids_used or something" />
        <outline text="Populate column in api.campaigns" />
        <outline text="in api.segments, adapt query to return dt_last_used for each list_id" />
      </outline>
    </outline>
    <outline text="In-progress">
      <outline text="#om #proj-push kickoff" _note="SDK design doc: &lt;a href=&quot;https://docs.google.com/document/d/138ROLu694rzD3uJmMwF194HpLX04SFXuKRHjqPsPSzs/edit#heading=h.xp16bt65usdu&quot;&gt;https://docs.google.com/document/d/138ROLu694rzD3uJmMwF194HpLX04SFXuKRHjqPsPSzs/edit#heading=h.xp16bt65usdu&lt;/a&gt;&#10;Shared google folder: &lt;a href=&quot;https://drive.google.com/drive/u/0/folders/18kRx0wV0udFTdjySvUHnX0VNdNMlnIuE&quot;&gt;https://drive.google.com/drive/u/0/folders/18kRx0wV0udFTdjySvUHnX0VNdNMlnIuE&lt;/a&gt;&#10;&#10;Key promises to NOTHs and Hotel Chocolat&#10;&#10;Hotel Chocolat&#10;- Mobile push notifications was referenced in their contract scope of work.&#10;- Hotel Chocolat have a code freeze starting September 30th.&#10;- Our deadline for giving them v1 of SDK is August 30th&#10;- Gives the 1mo to install, test and rollout.&#10;- Currently their priorities are shifting towards an in-app mail box first (not in scope for us).&#10;- We'll continue with our plan to meet their needs and the contract.&#10;- They are happy with the standard project timeline and plan.&#10;&#10;NOTHs&#10;- Mobile push notifications was referenced in their contract scope of work.&#10;- No know code freeze as of yet, but likely at a similar time.&#10;- Currently are raising identification as a blocker to using this at all.&#10;- Call with their technical architect is booked to discuss identification design.&#10;- Outcome of that meeting determines NOTHs using it at all.&#10;- Additionally, NOTHs want to start with transactional use cases.&#10;- Bolting these on to the existing transactional API, or through automation, is possible.&#10;- Workshop on those would follow if identification problem resolved.&#10;&#10;Project Phasing&#10;&#10;Identification&#10;Why is this a hard problem and cannot be solved before peak 2020&#10;&#10;Phase 1 - By August 30th&#10;Tech Spec&#10;- v1 SDK&#10;- Send push from automation integrated with existing triggers.&#10;- Simple mobile push reporting capabilities.&#10;- No capability to message users who are not logged in alongside.&#10;&#10;Phase 2 - Q4&#10;Tech Spec&#10;- Fully segmentable broadcast push notifications.&#10;- Standalone, not integrated into email broadcast system.&#10;" />
      <outline text="#om #proj-push ">
        <outline text="Test environment">
          <outline text="Provide test environment for developement" />
          <outline text="This will also need to be available for future clients integrating the SDK" />
        </outline>
        <outline text="" />
      </outline>
      <outline text="#proj-fuzzynote POC" _note="re-invogorated, with golang">
        <outline _complete="true" text="Brainstorming">
          <outline text="present only relevant top level, with smart fuzzy searching to get to and display relevant info" />
          <outline text="Components">
            <outline text="DB/storage engine">
              <outline text="Initially store structured text file?" />
              <outline text="Structure">
                <outline text="Binary tree?" />
                <outline text="Graph based db?" />
              </outline>
            </outline>
            <outline text="DB wrapper, querying, retrieval, common interface for native and http api" />
            <outline text="Clients">
              <outline text="Native editor" />
              <outline text="Browser" />
            </outline>
          </outline>
          <outline text="Tags are indexes, searches on that tag will hit fast lookup">
            <outline text="don't require hashtag or anything?" />
          </outline>
          <outline text="Command to list all tags">
            <outline text="&quot;Add tag&quot; matter of appending tag to list?" />
          </outline>
          <outline text="Node name &quot;key&quot; with link to document? Vim doc?">
            <outline text="Flow would be fuzzy search doc, zoom in for vim functionality" />
          </outline>
          <outline text="Flat heirarchy, no nesting">
            <outline text="Power comes from fuzzy searching" />
            <outline text="Date ordering" />
            <outline text="Priority ordering" />
          </outline>
          <outline text="Client design">
            <outline text="Default view is date OR priority ordered list descending" />
            <outline text="Fuzzy search &quot;groups&quot;, e.g.">
              <outline text="Some search, hit enter, add other fuzzy search group" />
            </outline>
            <outline text="List of results as single list nodes">
              <outline text="Click on node to open editor" />
            </outline>
            <outline text="Auto highlight any index keyword matches" />
          </outline>
          <outline text="Index structure">
            <outline text="Id - disk/file location">
              <outline text="What unique id or how is hash generated?" />
            </outline>
            <outline text="Order by date?">
              <outline text="Linked list?" />
            </outline>
          </outline>
          <outline text="In memory structure with disk persistence" />
        </outline>
        <outline text="Requirements/goals">
          <outline text="Must be fast" />
          <outline text="Must find required files with minimum effort" />
          <outline text="Must display info in useful formats (e.g. training log)" />
          <outline text="Must be able to sync efficiently with remote clients" />
        </outline>
        <outline text="Search">
          <outline text="Hashtags mean following word exact match only. Tags correspond to &quot;themes&quot; or &quot;projects&quot; or &quot;groupings&quot;" />
          <outline text="Search algo O(N) on each line (look for first rune, then second after etc)" />
          <outline text="&quot;Pin&quot; important items? (always diplayed in main or filtered views at top)" />
        </outline>
        <outline text="Flat structure. &quot;Search keys/lines&quot; are first line from each file, so each page item represents the key, and then a full file for editing (this is optional)" />
        <outline text="Indexes can be used to generate separate &quot;pages&quot; or &quot;views&quot;, e.g. shopping list. Index won't be necessary until dataset is massive, however need a way of explicitly stating a pageitem belongs to an index??" />
        <outline text="Data structures">
          <outline text="String/key file log">
            <outline text="Searchable string" />
            <outline text="Datetime" />
            <outline text="ID" />
            <outline text="Strings are mutable, so how to update? Append and mark other for deletion? DELETED flag?" />
          </outline>
          <outline text="Index B-tree">
            <outline text="Keys = ID mapped to other table" />
            <outline text="Leaf nodes store either pointer to single file, or file+offset for &quot;page&quot; in question" />
          </outline>
        </outline>
        <outline text="&quot;Enter&quot; on key opens temp editor/buffer. Go worker watches file for mutations/file closes and flushes to main database" />
        <outline text="TODO">
          <outline text="Add schema bytes to beginning of file schema and re-run conversion. These are the only required bytes going forwards (reserve N bytes at beginning of root file to determine schema version?">
            <outline text="Maintain schema doc with version and fields? Store struct against version type?" />
          </outline>
          <outline text="Highlight whole line (inverse colours) when arrow down or up through lines" />
          <outline text="Above might require refactor to create a `Page` data structure representing the current state of the view (e.g. page.inverseColours(curs.Y) etc) - indexable by curs position (e.g. curs.X = 1 -&amp;gt; first list item)" />
        </outline>
      </outline>
      <outline text="#om #support Email - are opens or deliveries unique?">
        <outline text="Automation -&amp;gt; trigger_campaigns_list_new" _note="ometria_reporting/reports/trigger_campaigns/&lt;a href=&quot;http://campaigns_list_report.py&quot;&gt;campaigns_list_report.py&lt;/a&gt;" />
        <outline text="Broadcast -&amp;gt; mass_campaigns_metrics" _note="ometria_reporting/reports/mass_campaigns/&lt;a href=&quot;http://mass_campaigns_metrics_report.py&quot;&gt;mass_campaigns_metrics_report.py&lt;/a&gt;" />
        <outline text="Transactional -&amp;gt; transactional_email_activity" _note="ometria_reporting/reports/transactional_emails/&lt;a href=&quot;http://transactional_email_activity.py&quot;&gt;transactional_email_activity.py&lt;/a&gt;" />
      </outline>
    </outline>
    <outline text="In-review" />
    <outline text="Complete">
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; endYear=&quot;2020&quot; startMonth=&quot;5&quot; endMonth=&quot;6&quot; startDay=&quot;20&quot; endDay=&quot;19&quot;&gt;Wed, May 20, 2020 - Fri, Jun 19, 2020&lt;/time&gt;  #om #proj-sms Shortlink support ">
        <outline text="Test CURLs">
          <outline text="GET" _note="curl -S -X GET &quot;localhost:8080/getShortLink?accountId=352&amp;amp;customerId=1&amp;amp;domainType=prefs&quot;" />
          <outline text="POST" _note="curl -X POST localhost:8080/getLongLink -d '{&quot;urls&quot;: &quot;foo&quot;}'" />
        </outline>
        <outline _complete="true" text="No need for ingress given no fancy routing required. Service LB distributing traffic amongst N workers should be fine" />
        <outline _complete="true" text="As Bruno mentioned, writing in Go is unlikely to slow down development given the simplicity of the system. It is certainly a better suited technology for the application, and therefore I'd propose it." />
        <outline _complete="true" text="(To begin with at least) no need for rate limiting providing the service is high performing. Bottleneck is likely to be the data store under extreme conditions. Adequate monitoring and alerting will identify issues and we can act accordingly later on" />
        <outline _complete="true" text="As I mentioned above, in a hypothetical high load scenario, I think a DB is a likely bottleneck, primarily because we'd quickly saturate available db connections (which could have knock on affects elsewhere) but also for added latency (waiting for free connection/lookup in general). If we were to use postgres, we'd need to guarantee quick lookups. If we have hundreds of thousands of rows in a table, an index would likely be required to return quickly, but the nature of the system means that the index will constantly require updating (of course a bad thing with indexes)." />
        <outline _complete="true" text="No need for auth/ssl? Most likely not" />
      </outline>
      <outline _complete="true" text="Tue, May 26, 2020 #om #proj-push Review Al's backend spec  " _note="&lt;a href=&quot;https://ometria.slack.com/archives/C012T9WJ41L/p1590505623003000&quot;&gt;https://ometria.slack.com/archives/C012T9WJ41L/p1590505623003000&lt;/a&gt;" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;19&quot;&gt;Fri, Jun 19, 2020&lt;/time&gt; #om mass-email-admin failure ">
        <outline text="Log message" _note="{&quot;log_message&quot;: &quot;Error occurred in transaction&quot;, &quot;exc_info&quot;: {&quot;exception&quot;: &quot;&amp;lt;gaierror: [Errno -2] Name does not resolve&amp;gt;&quot;, &quot;traceback&quot;: &quot;/server/apps/ometria.mass_email_monitoring/ometria_mass_email_monitoring/admin/&lt;a href=&quot;http://backend.py&quot;&gt;backend.py&lt;/a&gt;:113 get_mass_campaign_batches *[mappers.mass_campaign_batch(row) for row in await connection.fetch(query, *params)]\n/server/apps/ometria.mass_email_monitoring/ometria_mass_email_monitoring/admin/&lt;a href=&quot;http://mappers.py&quot;&gt;mappers.py&lt;/a&gt;:111 mass_campaign_batch redis_n_sent, redis_n_error, redis_n_suppressed = await tracker.get_counts()\n/server/apps/ometria.mass_email_monitoring/ometria_mass_email_monitoring/&lt;a href=&quot;http://redis.py&quot;&gt;redis.py&lt;/a&gt;:71 get_counts await self.ensure_client()\n/server/apps/ometria.mass_email_monitoring/ometria_mass_email_monitoring/&lt;a href=&quot;http://redis.py&quot;&gt;redis.py&lt;/a&gt;:24 ensure_client maxsize=cls.maxsize)\n/usr/local/lib/python3.6/site-packages/aioredis/commands/__init__.py:198 create_redis_pool loop=loop)\n/usr/local/lib/python3.6/site-packages/aioredis/&lt;a href=&quot;http://pool.py&quot;&gt;pool.py&lt;/a&gt;:58 create_pool await pool._fill_free(override_min=False)\n/usr/local/lib/python3.6/site-packages/aioredis/&lt;a href=&quot;http://pool.py&quot;&gt;pool.py&lt;/a&gt;:383 _fill_free conn = await self._create_new_connection(self._address)\n/usr/local/lib/python3.6/site-packages/aioredis/&lt;a href=&quot;http://connection.py&quot;&gt;connection.py&lt;/a&gt;:113 create_connection timeout)\n/usr/local/lib/python3.6/asyncio/&lt;a href=&quot;http://tasks.py&quot;&gt;tasks.py&lt;/a&gt;:339 wait_for return (yield from fut)\n/usr/local/lib/python3.6/site-packages/aioredis/&lt;a href=&quot;http://stream.py&quot;&gt;stream.py&lt;/a&gt;:24 open_connection lambda: protocol, host, port, **kwds)\n/usr/local/lib/python3.6/asyncio/&lt;a href=&quot;http://base_events.py&quot;&gt;base_events.py&lt;/a&gt;:750 create_connection infos = f1.result()\n/usr/local/lib/python3.6/concurrent/futures/&lt;a href=&quot;http://thread.py&quot;&gt;thread.py&lt;/a&gt;:56 run result = self.fn(*self.args, **self.kwargs)\n/usr/local/lib/python3.6/&lt;a href=&quot;http://socket.py&quot;&gt;socket.py&lt;/a&gt;:745 getaddrinfo for res in _socket.getaddrinfo(host, port, family, type, proto, flags):&quot;}, &quot;module&quot;: &quot;sessions&quot;, &quot;severity&quot;: &quot;ERROR&quot;, &quot;timestamp&quot;: &quot;2020-06-01 10:00:24,390&quot;}" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;12&quot;&gt;Fri, Jun 12, 2020&lt;/time&gt; #om #om-interview Ciaran Doherty ">
        <outline text="Challenged the document &quot;Your document says&quot; - wrongly. Had to point out what it actually said. Communication almost a bit challenging?" />
        <outline text="Clearly hasn't read the document. &quot;Do we need to dedupe?&quot;" />
        <outline text="Implementation">
          <outline text="Table in postgres" />
          <outline text="Daemonized process" />
        </outline>
        <outline text="State in postgres?">
          <outline text="List IDs" />
          <outline text="Last updated timestamp" />
        </outline>
        <outline text="API key stored in /etc/ store in cfg" />
        <outline text="Log files in /var/log/{process}" />
        <outline text="Some way to start it, stop it, pass more lists, and scale up" />
        <outline text="Mentioned more nodes for scaling purposes" />
        <outline text="Couldn't remember our name &quot;Ometria&quot; lol" />
        <outline text="Async - no way for processes to communicate???">
          <outline text="Above sounded wrong, but digging in he seems to understand at a low level" />
        </outline>
        <outline text="Talking about rabbitmq as a scheduling solution? On a per-page basis" />
        <outline text="Eventually came around to a solid solution with">
          <outline text="Separate async processes talking to a single postgres instance, locking rows as a semaphore and processing until complete. On questioning, realised (without real prompt) that it needed to be taken at the end of completion" />
        </outline>
        <outline text="I liked the response around healthchecking the system, checked DT - if behind, also checked mailchimp. If MC is down, DONT wake up the developer because there is nothing they can do lol" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;17&quot;&gt;Wed, Jun 17, 2020&lt;/time&gt; Mental Health Advocacy">
        <outline text="Words related to mental health">
          <outline text="Taboo" />
          <outline text="Happiness" />
          <outline text="Depression" />
        </outline>
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;9&quot;&gt;Tue, Jun 9, 2020&lt;/time&gt; #om #om-interview Angelo Lupo ">
        <outline text="Understands the requirements of the system well, 2h interval, use of dt etc" />
        <outline text="Acknowledged need to scale off the bat, cool">
          <outline text="Lambda - task scheduler" />
          <outline text="Something to fill a queue" />
          <outline text="Or a always on scheduler worker" />
        </outline>
        <outline text="Acknowledged threads being viable in this scenario" />
        <outline text="Initially suggested a single scheduler which itself pulls from mailchimp and puts on a queue">
          <outline text="SamB challenged/asked about case with multiple company/lists?" />
        </outline>
        <outline text="When acknowledging a challenge, he might be chancing the responses a little bit (e.g. &quot;Oh yeah I meant X...&quot;)" />
        <outline text="Seemed &quot;confident&quot; in his approach, but not necessarily confident in the correct approach" />
        <outline text="Took some leading to get to monitoring answer" />
        <outline text="Slightly unclear in some areas of communication (although that could have been our fault?)" />
        <outline text="Wasn't clear on when to take timestamp, didn't catch the need to take timestamp at start of sync" />
        <outline text="Hadn't given consideration to async pagination">
          <outline text="SamB asking about this" />
          <outline text="Sort of avoiding the question, talking about buying more api keys, asking for higher rate from MC, etc" />
        </outline>
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;8&quot;&gt;Mon, Jun 8, 2020&lt;/time&gt; #om #om-interview Nicholas Dentandt Whiteboarding ">
        <outline text="Immediately acknowledged 10 concurrent request limit on MC side" />
        <outline text="Great acknowledement of internal rate limiting" />
        <outline text="Overthinking scheduling, wants it running continually" />
        <outline text="Didn't seem to acknowledge that he could take and store the timestamp from before the request" />
        <outline text="Not familiar with process separation - queue" />
        <outline text="Nailed the DT state thing straight away" />
        <outline text="Acknowledged use of queues as means to scale">
          <outline text="Prevent 2 workers processing the same job" />
        </outline>
        <outline text="Lack of knowledge of queueing solutions though (named a few arbitrary technologies)" />
        <outline text="Most familiar with AWS, but doesn't seem that familiar.">
          <outline text="Would use ECS but doesn't understand it" />
          <outline text="Would &quot;use EC2 boxes&quot;, but doesn't offer insight as to how" />
        </outline>
        <outline text="Nice guy" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;2&quot;&gt;Tue, Jun 2, 2020&lt;/time&gt; #om #om-interview Daniel Follent Code Review ">
        <outline text="Prep">
          <outline text="Why instantiate a new http session on each request?" />
          <outline text="Global exception handling across E2E (GET and POST)" />
          <outline text="Correct dt setting" />
          <outline text="Strange boundaries - passing Ometria client to update method of Mailchimp.update() method" />
          <outline text="Indicator of alerting based on 2h limit" />
          <outline text="Query parameters to MC.get() method?? Not used" />
          <outline text="Do we need to pass timeout again on post()?" />
          <outline text="How would we implement concurrency on the GETs? What would the affect be on error handling?" />
          <outline text="How to mitigate if Ometria API call failing constantly?" />
        </outline>
        <outline text="Strong code review" />
        <outline text="Great communicator" />
        <outline text="Methodical" />
        <outline text="Initially reasoned need for multiple processes, but then reasoned (himself) that actually threaded was a suitable solution (given kernel thread context switching is a magnitude less expensive)" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;28&quot;&gt;Thu, May 28, 2020&lt;/time&gt; #om #om-interview Sergio Correa Whiteboarding ">
        <outline text="Figured out pitfalls in most circumstances" />
        <outline text="In general, I feel like there was a problem with communication. He spent a while understanding the issue, and then seemed unsure when addressing various details throughout." />
        <outline text="At no point greas" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;19&quot;&gt;Tue, May 19, 2020&lt;/time&gt; #om #om-interview Sarah Anderson ">
        <outline text="Notes from prep">
          <outline text="General">
            <outline text="Exception handling?" />
          </outline>
          <outline text="previous_batch_job_clearer">
            <outline text="Batch job states - seem AWS batch specific (?), is there a more appropriate way to store these to show intent?">
              <outline text="Tuple/frozenset" />
              <outline text="Instantiate at module level (how does lambda deal with caching given it's not a constant process?!)" />
            </outline>
            <outline text="Terminating 2h jobs if not successful, what to do here? Self recoverable?" />
            <outline text="Why use abstraction for job termination? Seems that all jobs get terminated anyway?" />
          </outline>
          <outline text="batch_job_creation_lambda">
            <outline text="Could use urllib" />
            <outline text="No exception handling on mailchimp requests" />
            <outline text="Total pages could be stored in env var - batch size is hardcoded in" />
          </outline>
        </outline>
        <outline text="Ackowledged all fiddly questions easily (AWS constants in enum etc)" />
        <outline text="I'm not sure that she fully grasped the issue with the last update dt issue. Her answers to the problem were a bit vague, and centred around her existing system which seemed to add complexity" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;18&quot;&gt;Mon, May 18, 2020&lt;/time&gt; #om #om-interview Nicola Martorana code review ">
        <outline text="Error handling" />
        <outline text="Mentioned that we don't care about response from internal API. I flagged the implications of this, and he eventually got it. Initially wanted to use metrics to monitor health of system, but had to point out that we have no idea of health of system without receiving successful response. He got soon enough though and received well" />
        <outline text="Used a separate &quot;failed job queue&quot;, missed the implication of new (same customer id) recorde entering the system before &quot;failed job&quot; is processed" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;15&quot;&gt;Fri, May 15, 2020&lt;/time&gt; #om Friday drinks ">
        <outline text="The theme is &quot;turning up&quot;, because times are hard and we need to make our own entertainment, and because I only remembered I was organising this today" />
        <outline text="OR The theme is &quot;turning up&quot;, because although I've become accustomed to solo drinking recently, it's always nicer when someone else is there too." />
        <outline text="Slightly delayed mirror" />
        <outline text="Activities will include">
          <outline text="Discussing the week" />
          <outline text="Discussing the weather" />
          <outline text="Reminding a peer that they are muted" />
          <outline text="Acknowledging how unclear the recent government advice has been" />
          <outline text="Attempting to talk when no-one else is talking" />
          <outline text="Pointing out to a peer that they are still muted" />
        </outline>
      </outline>
      <outline _complete="true" text="#om #clustermigration Ongoing tracking sheet" _note="https://docs.google.com/document/d/18XIXvbog3oZOAk7ymm6Ao70upszxxNnsE2pwhc86DKg/edit" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; endYear=&quot;2020&quot; startMonth=&quot;5&quot; endMonth=&quot;5&quot; startDay=&quot;8&quot; endDay=&quot;13&quot;&gt;Fri, May 8, 2020 - Wed, May 13, 2020&lt;/time&gt; #om #clustermigration pipfile to poetry   " _note="# https://github.com/dephell/dephell&#10;pip install dephell&#10;dephell self autocomplete&#10;dephell deps convert --from=Pipfile --to=pyproject.toml&#10;&#10;# Add to top section (update where appropriate):&#10;description = &quot;API for segments&quot;&#10;authors = [&quot;RI Tribe&quot;]&#10;&#10;# Ensure correct local python version (if below install fails)&#10;pip install poetry&#10;poetry install&#10;# This will generate poetry lockfile&#10;&#10;# if it complains about direct urls in `pyproject.toml`, you need to upgrade `pip` to `18.1` min - probably just go to latest" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;13&quot;&gt;Wed, May 13, 2020&lt;/time&gt; #om #om-interview Vlad Birconian ">
        <outline text="Very thoughtful with question answering, bordering on overthinking" />
        <outline text="Questions">
          <outline text="Groupings thread or process bound?" />
          <outline text="Grouped per list id? Yes" />
          <outline text="sub task e2e? Yes">
            <outline text="addressed single failed batch" />
            <outline text="Internal API slow/failure scenario?" />
          </outline>
        </outline>
        <outline text="Opted to use a technology that he's not familiar with (celery groups)" />
        <outline text="Was a bit vague and iffy" />
        <outline text="When not sure, babbles quite vaguely" />
        <outline text="Gives silly answers when confused" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;12&quot;&gt;Tue, May 12, 2020&lt;/time&gt; #om coreservices crashloop issue " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;11&quot;&gt;Mon, May 11, 2020&lt;/time&gt; #om coreservices-gearman OOM " _note="&lt;a href=&quot;https://github.com/Ometria/ometria.coreservices/pull/14&quot;&gt;https://github.com/Ometria/ometria.coreservices/pull/14&lt;/a&gt;">
        <outline text="PromQL" _note="container_memory_working_set_bytes{namespace=&quot;prod&quot;, pod_name=~&quot;coreservices-gearman-[0-9A-Za-z_-]{15}&quot;}" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;11&quot;&gt;Mon, May 11, 2020&lt;/time&gt; #om what makes a senior engineer for Michal " _note="&lt;a href=&quot;https://ometria.slack.com/archives/DRHFFP0RW/p1589208440005500&quot;&gt;https://ometria.slack.com/archives/DRHFFP0RW/p1589208440005500&lt;/a&gt;" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; endYear=&quot;2020&quot; startMonth=&quot;4&quot; endMonth=&quot;4&quot; startDay=&quot;24&quot; endDay=&quot;29&quot;&gt;Fri, Apr 24, 2020 - Wed, Apr 29, 2020&lt;/time&gt; #om #om-incident Mass Email batch slow send, ASG not scaling up ">
        <outline text="Post mortem" _note="https://docs.google.com/document/d/1HrkrjJlIoTolneWA3Ii0qpuCbEiI6ndZDdoWgWqRpKA/edit#" />
        <outline text="SQL to generate affected clients report" _note="SELECT campaigns.mass_campaign_batch.id batch_id&#10;     , account_id&#10;     , title account_name&#10;     , n_messages_sent&#10;     , dt_scheduled&#10;     , dt_sending_complete - dt_sending_start send_latency&#10;FROM campaigns.mass_campaign_batch&#10;JOIN accounts ON accounts.id = campaigns.mass_campaign_batch.account_id&#10;WHERE dt_scheduled &amp;gt;= '2020-04-24 05:00:00'&#10;  AND dt_scheduled &amp;lt; '2020-04-24 10:00:00'&#10;  AND dt_sending_complete - dt_sending_start &amp;gt; interval '1 hour';&#10;&#10;SELECT campaigns.mass_campaign_batch.id batch_id, account_id, title account_name, n_messages_sent, dt_scheduled, dt_sending_complete - dt_sending_start send_latency FROM campaigns.mass_campaign_batch JOIN accounts ON accounts.id = campaigns.mass_campaign_batch.account_id WHERE dt_scheduled &amp;gt;= '2020-04-24 05:00:00' AND dt_scheduled &amp;lt; '2020-04-24 10:00:00' AND dt_sending_complete - dt_sending_start &amp;gt; interval '1 hour';&#10;&#10;&#10;SELECT account_id&#10;     , title account_name&#10;     , count(campaigns.mass_campaign_batch.id) n_batches&#10;     , sum(n_messages_sent) total_messages_sent&#10;FROM campaigns.mass_campaign_batch&#10;JOIN accounts ON accounts.id = campaigns.mass_campaign_batch.account_id&#10;WHERE dt_scheduled &amp;gt;= '2020-04-24 05:00:00'&#10;  AND dt_scheduled &amp;lt; '2020-04-24 10:00:00'&#10;  AND dt_sending_complete - dt_sending_start &amp;gt; interval '1 hour'&#10;GROUP BY 1, 2&#10;&#10;SELECT account_id, title account_name, count(campaigns.mass_campaign_batch.id) n_batches, sum(n_messages_sent) total_messages_sent FROM campaigns.mass_campaign_batch JOIN accounts ON accounts.id = campaigns.mass_campaign_batch.account_id WHERE dt_scheduled &amp;gt;= '2020-04-24 05:00:00' AND dt_scheduled &amp;lt; '2020-04-24 10:00:00' AND dt_sending_complete - dt_sending_start &amp;gt; interval '1 hour' GROUP BY 1, 2&#10;" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;21&quot;&gt;Tue, Apr 21, 2020&lt;/time&gt; #om #om-interview Update workable for Panagiotis Andreou " _note="https://ometria.workable.com/backend/jobs/1309148/browser/2nd-part-interview/candidate/89245716?q=pana" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;16&quot;&gt;Thu, Apr 16, 2020&lt;/time&gt; #om #om-interview Write meeting notes for Victor " _note="https://ometria.workable.com/backend/candidates/search#query/q=Victor+Poluksht/zoom/89257604" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;17&quot;&gt;Fri, Apr 17, 2020&lt;/time&gt; #om #clustermigration Add progress matrix to spreadsheet for each service (as they're identified) " _note="https://docs.google.com/spreadsheets/d/1Uz24OOVT3thHxesKUZMFDT4rwaxGKX4yGwW4pkp4Hcw/edit#gid=968911427">
        <outline text="Is it logging to s3 with ssl certs etc" _note="kube service in webhooks.sparkpost" />
        <outline text="Is serving prod traffic" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;17&quot;&gt;Fri, Apr 17, 2020 Mon, Apr 6, 2020&lt;/time&gt; #om #clustermigration Add docs detailing different stages, required/optional, tradeoffs/considerations etc  " _note="https://github.com/Ometria/ometria.engineering.docs/pull/98">
        <outline text="Method to remove staging?" _note="{{if namespace = staging do not deploy }}" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;17&quot;&gt;Fri, Apr 17, 2020&lt;/time&gt; #om #clustermigration playbook for deploys (how to deploy and rollback) " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;17&quot;&gt;Fri, Apr 17, 2020&lt;/time&gt; #om #clustermigration minimal acceptable release, formalise definition somewhere " />
      <outline _complete="true" text="#house print sign scan contract #life" />
      <outline _complete="true" text="#life #house review contract">
        <outline text="Services (bottom page 6): seller proof of services bills up to date of completion" />
        <outline text="Property information form (bottom page 14): see boiler in working condition? Perhaps not needed - been functioning air BnB for some time" />
        <outline text="Building insurance from exchange of contracts, contents insurance from completion" />
        <outline text="Mortgage to HSBC (page 16): has mortgage advisor returned the signed direct debit mandate to your lender, declaration and reserve signature slip" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;8&quot;&gt;Wed, Apr 8, 2020&lt;/time&gt; #om #mentoring Konrad ">
        <outline text="Structure currently up to me" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; endYear=&quot;2020&quot; startMonth=&quot;4&quot; endMonth=&quot;4&quot; startDay=&quot;7&quot; endDay=&quot;15&quot;&gt;Tue, Apr 7, 2020 - Wed, Apr 15, 2020&lt;/time&gt; #om #clustermigration webhooks.sparkpost  ">
        <outline _complete="true" text="Concourse pipeline draft PR" _note="https://github.com/Ometria/ometria.tf.concourse/pull/40" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;6&quot;&gt;Mon, Apr 6, 2020&lt;/time&gt; #om xml-importer &quot;incident&quot; response" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;6&quot;&gt;Mon, Apr 6, 2020&lt;/time&gt; #om #clustermigration get api.campaigns tests running in concourse " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;6&quot;&gt;Mon, Apr 6, 2020&lt;/time&gt; #om #proj-onsite Remove `response` wrapper " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;3&quot;&gt;Fri, Apr 3, 2020&lt;/time&gt; #om #clustermigration docker.images add step to allow adding additional dependencies in a file ">
        <outline text="PR, ready to merge, maybe get review from Will" _note="https://github.com/Ometria/ometria.docker.images/pull/3" />
        <outline text="Source of apt-get install from file" _note="https://askubuntu.com/questions/252734/apt-get-mass-install-packages-from-a-file" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;3&quot;&gt;Fri, Apr 3, 2020&lt;/time&gt; #om #proj-onsite Add cors support to API " _note="https://connexion.readthedocs.io/en/latest/cookbook.html#cors-support" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;2&quot;&gt;Thu, Apr 2, 2020&lt;/time&gt; #om #clustermigration New branch with concourse/dockerfile changes " _note="add-concourse-pipeline" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;25&quot;&gt;Wed, Mar 25, 2020&lt;/time&gt; #om #clustermigration Initial helmifying PR  " _note="https://github.com/Ometria/ometria.api.campaigns/pull/89" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;2&quot;&gt;Thu, Apr 2, 2020&lt;/time&gt; #om #clustermigration Remove entrypoint from onsite API dockerfile " />
      <outline _complete="true" text="AJ feedback for Gareth">
        <outline text="1. What's one thing this person should stop doing?">
          <outline text="I genuinely can't think of anything that's been detrimental or negative in our interactions, personally or in a wider group (from my perspective)." />
        </outline>
        <outline text="2. What's one thing this person should start doing?">
          <outline text="Same as above, I haven't found anything to be lacking." />
        </outline>
        <outline text="3. What's one thing this person should continue doing?">
          <outline text="Proactive communication. I've found that AJ will actively and quickly address topics that others might feel awkward to, leaving no confusion and promoting discussion before ill feeling has a chance to manifest." />
        </outline>
        <outline text="4. General feedback or comments">
          <outline text="I'm excited to see how things progress as we all settle further into our new team structures and processes. " />
        </outline>
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;23&quot;&gt;Mon, Mar 23, 2020&lt;/time&gt; #om #clustermigration Confirm loggins going to stackdriver " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; endYear=&quot;2020&quot; startMonth=&quot;3&quot; endMonth=&quot;3&quot; startDay=&quot;18&quot; endDay=&quot;27&quot;&gt;Wed, Mar 18, 2020 - Fri, Mar 27, 2020&lt;/time&gt; #om #proj-onsite onsite product recs API work " _note="https://ometria.atlassian.net/browse/CCM-150">
        <outline _complete="true" text="Will poetry cookie cutter PR" _note="https://github.com/Ometria/ometria.cookiecutter.python.api/pull/11" />
        <outline _complete="true" text="Bruno feedback">
          <outline _complete="true" text="Account hash header - make part of req_ctx" />
          <outline _complete="true" text="Explicit kwargs in function sig" />
          <outline _complete="true" text="Get rid of cache" />
          <outline _complete="true" text="env lookup at module level" />
          <outline _complete="true" text="Remove count from retry object" />
          <outline text="Maybe remove store id" />
        </outline>
        <outline _complete="true" text="Add logging" />
        <outline _complete="true" text="LoadBalancer service PR" _note="https://github.com/Ometria/ometria.api.onsite_product_recommendations/pull/11/files" />
        <outline text="curl -S -H &quot;X-Ometria-Account: developer_testing&quot; -X GET &quot;http://172.20.150.92/?account=developer_testing&amp;amp;prodRecInstance=a110ea996bc45f4575c71633f331ba6a&amp;amp;excludeProducts=1,2,foo&quot;" />
        <outline text="Add monitoring" />
        <outline _complete="true" text="Move non-api logic to new module?" />
        <outline text="Useful commands">
          <outline text="Port forward to prod recs" _note="k port-forward product-recommendations-7d97dc5947-9dk7x 8000" />
          <outline text="Example instance id for 352" _note="&quot;a110ea996bc45f4575c71633f331ba6a&quot;" />
          <outline text="Example response for instance id above" _note="{'products': [{'@type': 'product', 'id': '228726', 'sku': 'gold-feather-pull-through-earrings', 'title': 'Gold Feather Pull Through Earrings', 'price_raw': 39.0, 'price': '€39', 'currency': 'EUR', 'url': 'https://api.ometria.com/trk/click?acc=developer_testing&amp;amp;product=228726', 'image_url': 'https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fres.cloudinary.com%2Fwolfandbadger%2Fimage%2Fupload%2Fs--x8IZVAm_--%2Fq_auto%3Abest%2Fproducts%2Feairtmokmcvqajzbhjsi', 'stores': [], 'properties': {}, 'labels': {'category': 'Women / Jewellery / Earrings', 'colour': 'Gold', 'material': 'Brass', 'style': 'Hoop', 'designer': 'Ottoman Hands'}}, {'@type': 'product', 'id': '129794', 'sku': 'gold-peridot-ring', 'title': 'Gold Peridot Ring', 'price_raw': 35.0, 'price': '€35', 'currency': 'EUR', 'url': 'https://api.ometria.com/trk/click?acc=developer_testing&amp;amp;product=129794', 'image_url': 'https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fres.cloudinary.com%2Fwolfandbadger%2Fimage%2Fupload%2Fs--5e3A1Zr9--%2Fq_auto%3Abest%2Fproducts%2Fuxz7hwa72vbvxipz70xz', 'stores': [], 'properties': {}, 'labels': {'category': 'Women / Jewellery / Rings', 'material': 'Gold', 'colour': 'Gold', 'style': 'Stacking', 'designer': 'FEATHER+STONE'}}, {'@type': 'product', 'id': '84097', 'sku': 'cosmic-spikey-ear-cuff-rosegold', 'title': 'Cosmic Spikey Ear Cuff Rosegold', 'price_raw': 39.0, 'price': '€39', 'currency': 'EUR', 'url': 'https://api.ometria.com/trk/click?acc=developer_testing&amp;amp;product=84097', 'image_url': 'https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fres.cloudinary.com%2Fwolfandbadger%2Fimage%2Fupload%2Fs--3A6tiu9r--%2Fq_auto%3Abest%2Fproducts%2Fa0ubh42rtacfmfhopnmz', 'stores': [], 'properties': {}, 'labels': {'category': 'Women / Jewellery / Earrings', 'colour': 'Rose Gold', 'material': 'Rose Gold', 'style': 'Ear Cuff', 'designer': 'LATELITA'}}, {'@type': 'product', 'id': '219756', 'sku': 'arvie-back-maxi-dress', 'title': 'Arvee Black Maxi Dress', 'price_raw': 98.0, 'price': '€98', 'currency': 'EUR', 'url': 'https://api.ometria.com/trk/click?acc=developer_testing&amp;amp;product=219756', 'image_url': 'https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fres.cloudinary.com%2Fwolfandbadger%2Fimage%2Fupload%2Fs--rQsGod1Q--%2Fq_auto%3Abest%2Fproducts%2Fkehjnc6r3jewhqv80bou', 'stores': [], 'properties': {}, 'labels': {'material': 'Synthetic', 'style': 'Maxi', 'category': 'Women', 'designer': 'Meem Label'}}, {'@type': 'product', 'id': '115235', 'sku': 'hand-body-lotion-300ml-no-17', 'title': 'Hand &amp;amp; Body Lotion No. 17', 'price_raw': 15.0, 'price': '€15', 'currency': 'EUR', 'url': 'https://api.ometria.com/trk/click?acc=developer_testing&amp;amp;product=115235', 'image_url': 'https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fres.cloudinary.com%2Fwolfandbadger%2Fimage%2Fupload%2Fs--8FR8WgEA--%2Fq_auto%3Abest%2Fproducts%2Fm6zcudi9wtolnhgvusxh', 'stores': [], 'properties': {}, 'labels': {'material': 'Vegan', 'category': 'Beauty / Beauty', 'designer': 'Charlotte Rhys', 'style': 'Body Lotion'}}, {'@type': 'product', 'id': '114856', 'sku': 'men-s-200ml-hair-body-wash-victor', 'title': &quot;Men's 200ml Hair &amp;amp; Body Wash Victor&quot;, 'price_raw': 13.0, 'price': '€13', 'currency': 'EUR', 'url': 'https://api.ometria.com/trk/click?acc=developer_testing&amp;amp;product=114856', 'image_url': 'https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fres.cloudinary.com%2Fwolfandbadger%2Fimage%2Fupload%2Fs--Sne-tqy4--%2Fq_auto%3Abest%2Fproducts%2Fld5vnzyjdoazmb5dg5kk', 'stores': [], 'properties': {}, 'labels': {'category': 'Beauty / Grooming / Bath &amp;amp; Body', 'designer': 'Charlotte Rhys'}}, {'@type': 'product', 'id': '112080', 'sku': 'shower-gel-300ml-no-17', 'title': 'Shower Gel 300Ml No. 17', 'price_raw': 15.0, 'price': '€15', 'currency': 'EUR', 'url': 'https://api.ometria.com/trk/click?acc=developer_testing&amp;amp;product=112080', 'image_url': 'https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fres.cloudinary.com%2Fwolfandbadger%2Fimage%2Fupload%2Fs--mVzW0Kwf--%2Fq_auto%3Abest%2Fproducts%2Fklxebjbyyh8qedl9ci7m', 'stores': [], 'properties': {}, 'labels': {'material': 'Vegan', 'style': 'Shower Gel', 'category': 'Beauty / Beauty', 'designer': 'Charlotte Rhys'}}, {'@type': 'product', 'id': '0881.XPD', 'sku': 'FHSG-2738-FHT45', 'title': 'Test Product', 'price_raw': 50.0, 'price': '€50', 'currency': 'EUR', 'url': 'https://api.ometria.com/trk/click?acc=developer_testing&amp;amp;product=0881.XPD', 'image_url': 'https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=http%3A%2F%2Fwww.example.com%2Fproduct.jpg', 'stores': [], 'properties': {'custom_key': 'custom value'}, 'labels': {'category': 'Womens', 'style': 'Casual'}}, {'@type': 'product', 'id': '0881.0110', 'sku': 'FHSG-2738-FHXX', 'title': 'Test Product', 'price_raw': 50.0, 'price': '€50', 'currency': 'EUR', 'url': 'https://api.ometria.com/trk/click?acc=developer_testing&amp;amp;product=0881.0110', 'image_url': 'https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=http%3A%2F%2Fwww.example.com%2Fproduct.jpg', 'stores': [], 'properties': {'custom_key': 'custom value'}, 'labels': {'category': 'Womens', 'style': 'Casual'}}, {'@type': 'product', 'id': '0881.0109', 'sku': 'FHSG-2738-FHI', 'title': 'Test Product', 'price_raw': 50.0, 'price': '€50', 'currency': 'EUR', 'url': 'https://api.ometria.com/trk/click?acc=developer_testing&amp;amp;product=0881.0109', 'image_url': 'https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=http%3A%2F%2Fwww.example.com%2Fproduct.jpg', 'stores': ['example.com/fr', 'example.com/de'], 'properties': {'custom_key': 'custom value'}, 'labels': {'category': 'Womens', 'style': 'Casual'}}]}" />
          <outline text="curl to internal prod recs (or exec'd new service)" _note="curl -S -H &quot;Host: recommendations.services.ometria.kube&quot; -X GET &quot;http://127.0.0.1:8000/v1/recommendations?account=developer_testing&amp;amp;instance=a110ea996bc45f4575c71633f331ba6a&amp;amp;limit=20&quot;" />
        </outline>
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;23&quot;&gt;Mon, Mar 23, 2020&lt;/time&gt; #life #house Contract pack ">
        <outline text="Different names on Land Registry Transfer doc (Ricky Dellow and Maia Adams) to other docs (Ricky Dellow and Stuart James Adams)" />
        <outline text="Title numbers differ from Land Registry Transfer doc (ESX13768) to Land Registry Register doc (ESX359878) - is this expected?" />
        <outline text="Land registry register">
          <outline text="Section C.2 references 101 Conway Street (as opposed to 103) - might be an issue?" />
          <outline text="Schedule of restrictive covenants, section 1 - is this an unusual restriction on home improvements?" />
        </outline>
        <outline text="Property information form">
          <outline text="Wrong postcode" />
          <outline text="We have two building quotes detailing damp in the property - do these need to be attached?" />
          <outline text="Other points:">
            <outline text="4.2b do we require docs or reasoning regarding the new windows in 2014" />
            <outline text="5.1.g not completed for &quot;Central heating&quot;" />
            <outline text="6.1 not completed for property insurance" />
            <outline text="9.2 we believe it is part of a controlled parking scheme (zone N)" />
            <outline text="12.1 and 12.2 have not been completed" />
            <outline text="Can we get the gas safe/corgi certificate for the new heating system?" />
            <outline text="12.4.b not completed (surface water drainage)" />
            <outline text="Mains water - stopcock location?" />
            <outline text="Only got a single signature for sellers (it states we need from both seller)" />
          </outline>
        </outline>
        <outline text="Fittings and contents">
          <outline text="Wrong postcode" />
          <outline text="Can we have prices for following:">
            <outline text="Microwave" />
            <outline text="Dishwasher" />
            <outline text="Washing machine" />
            <outline text="Master bedroom (1st floor) bed and mattress" />
          </outline>
          <outline text="Only one seller signature, requires from both?" />
        </outline>
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;20&quot;&gt;Fri, Mar 20, 2020&lt;/time&gt; #om sprint planning">
        <outline text="Fix tickets" />
        <outline text="Complete sprint" />
        <outline text="Move things that weren't completed into new sprint" />
        <outline text="Find average velocity" />
        <outline text="Do we need to re-estimate other ones" />
      </outline>
      <outline _complete="true" text="#om docfest &lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;18&quot;&gt;Wed, Mar 18, 2020&lt;/time&gt; " />
      <outline _complete="true" text="#om Wed, Mar 18, 2020 covid broadcast discussion" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;16&quot;&gt;Mon, Mar 16, 2020&lt;/time&gt; #om PR review Will new k8s deploy strat " _note="https://github.com/Ometria/ometria.engineering.docs/pull/92/files" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;16&quot;&gt;Mon, Mar 16, 2020&lt;/time&gt; #om review Sam's beanstalk manifest PR " _note="https://github.com/Ometria/ometria.trigger_campaigns/pull/289#pullrequestreview-375324493" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;16&quot;&gt;Mon, Mar 16, 2020&lt;/time&gt; #om update checks for Al on-call and update support " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;16&quot;&gt;Mon, Mar 16, 2020&lt;/time&gt; #om #om-support Helping Paul with BUI variant weird behaviour bug " _note="https://ometria.atlassian.net/jira/software/projects/TS/boards/68?selectedIssue=TS-56" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; endYear=&quot;2020&quot; startMonth=&quot;3&quot; endMonth=&quot;3&quot; startDay=&quot;11&quot; endDay=&quot;12&quot;&gt;Wed, Mar 11, 2020 - Thu, Mar 12, 2020&lt;/time&gt; #om mass_email &quot;open rate&quot; winner no recipient breakage ">
        <outline text="logs" _note="https://app.scalyr.com/events?filter=%221141:ME:2975%22%20%22error%22&amp;amp;teamToken=M%2Ft2aK78HxuNx3YEMIuTQQ--&amp;amp;logSource=prod_ecs_cluster%2Fmass_email&amp;amp;startTime=4%20hours" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;11&quot;&gt;Wed, Mar 11, 2020&lt;/time&gt; #om review Arun sms fields PR https://github.com/Ometria/ometria.api.connections/pull/9#pullrequestreview-372939342" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;11&quot;&gt;Wed, Mar 11, 2020&lt;/time&gt; #om #concourse reviewing Will's PR https://github.com/Ometria/ometria.tf.concourse/pull/25/files " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;9&quot;&gt;Mon, Mar 9, 2020&lt;/time&gt; #om prefs centre 500 engine connection pool issue ">
        <outline text="SQLa docs" _note="https://docs.sqlalchemy.org/en/13/errors.html#error-3o7r" />
        <outline text="Bruno fixed by using a single session per request (attaching to flask g object)" />
      </outline>
      <outline _complete="true" text="#om PR review of brunos prefs centre fixes, reason_text empty string and session handling &lt;time startYear=&quot;2020&quot; endYear=&quot;2020&quot; startMonth=&quot;3&quot; endMonth=&quot;3&quot; startDay=&quot;9&quot; endDay=&quot;10&quot;&gt;Mon, Mar 9, 2020 - Tue, Mar 10, 2020&lt;/time&gt; " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;9&quot;&gt;Mon, Mar 9, 2020&lt;/time&gt; #om #proj-sms reviewed Bruno's prefs centre session logic PR " />
      <outline _complete="true" text="#om reporting order_list report breakage, investigated, found broken commit and handed to RI &lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;9&quot;&gt;Mon, Mar 9, 2020&lt;/time&gt; " />
      <outline _complete="true" text="#om pairing with Bruno on debugging prefs centre issue &lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;4&quot;&gt;Wed, Mar 4, 2020&lt;/time&gt; " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;9&quot;&gt;Mon, Mar 9, 2020&lt;/time&gt; #om change on call phone number and alert support " />
      <outline _complete="true" text="#om #proj-sms reviews sam's db column removal PRs &lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;6&quot;&gt;Fri, Mar 6, 2020&lt;/time&gt; " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; endYear=&quot;2020&quot; startMonth=&quot;3&quot; endMonth=&quot;3&quot; startDay=&quot;5&quot; endDay=&quot;6&quot;&gt;Thu, Mar 5, 2020 - Fri, Mar 6, 2020&lt;/time&gt; #om NOTHS timing out custom date issue ">
        <outline text="Slack message" _note="https://ometria.slack.com/archives/CG0280P5F/p1583429850039700" />
        <outline text="Segmentation func usage" _note="https://github.com/Ometria/ometria.lib.segmentation/blob/2e47aead41f0a71196ba13966b325d08eb598034/ometria_lib_segmentation/postgres_operators.py#L159" />
        <outline text="Function definition" _note="begin&#10;&#10;return to_date(s, fmt);&#10;&#10;exception&#10;when others then return null;&#10;&#10;end;" />
        <outline text="ptpython generate query" _note="from ometria_lib_segmentation.mapper import get_customer_query&#10;from ometria_lib_services.db import get_session_for_account&#10;session = get_session_for_account(352)&#10;properties = {'cust_date_1': 'last_open_date'}&#10;account_id = 352&#10;timezone = 'Europe/London'&#10;data = {&quot;filters&quot;:[{&quot;value&quot;:[&quot;2020-02-13&quot;],&quot;op&quot;:&quot;before&quot;,&quot;field&quot;:&quot;cust_date_1&quot;}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;}&#10;res = get_customer_query(account_id, data, properties, timezone)&#10;print(res.query().compile(compile_kwargs={&quot;literal_binds&quot;: True}))" />
        <outline text="resultant sql" _note="SELECT customers.id &#10;FROM customers &#10;WHERE customers.account_id = 992 &#10;  AND (&#10;    EXISTS (&#10;      SELECT 1 &#10;      FROM customers_properties &#10;      WHERE customers_properties.customer_id = customers.id &#10;        AND (&#10;          (&#10;            dt_or_null(&#10;              (&#10;                customers_properties.properties -&amp;gt;&amp;gt; 'last_open_date'&#10;              ), &#10;              'YYYY-MM-DD'&#10;            ) AT TIME ZONE 'Europe/London'&#10;          ) AT TIME ZONE 'UTC'&#10;        ) &amp;lt; '2020-02-13T00:00:00+00:00'&#10;    )&#10;  )&#10;" />
        <outline text="Query plan output" _note="                                                                                                              QUERY PLAN&#10;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#10; Index Scan using idx_customers_account_id on customers  (cost=0.56..97764398.69 rows=5503996 width=4) (actual time=0.276..63376.642 rows=7175040 loops=1)&#10;   Index Cond: (account_id = 992)&#10;   Filter: (SubPlan 1)&#10;   Rows Removed by Filter: 3827601&#10;   SubPlan 1&#10;     -&amp;gt;  Index Scan using customers_properties_customer_id_idx on customers_properties  (cost=0.43..8.72 rows=1 width=0) (actual time=0.005..0.005 rows=1 loops=11002641)&#10;           Index Cond: (customer_id = customers.id)&#10;           Filter: (timezone('UTC'::text, timezone('Europe/London'::text, (dt_or_null((properties -&amp;gt;&amp;gt; 'last_open_date'::text), 'YYYY-MM-DD'::text))::timestamp with time zone)) &amp;lt; '2020-02-13 00:00:00+00'::timestamp with time zone)&#10;           Rows Removed by Filter: 0&#10; Planning time: 0.124 ms&#10; Execution time: 63838.201 ms&#10;(11 rows)" />
        <outline text="Handed over to RI to continue to investigate" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;5&quot;&gt;Thu, Mar 5, 2020&lt;/time&gt; #om pair with bruno on prefs centre debug " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;5&quot;&gt;Thu, Mar 5, 2020&lt;/time&gt; #om NOTHS trigger campaign unknown segment issue ">
        <outline text="Ticket" _note="https://ometria.atlassian.net/browse/TS-24" />
        <outline text="NOTHS" _note="https://app.ometria.com/app/fb768628223e5925/triggers/49/stats?state={%22dateCurrent%22%3A{%22datePeriod%22%3A%22last28days%22%2C%22dateFrom%22%3A%222020-01-06T13%3A58%3A28.708Z%22%2C%22dateTo%22%3A%222020-02-02T13%3A58%3A28.708Z%22}%2C%22dateCompare%22%3A{%22datePeriod%22%3A%22prevperiod%22%2C%22dateFrom%22%3A%222019-12-09T13%3A58%3A28.708Z%22%2C%22dateTo%22%3A%222020-01-05T13%3A58%3A28.708Z%22}" />
        <outline text="routes list data from db" _note="[{&quot;label&quot;: &quot;top20_customers&quot;, &quot;target&quot;: &quot;3jljonlr&quot;, &quot;condition&quot;: {&quot;type&quot;: &quot;segment&quot;, &quot;query&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;op&quot;: &quot;eq&quot;, &quot;field&quot;: &quot;list_id&quot;, &quot;value&quot;: [489]}, {&quot;op&quot;: &quot;gte&quot;, &quot;field&quot;: &quot;n_orders&quot;, &quot;value&quot;: [&quot;2&quot;]}], &quot;query_type&quot;: &quot;and&quot;}}}, {&quot;label&quot;: &quot;Everyone_else&quot;, &quot;target&quot;: &quot;n2zgbm6d&quot;, &quot;condition&quot;: {&quot;type&quot;: &quot;segment&quot;, &quot;query&quot;: {}}}]">
          <outline text="Query shard 0202" _note="select data-&amp;gt;'nodes'-&amp;gt;0-&amp;gt;'settings'-&amp;gt;'routes' from trigger_campaign_version where trigger_campaign_id = 49 and id = 90;" />
          <outline text="Len == 2" />
        </outline>
        <outline text="segment_labels" _note="{1: &quot;top20_customers&quot;, 2: &quot;Everyone_else&quot;}" />
        <outline text="code that processes" _note="https://github.com/Ometria/ometria.reporting/blob/7298bd0dc4d6458a14a454d620a39ae6f892244b/ometria_reporting/reports/trigger_campaigns/campaign_flow_performance_report.py#L206-L213" />
        <outline text="Therefore row.segmentId (and row.splittestId) returning Null or not at all in query">
          <outline text="We retrieve label from the segment_labels dict above, which only has 1 and 2 as keys, so either it returns no segmentId, or incorrect segmentId" />
        </outline>
        <outline text="Manually parsed query" _note="WITH version_cte AS (&#10;    SELECT&#10;        MAX(id) version_id&#10;    FROM trigger_campaign_version&#10;    WHERE account_id = 992&#10;        AND trigger_campaign_id = 49&#10;), campaign_structure AS (&#10;    SELECT&#10;        account_id,&#10;        trigger_campaign_id,&#10;        version_id,&#10;        node_id,&#10;        segment_index,&#10;        COALESCE(split_index, 1) AS split_index,&#10;        node_type&#10;    FROM trigger_campaign_structure&#10;    WHERE&#10;        account_id = 992 AND&#10;        trigger_campaign_id = 49 AND&#10;        version_id = COALESCE(90, (SELECT version_id FROM version_cte))&#10;), node_passthroughs AS (&#10;    SELECT&#10;        account_id,&#10;        trigger_campaign_id,&#10;        version_id,&#10;        unnest(path) node_id,&#10;        COALESCE(count(*), 0) passthroughs&#10;    FROM trigger_campaign_customer&#10;    WHERE&#10;        account_id = 992 AND&#10;        trigger_campaign_id = 49 AND&#10;        version_id = COALESCE(90, (SELECT version_id FROM version_cte))&#10;            AND dt_created &amp;gt;= (('2020-02-06'::timestamp) AT TIME ZONE 'Europe/London' AT TIME ZONE 'UTC')&#10;            AND dt_created &amp;lt;= (('2020-03-04'::timestamp) AT TIME ZONE 'Europe/London' AT TIME ZONE 'UTC')&#10;    GROUP BY 1, 2, 3, 4&#10;)&#10;, stats AS (&#10;    SELECT&#10;        segment_index segment_index,&#10;        split_index split_index,&#10;        node_id node_id,&#10;        passthroughs,&#10;        COALESCE(SUM(n_emails_sent), 0) n_emails_sent,&#10;        COALESCE(SUM(n_emails_delivered), 0) n_emails_delivered,&#10;        COALESCE(SUM(n_emails_opened), 0) n_emails_opened,&#10;        COALESCE(SUM(n_emails_clicked), 0) n_emails_clicked,&#10;        COALESCE(SUM(total_revenue), 0) total_revenue,&#10;        COALESCE(SUM(n_orders), 0) n_orders,&#10;        COALESCE(SUM(n_unsubscribes), 0) n_unsubscribes&#10;    FROM&#10;        cube_kpi_trigger_campaign_flow_performance&#10;    FULL OUTER JOIN node_passthroughs np USING (account_id, trigger_campaign_id, version_id, node_id)&#10;    WHERE&#10;        account_id = 992 AND&#10;        trigger_campaign_id = 49 AND&#10;        version_id = COALESCE(90, (SELECT version_id FROM version_cte))&#10;            AND dt &amp;gt;= (('2020-02-06'::timestamp) AT TIME ZONE 'Europe/London' AT TIME ZONE 'UTC')&#10;            AND dt &amp;lt;= (('2020-03-04'::timestamp) AT TIME ZONE 'Europe/London' AT TIME ZONE 'UTC')&#10;    GROUP BY 1, 2, 3, 4&#10;)&#10;, split_max AS (&#10;    SELECT&#10;        segment_index,&#10;        split_index,&#10;        MAX(passthroughs) passthroughs&#10;    FROM campaign_structure&#10;    LEFT JOIN node_passthroughs USING (account_id, trigger_campaign_id, version_id, node_id)&#10;    WHERE&#10;        account_id = 992 AND&#10;        trigger_campaign_id = 49 AND&#10;        version_id = COALESCE(90, (SELECT version_id FROM version_cte)) AND&#10;        node_type != 'splittest'&#10;    GROUP BY 1, 2&#10;)&#10;, segment_sum AS (&#10;    SELECT&#10;        segment_index,&#10;        SUM(passthroughs) passthroughs&#10;    FROM split_max&#10;    WHERE split_index IS NOT NULL&#10;    GROUP BY 1&#10;)&#10;SELECT&#10;    stats.segment_index &quot;segmentId&quot;,&#10;    stats.split_index &quot;splittestId&quot;,&#10;    stats.node_id &quot;nodeId&quot;,&#10;    COALESCE(stats.passthroughs, 0) &quot;completedCount&quot;,&#10;    SUM(n_emails_sent) &quot;emailsSent&quot;,&#10;    SUM(n_emails_delivered) &quot;emailsDelivered&quot;,&#10;    SUM(n_emails_opened) &quot;emailsOpened&quot;,&#10;    SUM(n_emails_clicked) &quot;emailsClicked&quot;,&#10;    SUM(total_revenue) &quot;revenue&quot;,&#10;    SUM(n_orders) &quot;totalOrders&quot;,&#10;    SUM(n_unsubscribes) &quot;unsubscribes&quot;,&#10;    (CASE WHEN SUM(n_emails_delivered) &amp;gt; 0 THEN SUM(total_revenue)::float / SUM(n_emails_delivered) ELSE NULL END) &quot;revenuePerEmail&quot;,&#10;    (CASE WHEN SUM(n_emails_delivered) &amp;gt; 0 THEN SUM(n_emails_opened)::float / SUM(n_emails_delivered) ELSE NULL END) &quot;averageOpenRate&quot;,&#10;    (CASE WHEN SUM(n_emails_opened) &amp;gt; 0 THEN SUM(n_emails_clicked)::float / SUM(n_emails_opened) ELSE NULL END) &quot;averageClickToOpenRate&quot;&#10;FROM&#10;    stats&#10;LEFT JOIN&#10;    campaign_structure s USING (segment_index, split_index, node_id)&#10;&#10;LEFT JOIN split_max pt ON stats.segment_index = pt.segment_index AND stats.split_index = pt.split_index&#10;GROUP BY node_id, split_index, segment_index&#10;" />
        <outline text="data generated to pass to services.call('reporting.query')" _note="data = {'report': 'trigger_campaigns_flow_performance', 'account_hash': 'developer_testing', 'account': 352, 'params': {'dateTo': '2020-03-04', 'versionId': 90, 'dateFrom': '2020-02-06', 'groupBy': 'nodeId', 'campaignId': 49}, 'settings': {'locale': 'en_GB.UTF-8', 'timezone': 'Europe/London'}}" />
        <outline text="Generated SQL" _note="WITH version_cte AS (&#10;    SELECT&#10;        MAX(id) version_id&#10;    FROM trigger_campaign_version&#10;    WHERE account_id = 992&#10;        AND trigger_campaign_id = 49&#10;), campaign_structure AS (&#10;    SELECT&#10;        account_id,&#10;        trigger_campaign_id,&#10;        version_id,&#10;        node_id,&#10;        segment_index,&#10;        COALESCE(split_index, 1) AS split_index,&#10;        node_type&#10;    FROM trigger_campaign_structure&#10;    WHERE&#10;        account_id = 992 AND&#10;        trigger_campaign_id = 49 AND&#10;        version_id = COALESCE(90, (SELECT version_id FROM version_cte))&#10;), node_passthroughs AS (&#10;    SELECT&#10;        account_id,&#10;        trigger_campaign_id,&#10;        version_id,&#10;        unnest(path) node_id,&#10;        COALESCE(count(*), 0) passthroughs&#10;    FROM trigger_campaign_customer&#10;    WHERE&#10;        account_id = 992 AND&#10;        trigger_campaign_id = 49 AND&#10;        version_id = COALESCE(90, (SELECT version_id FROM version_cte))&#10;            AND dt_created &amp;gt;= (('2020-02-06 00:00:00'::timestamp) AT TIME ZONE 'Europe/London' AT TIME ZONE 'UTC')&#10;            AND dt_created &amp;lt;= (('2020-03-04 23:59:59'::timestamp) AT TIME ZONE 'Europe/London' AT TIME ZONE 'UTC')&#10;&#10;    GROUP BY 1, 2, 3, 4&#10;)&#10;, stats AS (&#10;    SELECT&#10;        segment_index segment_index,&#10;        split_index split_index,&#10;        node_id node_id,&#10;        passthroughs,&#10;        COALESCE(SUM(n_emails_sent), 0) n_emails_sent,&#10;        COALESCE(SUM(n_emails_delivered), 0) n_emails_delivered,&#10;        COALESCE(SUM(n_emails_opened), 0) n_emails_opened,&#10;        COALESCE(SUM(n_emails_clicked), 0) n_emails_clicked,&#10;        COALESCE(SUM(total_revenue), 0) total_revenue,&#10;        COALESCE(SUM(n_orders), 0) n_orders,&#10;        COALESCE(SUM(n_unsubscribes), 0) n_unsubscribes&#10;    FROM&#10;        cube_kpi_trigger_campaign_flow_performance&#10;    FULL OUTER JOIN node_passthroughs np USING (account_id, trigger_campaign_id, version_id, node_id)&#10;    WHERE&#10;        account_id = 992 AND&#10;        trigger_campaign_id = 49 AND&#10;        version_id = COALESCE(90, (SELECT version_id FROM version_cte))&#10;            AND dt &amp;gt;= (('2020-02-06 00:00:00'::timestamp) AT TIME ZONE 'Europe/London' AT TIME ZONE 'UTC')&#10;            AND dt &amp;lt;= (('2020-03-04 23:59:59'::timestamp) AT TIME ZONE 'Europe/London' AT TIME ZONE 'UTC')&#10;    GROUP BY 1, 2, 3, 4&#10;)&#10;, split_max AS (&#10;    SELECT&#10;        segment_index,&#10;        split_index,&#10;        MAX(passthroughs) passthroughs&#10;    FROM campaign_structure&#10;    LEFT JOIN node_passthroughs USING (account_id, trigger_campaign_id, version_id, node_id)&#10;    WHERE&#10;        account_id = 992 AND&#10;        trigger_campaign_id = 49 AND&#10;        version_id = COALESCE(90, (SELECT version_id FROM version_cte)) AND&#10;        node_type != 'splittest'&#10;    GROUP BY 1, 2&#10;)&#10;, segment_sum AS (&#10;    SELECT&#10;        segment_index,&#10;        SUM(passthroughs) passthroughs&#10;    FROM split_max&#10;    WHERE split_index IS NOT NULL&#10;    GROUP BY 1&#10;)&#10;SELECT&#10;    stats.segment_index &quot;segmentId&quot;,&#10;    COALESCE(pt.passthroughs, 0) &quot;completedCount&quot;,&#10;    SUM(n_emails_sent) &quot;emailsSent&quot;,&#10;    SUM(n_emails_delivered) &quot;emailsDelivered&quot;,&#10;    SUM(n_emails_opened) &quot;emailsOpened&quot;,&#10;    SUM(n_emails_clicked) &quot;emailsClicked&quot;,&#10;    SUM(total_revenue) &quot;revenue&quot;,&#10;    SUM(n_orders) &quot;totalOrders&quot;,&#10;    SUM(n_unsubscribes) &quot;unsubscribes&quot;,&#10;    (CASE WHEN SUM(n_emails_delivered) &amp;gt; 0 THEN SUM(total_revenue)::float / SUM(n_emails_delivered) ELSE NULL END) &quot;revenuePerEmail&quot;,&#10;    (CASE WHEN SUM(n_emails_delivered) &amp;gt; 0 THEN SUM(n_emails_opened)::float / SUM(n_emails_delivered) ELSE NULL END) &quot;averageOpenRate&quot;,&#10;    (CASE WHEN SUM(n_emails_opened) &amp;gt; 0 THEN SUM(n_emails_clicked)::float / SUM(n_emails_opened) ELSE NULL END) &quot;averageClickToOpenRate&quot;&#10;FROM&#10;    stats&#10;LEFT JOIN&#10;    campaign_structure s USING (segment_index, split_index, node_id)&#10;LEFT JOIN segment_sum pt ON stats.segment_index = pt.segment_index&#10;GROUP BY 1, 2" />
        <outline text="Affected part of query" _note="WITH version_cte AS (&#10;    SELECT&#10;        MAX(id) version_id&#10;    FROM trigger_campaign_version&#10;    WHERE account_id = 992&#10;        AND trigger_campaign_id = 49&#10;)&#10;, campaign_structure AS (&#10;    SELECT&#10;        account_id,&#10;        trigger_campaign_id,&#10;        version_id,&#10;        node_id,&#10;        segment_index,&#10;        COALESCE(split_index, 1) AS split_index,&#10;        node_type&#10;    FROM trigger_campaign_structure&#10;    WHERE&#10;        account_id = 992 AND&#10;        trigger_campaign_id = 49 AND&#10;        version_id = COALESCE(90, (SELECT version_id FROM version_cte))&#10;)&#10;, node_passthroughs AS (&#10;    SELECT&#10;        account_id,&#10;        trigger_campaign_id,&#10;        version_id,&#10;        unnest(path) node_id,&#10;        COALESCE(count(*), 0) passthroughs&#10;    FROM trigger_campaign_customer&#10;    WHERE&#10;        account_id = 992 AND&#10;        trigger_campaign_id = 49 AND&#10;        version_id = COALESCE(90, (SELECT version_id FROM version_cte))&#10;            AND dt_created &amp;gt;= (('2020-02-06 00:00:00'::timestamp) AT TIME ZONE 'Europe/London' AT TIME ZONE 'UTC')&#10;            AND dt_created &amp;lt;= (('2020-03-04 23:59:59'::timestamp) AT TIME ZONE 'Europe/London' AT TIME ZONE 'UTC')&#10;    GROUP BY 1, 2, 3, 4&#10;)&#10;SELECT&#10;    segment_index segment_index,&#10;    split_index split_index,&#10;    node_id node_id,&#10;    passthroughs,&#10;    COALESCE(SUM(n_emails_sent), 0) n_emails_sent,&#10;    COALESCE(SUM(n_emails_delivered), 0) n_emails_delivered,&#10;    COALESCE(SUM(n_emails_opened), 0) n_emails_opened,&#10;    COALESCE(SUM(n_emails_clicked), 0) n_emails_clicked,&#10;    COALESCE(SUM(total_revenue), 0) total_revenue,&#10;    COALESCE(SUM(n_orders), 0) n_orders,&#10;    COALESCE(SUM(n_unsubscribes), 0) n_unsubscribes&#10;FROM&#10;    cube_kpi_trigger_campaign_flow_performance&#10;FULL OUTER JOIN node_passthroughs np USING (account_id, trigger_campaign_id, version_id, node_id)&#10;WHERE&#10;    account_id = 992 AND&#10;    trigger_campaign_id = 49 AND&#10;    version_id = COALESCE(90, (SELECT version_id FROM version_cte))&#10;        AND dt &amp;gt;= (('2020-02-06 00:00:00'::timestamp) AT TIME ZONE 'Europe/London' AT TIME ZONE 'UTC')&#10;        AND dt &amp;lt;= (('2020-03-04 23:59:59'::timestamp) AT TIME ZONE 'Europe/London' AT TIME ZONE 'UTC')&#10;GROUP BY 1, 2, 3, 4" />
        <outline text="Query for performance stats per node (including two node_id's without split id's)" _note="SELECT node_id&#10;     , count(*)&#10;FROM cube_kpi_trigger_campaign_flow_performance&#10;WHERE account_id = 992&#10;  AND trigger_campaign_id = 49&#10;  AND version_id = 90&#10;  AND dt &amp;gt;= (('2020-02-06 00:00:00'::timestamp) AT TIME ZONE 'Europe/London' AT TIME ZONE 'UTC')&#10;  AND dt &amp;lt;= (('2020-03-04 23:59:59'::timestamp) AT TIME ZONE 'Europe/London' AT TIME ZONE 'UTC')&#10;GROUP BY 1&#10;" />
        <outline text="Get all nodes from campaign" _note="SELECT node_id&#10;     , node_type&#10;     , segment_index&#10;     , split_index&#10;FROM trigger_campaign_structure&#10;WHERE account_id = 992&#10;  AND trigger_campaign_id = 49&#10;  AND version_id = 90&#10;ORDER BY 3, 4&#10;" />
        <outline text="Frontend data of affected version" _note="{&#10;    &quot;exit&quot;: {&#10;        &quot;type&quot;: &quot;exit&quot;,&#10;        &quot;node_id&quot;: &quot;jk70ejcp&quot;&#10;    },&#10;    &quot;wait&quot;: {&#10;        &quot;type&quot;: &quot;first-wait&quot;,&#10;        &quot;node_id&quot;: &quot;ysz2h10h&quot;,&#10;        &quot;settings&quot;: {&#10;            &quot;type&quot;: &quot;absolute&quot;,&#10;            &quot;unit&quot;: &quot;day&quot;,&#10;            &quot;duration&quot;: &quot;365&quot;&#10;        }&#10;    },&#10;    &quot;filter&quot;: {&#10;        &quot;type&quot;: &quot;trigger&quot;,&#10;        &quot;node_id&quot;: &quot;0gve3fcg&quot;,&#10;        &quot;settings&quot;: {&#10;            &quot;meta&quot;: {&#10;                &quot;reentry&quot;: {&#10;                    &quot;time_limit&quot;: {&#10;                        &quot;unit&quot;: &quot;day&quot;,&#10;                        &quot;duration&quot;: 1&#10;                    },&#10;                    &quot;reentry_limit&quot;: 1&#10;                }&#10;            },&#10;            &quot;group&quot;: &quot;order&quot;,&#10;            &quot;filters&quot;: [&#10;                {&#10;                    &quot;op&quot;: &quot;eq&quot;,&#10;                    &quot;field&quot;: &quot;order_sequence&quot;,&#10;                    &quot;value&quot;: [&#10;                        &quot;1&quot;&#10;                    ]&#10;                }&#10;            ],&#10;            &quot;query_type&quot;: &quot;and&quot;&#10;        }&#10;    },&#10;    &quot;segments&quot;: [&#10;        {&#10;            &quot;type&quot;: &quot;segment&quot;,&#10;            &quot;flows&quot;: [&#10;                {&#10;                    &quot;marker&quot;: {&#10;                        &quot;type&quot;: &quot;ratio&quot;,&#10;                        &quot;node_id&quot;: &quot;bn1b8mnj&quot;,&#10;                        &quot;settings&quot;: {&#10;                            &quot;ratio&quot;: 50&#10;                        }&#10;                    },&#10;                    &quot;actions&quot;: [&#10;                        {&#10;                            &quot;type&quot;: &quot;wait&quot;,&#10;                            &quot;flows&quot;: [],&#10;                            &quot;node_id&quot;: &quot;uacysiy7&quot;,&#10;                            &quot;settings&quot;: {&#10;                                &quot;time&quot;: &quot;19:20&quot;,&#10;                                &quot;type&quot;: &quot;until&quot;,&#10;                                &quot;days_of_week&quot;: {&#10;                                    &quot;friday&quot;: true,&#10;                                    &quot;monday&quot;: true,&#10;                                    &quot;sunday&quot;: true,&#10;                                    &quot;tuesday&quot;: true,&#10;                                    &quot;saturday&quot;: true,&#10;                                    &quot;thursday&quot;: true,&#10;                                    &quot;wednesday&quot;: true&#10;                                }&#10;                            }&#10;                        },&#10;                        {&#10;                            &quot;meta&quot;: {},&#10;                            &quot;type&quot;: &quot;action&quot;,&#10;                            &quot;flows&quot;: [],&#10;                            &quot;title&quot;: &quot;1ST_ANNIVERSARY_15OFF50_top20_CONTROL&quot;,&#10;                            &quot;node_id&quot;: &quot;cd55meaq&quot;,&#10;                            &quot;settings&quot;: {&#10;                                &quot;type&quot;: &quot;email&quot;,&#10;                                &quot;subject&quot;: &quot;Enjoy 15% off your next order&quot;,&#10;                                &quot;preheader&quot;: &quot;Celebrating 365 days together&quot;,&#10;                                &quot;template_instance_id&quot;: 1801&#10;                            }&#10;                        },&#10;                        {&#10;                            &quot;type&quot;: &quot;wait&quot;,&#10;                            &quot;flows&quot;: [],&#10;                            &quot;node_id&quot;: &quot;sb037ebh&quot;,&#10;                            &quot;settings&quot;: {&#10;                                &quot;type&quot;: &quot;absolute&quot;,&#10;                                &quot;unit&quot;: &quot;hour&quot;,&#10;                                &quot;duration&quot;: &quot;24&quot;&#10;                            }&#10;                        }&#10;                    ]&#10;                },&#10;                {&#10;                    &quot;marker&quot;: {&#10;                        &quot;type&quot;: &quot;ratio&quot;,&#10;                        &quot;node_id&quot;: &quot;ixw1v1sw&quot;,&#10;                        &quot;settings&quot;: {&#10;                            &quot;ratio&quot;: 50&#10;                        }&#10;                    },&#10;                    &quot;actions&quot;: [&#10;                        {&#10;                            &quot;type&quot;: &quot;wait&quot;,&#10;                            &quot;flows&quot;: [],&#10;                            &quot;node_id&quot;: &quot;59l3tuaq&quot;,&#10;                            &quot;settings&quot;: {&#10;                                &quot;time&quot;: &quot;19:20&quot;,&#10;                                &quot;type&quot;: &quot;until&quot;,&#10;                                &quot;days_of_week&quot;: {&#10;                                    &quot;friday&quot;: true,&#10;                                    &quot;monday&quot;: true,&#10;                                    &quot;sunday&quot;: true,&#10;                                    &quot;tuesday&quot;: true,&#10;                                    &quot;saturday&quot;: true,&#10;                                    &quot;thursday&quot;: true,&#10;                                    &quot;wednesday&quot;: true&#10;                                }&#10;                            }&#10;                        },&#10;                        {&#10;                            &quot;meta&quot;: {},&#10;                            &quot;type&quot;: &quot;action&quot;,&#10;                            &quot;flows&quot;: [],&#10;                            &quot;title&quot;: &quot;1ST_ANNIVERSARY_15OFF50_TOP20_test&quot;,&#10;                            &quot;node_id&quot;: &quot;kovkvaxk&quot;,&#10;                            &quot;settings&quot;: {&#10;                                &quot;type&quot;: &quot;email&quot;,&#10;                                &quot;subject&quot;: &quot;Enjoy 15% off your next order&quot;,&#10;                                &quot;preheader&quot;: &quot;Celebrating 365 days together&quot;,&#10;                                &quot;template_instance_id&quot;: 1802&#10;                            }&#10;                        },&#10;                        {&#10;                            &quot;type&quot;: &quot;wait&quot;,&#10;                            &quot;flows&quot;: [],&#10;                            &quot;node_id&quot;: &quot;n9t7pugs&quot;,&#10;                            &quot;settings&quot;: {&#10;                                &quot;type&quot;: &quot;absolute&quot;,&#10;                                &quot;unit&quot;: &quot;hour&quot;,&#10;                                &quot;duration&quot;: &quot;24&quot;&#10;                            }&#10;                        }&#10;                    ]&#10;                }&#10;            ],&#10;            &quot;title&quot;: &quot;top20_customers&quot;,&#10;            &quot;node_id&quot;: &quot;3jljonlr&quot;,&#10;            &quot;settings&quot;: {&#10;                &quot;group&quot;: &quot;all&quot;,&#10;                &quot;filters&quot;: [&#10;                    {&#10;                        &quot;op&quot;: &quot;eq&quot;,&#10;                        &quot;field&quot;: &quot;list_id&quot;,&#10;                        &quot;value&quot;: [&#10;                            489&#10;                        ]&#10;                    },&#10;                    {&#10;                        &quot;op&quot;: &quot;gte&quot;,&#10;                        &quot;field&quot;: &quot;n_orders&quot;,&#10;                        &quot;value&quot;: [&#10;                            &quot;2&quot;&#10;                        ]&#10;                    }&#10;                ],&#10;                &quot;query_type&quot;: &quot;and&quot;&#10;            }&#10;        },&#10;        {&#10;            &quot;type&quot;: &quot;segment&quot;,&#10;            &quot;flows&quot;: [&#10;                {&#10;                    &quot;marker&quot;: {&#10;                        &quot;type&quot;: &quot;ratio&quot;,&#10;                        &quot;node_id&quot;: &quot;4d0z08bl&quot;,&#10;                        &quot;settings&quot;: {&#10;                            &quot;label&quot;: &quot;A&quot;,&#10;                            &quot;ratio&quot;: 100&#10;                        }&#10;                    },&#10;                    &quot;actions&quot;: [&#10;                        {&#10;                            &quot;type&quot;: &quot;wait&quot;,&#10;                            &quot;flows&quot;: [],&#10;                            &quot;node_id&quot;: &quot;n2zgbm6d&quot;,&#10;                            &quot;settings&quot;: {&#10;                                &quot;time&quot;: &quot;19:20&quot;,&#10;                                &quot;type&quot;: &quot;until&quot;,&#10;                                &quot;days_of_week&quot;: {&#10;                                    &quot;friday&quot;: true,&#10;                                    &quot;monday&quot;: true,&#10;                                    &quot;sunday&quot;: true,&#10;                                    &quot;tuesday&quot;: true,&#10;                                    &quot;saturday&quot;: true,&#10;                                    &quot;thursday&quot;: true,&#10;                                    &quot;wednesday&quot;: true&#10;                                }&#10;                            }&#10;                        },&#10;                        {&#10;                            &quot;meta&quot;: {},&#10;                            &quot;type&quot;: &quot;action&quot;,&#10;                            &quot;flows&quot;: [],&#10;                            &quot;title&quot;: &quot;1ST_ANNIVERSARY_15OFF50&quot;,&#10;                            &quot;node_id&quot;: &quot;5j21c2rm&quot;,&#10;                            &quot;settings&quot;: {&#10;                                &quot;type&quot;: &quot;email&quot;,&#10;                                &quot;subject&quot;: &quot;Enjoy 15% off your next order&quot;,&#10;                                &quot;preheader&quot;: &quot;Celebrating 365 days together&quot;,&#10;                                &quot;template_instance_id&quot;: 1820&#10;                            }&#10;                        },&#10;                        {&#10;                            &quot;type&quot;: &quot;wait&quot;,&#10;                            &quot;flows&quot;: [],&#10;                            &quot;node_id&quot;: &quot;mpqnis9d&quot;,&#10;                            &quot;settings&quot;: {&#10;                                &quot;type&quot;: &quot;absolute&quot;,&#10;                                &quot;unit&quot;: &quot;hour&quot;,&#10;                                &quot;duration&quot;: &quot;24&quot;&#10;                            }&#10;                        }&#10;                    ]&#10;                }&#10;            ],&#10;            &quot;title&quot;: &quot;Everyone_else&quot;,&#10;            &quot;node_id&quot;: &quot;twq6j9wi&quot;&#10;        }&#10;    ]&#10;}&#10;" />
        <outline text="Bogus node_id qn5iq3ro" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;5&quot;&gt;Thu, Mar 5, 2020&lt;/time&gt; #om review Bruno's prefs centre PR https://github.com/Ometria/ometria.preferences_center/pull/33/files/81264f811f5f34a293f2dbf17afb1f35744cf382..00ee60323bfde311e07126ec1f26336783142910 " />
      <outline _complete="true" text="#om call with Bruno to E2E test prefs centre with full data ingestion pipeline &lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;4&quot;&gt;Wed, Mar 4, 2020&lt;/time&gt; " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;4&quot;&gt;Wed, Mar 4, 2020&lt;/time&gt; #om #proj-sms Update data_ingestion according to new logic ">
        <outline text="Local E2E testing using Bruno's local test env" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;3&quot;&gt;Tue, Mar 3, 2020&lt;/time&gt; #om mass campaign opt in fix in segmentation tree lib, api.campaigns and mass_email ">
        <outline text="account_details from ometria_lib_services.services.get_account()">
          <outline text="account_details[&quot;settings&quot;][&quot;campaign_settings&quot;][&quot;mass_mail&quot;][&quot;optin_mode&quot;]">
            <outline text="&quot;strict&quot;" />
            <outline text="&quot;loose&quot;" />
            <outline text="None?" />
          </outline>
        </outline>
        <outline text="lib.segmentation_tree https://github.com/Ometria/ometria.lib.segmentation_tree/pull/1/files" />
        <outline text="mass_email https://github.com/Ometria/ometria.mass_email/pull/291" />
        <outline text="api.campaigns https://github.com/Ometria/ometria.api.campaigns/pull/86" />
        <outline text="api.campaigns typo fix https://github.com/Ometria/ometria.api.campaigns/pull/87" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;2&quot;&gt;Mon, Mar 2, 2020&lt;/time&gt; UAT column meeting/discussion" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; endYear=&quot;2020&quot; startMonth=&quot;2&quot; endMonth=&quot;3&quot; startDay=&quot;27&quot; endDay=&quot;2&quot;&gt;Thu, Feb 27, 2020 - Mon, Mar 2, 2020&lt;/time&gt; #om #proj-sms Update data_store according to new logic   ">
        <outline text="Expectations">
          <outline text="contact has no sms channels prefs -&amp;gt; payload with bool and timestamp comes in -&amp;gt; store both" />
          <outline text="contact has no sms channels prefs -&amp;gt; payload with just bool comes in -&amp;gt; store bool, set timestamp to now()" />
          <outline text="contact has sms channels prefs -&amp;gt; payload with bool and timestamp comes in -&amp;gt; if different bool, set the bool and the timestamp. if the same bool, store the timestamp if earlier than ours" />
          <outline text="contact has sms channels pref -&amp;gt; payload with just bool comes in -&amp;gt; if different bool, set the bool and timestamp to now(). if the same bool, do nothing" />
        </outline>
        <outline text="data_store" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;2&quot;&gt;Mon, Mar 2, 2020&lt;/time&gt; #om #proj-sms correct sms prefs dt names in datamodels https://github.com/Ometria/ometria.datamodels/pull/41/files ">
        <outline _complete="true" text="Remember to bump setup.py" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;2&quot;&gt;Mon, Mar 2, 2020&lt;/time&gt; #om #proj-sms part 1 of 2 - add new column names (maintain old incorrect ones https://github.com/Ometria/ometria.migrations/pull/53/files" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;27&quot;&gt;Thu, Feb 27, 2020&lt;/time&gt; #om removed email-archive from `OpenAllTest (sg-0d62323728b875104)` " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;26&quot;&gt;Wed, Feb 26, 2020&lt;/time&gt; #om #proj-onsite js_tracker_pipeline - how readily will it accept new event types? ">
        <outline text="Diagram https://whimsical.com/159BnKiAuozNS8Xq9DroAE" />
        <outline text="Field types https://docs.google.com/spreadsheets/d/1Zw8wdX3G6q4CtVSH8BhmzJKTb56FzwIElLIUs67Vrho/edit#gid=530393639" />
        <outline text="Handover docs https://docs.ometria.cloud/handovers/mattd/tech/js-tracker/" />
        <outline text="server (golang)">
          <outline text="validates `type` and `cor`" _note="`cor` = `Correlator`, random string generated for each page view in JS" />
          <outline text="(also validates valid URL string, nothing important)" />
          <outline text="Maps some data, but shouldn't fail on missing params or anything" />
          <outline text="Publishes to pubsub" />
        </outline>
        <outline text="backend (python)">
          <outline text="Consumed messages from pubsub" />
          <outline text="Event specific logic handled in if/elif/else https://github.com/Ometria/ometria.js_tracker_pipeline/blob/dd347efc2f32b14b0862d58c33da5b2cbeee7766/backend/ometria_tracker_backend/run_aggregator.py#L359" />
        </outline>
        <outline text="In general, minimal validation on server side, just requirement of account hash - not relevant" />
        <outline text="Extra logic required to handle additional event types, should be easy to implement" />
        <outline text="Firehose branch is before pubsub aggregation flow so can easily avoid that section" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;27&quot;&gt;Thu, Feb 27, 2020&lt;/time&gt; #om #proj-slos Update data_store with REMOVE_EXTRA to omit sms fields rather than rejecting them " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;20&quot;&gt;Thu, Feb 20, 2020&lt;/time&gt; #om Fix mixed up cache expiry names in api.campaigns/campaigns/mass/segmentation.py " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;20&quot;&gt;Thu, Feb 20, 2020&lt;/time&gt; #om api-campaigns-v4 / console2 rollout ">
        <outline _complete="true" text="Re-integrate variants endpoints" />
        <outline _complete="true" text="Create api-campaigns-v4 build v2.0 in feature branch" />
        <outline _complete="true" text="Deploy above to api-campaigns-prototype-v3, ensure proper function" />
        <outline _complete="true" text="Deploy api-campaigns-v4 pointing at v2.0" />
        <outline _complete="true" text="Canary deploy console2 (apply both stable and canary deployments in console2) and confirm normal function" />
        <outline _complete="true" text="Full rollout (reduce stable replica count, increase canary)" />
        <outline _complete="true" text="Force override api.campaigns feature branch into master" />
        <outline _complete="true" text="Update api-campaigns-test manifests to new and deploy" />
        <outline _complete="true" text="Update console2-test (staging) to new and deploy" />
        <outline _complete="true" text="Tidyup">
          <outline _complete="true" text="Copy api_campaigns_v4_* into original api_campaign_* manifests" />
          <outline _complete="true" text="Delete api_campaigns_v4_* and api_campaigns_prototype_* manifests" />
          <outline _complete="true" text="Delete prototype api deployment and service on kube" />
          <outline _complete="true" text="Remove console2 canary deploy manifest" />
        </outline>
        <outline _complete="true" text="PR response" _note="Thanks @dlmiddlecote !&#10;&#10;The overall process is a bit fiddly (I have a full plan written which I'm happy to share in more detail), but for more context - for the past 1+ year, there have been two versions of `api.campaigns` running in parallel. `api-campaigns-v3` serves the old pre-BUI &quot;legacy&quot; broadcast campaign requests, `api-campaigns-prototype-v3` services the new BUI requests with the new schema. The changes were not backwards compatible.&#10;&#10;In console2, all traffic related to the new BUI (e.g. broadcast campaign related requests) was routed to the `prototype` deployments. All other traffic (trigger campaigns, templates etc) was routed to the original deployment.&#10;&#10;There will be a **third** deployment created, representing the two versions above after manual merging, `api-campaigns-v4`. This will also run in parallel.&#10;&#10;The console2 deployment will be stepped as such:&#10;&#10;1. Point the current `prototype` traffic to the new merged v2.0 version - sanity check proper function for broadcast campaigns API. All traffic for broadcast campaigns will then route through the merged version - arguably, this could be canary deployed too, but there is low / nonexistent risk of any regression in this part of the API.&#10;2. Apply new `stable` console2 deployment with 7 replicas (as existing, routing between two old api deployments. Was originally at 8 replicas)&#10;3. Apply new merged `canary` console2 deployment with 1 replica&#10;4. Observe and confirm proper function of new canary replica. This is a bit fiddly. The commits in each API branch would of course have been running in production (separately) for some time, so the major concern is regressions, or breakages.&#10;5. Full rollout (could add further intermediary stages here but I don't think it's necessary) towards canary deploy&#10;6. Update original deployment manifest, tidy up others etc&#10;7. I'll create anothe PR to remove the redundant manifests to return to normal&#10;&#10;Totally agree, there is no recommended process or standardised approach for canary deployments and therefore no decent support. Perhaps this is worthy of a separate ADR?&#10;" />
        <outline _complete="true" text="Merge when UI ready" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;25&quot;&gt;Tue, Feb 25, 2020&lt;/time&gt; #om delete old api.campaigns deployments and merge repos " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;24&quot;&gt;Mon, Feb 24, 2020&lt;/time&gt; #om write context for candidate tomorrow " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;24&quot;&gt;Mon, Feb 24, 2020&lt;/time&gt; #om #proj-onsite What's returned by prod recs json API? ">
        <outline _complete="true" text="Completed by Bruno/Rui" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;24&quot;&gt;Mon, Feb 24, 2020&lt;/time&gt; #om #proj-onsite kickoff " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;21&quot;&gt;Fri, Feb 21, 2020&lt;/time&gt; #om #proj-sms data_store ">
        <outline text="Check if `merge_record` needs to be updated as in data_ingestion for granular updates of channels-&amp;gt;sms-&amp;gt;{fields}" _note="https://github.com/Ometria/ometria.data_store/blob/bc3a5b5272f4c0f21ce52c68408772663a402fc3/ometria_data_store/data_processors/generic_processor.py#L202" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;21&quot;&gt;Fri, Feb 21, 2020&lt;/time&gt; #om #proj-sms lib_data_validation ">
        <outline text="https://github.com/Ometria/ometria.lib.data_validation/pull/41" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;21&quot;&gt;Fri, Feb 21, 2020&lt;/time&gt; #om #proj-slos finish up and deploy data_store sms prefs support " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;21&quot;&gt;Fri, Feb 21, 2020&lt;/time&gt; #om #proj-slos review Bruno's doc around broadcast SLOs " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;20&quot;&gt;Thu, Feb 20, 2020&lt;/time&gt; #om review will's PR on terraform pagerduty implementation " _note="https://github.com/Ometria/ometria.infra.pagerduty/pull/1#pullrequestreview-361810467" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;20&quot;&gt;Thu, Feb 20, 2020&lt;/time&gt; #om Review Andrew's on call PR " _note="https://github.com/Ometria/ometria.engineering.docs/pull/83" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;19&quot;&gt;Wed, Feb 19, 2020&lt;/time&gt; #om deploy mass email mattd email removal " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;19&quot;&gt;Wed, Feb 19, 2020&lt;/time&gt; #om Review Michal's Engineer 1 comments " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;17&quot;&gt;Mon, Feb 17, 2020&lt;/time&gt; #om lib segmentation spike and resolution " _note="parked for now until requirement changes" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;17&quot;&gt;Mon, Feb 17, 2020&lt;/time&gt; #om #proj-sms data_ingestion ">
        <outline _complete="true" text="Fix tests" />
        <outline _complete="true" text="prevent whitelisting (not sending fields)">
          <outline _complete="true" text="snowflake" />
          <outline _complete="true" text="dynamodb" />
        </outline>
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;18&quot;&gt;Tue, Feb 18, 2020&lt;/time&gt; #om #om-interview Philippe Rocques ">
        <outline text="15y C++ background" />
        <outline text="Seemed very technically competent" />
        <outline text="Spoke in depth about very interesting in-memory ledger system repsonsible for buffering/writing ahead to SQL DB backend" />
        <outline text="Made comments about writing in python for non-CPU bound ops" />
        <outline text="Recent exposure to containerising services in docker" />
        <outline text="Integration with Kafka" />
        <outline text="Great communication" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;20&quot;&gt;Mon, Jan 20, 2020&lt;/time&gt; mass_email empty validation pause/resume issue ">
        <outline text="Investigation">
          <outline text="stackdriver search" _note="https://console.cloud.google.com/logs/viewer?project=ometria-kubernetes-support&amp;amp;minLogLevel=0&amp;amp;expandAll=false&amp;amp;timestamp=2020-01-20T07:12:04.831000000Z&amp;amp;customFacets=&amp;amp;limitCustomFacetWidth=true&amp;amp;dateRangeStart=2020-01-16T13:29:00.000Z&amp;amp;dateRangeEnd=2020-01-17T11:00:00.000Z&amp;amp;interval=CUSTOM&amp;amp;resource=aws_ec2_instance&amp;amp;scrollTimestamp=2020-01-17T10:56:33.831134478Z&amp;amp;advancedFilter=jsonPayload.kubernetes.labels.app%3D%22api-campaigns-v4%22%0AjsonPayload.account_id%3D1236%0AjsonPayload.campaign_id%3D7%0A%22Campaign%20updated%22" />
          <outline text="Campaign logs" _note="https://admin.ometria.com/private/mass/campaigns/logs?account_id=1236&amp;amp;mass_campaign_id=7&amp;amp;min_level=0" />
          <outline text="/tmp/missoma_html.html" />
          <outline text="template_instance_revision_id's">
            <outline text="campaign">
              <outline text="358" />
            </outline>
            <outline text="variants">
              <outline text="434" />
              <outline text="435" />
              <outline text="436" />
              <outline text="437" />
              <outline text="438" />
              <outline text="439" />
              <outline text="440" />
              <outline text="441" />
              <outline text="442" />
            </outline>
          </outline>
          <outline text="Example gearman curl (redis re-sync)" _note="curl -v -d '' -H &quot;X-Gearman-Unique: re-sync&quot; coreservices_gearman.services.ometria.network:8089/suppression.sync" />
          <outline text="Validate gearman" _note="curl -v -d '{&quot;account_id&quot;:1236,&quot;campaign_id&quot;:7}' -H &quot;X-Gearman-Unique: 123456&quot; coreservices_gearman.services.ometria.network:8089/campaigns.validate_mass_campaign_configuration&#10;&#10;curl -v -d '{&quot;account_id&quot;:1236,&quot;campaign_id&quot;:7}' -H &quot;X-Gearman-Unique: 123456&quot; coreservices_gearman.services.ometria.network:8089/campaigns.validate_mass_campaign_configuration&#10;&#10;curl -v -d @/tmp/missoma_7_variants.json -H &quot;X-Gearman-Unique: 123456&quot; coreservices_gearman.services.ometria.network:8089/campaigns.validate_mass_campaign_configuration" />
          <outline text="Raw &quot;variants&quot; data" _note="{&quot;account_id&quot;: 1236, &quot;campaign_id&quot;: 7, &quot;variants&quot;: [{&quot;leaf&quot;: {&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, &quot;path&quot;: [{&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;op&quot;: &quot;eq&quot;, &quot;field&quot;: &quot;country&quot;, &quot;value&quot;: [&quot;GB&quot;]}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;UK&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 9, &quot;type&quot;: &quot;segmentation&quot;, &quot;items&quot;: [{&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}]}}, {&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}], &quot;label&quot;: &quot;UK &amp;gt; GOLD&quot;, &quot;blockId&quot;: 9, &quot;delivery&quot;: {&quot;schedule_mode&quot;: null}, &quot;template&quot;: {&quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The gold we've got our eye on&quot;, &quot;template_preview&quot;: &quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/f0457af0ed4cd7a685674312bc5d870868e05a62/png?thumb_width=400&amp;amp;full_page=true&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=true&amp;amp;url=https%3A%2F%2Fapp.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D1236%26id%3D434%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3Dc5086f05%26sig%3De1a9a6d2e69e56bff0517b549f97e9fea8c5aa85d1b91b65b72a35cadc6fdba2&quot;, &quot;template_instance_id&quot;: 36, &quot;subject_configuration&quot;: null, &quot;template_instance_revision_id&quot;: 434}, &quot;blockItemId&quot;: 1, &quot;recipientsCount&quot;: 10367}, {&quot;leaf&quot;: {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, &quot;path&quot;: [{&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;op&quot;: &quot;eq&quot;, &quot;field&quot;: &quot;country&quot;, &quot;value&quot;: [&quot;GB&quot;]}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;UK&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 9, &quot;type&quot;: &quot;segmentation&quot;, &quot;items&quot;: [{&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}]}}, {&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}], &quot;label&quot;: &quot;UK &amp;gt; SILVER&quot;, &quot;blockId&quot;: 9, &quot;delivery&quot;: {&quot;schedule_mode&quot;: null}, &quot;template&quot;: {&quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The silver we've got our eye on &quot;, &quot;template_preview&quot;: &quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/c83edcac7373b5a8468070bd8a895c2d70f2d150/png?thumb_width=400&amp;amp;full_page=true&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=true&amp;amp;url=https%3A%2F%2Fapp.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D1236%26id%3D435%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3D8e9bb8a0%26sig%3D0f0679a2ef6592b9b1d24d8b446137a544e5750097a4d63952982aa93cad8365&quot;, &quot;template_instance_id&quot;: 37, &quot;subject_configuration&quot;: null, &quot;template_instance_revision_id&quot;: 435}, &quot;blockItemId&quot;: 2, &quot;recipientsCount&quot;: 938}, {&quot;leaf&quot;: {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}, &quot;path&quot;: [{&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;op&quot;: &quot;eq&quot;, &quot;field&quot;: &quot;country&quot;, &quot;value&quot;: [&quot;GB&quot;]}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;UK&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 9, &quot;type&quot;: &quot;segmentation&quot;, &quot;items&quot;: [{&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}]}}, {&quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}], &quot;label&quot;: &quot;UK &amp;gt; REST&quot;, &quot;blockId&quot;: 9, &quot;delivery&quot;: {&quot;schedule_mode&quot;: null}, &quot;template&quot;: {&quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The gold we've got our eye on&quot;, &quot;template_preview&quot;: &quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/f9c46abb362679ad31d41bc5eb5500f154e6259a/png?thumb_width=400&amp;amp;full_page=true&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=true&amp;amp;url=https%3A%2F%2Fapp.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D1236%26id%3D436%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3Dde09c801%26sig%3D844e52262f25eb1564479bbdc8606c64bc17425464f44bf619af56c3c1916570&quot;, &quot;template_instance_id&quot;: 38, &quot;subject_configuration&quot;: null, &quot;template_instance_revision_id&quot;: 436}, &quot;blockItemId&quot;: 3, &quot;recipientsCount&quot;: 42395}, {&quot;leaf&quot;: {&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, &quot;path&quot;: [{&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;op&quot;: &quot;eq&quot;, &quot;field&quot;: &quot;country&quot;, &quot;value&quot;: [&quot;US&quot;]}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;USA&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 10, &quot;type&quot;: &quot;segmentation&quot;, &quot;items&quot;: [{&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}]}}, {&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}], &quot;label&quot;: &quot;USA &amp;gt; GOLD&quot;, &quot;blockId&quot;: 10, &quot;delivery&quot;: {&quot;schedule_mode&quot;: null}, &quot;template&quot;: {&quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The gold we've got our eye on&quot;, &quot;template_preview&quot;: &quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/05c58eacb72425a73da03b27e2c4e49126efe6c3/png?thumb_width=400&amp;amp;full_page=true&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=true&amp;amp;url=https%3A%2F%2Fapp.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D1236%26id%3D437%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3D080bad5d%26sig%3Db3c428b2f1e22d11ff96fe8fc2e0c3e822857f99051448f625afa5f83ee1bf28&quot;, &quot;template_instance_id&quot;: 39, &quot;subject_configuration&quot;: null, &quot;template_instance_revision_id&quot;: 437}, &quot;blockItemId&quot;: 1, &quot;recipientsCount&quot;: 144}, {&quot;leaf&quot;: {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, &quot;path&quot;: [{&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;op&quot;: &quot;eq&quot;, &quot;field&quot;: &quot;country&quot;, &quot;value&quot;: [&quot;US&quot;]}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;USA&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 10, &quot;type&quot;: &quot;segmentation&quot;, &quot;items&quot;: [{&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}]}}, {&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}], &quot;label&quot;: &quot;USA &amp;gt; SILVER&quot;, &quot;blockId&quot;: 10, &quot;delivery&quot;: {&quot;schedule_mode&quot;: null}, &quot;template&quot;: {&quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The silver we've got our eye on &quot;, &quot;template_preview&quot;: &quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/46ad99077d6d7f18f7376028b89d41f17e94b17c/png?thumb_width=400&amp;amp;full_page=true&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=true&amp;amp;url=https%3A%2F%2Fapp.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D1236%26id%3D438%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3D764b1f45%26sig%3Da7eb58968f5252c964147ae583b88dce81be00f318c390a4355b203e8ea58003&quot;, &quot;template_instance_id&quot;: 40, &quot;subject_configuration&quot;: null, &quot;template_instance_revision_id&quot;: 438}, &quot;blockItemId&quot;: 2, &quot;recipientsCount&quot;: 14}, {&quot;leaf&quot;: {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}, &quot;path&quot;: [{&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;op&quot;: &quot;eq&quot;, &quot;field&quot;: &quot;country&quot;, &quot;value&quot;: [&quot;US&quot;]}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;USA&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 10, &quot;type&quot;: &quot;segmentation&quot;, &quot;items&quot;: [{&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}]}}, {&quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}], &quot;label&quot;: &quot;USA &amp;gt; REST&quot;, &quot;blockId&quot;: 10, &quot;delivery&quot;: {&quot;schedule_mode&quot;: null}, &quot;template&quot;: {&quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The gold we've got our eye on&quot;, &quot;template_preview&quot;: &quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/e6d264ad20b31bd81d17072d2f9068d29b490e6c/png?thumb_width=400&amp;amp;full_page=true&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=true&amp;amp;url=https%3A%2F%2Fapp.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D1236%26id%3D439%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3D809779f9%26sig%3Df67cc0e15fbedcf727daca0e3148623940f76958aca00c2bf0cd078a82785855&quot;, &quot;template_instance_id&quot;: 41, &quot;subject_configuration&quot;: null, &quot;template_instance_revision_id&quot;: 439}, &quot;blockItemId&quot;: 3, &quot;recipientsCount&quot;: 12477}, {&quot;leaf&quot;: {&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, &quot;path&quot;: [{&quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 11, &quot;type&quot;: &quot;segmentation&quot;, &quot;items&quot;: [{&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}]}}, {&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}], &quot;label&quot;: &quot;REST &amp;gt; GOLD&quot;, &quot;blockId&quot;: 11, &quot;delivery&quot;: {&quot;schedule_mode&quot;: null}, &quot;template&quot;: {&quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The gold we've got our eye on&quot;, &quot;template_preview&quot;: &quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/2b4d2ef55aeddef036a79d78de821a29e5767340/png?thumb_width=400&amp;amp;full_page=true&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=true&amp;amp;url=https%3A%2F%2Fapp.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D1236%26id%3D440%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3Dd5032041%26sig%3D7fb98474dc66ff421801c9c0d75cf6927be1771712dca344fe81419e1b382230&quot;, &quot;template_instance_id&quot;: 42, &quot;subject_configuration&quot;: null, &quot;template_instance_revision_id&quot;: 440}, &quot;blockItemId&quot;: 1, &quot;recipientsCount&quot;: 2572}, {&quot;leaf&quot;: {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, &quot;path&quot;: [{&quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 11, &quot;type&quot;: &quot;segmentation&quot;, &quot;items&quot;: [{&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}]}}, {&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}], &quot;label&quot;: &quot;REST &amp;gt; SILVER&quot;, &quot;blockId&quot;: 11, &quot;delivery&quot;: {&quot;schedule_mode&quot;: null}, &quot;template&quot;: {&quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The silver we've got our eye on &quot;, &quot;template_preview&quot;: &quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/04837c71ca8a56626c621599ab01c13bdd957bf5/png?thumb_width=400&amp;amp;full_page=true&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=true&amp;amp;url=https%3A%2F%2Fapp.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D1236%26id%3D441%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3D5643ba76%26sig%3D3c6c55987126f356936254965cc1df1be7e088f5a88a19f1fcff0f6e24699b4c&quot;, &quot;template_instance_id&quot;: 43, &quot;subject_configuration&quot;: null, &quot;template_instance_revision_id&quot;: 441}, &quot;blockItemId&quot;: 2, &quot;recipientsCount&quot;: 119}, {&quot;leaf&quot;: {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}, &quot;path&quot;: [{&quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 11, &quot;type&quot;: &quot;segmentation&quot;, &quot;items&quot;: [{&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}]}}, {&quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}], &quot;label&quot;: &quot;REST &amp;gt; REST&quot;, &quot;blockId&quot;: 11, &quot;delivery&quot;: {&quot;schedule_mode&quot;: null}, &quot;template&quot;: {&quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The gold we've got our eye on&quot;, &quot;template_preview&quot;: &quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/429084968a8addb803c9c9e794386a994dc9ab11/png?thumb_width=400&amp;amp;full_page=true&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=true&amp;amp;url=https%3A%2F%2Fapp.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D1236%26id%3D442%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3D36bc223a%26sig%3D1a6490e09ba9d0f95b5b14f2e19cccce03fe5e3337076dd68f475a89ced60b31&quot;, &quot;template_instance_id&quot;: 44, &quot;subject_configuration&quot;: null, &quot;template_instance_revision_id&quot;: 442}, &quot;blockItemId&quot;: 3, &quot;recipientsCount&quot;: 93083}]}">
            <outline text="Pythonised" _note="{&quot;account_id&quot;: 1236, &quot;campaign_id&quot;: 7, &quot;variants&quot;: [{&quot;leaf&quot;: {&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, &quot;path&quot;: [{&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;op&quot;: &quot;eq&quot;, &quot;field&quot;: &quot;country&quot;, &quot;value&quot;: [&quot;GB&quot;]}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;UK&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 9, &quot;type&quot;: &quot;segmentation&quot;, &quot;items&quot;: [{&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}]}}, {&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}], &quot;label&quot;: &quot;UK &amp;gt; GOLD&quot;, &quot;blockId&quot;: 9, &quot;delivery&quot;: {&quot;schedule_mode&quot;: None}, &quot;template&quot;: {&quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The gold we've got our eye on&quot;, &quot;template_preview&quot;: &quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/f0457af0ed4cd7a685674312bc5d870868e05a62/png?thumb_width=400&amp;amp;full_page=True&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=True&amp;amp;url=https%3A%2F%2Fapp.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D1236%26id%3D434%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3Dc5086f05%26sig%3De1a9a6d2e69e56bff0517b549f97e9fea8c5aa85d1b91b65b72a35cadc6fdba2&quot;, &quot;template_instance_id&quot;: 36, &quot;subject_configuration&quot;: None, &quot;template_instance_revision_id&quot;: 434}, &quot;blockItemId&quot;: 1, &quot;recipientsCount&quot;: 10367}, {&quot;leaf&quot;: {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, &quot;path&quot;: [{&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;op&quot;: &quot;eq&quot;, &quot;field&quot;: &quot;country&quot;, &quot;value&quot;: [&quot;GB&quot;]}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;UK&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 9, &quot;type&quot;: &quot;segmentation&quot;, &quot;items&quot;: [{&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}]}}, {&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}], &quot;label&quot;: &quot;UK &amp;gt; SILVER&quot;, &quot;blockId&quot;: 9, &quot;delivery&quot;: {&quot;schedule_mode&quot;: None}, &quot;template&quot;: {&quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The silver we've got our eye on &quot;, &quot;template_preview&quot;: &quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/c83edcac7373b5a8468070bd8a895c2d70f2d150/png?thumb_width=400&amp;amp;full_page=True&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=True&amp;amp;url=https%3A%2F%2Fapp.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D1236%26id%3D435%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3D8e9bb8a0%26sig%3D0f0679a2ef6592b9b1d24d8b446137a544e5750097a4d63952982aa93cad8365&quot;, &quot;template_instance_id&quot;: 37, &quot;subject_configuration&quot;: None, &quot;template_instance_revision_id&quot;: 435}, &quot;blockItemId&quot;: 2, &quot;recipientsCount&quot;: 938}, {&quot;leaf&quot;: {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}, &quot;path&quot;: [{&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;op&quot;: &quot;eq&quot;, &quot;field&quot;: &quot;country&quot;, &quot;value&quot;: [&quot;GB&quot;]}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;UK&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 9, &quot;type&quot;: &quot;segmentation&quot;, &quot;items&quot;: [{&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}]}}, {&quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}], &quot;label&quot;: &quot;UK &amp;gt; REST&quot;, &quot;blockId&quot;: 9, &quot;delivery&quot;: {&quot;schedule_mode&quot;: None}, &quot;template&quot;: {&quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The gold we've got our eye on&quot;, &quot;template_preview&quot;: &quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/f9c46abb362679ad31d41bc5eb5500f154e6259a/png?thumb_width=400&amp;amp;full_page=True&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=True&amp;amp;url=https%3A%2F%2Fapp.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D1236%26id%3D436%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3Dde09c801%26sig%3D844e52262f25eb1564479bbdc8606c64bc17425464f44bf619af56c3c1916570&quot;, &quot;template_instance_id&quot;: 38, &quot;subject_configuration&quot;: None, &quot;template_instance_revision_id&quot;: 436}, &quot;blockItemId&quot;: 3, &quot;recipientsCount&quot;: 42395}, {&quot;leaf&quot;: {&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, &quot;path&quot;: [{&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;op&quot;: &quot;eq&quot;, &quot;field&quot;: &quot;country&quot;, &quot;value&quot;: [&quot;US&quot;]}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;USA&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 10, &quot;type&quot;: &quot;segmentation&quot;, &quot;items&quot;: [{&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}]}}, {&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}], &quot;label&quot;: &quot;USA &amp;gt; GOLD&quot;, &quot;blockId&quot;: 10, &quot;delivery&quot;: {&quot;schedule_mode&quot;: None}, &quot;template&quot;: {&quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The gold we've got our eye on&quot;, &quot;template_preview&quot;: &quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/05c58eacb72425a73da03b27e2c4e49126efe6c3/png?thumb_width=400&amp;amp;full_page=True&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=True&amp;amp;url=https%3A%2F%2Fapp.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D1236%26id%3D437%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3D080bad5d%26sig%3Db3c428b2f1e22d11ff96fe8fc2e0c3e822857f99051448f625afa5f83ee1bf28&quot;, &quot;template_instance_id&quot;: 39, &quot;subject_configuration&quot;: None, &quot;template_instance_revision_id&quot;: 437}, &quot;blockItemId&quot;: 1, &quot;recipientsCount&quot;: 144}, {&quot;leaf&quot;: {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, &quot;path&quot;: [{&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;op&quot;: &quot;eq&quot;, &quot;field&quot;: &quot;country&quot;, &quot;value&quot;: [&quot;US&quot;]}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;USA&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 10, &quot;type&quot;: &quot;segmentation&quot;, &quot;items&quot;: [{&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}]}}, {&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}], &quot;label&quot;: &quot;USA &amp;gt; SILVER&quot;, &quot;blockId&quot;: 10, &quot;delivery&quot;: {&quot;schedule_mode&quot;: None}, &quot;template&quot;: {&quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The silver we've got our eye on &quot;, &quot;template_preview&quot;: &quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/46ad99077d6d7f18f7376028b89d41f17e94b17c/png?thumb_width=400&amp;amp;full_page=True&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=True&amp;amp;url=https%3A%2F%2Fapp.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D1236%26id%3D438%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3D764b1f45%26sig%3Da7eb58968f5252c964147ae583b88dce81be00f318c390a4355b203e8ea58003&quot;, &quot;template_instance_id&quot;: 40, &quot;subject_configuration&quot;: None, &quot;template_instance_revision_id&quot;: 438}, &quot;blockItemId&quot;: 2, &quot;recipientsCount&quot;: 14}, {&quot;leaf&quot;: {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}, &quot;path&quot;: [{&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;op&quot;: &quot;eq&quot;, &quot;field&quot;: &quot;country&quot;, &quot;value&quot;: [&quot;US&quot;]}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;USA&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 10, &quot;type&quot;: &quot;segmentation&quot;, &quot;items&quot;: [{&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}]}}, {&quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}], &quot;label&quot;: &quot;USA &amp;gt; REST&quot;, &quot;blockId&quot;: 10, &quot;delivery&quot;: {&quot;schedule_mode&quot;: None}, &quot;template&quot;: {&quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The gold we've got our eye on&quot;, &quot;template_preview&quot;: &quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/e6d264ad20b31bd81d17072d2f9068d29b490e6c/png?thumb_width=400&amp;amp;full_page=True&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=True&amp;amp;url=https%3A%2F%2Fapp.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D1236%26id%3D439%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3D809779f9%26sig%3Df67cc0e15fbedcf727daca0e3148623940f76958aca00c2bf0cd078a82785855&quot;, &quot;template_instance_id&quot;: 41, &quot;subject_configuration&quot;: None, &quot;template_instance_revision_id&quot;: 439}, &quot;blockItemId&quot;: 3, &quot;recipientsCount&quot;: 12477}, {&quot;leaf&quot;: {&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, &quot;path&quot;: [{&quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 11, &quot;type&quot;: &quot;segmentation&quot;, &quot;items&quot;: [{&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}]}}, {&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}], &quot;label&quot;: &quot;REST &amp;gt; GOLD&quot;, &quot;blockId&quot;: 11, &quot;delivery&quot;: {&quot;schedule_mode&quot;: None}, &quot;template&quot;: {&quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The gold we've got our eye on&quot;, &quot;template_preview&quot;: &quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/2b4d2ef55aeddef036a79d78de821a29e5767340/png?thumb_width=400&amp;amp;full_page=True&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=True&amp;amp;url=https%3A%2F%2Fapp.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D1236%26id%3D440%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3Dd5032041%26sig%3D7fb98474dc66ff421801c9c0d75cf6927be1771712dca344fe81419e1b382230&quot;, &quot;template_instance_id&quot;: 42, &quot;subject_configuration&quot;: None, &quot;template_instance_revision_id&quot;: 440}, &quot;blockItemId&quot;: 1, &quot;recipientsCount&quot;: 2572}, {&quot;leaf&quot;: {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, &quot;path&quot;: [{&quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 11, &quot;type&quot;: &quot;segmentation&quot;, &quot;items&quot;: [{&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}]}}, {&quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}], &quot;label&quot;: &quot;REST &amp;gt; SILVER&quot;, &quot;blockId&quot;: 11, &quot;delivery&quot;: {&quot;schedule_mode&quot;: None}, &quot;template&quot;: {&quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The silver we've got our eye on &quot;, &quot;template_preview&quot;: &quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/04837c71ca8a56626c621599ab01c13bdd957bf5/png?thumb_width=400&amp;amp;full_page=True&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=True&amp;amp;url=https%3A%2F%2Fapp.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D1236%26id%3D441%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3D5643ba76%26sig%3D3c6c55987126f356936254965cc1df1be7e088f5a88a19f1fcff0f6e24699b4c&quot;, &quot;template_instance_id&quot;: 43, &quot;subject_configuration&quot;: None, &quot;template_instance_revision_id&quot;: 441}, &quot;blockItemId&quot;: 2, &quot;recipientsCount&quot;: 119}, {&quot;leaf&quot;: {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}, &quot;path&quot;: [{&quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 11, &quot;type&quot;: &quot;segmentation&quot;, &quot;items&quot;: [{&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;256&quot;, &quot;222&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;GOLD&quot;}, {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;filter_group&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}, {&quot;op&quot;: &quot;viewed_not_purchased_attribute&quot;, &quot;field&quot;: &quot;product&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;310&quot;, &quot;287&quot;, &quot;228&quot;, &quot;241&quot;], &quot;type&quot;: &quot;tag&quot;}]}], &quot;query_type&quot;: &quot;or&quot;}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;SILVER&quot;}, {&quot;id&quot;: 3, &quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}]}}, {&quot;data&quot;: {}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;REST&quot;}], &quot;label&quot;: &quot;REST &amp;gt; REST&quot;, &quot;blockId&quot;: 11, &quot;delivery&quot;: {&quot;schedule_mode&quot;: None}, &quot;template&quot;: {&quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The gold we've got our eye on&quot;, &quot;template_preview&quot;: &quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/429084968a8addb803c9c9e794386a994dc9ab11/png?thumb_width=400&amp;amp;full_page=True&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=True&amp;amp;url=https%3A%2F%2Fapp.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D1236%26id%3D442%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3D36bc223a%26sig%3D1a6490e09ba9d0f95b5b14f2e19cccce03fe5e3337076dd68f475a89ced60b31&quot;, &quot;template_instance_id&quot;: 44, &quot;subject_configuration&quot;: None, &quot;template_instance_revision_id&quot;: 442}, &quot;blockItemId&quot;: 3, &quot;recipientsCount&quot;: 93083}]}&#10;" />
          </outline>
          <outline text="Python script to generate array in api.campaigns" _note="from datetime import datetime&#10;from sqlalchemy.orm import class_mapper&#10;&#10;from campaigns import exc&#10;from campaigns.mass.models import MassCampaignVariantSchema&#10;from ometria_datamodels.ecomm import MassCampaignVariant&#10;&#10;def generate_variants(campaign, variants_arr):&#10;    variants_data_arr = []&#10;    variant_mapper = class_mapper(MassCampaignVariant)&#10;    variant_fields = []&#10;    for field in variant_mapper.attrs.keys():&#10;        if field in (&quot;id&quot;, &quot;dt_created&quot;, &quot;dt_updated&quot;, &quot;dt_scheduled&quot;):&#10;            continue&#10;        variant_fields.append(field)&#10;    for variant_item in variants_arr:&#10;        try:&#10;            block_id = variant_item['blockId']&#10;            block_item_id = variant_item['blockItemId']&#10;        except KeyError:&#10;            raise exc.CampaignError(&#10;                detail='Variants in mass_campaign_configuration.variants require block_id and block_item_id'&#10;            )&#10;        template = variant_item.get('template', {})&#10;        delivery = variant_item.get('delivery', {})&#10;        dt_scheduled_display = delivery.get('dt_scheduled_display') or campaign.dt_scheduled_display&#10;        if dt_scheduled_display and isinstance(dt_scheduled_display, datetime):&#10;            dt_scheduled_display = dt_scheduled_display.isoformat()&#10;&#10;        url_parameters = {}&#10;        delivery_url_parameters = delivery.get('url_parameters')&#10;        if delivery_url_parameters and isinstance(delivery_url_parameters, dict):&#10;            url_parameters['parameters'] = delivery_url_parameters&#10;&#10;        data = {&#10;            'account_id': campaign.account_id,&#10;            'mass_campaign_id': campaign.id,&#10;            'subject': template.get('subject') or campaign.subject,&#10;            'preheader': template.get('preheader') or campaign.preheader,&#10;            'from_name': delivery.get('from_name') or campaign.from_name,&#10;            'from_email_address': delivery.get('from_email_address') or campaign.from_email_address,&#10;            'reply_to': delivery.get('reply_to') or campaign.reply_to,&#10;            'template_instance_id': template.get('template_instance_id') or campaign.template_instance_id,&#10;            'template_instance_revision_id': template.get('template_instance_revision_id') or campaign.template_instance_revision_id,&#10;            'template_preview': template.get('template_preview'),&#10;            'label': variant_item.get('label'),&#10;            'batch_mode': delivery.get('batch_mode') or campaign.batch_mode,&#10;            'batch_data': delivery.get('batch_data') or campaign.batch_data,&#10;            'subject_configuration': template.get('subject_configuration') or campaign.subject_configuration,&#10;            'schedule_mode': delivery.get('schedule_mode') or campaign.schedule_mode,&#10;            'segmentation_block_id': block_id,&#10;            'segmentation_block_item_id': block_item_id,&#10;            'dt_scheduled_display': dt_scheduled_display,&#10;            'url_parameters': url_parameters,&#10;        }&#10;        # variants_data_arr should only include parameters that map to fields on MassCampaignVariant&#10;        variant_data = {}&#10;        for field in variant_fields:&#10;            if field in data:&#10;                variant_data[field] = data[field]&#10;        variants_data_arr.append(variant_data)&#10;    return variants_data_arr&#10;">
            <outline text="Specific to account_id = 1236, campaign_id = 7" _note="from datetime import datetime&#10;from sqlalchemy.orm import class_mapper&#10;&#10;from campaigns import exc&#10;from campaigns.mass.models import MassCampaignVariantSchema&#10;from ometria_datamodels.ecomm import MassCampaignVariant&#10;&#10;def generate_variants(variants_arr):&#10;    variants_data_arr = []&#10;    variant_mapper = class_mapper(MassCampaignVariant)&#10;    variant_fields = []&#10;    for field in variant_mapper.attrs.keys():&#10;        if field in (&quot;id&quot;, &quot;dt_created&quot;, &quot;dt_updated&quot;, &quot;dt_scheduled&quot;):&#10;            continue&#10;        variant_fields.append(field)&#10;    for variant_item in variants_arr:&#10;        try:&#10;            block_id = variant_item['blockId']&#10;            block_item_id = variant_item['blockItemId']&#10;        except KeyError:&#10;            raise exc.CampaignError(&#10;                detail='Variants in mass_campaign_configuration.variants require block_id and block_item_id'&#10;            )&#10;        template = variant_item.get('template', {})&#10;        delivery = variant_item.get('delivery', {})&#10;        dt_scheduled_display = delivery.get('dt_scheduled_display') or &quot;2020-01-17 10:40:00+00&quot;&#10;        if dt_scheduled_display and isinstance(dt_scheduled_display, datetime):&#10;            dt_scheduled_display = dt_scheduled_display.isoformat()&#10;&#10;        url_parameters = {}&#10;        delivery_url_parameters = delivery.get('url_parameters')&#10;        if delivery_url_parameters and isinstance(delivery_url_parameters, dict):&#10;            url_parameters['parameters'] = delivery_url_parameters&#10;&#10;        data = {&#10;            'account_id': 1236,&#10;            'mass_campaign_id': 7,&#10;            'subject': template.get('subject') or &quot;The HQ Hotlist&quot;,&#10;            'preheader': template.get('preheader') or &quot;The gold we've got our eye on&quot;,&#10;            'from_name': delivery.get('from_name') or &quot;Missoma&quot;,&#10;            'from_email_address': delivery.get('from_email_address') or &quot;news@mail.missoma.com&quot;,&#10;            'reply_to': delivery.get('reply_to') or &quot;&quot;,&#10;            'template_instance_id': template.get('template_instance_id') or 35,&#10;            'template_instance_revision_id': template.get('template_instance_revision_id') or 358,&#10;            'template_preview': template.get('template_preview'),&#10;            'label': variant_item.get('label'),&#10;            'batch_mode': delivery.get('batch_mode') or &quot;over_time&quot;,&#10;            'batch_data': delivery.get('batch_data') or None,&#10;            'subject_configuration': template.get('subject_configuration') or {},&#10;            'schedule_mode': delivery.get('schedule_mode') or &quot;schedule&quot;,&#10;            'segmentation_block_id': block_id,&#10;            'segmentation_block_item_id': block_item_id,&#10;            'dt_scheduled_display': dt_scheduled_display,&#10;            'url_parameters': url_parameters,&#10;        }&#10;        # variants_data_arr should only include parameters that map to fields on MassCampaignVariant&#10;        variant_data = {}&#10;        for field in variant_fields:&#10;            if field in data:&#10;                variant_data[field] = data[field]&#10;        variants_data_arr.append(variant_data)&#10;    return variants_data_arr&#10;" />
          </outline>
          <outline text="Output array" _note="[{'label': 'UK &amp;gt; GOLD', 'account_id': 1236, 'mass_campaign_id': 7, 'batch_mode': 'over_time', 'batch_data': None, 'schedule_mode': 'schedule', 'template_instance_id': 36, 'template_instance_revision_id': 434, 'subject_configuration': {}, 'subject': 'The HQ Hotlist', 'preheader': &quot;The gold we've got our eye on&quot;, 'from_name': 'Missoma', 'from_email_address': 'news@mail.missoma.com', 'reply_to': '', 'dt_scheduled_display': '2020-01-17 10:40:00+00', 'segmentation_block_id': 9, 'segmentation_block_item_id': 1, 'url_parameters': {}}, {'label': 'UK &amp;gt; SILVER', 'account_id': 1236, 'mass_campaign_id': 7, 'batch_mode': 'over_time', 'batch_data': None, 'schedule_mode': 'schedule', 'template_instance_id': 37, 'template_instance_revision_id': 435, 'subject_configuration': {}, 'subject': 'The HQ Hotlist', 'preheader': &quot;The silver we've got our eye on &quot;, 'from_name': 'Missoma', 'from_email_address': 'news@mail.missoma.com', 'reply_to': '', 'dt_scheduled_display': '2020-01-17 10:40:00+00', 'segmentation_block_id': 9, 'segmentation_block_item_id': 2, 'url_parameters': {}}, {'label': 'UK &amp;gt; REST', 'account_id': 1236, 'mass_campaign_id': 7, 'batch_mode': 'over_time', 'batch_data': None, 'schedule_mode': 'schedule', 'template_instance_id': 38, 'template_instance_revision_id': 436, 'subject_configuration': {}, 'subject': 'The HQ Hotlist', 'preheader': &quot;The gold we've got our eye on&quot;, 'from_name': 'Missoma', 'from_email_address': 'news@mail.missoma.com', 'reply_to': '', 'dt_scheduled_display': '2020-01-17 10:40:00+00', 'segmentation_block_id': 9, 'segmentation_block_item_id': 3, 'url_parameters': {}}, {'label': 'USA &amp;gt; GOLD', 'account_id': 1236, 'mass_campaign_id': 7, 'batch_mode': 'over_time', 'batch_data': None, 'schedule_mode': 'schedule', 'template_instance_id': 39, 'template_instance_revision_id': 437, 'subject_configuration': {}, 'subject': 'The HQ Hotlist', 'preheader': &quot;The gold we've got our eye on&quot;, 'from_name': 'Missoma', 'from_email_address': 'news@mail.missoma.com', 'reply_to': '', 'dt_scheduled_display': '2020-01-17 10:40:00+00', 'segmentation_block_id': 10, 'segmentation_block_item_id': 1, 'url_parameters': {}}, {'label': 'USA &amp;gt; SILVER', 'account_id': 1236, 'mass_campaign_id': 7, 'batch_mode': 'over_time', 'batch_data': None, 'schedule_mode': 'schedule', 'template_instance_id': 40, 'template_instance_revision_id': 438, 'subject_configuration': {}, 'subject': 'The HQ Hotlist', 'preheader': &quot;The silver we've got our eye on &quot;, 'from_name': 'Missoma', 'from_email_address': 'news@mail.missoma.com', 'reply_to': '', 'dt_scheduled_display': '2020-01-17 10:40:00+00', 'segmentation_block_id': 10, 'segmentation_block_item_id': 2, 'url_parameters': {}}, {'label': 'USA &amp;gt; REST', 'account_id': 1236, 'mass_campaign_id': 7, 'batch_mode': 'over_time', 'batch_data': None, 'schedule_mode': 'schedule', 'template_instance_id': 41, 'template_instance_revision_id': 439, 'subject_configuration': {}, 'subject': 'The HQ Hotlist', 'preheader': &quot;The gold we've got our eye on&quot;, 'from_name': 'Missoma', 'from_email_address': 'news@mail.missoma.com', 'reply_to': '', 'dt_scheduled_display': '2020-01-17 10:40:00+00', 'segmentation_block_id': 10, 'segmentation_block_item_id': 3, 'url_parameters': {}}, {'label': 'REST &amp;gt; GOLD', 'account_id': 1236, 'mass_campaign_id': 7, 'batch_mode': 'over_time', 'batch_data': None, 'schedule_mode': 'schedule', 'template_instance_id': 42, 'template_instance_revision_id': 440, 'subject_configuration': {}, 'subject': 'The HQ Hotlist', 'preheader': &quot;The gold we've got our eye on&quot;, 'from_name': 'Missoma', 'from_email_address': 'news@mail.missoma.com', 'reply_to': '', 'dt_scheduled_display': '2020-01-17 10:40:00+00', 'segmentation_block_id': 11, 'segmentation_block_item_id': 1, 'url_parameters': {}}, {'label': 'REST &amp;gt; SILVER', 'account_id': 1236, 'mass_campaign_id': 7, 'batch_mode': 'over_time', 'batch_data': None, 'schedule_mode': 'schedule', 'template_instance_id': 43, 'template_instance_revision_id': 441, 'subject_configuration': {}, 'subject': 'The HQ Hotlist', 'preheader': &quot;The silver we've got our eye on &quot;, 'from_name': 'Missoma', 'from_email_address': 'news@mail.missoma.com', 'reply_to': '', 'dt_scheduled_display': '2020-01-17 10:40:00+00', 'segmentation_block_id': 11, 'segmentation_block_item_id': 2, 'url_parameters': {}}, {'label': 'REST &amp;gt; REST', 'account_id': 1236, 'mass_campaign_id': 7, 'batch_mode': 'over_time', 'batch_data': None, 'schedule_mode': 'schedule', 'template_instance_id': 44, 'template_instance_revision_id': 442, 'subject_configuration': {}, 'subject': 'The HQ Hotlist', 'preheader': &quot;The gold we've got our eye on&quot;, 'from_name': 'Missoma', 'from_email_address': 'news@mail.missoma.com', 'reply_to': '', 'dt_scheduled_display': '2020-01-17 10:40:00+00', 'segmentation_block_id': 11, 'segmentation_block_item_id': 3, 'url_parameters': {}}]">
            <outline text="JSON (gearman compatible) (WARNING `'` required in some title strings)" _note="{&quot;account_id&quot;: 1236, &quot;campaign_id&quot;: 7, &quot;variants&quot;: [{&quot;label&quot;: &quot;UK &amp;gt; GOLD&quot;, &quot;account_id&quot;: 1236, &quot;mass_campaign_id&quot;: 7, &quot;batch_mode&quot;: &quot;over_time&quot;, &quot;batch_data&quot;: null, &quot;schedule_mode&quot;: &quot;schedule&quot;, &quot;template_instance_id&quot;: 36, &quot;template_instance_revision_id&quot;: 434, &quot;subject_configuration&quot;: {}, &quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The gold we've got our eye on&quot;, &quot;from_name&quot;: &quot;Missoma&quot;, &quot;from_email_address&quot;: &quot;news@mail.missoma.com&quot;, &quot;reply_to&quot;: &quot;&quot;, &quot;dt_scheduled_display&quot;: &quot;2020-01-17 10:40:00+00&quot;, &quot;segmentation_block_id&quot;: 9, &quot;segmentation_block_item_id&quot;: 1, &quot;url_parameters&quot;: {}}, {&quot;label&quot;: &quot;UK &amp;gt; SILVER&quot;, &quot;account_id&quot;: 1236, &quot;mass_campaign_id&quot;: 7, &quot;batch_mode&quot;: &quot;over_time&quot;, &quot;batch_data&quot;: null, &quot;schedule_mode&quot;: &quot;schedule&quot;, &quot;template_instance_id&quot;: 37, &quot;template_instance_revision_id&quot;: 435, &quot;subject_configuration&quot;: {}, &quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The silver we've got our eye on &quot;, &quot;from_name&quot;: &quot;Missoma&quot;, &quot;from_email_address&quot;: &quot;news@mail.missoma.com&quot;, &quot;reply_to&quot;: &quot;&quot;, &quot;dt_scheduled_display&quot;: &quot;2020-01-17 10:40:00+00&quot;, &quot;segmentation_block_id&quot;: 9, &quot;segmentation_block_item_id&quot;: 2, &quot;url_parameters&quot;: {}}, {&quot;label&quot;: &quot;UK &amp;gt; REST&quot;, &quot;account_id&quot;: 1236, &quot;mass_campaign_id&quot;: 7, &quot;batch_mode&quot;: &quot;over_time&quot;, &quot;batch_data&quot;: null, &quot;schedule_mode&quot;: &quot;schedule&quot;, &quot;template_instance_id&quot;: 38, &quot;template_instance_revision_id&quot;: 436, &quot;subject_configuration&quot;: {}, &quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The gold we've got our eye on&quot;, &quot;from_name&quot;: &quot;Missoma&quot;, &quot;from_email_address&quot;: &quot;news@mail.missoma.com&quot;, &quot;reply_to&quot;: &quot;&quot;, &quot;dt_scheduled_display&quot;: &quot;2020-01-17 10:40:00+00&quot;, &quot;segmentation_block_id&quot;: 9, &quot;segmentation_block_item_id&quot;: 3, &quot;url_parameters&quot;: {}}, {&quot;label&quot;: &quot;USA &amp;gt; GOLD&quot;, &quot;account_id&quot;: 1236, &quot;mass_campaign_id&quot;: 7, &quot;batch_mode&quot;: &quot;over_time&quot;, &quot;batch_data&quot;: null, &quot;schedule_mode&quot;: &quot;schedule&quot;, &quot;template_instance_id&quot;: 39, &quot;template_instance_revision_id&quot;: 437, &quot;subject_configuration&quot;: {}, &quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The gold we've got our eye on&quot;, &quot;from_name&quot;: &quot;Missoma&quot;, &quot;from_email_address&quot;: &quot;news@mail.missoma.com&quot;, &quot;reply_to&quot;: &quot;&quot;, &quot;dt_scheduled_display&quot;: &quot;2020-01-17 10:40:00+00&quot;, &quot;segmentation_block_id&quot;: 10, &quot;segmentation_block_item_id&quot;: 1, &quot;url_parameters&quot;: {}}, {&quot;label&quot;: &quot;USA &amp;gt; SILVER&quot;, &quot;account_id&quot;: 1236, &quot;mass_campaign_id&quot;: 7, &quot;batch_mode&quot;: &quot;over_time&quot;, &quot;batch_data&quot;: null, &quot;schedule_mode&quot;: &quot;schedule&quot;, &quot;template_instance_id&quot;: 40, &quot;template_instance_revision_id&quot;: 438, &quot;subject_configuration&quot;: {}, &quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The silver we've got our eye on &quot;, &quot;from_name&quot;: &quot;Missoma&quot;, &quot;from_email_address&quot;: &quot;news@mail.missoma.com&quot;, &quot;reply_to&quot;: &quot;&quot;, &quot;dt_scheduled_display&quot;: &quot;2020-01-17 10:40:00+00&quot;, &quot;segmentation_block_id&quot;: 10, &quot;segmentation_block_item_id&quot;: 2, &quot;url_parameters&quot;: {}}, {&quot;label&quot;: &quot;USA &amp;gt; REST&quot;, &quot;account_id&quot;: 1236, &quot;mass_campaign_id&quot;: 7, &quot;batch_mode&quot;: &quot;over_time&quot;, &quot;batch_data&quot;: null, &quot;schedule_mode&quot;: &quot;schedule&quot;, &quot;template_instance_id&quot;: 41, &quot;template_instance_revision_id&quot;: 439, &quot;subject_configuration&quot;: {}, &quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The gold we've got our eye on&quot;, &quot;from_name&quot;: &quot;Missoma&quot;, &quot;from_email_address&quot;: &quot;news@mail.missoma.com&quot;, &quot;reply_to&quot;: &quot;&quot;, &quot;dt_scheduled_display&quot;: &quot;2020-01-17 10:40:00+00&quot;, &quot;segmentation_block_id&quot;: 10, &quot;segmentation_block_item_id&quot;: 3, &quot;url_parameters&quot;: {}}, {&quot;label&quot;: &quot;REST &amp;gt; GOLD&quot;, &quot;account_id&quot;: 1236, &quot;mass_campaign_id&quot;: 7, &quot;batch_mode&quot;: &quot;over_time&quot;, &quot;batch_data&quot;: null, &quot;schedule_mode&quot;: &quot;schedule&quot;, &quot;template_instance_id&quot;: 42, &quot;template_instance_revision_id&quot;: 440, &quot;subject_configuration&quot;: {}, &quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The gold we've got our eye on&quot;, &quot;from_name&quot;: &quot;Missoma&quot;, &quot;from_email_address&quot;: &quot;news@mail.missoma.com&quot;, &quot;reply_to&quot;: &quot;&quot;, &quot;dt_scheduled_display&quot;: &quot;2020-01-17 10:40:00+00&quot;, &quot;segmentation_block_id&quot;: 11, &quot;segmentation_block_item_id&quot;: 1, &quot;url_parameters&quot;: {}}, {&quot;label&quot;: &quot;REST &amp;gt; SILVER&quot;, &quot;account_id&quot;: 1236, &quot;mass_campaign_id&quot;: 7, &quot;batch_mode&quot;: &quot;over_time&quot;, &quot;batch_data&quot;: null, &quot;schedule_mode&quot;: &quot;schedule&quot;, &quot;template_instance_id&quot;: 43, &quot;template_instance_revision_id&quot;: 441, &quot;subject_configuration&quot;: {}, &quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The silver we've got our eye on &quot;, &quot;from_name&quot;: &quot;Missoma&quot;, &quot;from_email_address&quot;: &quot;news@mail.missoma.com&quot;, &quot;reply_to&quot;: &quot;&quot;, &quot;dt_scheduled_display&quot;: &quot;2020-01-17 10:40:00+00&quot;, &quot;segmentation_block_id&quot;: 11, &quot;segmentation_block_item_id&quot;: 2, &quot;url_parameters&quot;: {}}, {&quot;label&quot;: &quot;REST &amp;gt; REST&quot;, &quot;account_id&quot;: 1236, &quot;mass_campaign_id&quot;: 7, &quot;batch_mode&quot;: &quot;over_time&quot;, &quot;batch_data&quot;: null, &quot;schedule_mode&quot;: &quot;schedule&quot;, &quot;template_instance_id&quot;: 44, &quot;template_instance_revision_id&quot;: 442, &quot;subject_configuration&quot;: {}, &quot;subject&quot;: &quot;The HQ Hotlist&quot;, &quot;preheader&quot;: &quot;The gold we've got our eye on&quot;, &quot;from_name&quot;: &quot;Missoma&quot;, &quot;from_email_address&quot;: &quot;news@mail.missoma.com&quot;, &quot;reply_to&quot;: &quot;&quot;, &quot;dt_scheduled_display&quot;: &quot;2020-01-17 10:40:00+00&quot;, &quot;segmentation_block_id&quot;: 11, &quot;segmentation_block_item_id&quot;: 3, &quot;url_parameters&quot;: {}}]}" />
          </outline>
          <outline text="Gearman response" _note="{&quot;@ok&quot;: true, &quot;@data&quot;: {&quot;status&quot;: 200, &quot;type&quot;: &quot;ometria/email/gearman/ok&quot;, &quot;title&quot;: &quot;OK&quot;, &quot;detail&quot;: &quot;&quot;, &quot;valid&quot;: false, &quot;public&quot;: {}, &quot;private&quot;: {&quot;batch_data&quot;: [&quot;Missing batch_data for batching over time mode, got: None&quot;, &quot;Invalid batch_data provided for winner test mode: expected a dictionary&quot;, &quot;Missing batch_data for batching over time mode, got: None&quot;, &quot;Invalid batch_data provided for winner test mode: expected a dictionary&quot;, &quot;Missing batch_data for batching over time mode, got: None&quot;, &quot;Invalid batch_data provided for winner test mode: expected a dictionary&quot;, &quot;Missing batch_data for batching over time mode, got: None&quot;, &quot;Invalid batch_data provided for winner test mode: expected a dictionary&quot;, &quot;Missing batch_data for batching over time mode, got: None&quot;, &quot;Invalid batch_data provided for winner test mode: expected a dictionary&quot;, &quot;Missing batch_data for batching over time mode, got: None&quot;, &quot;Invalid batch_data provided for winner test mode: expected a dictionary&quot;, &quot;Missing batch_data for batching over time mode* Closing connection 0&#10;, got: None&quot;, &quot;Invalid batch_data provided for winner test mode: expected a dictionary&quot;, &quot;Missing batch_data for batching over time mode, got: None&quot;, &quot;Invalid batch_data provided for winner test mode: expected a dictionary&quot;, &quot;Missing batch_data for batching over time mode, got: None&quot;, &quot;Invalid batch_data provided for winner test mode: expected a dictionary&quot;]}}}" />
        </outline>
        <outline text="api.campaigns PR https://github.com/Ometria/ometria.api.campaigns/pull/78" />
      </outline>
      <outline _complete="true" text="BUI error handling" _note="branch improve-error-reporting">
        <outline text="Branch: improve-error-reporting" />
        <outline text="Build: v2.1error1" />
        <outline _complete="true" text="Suggested format" _note="https://ometria.atlassian.net/secure/RapidBoard.jspa?rapidView=22&amp;amp;modal=detail&amp;amp;selectedIssue=PRODENG-431" />
        <outline _complete="true" text="template rendering mass_email gearman">
          <outline text="serialized data for gearman call in lib.services" _note="'{&quot;account_id&quot;: 352, &quot;connection_id&quot;: 6, &quot;template_html&quot;: &quot;&amp;lt;html&amp;gt;Hello I am html&amp;lt;/html&amp;gt;&quot;, &quot;subject&quot;: &quot;[TEST from dev@ometria.com] Sam test winner non-standard batch validation&quot;, &quot;preheader&quot;: null, &quot;campaign_id&quot;: &quot;352:ME:2156&quot;, &quot;campaign_hash&quot;: &quot;dcd712e0-b02&quot;, &quot;campaign_title&quot;: &quot;sam post deploy sanity test&quot;, &quot;is_preview&quot;: true, &quot;to_address&quot;: &quot;sam@ometria.com&quot;, &quot;from_address&quot;: {&quot;name&quot;: &quot;Broadcast user&quot;, &quot;email&quot;: &quot;broadcast22@ometria.email&quot;}, &quot;reply_to&quot;: &quot;broadcast22@ometria.email&quot;, &quot;data&quot;: {&quot;unsub&quot;: &quot;https://console.ometria.com/misc/unsubscribe.html&quot;, &quot;email&quot;: {&quot;campaign_identifier&quot;: &quot;123:ME:456_201912031600&quot;, &quot;campaign_title&quot;: &quot;campaign_title&quot;, &quot;to_email_address&quot;: &quot;example@example.com&quot;, &quot;subject&quot;: &quot;Check out this amazing email&quot;, &quot;archive_url&quot;: &quot;https://www.ometria.com/&quot;, &quot;preheader&quot;: &quot;Preheader goes here&quot;, &quot;account_hash&quot;: &quot;developer_testing&quot;, &quot;variant_identifier&quot;: &quot;variant_A&quot;}, &quot;profile&quot;: {&quot;firstname&quot;: &quot;Bob&quot;, &quot;middlename&quot;: null, &quot;lastname&quot;: &quot;Jones&quot;, &quot;name&quot;: &quot;Bob Jones&quot;, &quot;email&quot;: &quot;example@example.com&quot;, &quot;gender&quot;: null, &quot;prefix&quot;: null, &quot;suffix&quot;: null, &quot;country&quot;: &quot;GB&quot;, &quot;date_of_birth&quot;: &quot;1980-01-01&quot;, &quot;total_revenue&quot;: 0, &quot;marketing_optin&quot;: true, &quot;lifecycle_status&quot;: &quot;ACTIVE&quot;, &quot;number_of_orders&quot;: 0, &quot;number_of_attempted_orders&quot;: 0, &quot;number_of_visits&quot;: 0, &quot;average_order_value&quot;: 0, &quot;number_of_items_purchased&quot;: 0, &quot;properties&quot;: {&quot;field_name_1&quot;: &quot;value_1&quot;, &quot;field_name_2&quot;: &quot;value_2&quot;, &quot;field_name_3&quot;: &quot;value_3&quot;}, &quot;segment_ids&quot;: [], &quot;last_store&quot;: null, &quot;home_store&quot;: &quot;1&quot;}, &quot;products&quot;: [{&quot;@type&quot;: &quot;product&quot;, &quot;id&quot;: &quot;26&quot;, &quot;sku&quot;: &quot;Bonny - Dark Navy&quot;, &quot;title&quot;: &quot;Bonny - Dark Navy&quot;, &quot;price_raw&quot;: 42, &quot;price&quot;: &quot;\\u20ac42&quot;, &quot;currency&quot;: &quot;EUR&quot;, &quot;url&quot;: &quot;https://api.ometria.com/trk/click?acc=developer_testing&amp;amp;product=26&quot;, &quot;image_url&quot;: &quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fs3-eu-west-1.amazonaws.com%2Fassets.ometria.email%2Fdemostore%2Fbef068200d4654961824c8fbb2ba525c.jpg&quot;, &quot;stores&quot;: [], &quot;properties&quot;: {}, &quot;labels&quot;: {&quot;color&quot;: &quot;black&quot;, &quot;category&quot;: &quot;Default Category&quot;, &quot;magento_product_set&quot;: &quot;Default&quot;, &quot;magento_product_type&quot;: &quot;simple&quot;}}, {&quot;@type&quot;: &quot;product&quot;, &quot;id&quot;: &quot;5&quot;, &quot;sku&quot;: &quot;Tylie Malibu Women\'s Globe Trotter Antigua Shoulder Bag&quot;, &quot;title&quot;: &quot;Tylie Malibu Women\'s Globe Trotter Antigua Shoulder Bag&quot;, &quot;price_raw&quot;: 42, &quot;price&quot;: &quot;\\u20ac42&quot;, &quot;currency&quot;: &quot;EUR&quot;, &quot;url&quot;: &quot;https://api.ometria.com/trk/click?acc=developer_testing&amp;amp;product=5&quot;, &quot;image_url&quot;: &quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fs3-eu-west-1.amazonaws.com%2Fassets.ometria.email%2Fdemostore%2F31376b50aac30d7253d48a1a7eadb4a2.jpg&quot;, &quot;stores&quot;: [], &quot;properties&quot;: {}, &quot;labels&quot;: {&quot;color&quot;: &quot;grey&quot;, &quot;magento_product_set&quot;: &quot;Default&quot;, &quot;category&quot;: &quot;Default Category&quot;, &quot;magento_product_type&quot;: &quot;simple&quot;}}, {&quot;@type&quot;: &quot;product&quot;, &quot;id&quot;: &quot;27&quot;, &quot;sku&quot;: &quot;Boy\'s 4 In 1 Cozy Sherpa Hooded Microfiber Parka&quot;, &quot;title&quot;: &quot;Boy\'s 4 In 1 Cozy Sherpa Hooded Microfiber Parka&quot;, &quot;price_raw&quot;: 42, &quot;price&quot;: &quot;\\u20ac42&quot;, &quot;currency&quot;: &quot;EUR&quot;, &quot;url&quot;: &quot;https://api.ometria.com/trk/click?acc=developer_testing&amp;amp;product=27&quot;, &quot;image_url&quot;: &quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fs3-eu-west-1.amazonaws.com%2Fassets.ometria.email%2Fdemostore%2Ff749ddfc2e191c0b17e36ed2760a927a.jpg&quot;, &quot;stores&quot;: [], &quot;properties&quot;: {}, &quot;labels&quot;: {&quot;color&quot;: &quot;grey&quot;, &quot;category&quot;: &quot;Default Category&quot;, &quot;magento_product_set&quot;: &quot;Default&quot;, &quot;magento_product_type&quot;: &quot;simple&quot;}}, {&quot;@type&quot;: &quot;product&quot;, &quot;id&quot;: &quot;36&quot;, &quot;sku&quot;: &quot;Light Gloss Gilet&quot;, &quot;title&quot;: &quot;Light Gloss Gilet&quot;, &quot;price_raw&quot;: 30, &quot;price&quot;: &quot;\\u20ac30&quot;, &quot;currency&quot;: &quot;EUR&quot;, &quot;url&quot;: &quot;https://api.ometria.com/trk/click?acc=developer_testing&amp;amp;product=36&quot;, &quot;image_url&quot;: &quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fs3-eu-west-1.amazonaws.com%2Fassets.ometria.email%2Fdemostore%2Feb6fcc48f05df5831c92df2aa7d0039b.jpg&quot;, &quot;stores&quot;: [], &quot;properties&quot;: {}, &quot;labels&quot;: {&quot;color&quot;: &quot;grey&quot;, &quot;category&quot;: &quot;Default Category&quot;, &quot;magento_product_set&quot;: &quot;Default&quot;, &quot;magento_product_type&quot;: &quot;simple&quot;}}, {&quot;@type&quot;: &quot;product&quot;, &quot;id&quot;: &quot;39&quot;, &quot;sku&quot;: &quot;Hudson Box Pleat Coat&quot;, &quot;title&quot;: &quot;Hudson Box Pleat Coat&quot;, &quot;price_raw&quot;: 46, &quot;price&quot;: &quot;\\u20ac46&quot;, &quot;currency&quot;: &quot;EUR&quot;, &quot;url&quot;: &quot;https://api.ometria.com/trk/click?acc=developer_testing&amp;amp;product=39&quot;, &quot;image_url&quot;: &quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fs3-eu-west-1.amazonaws.com%2Fassets.ometria.email%2Fdemostore%2F0ad41d9ea51dfb78c878ad1aa9d9ef9b.jpg&quot;, &quot;stores&quot;: [], &quot;properties&quot;: {&quot;ReviewRating&quot;: &quot;8&quot;, &quot;NumberOfReviews&quot;: &quot;27&quot;}, &quot;labels&quot;: {&quot;color&quot;: &quot;black&quot;, &quot;category&quot;: &quot;Default Category&quot;, &quot;magento_product_set&quot;: &quot;Default&quot;, &quot;magento_product_type&quot;: &quot;simple&quot;}}, {&quot;@type&quot;: &quot;product&quot;, &quot;id&quot;: &quot;49&quot;, &quot;sku&quot;: &quot;Wool and Silk Spaghetti Strap Top&quot;, &quot;title&quot;: &quot;Wool and Silk Spaghetti Strap Top&quot;, &quot;price_raw&quot;: 48, &quot;price&quot;: &quot;\\u20ac48&quot;, &quot;currency&quot;: &quot;EUR&quot;, &quot;url&quot;: &quot;https://api.ometria.com/trk/click?acc=developer_testing&amp;amp;product=49&quot;, &quot;image_url&quot;: &quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fs3-eu-west-1.amazonaws.com%2Fassets.ometria.email%2Fdemostore%2F103d19ac50c82e07c7373d4f60744960.jpg&quot;, &quot;stores&quot;: [], &quot;properties&quot;: {}, &quot;labels&quot;: {&quot;color&quot;: &quot;black&quot;, &quot;magento_product_set&quot;: &quot;Default&quot;, &quot;category&quot;: &quot;Default Category&quot;, &quot;magento_product_type&quot;: &quot;simple&quot;}}, {&quot;@type&quot;: &quot;product&quot;, &quot;id&quot;: &quot;46&quot;, &quot;sku&quot;: &quot;Princesse Tam Tam Pyjama Top&quot;, &quot;title&quot;: &quot;Princesse Tam Tam Pyjama Top&quot;, &quot;price_raw&quot;: 42, &quot;price&quot;: &quot;\\u20ac42&quot;, &quot;currency&quot;: &quot;EUR&quot;, &quot;url&quot;: &quot;https://api.ometria.com/trk/click?acc=developer_testing&amp;amp;product=46&quot;, &quot;image_url&quot;: &quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fs3-eu-west-1.amazonaws.com%2Fassets.ometria.email%2Fdemostore%2Fd3ac7cbedb8e9514424eb8cb0e2ade6a.jpg&quot;, &quot;stores&quot;: [], &quot;properties&quot;: {&quot;ReviewRating&quot;: &quot;9&quot;, &quot;NumberOfReviews&quot;: &quot;50&quot;}, &quot;labels&quot;: {&quot;color&quot;: &quot;black&quot;, &quot;magento_product_set&quot;: &quot;Default&quot;, &quot;category&quot;: &quot;Default Category&quot;, &quot;magento_product_type&quot;: &quot;simple&quot;}}, {&quot;@type&quot;: &quot;product&quot;, &quot;id&quot;: &quot;17&quot;, &quot;sku&quot;: &quot;Ruffled Silk Blouse&quot;, &quot;title&quot;: &quot;Ruffled Silk Blouse&quot;, &quot;price_raw&quot;: 49, &quot;price&quot;: &quot;\\u20ac49&quot;, &quot;currency&quot;: &quot;EUR&quot;, &quot;url&quot;: &quot;https://api.ometria.com/trk/click?acc=developer_testing&amp;amp;product=17&quot;, &quot;image_url&quot;: &quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fs3-eu-west-1.amazonaws.com%2Fassets.ometria.email%2Fdemostore%2F2dc03fc31638fd22429393fd001d0637.jpg&quot;, &quot;stores&quot;: [], &quot;properties&quot;: {}, &quot;labels&quot;: {&quot;color&quot;: &quot;red&quot;, &quot;magento_product_set&quot;: &quot;Default&quot;, &quot;category&quot;: &quot;Default Category&quot;, &quot;magento_product_type&quot;: &quot;simple&quot;}}, {&quot;@type&quot;: &quot;product&quot;, &quot;id&quot;: &quot;4&quot;, &quot;sku&quot;: &quot;Melie Bianco Adele&quot;, &quot;title&quot;: &quot;Melie Bianco Adele&quot;, &quot;price_raw&quot;: 50, &quot;price&quot;: &quot;\\u20ac50&quot;, &quot;currency&quot;: &quot;EUR&quot;, &quot;url&quot;: &quot;https://api.ometria.com/trk/click?acc=developer_testing&amp;amp;product=4&quot;, &quot;image_url&quot;: &quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fs3-eu-west-1.amazonaws.com%2Fassets.ometria.email%2Fdemostore%2F0f8eef9e035961701fa4c6acaf1fcaf8.jpg&quot;, &quot;stores&quot;: [], &quot;properties&quot;: {}, &quot;labels&quot;: {&quot;color&quot;: &quot;yellow&quot;, &quot;magento_product_set&quot;: &quot;Default&quot;, &quot;category&quot;: &quot;Default Category&quot;, &quot;magento_product_type&quot;: &quot;simple&quot;}}, {&quot;@type&quot;: &quot;product&quot;, &quot;id&quot;: &quot;25&quot;, &quot;sku&quot;: &quot;Straight Leg Belted Pants&quot;, &quot;title&quot;: &quot;Straight Leg Belted Pants&quot;, &quot;price_raw&quot;: 45, &quot;price&quot;: &quot;\\u20ac45&quot;, &quot;currency&quot;: &quot;EUR&quot;, &quot;url&quot;: &quot;https://api.ometria.com/trk/click?acc=developer_testing&amp;amp;product=25&quot;, &quot;image_url&quot;: &quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fs3-eu-west-1.amazonaws.com%2Fassets.ometria.email%2Fdemostore%2F91e0646b6a1b0bc824ac5471fe2051b2.jpg&quot;, &quot;stores&quot;: [], &quot;properties&quot;: {}, &quot;labels&quot;: {&quot;category&quot;: &quot;Default Category&quot;, &quot;magento_product_set&quot;: &quot;Default&quot;, &quot;color&quot;: &quot;blue&quot;, &quot;magento_product_type&quot;: &quot;simple&quot;}}]}, &quot;url_parameters&quot;: {&quot;parameters&quot;: {&quot;type&quot;: &quot;broadcast&quot;, &quot;matt_test&quot;: &quot;hello2&quot;, &quot;bx_profile&quot;: &quot;{{profile.hash}}&quot;, &quot;utm_medium&quot;: &quot;email&quot;, &quot;bx_profile2&quot;: &quot;asdasd&quot;, &quot;template_title&quot;: &quot;{{ email.template_title|urlencode }}&quot;}, &quot;domains&quot;: [&quot;flatspot.com&quot;, &quot;lostmy.name&quot;, &quot;uk.zaggora.com&quot;, &quot;ometria.com&quot;]}, &quot;metadata&quot;: {&quot;ignore&quot;: 1}}'" />
        </outline>
        <outline _complete="true" text="Example format (winner plus local time)" _note="{&#10;    &quot;batch_mode_errors&quot;: [&#10;        {&#10;            &quot;block_id: 2, block_item_id: 1&quot;: &quot;Invalid batch_mode: local_time&quot;&#10;        },&#10;        {&#10;            &quot;block_id: 2, block_item_id: 2&quot;: &quot;Invalid batch_mode: local_time&quot;&#10;        }&#10;    ],&#10;    &quot;detail&quot;: &quot;Validation Error&quot;,&#10;    &quot;status&quot;: 400,&#10;    &quot;title&quot;: &quot;Bad Request&quot;,&#10;    &quot;type&quot;: &quot;about:blank&quot;&#10;}" />
        <outline _complete="true" text="Rui's suggested format" _note="{&#10;  &quot;detail&quot;: &quot;A Human readable string that describes the problem. Can be shown directly to the user.&quot;,&#10;  &quot;status&quot;: 400,&#10;  &quot;title&quot;: &quot;Error type&quot;,&#10;  &quot;variant_errors&quot;: [&#10;    {&#10;      &quot;detail&quot;: &quot;Error in the first variant&quot;,&#10;      &quot;field_errors&quot;: {}&#10;    },&#10;    false,&#10;    {&#10;      &quot;detail&quot;: &quot;Error in third variant&quot;,&#10;      &quot;field_errors&quot;: {}&#10;    }&#10;  ],&#10;  &quot;field_errors&quot;: {&#10;    &quot;field_key&quot;: [&#10;      &quot;first problem with this field&quot;,&#10;      &quot;also this other related thing&quot;&#10;    ],&#10;    &quot;field_key2&quot;: [&#10;      &quot;first problem with this field&quot;,&#10;      &quot;also this other related thing&quot;&#10;    ]&#10;  }&#10;}" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;17&quot;&gt;Mon, Feb 17, 2020&lt;/time&gt; Marcus' lattice review " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;10&quot;&gt;Mon, Feb 10, 2020&lt;/time&gt; Merge/create release for https://github.com/Ometria/ometria.datamodels/pull/40 " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;20&quot;&gt;Thu, Feb 20, 2020&lt;/time&gt; Gareth feedback for Ivan ">
        <outline text="Needs improvement">
          <outline text="I think that sometimes (certainly not all the time) his communication has been quite vague. He might make a concrete decision, but then not fully clarify his reasons for making it, which has left me guessing in the past." />
          <outline text="In general, I think he has the tendency to err on the side of caution in communications, e.g. he might actively withhold information until it's completely ready to share. I appreciate that in a lot of cases this is fully appropriate, but at points I have felt it would have been useful to have been kept up to date. An example for context: I think that the new tribe structure/process had been mostly finalised for some time before it was shared with the wider team." />
        </outline>
        <outline text="Excellent">
          <outline text="I think he's very reactive and reliable when actioning requests or queries that I've had, which leaves me feeling reassured. I think this is more notable given the growing team and his position within it and is genuinely appreciated." />
          <outline text="I feel that he (and other management) have facilitated changes that are very exciting and could be very beneficial, allowing the team to remain (or become more) productive as it scales. I'm super excited in general for the new tribe structure." />
        </outline>
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;10&quot;&gt;Mon, Feb 10, 2020&lt;/time&gt; 6 month self review ">
        <outline text="Have the past 6 months been good / bad / satisfactory or otherwise for you, in terms of (A) performance and (B) happiness; why?" _note="In terms of happiness, it's been either side of the scale. I've mostly been happy in my role and with my work. However I think some disruptions have seen some key members of the engineering team moving on, which is sad, and impactful.&#10;I was happy to receive a promotion, but there was a lack of clarity about what this meant afterwards. The process of promotion seemed quite disjointed, and I feel took a little while. Multiple newer members of the team remarked (after my promotion was announced) that they didn't know I wasn't in a &quot;senior&quot; position already, which is something I reflected on somewhat. I think this was due to lack of defined &quot;grades&quot; and processes to progress - something I fully acknowledge is being addressed now.&#10;I felt that some opportunities that would allow me to grow/progress were withheld, namely exposure to wider architectural meetings/discussions, and I feel l didn't have enough context in order to fully undertstand why.&#10;More recently, I'm enjoying the new tribe structure - I'm really appreciative of my team and am looking forward to working with them in the coming months. Also, very appreciative to be able to take part in the remote pilot which has been awesome so far." />
        <outline text="What have been your biggest achievements?" _note="Delivery and wrapping up the monster that was the Broadcast UI project. The rollout for this took many months (from initial to full release).&#10;Increased knowledge across platform. Consistently responding to and debugging platform wide issues. Worked closely with and learnt from Raza during his time here (which was hugely valuable).&#10;Heavy involvement with hiring process, offering feedback to improve/streamline process for us and candidates, and evaluating candidates at various stages.&#10;Worked closely with Arun during his onboarding period - initially allocating and reviewing work and being a general point of reference for the first couple of months - hopefully making his experience more friction-less!" />
        <outline text="What have been your biggest challenges in the role?" _note="Having to coordinate many moving parts in the roundup of the Broadcast UI project.&#10;At points, juggling incidents/platform issues, my own project work, hiring, and attempting to avoid blocking dependent parties (e.g. Arun awaiting feedback on code review during his initial 1-2 months)." />
        <outline text="Summarise 3 Projects/Initiatives you have worked on over the past 6 months including: the challenges you faced, skills you used/developed, what you learnt and who you worked with on this. A ‘project’ could also be: a deal/renewal/client/hiring process etc..." _note="Broadcast UI - Worked as sole backend developer for the majority of the project (spanning over a year). Touched numerous systems, some of which were very complex and very high risk.&#10;Rui was the main frontend developer. Matt L was involved for a while. Arun was involved towards the end of the project." />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;27&quot;&gt;Mon, Jan 27, 2020&lt;/time&gt; Mass email batch TTS prometheus deploy ">
        <outline _complete="true" text="Logs from failed ECS startup" _note="https://eu-west-1.console.aws.amazon.com/ecs/home?region=eu-west-1#/clusters/prod-mass-email-platform/tasks/2b15bb8b-1d06-4480-b134-596480d3e63f/details" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;20&quot;&gt;Mon, Jan 20, 2020&lt;/time&gt; Updated standard check script to alert on stuck batches (they were not triggering on-call phone previously) " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;27&quot;&gt;Mon, Jan 27, 2020&lt;/time&gt; Weird problem with batch not finishing, 200 missing emails so wasn't completing in check_finished_batches " _note="https://admin.ometria.com/private/mass/campaigns/logs?account_id=709&amp;amp;mass_campaign_id=15158&amp;amp;min_level=0" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;27&quot;&gt;Mon, Jan 27, 2020&lt;/time&gt; Phone number reporting issue ">
        <outline text="params with export" _note="{&#10;    &quot;offset&quot;: 0,&#10;    &quot;export&quot;: &quot;csv&quot;,&#10;    &quot;columns&quot;: [&#10;        &quot;id&quot;,&#10;        &quot;name&quot;,&#10;        &quot;prefix&quot;,&#10;        &quot;firstname&quot;,&#10;        &quot;lastname&quot;,&#10;        &quot;email&quot;,&#10;        &quot;phoneNumber&quot;&#10;    ],&#10;    &quot;sortBy&quot;: &quot;-lifetimeValue&quot;,&#10;    &quot;exportTitle&quot;: &quot;sam test phone&quot;,&#10;    &quot;exportFormat&quot;: &quot;csv&quot;,&#10;    &quot;query&quot;: {&#10;        &quot;filters&quot;: [&#10;            {&#10;                &quot;value&quot;: [&#10;                    &quot;ignatius@ometria.com&quot;&#10;                ],&#10;                &quot;op&quot;: &quot;eq&quot;,&#10;                &quot;field&quot;: &quot;email&quot;&#10;            }&#10;        ],&#10;        &quot;group&quot;: &quot;all&quot;,&#10;        &quot;query_type&quot;: &quot;and&quot;&#10;    }&#10;}&#10;" />
        <outline text="params without" _note="{&#10;    &quot;offset&quot;: 0,&#10;    &quot;columns&quot;: [&#10;        &quot;id&quot;,&#10;        &quot;name&quot;,&#10;        &quot;prefix&quot;,&#10;        &quot;firstname&quot;,&#10;        &quot;lastname&quot;,&#10;        &quot;email&quot;,&#10;        &quot;phoneNumber&quot;&#10;    ],&#10;    &quot;sortBy&quot;: &quot;-lifetimeValue&quot;,&#10;    &quot;query&quot;: {&#10;        &quot;filters&quot;: [&#10;            {&#10;                &quot;value&quot;: [&#10;                    &quot;ignatius@ometria.com&quot;&#10;                ],&#10;                &quot;op&quot;: &quot;eq&quot;,&#10;                &quot;field&quot;: &quot;email&quot;&#10;            }&#10;        ],&#10;        &quot;group&quot;: &quot;all&quot;,&#10;        &quot;query_type&quot;: &quot;and&quot;&#10;    }&#10;}&#10;" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;20&quot;&gt;Mon, Jan 20, 2020&lt;/time&gt; Stuck batch due to mystery db connection dropping " _note="https://admin.ometria.com/private/mass/campaigns/1029:ME:2164/" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;20&quot;&gt;Mon, Jan 20, 2020&lt;/time&gt; Out of hours - investigated trigger campaign searcher backlog " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;20&quot;&gt;Mon, Jan 20, 2020&lt;/time&gt; Come up with goals ">
        <outline text="First pass">
          <outline text="Finish designing data intensive applications">
            <outline text="Present L&amp;amp;L on topic from book, demonstrating how it could be applied to one of our systems" />
            <outline text="Get people to score on certain things" />
          </outline>
          <outline text="Become sufficient/provide value in platform hat within role">
            <outline text="Talk to Will, what is required?" />
          </outline>
          <outline text="Fully embed in remote working - measure against feedback from rest of team">
            <outline text="Score based">
              <outline text="Collaboration" />
            </outline>
            <outline text="Check with Marcus, would he be happy to do it?" />
            <outline text="Ask for honestly" />
          </outline>
        </outline>
        <outline text="Requirements">
          <outline text="Description" />
          <outline text="Couple of measureables" />
          <outline text="And a stretch goal (time based? By Feb? By Jan)" />
        </outline>
        <outline text="Final goals">
          <outline text="Add SLIs into the mass_email system based on SLOs proposed by us and agreed with stakeholders across the organisation. These SLIs will enable us to accurately report on overall system availability. Integrate with an alerting mechanism to alert engineers when a system is at risk of depleting error-budget. ">
            <outline text="Due: End of quarter" />
            <outline text="Measurables">
              <outline text="Agreed upon SLOs" />
              <outline text="Implemented top level SLIs with monitoring output to grafana dashboard" />
              <outline text="Alerting mechanism in active use - can trigger on-call phone alerts based on predetermined levels" />
            </outline>
            <outline text="Stretch goals">
              <outline text="by end of Feb" />
            </outline>
          </outline>
          <outline text="Add prometheus monitoring to more granular sub-components within mass_email, to get better observability into which particular parts are under-performing (enabling faster TTR when issues occur and to highlight troublesome areas).">
            <outline text="Due: End of quarter" />
            <outline text="Measurables">
              <outline text="Identify and document sub-components" />
              <outline text="Add suitable prometheus metrics and related grafana dashboards for each" />
            </outline>
            <outline text="Stretch goals">
              <outline text="Add suitable alerting based on SLIs of critical sub-components (e.g. rabbitMQ availability) using new monitoring system." />
            </outline>
          </outline>
          <outline text="Write a software design document based on a part of the email system, describing overall architecture and function.">
            <outline text="Due: End of quarter" />
            <outline text="Measurables">
              <outline text="Reviewed and agreed upon by eng team" />
              <outline text="Added to Engineering docs" />
            </outline>
            <outline text="Stretch">
              <outline text="2 docs" />
            </outline>
          </outline>
          <outline text="Write an ADR describing a normalised solution for a cross-team dependency. Have this reviewed by stakeholders across the Engineering organisation.">
            <outline text="Example: test postgres image for all repo test suites" />
            <outline text="Due: End of quarter" />
            <outline text="Measurables">
              <outline text="Peer reviewed and approved by stakeholders across engineering" />
            </outline>
            <outline text="Stretch">
              <outline text="Two ADRs" />
            </outline>
          </outline>
          <outline text="Read Designing Data Intensive Applications. Present a L+L on a topic from the book about how a certain technology could be used as an alternative to an existing one within the ometria system">
            <outline text="Due: End of quarter" />
            <outline text="Measurables: Ask for honest feedback from attendees based on certain criteria (TBC)" />
          </outline>
          <outline text="Write a blog post about segmentation tree query builder" />
        </outline>
        <outline text="AJ google doc" _note="https://docs.google.com/document/d/1oMC0QGZWY14LjzfSsfI8lb8Dr3ojRX-9r03d5EDTCxo/edit?ts=5e2af49c" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;20&quot;&gt;Mon, Jan 20, 2020&lt;/time&gt; Looked at/reviewed Will's PR on python base image for future services " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;20&quot;&gt;Mon, Jan 20, 2020&lt;/time&gt; #proj-slos query for current TTS SLO performance " _note="WITH batch_tts AS (&#10;    SELECT dt_sending_complete - dt_scheduled tts&#10;    FROM campaigns.mass_campaign_batch&#10;    WHERE is_sent&#10;    AND dt_scheduled &amp;gt;= now() - interval '3 months'&#10;    AND NOT is_cancelled&#10;    AND error_data::text = '{}'::text&#10;    AND account_id NOT IN (79, 352)&#10;    AND dt_scheduled IS NOT NULL&#10;    AND dt_sending_complete IS NOT NULL&#10;),&#10;buckets AS (&#10;    SELECT COUNT(*)::numeric AS total&#10;         , (COUNT(*) FILTER (WHERE tts &amp;lt; interval '1 hour'))::numeric AS sub_sixty&#10;         , (COUNT(*) FILTER (WHERE tts &amp;lt; interval '30 minutes'))::numeric AS sub_thirty&#10;         , (COUNT(*) FILTER (WHERE tts &amp;lt; interval '20 minutes'))::numeric AS sub_twenty&#10;         , (COUNT(*) FILTER (WHERE tts &amp;lt; interval '10 minutes'))::numeric AS sub_ten&#10;    FROM batch_tts&#10;)&#10;SELECT round(sub_sixty / total, 4) AS &quot;&amp;lt;60mins&quot;&#10;     , round(sub_thirty / total, 4) AS &quot;&amp;lt;30mins&quot;&#10;     , round(sub_twenty / total, 4) AS &quot;&amp;lt;20mins&quot;&#10;     , round(sub_ten / total, 4) AS &quot;&amp;lt;10mins&quot;&#10;FROM buckets&#10;WHERE total &amp;gt; 0">
        <outline text="Minified" _note="WITH batch_tts AS ( SELECT dt_sending_complete - dt_scheduled tts FROM campaigns.mass_campaign_batch WHERE is_sent AND dt_scheduled &amp;gt;= now() - interval '3 months' AND NOT is_cancelled AND error_data::text = '{}'::text AND account_id NOT IN (79, 352) AND dt_scheduled IS NOT NULL AND dt_sending_complete IS NOT NULL ), buckets AS ( SELECT COUNT(*)::numeric AS total , (COUNT(*) FILTER (WHERE tts &amp;lt; interval '1 hour'))::numeric AS sub_sixty , (COUNT(*) FILTER (WHERE tts &amp;lt; interval '30 minutes'))::numeric AS sub_thirty , (COUNT(*) FILTER (WHERE tts &amp;lt; interval '20 minutes'))::numeric AS sub_twenty , (COUNT(*) FILTER (WHERE tts &amp;lt; interval '10 minutes'))::numeric AS sub_ten FROM batch_tts ) SELECT round(sub_sixty / total, 4) AS &quot;&amp;lt;60mins&quot; , round(sub_thirty / total, 4) AS &quot;&amp;lt;30mins&quot; , round(sub_twenty / total, 4) AS &quot;&amp;lt;20mins&quot; , round(sub_ten / total, 4) AS &quot;&amp;lt;10mins&quot; FROM buckets WHERE total &amp;gt; 0" />
        <outline text="Escaped for PHP" _note="WITH batch_tts AS ( SELECT dt_sending_complete - dt_scheduled tts FROM campaigns.mass_campaign_batch WHERE is_sent AND dt_scheduled &amp;gt;= now() - interval '3 months' AND NOT is_cancelled AND error_data::text = '{}'::text AND account_id NOT IN (79, 352) AND dt_scheduled IS NOT NULL AND dt_sending_complete IS NOT NULL ), buckets AS ( SELECT COUNT(*)::numeric AS total , (COUNT(*) FILTER (WHERE tts &amp;lt; interval '1 hour'))::numeric AS sub_sixty , (COUNT(*) FILTER (WHERE tts &amp;lt; interval '30 minutes'))::numeric AS sub_thirty , (COUNT(*) FILTER (WHERE tts &amp;lt; interval '20 minutes'))::numeric AS sub_twenty , (COUNT(*) FILTER (WHERE tts &amp;lt; interval '10 minutes'))::numeric AS sub_ten FROM batch_tts ) SELECT round(sub_sixty / total, 4) AS \&quot;&amp;lt;60mins\&quot; , round(sub_thirty / total, 4) AS \&quot;&amp;lt;30mins\&quot; , round(sub_twenty / total, 4) AS \&quot;&amp;lt;20mins\&quot; , round(sub_ten / total, 4) AS \&quot;&amp;lt;10mins\&quot; FROM buckets WHERE total &amp;gt; 1" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;20&quot;&gt;Mon, Jan 20, 2020&lt;/time&gt; #proj-slos confirm winner campaign wait delay " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;20&quot;&gt;Mon, Jan 20, 2020&lt;/time&gt; #om-interview Charles Allatson (mid-level) " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;20&quot;&gt;Mon, Jan 20, 2020&lt;/time&gt; #proj-slos finalise email SLOs ">
        <outline text="Batch TTS" />
        <outline text="Email events ingestion latency (occured to ingested)" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;20&quot;&gt;Mon, Jan 20, 2020&lt;/time&gt; Looked into template preview generation issue raised in support, looked to be caused by issues with litmus ">
        <outline text="slack question" _note="https://ometria.slack.com/archives/CG0280P5F/p1579521811007100" />
        <outline text="log link" _note="https://console.cloud.google.com/logs/viewer?project=ometria-kubernetes-support&amp;amp;minLogLevel=0&amp;amp;expandAll=false&amp;amp;timestamp=2020-01-20T11%3A29%3A26.683000000Z&amp;amp;customFacets&amp;amp;limitCustomFacetWidth=true&amp;amp;dateRangeStart=2020-01-20T11%3A26%3A10.603Z&amp;amp;dateRangeEnd=2020-01-20T12%3A26%3A10.603Z&amp;amp;interval=PT1H&amp;amp;resource=aws_ec2_instance&amp;amp;scrollTimestamp=2020-01-20T12%3A19%3A14.313383117Z&amp;amp;advancedFilter=resource.type%3D%22gce_instance%22%0Aresource.labels.project_id%3D%22ometria-kubernetes-support%22%0Atimestamp%3D%222020-01-20T11%3A39%3A52.865565069Z%22%0AinsertId%3D%22dvi2jfg3utqjn4%22" />
        <outline text="ometria.console2" _note="https://github.com/Ometria/ometria.console2/blob/9c968e52736e261940d15f9fe1b5addd9cd99e4e/src/Ometria/Console/Templates/LitmusClientRenderHelper.php#L88-L102" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;20&quot;&gt;Mon, Jan 20, 2020&lt;/time&gt; Isolated paused campaign bug cause for Missoma, and then wrote and merged PR to improve logging (to feature branch - to be deployed after merge). Pretty confident that pending paused campaign changes will prevent this from happening again " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;13&quot;&gt;Mon, Jan 13, 2020&lt;/time&gt; Rebase lib.segmentation product rollup hotfix onto master and create PR for Ilan " />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;6&quot;&gt;Mon, Jan 6, 2020&lt;/time&gt; Ongoing pgbouncer connectivity issues ">
        <outline text="Our current root cause candidate is Aiven faults causing lack of connectivity" />
        <outline text="But this depends on an assumption around a symptom we see:" />
        <outline text="That there is some sort of cascading failure that ultimately means we see additional (non-pg) failures related to pods that should not require connectivity to aiven" />
        <outline text="Pending response from Aiven, will close as issue likely their end" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;13&quot;&gt;Mon, Jan 13, 2020&lt;/time&gt; n_recipients_suppressed discrepency ">
        <outline text="Example mass_campaign update query" _note="UPDATE &#10;  mass_campaign &#10;SET &#10;  dt_updated =: dt_updated, &#10;  n_recipients_targeted = stats_query.targeted, &#10;  n_recipients_suppressed = stats_query.suppressed, &#10;  n_messages_sent = stats_query.sent, &#10;  n_messages_error = stats_query.error &#10;FROM &#10;  (&#10;    SELECT &#10;      campaigns.mass_campaign_batch.mass_campaign_id AS id, &#10;      sum(&#10;        campaigns.mass_campaign_batch.n_recipients_targeted&#10;      ) AS targeted, &#10;      sum(&#10;        campaigns.mass_campaign_batch.n_messages_sent&#10;      ) AS sent, &#10;      sum(&#10;        campaigns.mass_campaign_batch.n_messages_error&#10;      ) AS error, &#10;      sum(&#10;        campaigns.mass_campaign_batch.n_recipients_suppressed&#10;      ) AS suppressed &#10;    FROM &#10;      campaigns.mass_campaign_batch &#10;    WHERE &#10;      campaigns.mass_campaign_batch.mass_campaign_id = 2692 &#10;      AND campaigns.mass_campaign_batch.account_id = 352 &#10;    GROUP BY &#10;      campaigns.mass_campaign_batch.mass_campaign_id&#10;  ) AS stats_query &#10;WHERE &#10;  mass_campaign.id = stats_query.id&#10;" />
        <outline text="Highlight diff query" _note="WITH b AS (&#10;    SELECT mass_campaign_id&#10;         , sum(n_recipients_suppressed) AS suppressed&#10;    FROM campaigns.mass_campaign_batch&#10;    GROUP BY 1&#10;)&#10;SELECT id&#10;     , n_recipients_estimated&#10;     , n_messages_sent&#10;     , n_recipients_estimated - n_messages_sent expected_diff&#10;     , b.suppressed AS batches_suppressed&#10;     , n_recipients_suppressed&#10;FROM mass_campaign&#10;JOIN b ON b.mass_campaign_id = mass_campaign.id&#10;" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;13&quot;&gt;Mon, Jan 13, 2020&lt;/time&gt; Review Arun's PRs">
        <outline _complete="true" text="Paused campaigns" />
        <outline _complete="true" text="Broadcast list usage timestamp update" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;13&quot;&gt;Mon, Jan 13, 2020&lt;/time&gt; Rabbitmq failure incident investigation">
        <outline text="Strange disk full alert" _note="https://app.scalyr.com/events?filter=&amp;amp;teamToken=M%2Ft2aK78HxuNx3YEMIuTQQ--&amp;amp;logSource=*prod_ecs_cluster%2Fmass_email*&amp;amp;startTime=1578814137256&amp;amp;endTime=1578814558494" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;13&quot;&gt;Mon, Jan 13, 2020&lt;/time&gt; P&amp;amp;Co segmentation result issues">
        <outline text="With split json" _note="{&quot;recipients&quot;:{&quot;customer_list_id&quot;:null,&quot;customer_query&quot;:{&quot;and_filters&quot;:[{&quot;field&quot;:&quot;exclude_nonengaged&quot;,&quot;op&quot;:&quot;eq&quot;,&quot;value&quot;:[&quot;true&quot;]},{&quot;field&quot;:&quot;exclude_trigger_campaign_membership&quot;,&quot;op&quot;:&quot;any&quot;,&quot;value&quot;:[]}],&quot;filters&quot;:[{&quot;field&quot;:&quot;product&quot;,&quot;op&quot;:&quot;purchased_attribute&quot;,&quot;value&quot;:[{&quot;ids&quot;:[&quot;86376&quot;,&quot;66139&quot;,&quot;66193&quot;,&quot;85697&quot;,&quot;66182&quot;,&quot;71292&quot;,&quot;73925&quot;,&quot;66949&quot;,&quot;67124&quot;,&quot;61836&quot;,&quot;75275&quot;,&quot;66671&quot;,&quot;83112&quot;,&quot;65083&quot;,&quot;65085&quot;,&quot;7833&quot;,&quot;62513&quot;,&quot;87285&quot;,&quot;7806&quot;,&quot;72568&quot;,&quot;67882&quot;,&quot;65685&quot;,&quot;85858&quot;],&quot;type&quot;:&quot;category&quot;}]},{&quot;field&quot;:&quot;product&quot;,&quot;op&quot;:&quot;viewed_not_purchased_attribute&quot;,&quot;value&quot;:[{&quot;ids&quot;:[&quot;86376&quot;,&quot;66139&quot;,&quot;66193&quot;,&quot;85697&quot;,&quot;66182&quot;,&quot;71292&quot;,&quot;73925&quot;,&quot;66949&quot;,&quot;67124&quot;,&quot;61836&quot;,&quot;75275&quot;,&quot;66671&quot;,&quot;83112&quot;,&quot;65083&quot;,&quot;65085&quot;,&quot;7833&quot;,&quot;62513&quot;,&quot;87285&quot;,&quot;7806&quot;,&quot;72568&quot;,&quot;67882&quot;,&quot;65685&quot;,&quot;85858&quot;],&quot;type&quot;:&quot;category&quot;}]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;or&quot;},&quot;customer_suppress_list_id&quot;:null,&quot;customer_suppress_query&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;product&quot;,&quot;op&quot;:&quot;purchased&quot;,&quot;value&quot;:[&quot;3948352766070&quot;]},{&quot;field&quot;:&quot;date_last_order&quot;,&quot;op&quot;:&quot;after_ago&quot;,&quot;value&quot;:[{&quot;duration&quot;:&quot;14&quot;,&quot;unit&quot;:&quot;day&quot;}]},{&quot;field&quot;:&quot;list_id&quot;,&quot;op&quot;:&quot;eq&quot;,&quot;value&quot;:[1513]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;or&quot;},&quot;exclude_unengaged&quot;:true,&quot;exclude_all_automation&quot;:true},&quot;segmentation_tree&quot;:{&quot;type&quot;:&quot;initial&quot;,&quot;childBlock&quot;:{&quot;id&quot;:6,&quot;type&quot;:&quot;split&quot;,&quot;items&quot;:[{&quot;id&quot;:1,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}},{&quot;id&quot;:2,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}}]}}}">
          <outline text="Output SQL" _note="WITH segment_combinations AS (&#10;  SELECT &#10;    customers.id AS id, &#10;    true AS root, &#10;    random &amp;gt;= 0 &#10;    AND random &amp;lt; 0.5 AS &quot;6_1&quot;, &#10;    random &amp;gt;= 0.5 AS &quot;6_2&quot; &#10;  FROM &#10;    (&#10;      SELECT &#10;        customers.*,&#10;        random() AS random &#10;      FROM &#10;        customers &#10;      WHERE &#10;        customers.account_id = 626&#10;    ) AS customers &#10;  WHERE &#10;    (&#10;      customers.account_id = 626 &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            customers_health_dimensions &#10;          WHERE &#10;            customers_health_dimensions.customer_id = customers.id &#10;            AND customers_health_dimensions.engagement = 0&#10;        )&#10;      ) &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            trigger_campaign_customer &#10;          WHERE &#10;            trigger_campaign_customer.customer_id = customers.id &#10;            AND trigger_campaign_customer.is_active IS true &#10;            AND trigger_campaign_customer.is_test IS NOT true &#10;            AND trigger_campaign_customer.is_control_group IS NOT true&#10;        )&#10;      ) &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            events &#10;          WHERE &#10;            events.customer_id = customers.id &#10;            AND events.account_id = 626 &#10;            AND events.event_type = 'order' &#10;            AND (&#10;              events.attribute_ids &amp;amp;&amp;amp; ARRAY[86376, &#10;              66139, 66193, 85697, 66182, 71292, &#10;              73925, 66949, 67124, 61836, 75275, &#10;              66671, 83112, 65083, 65085, 7833, 62513, &#10;              87285, 7806, 72568, 67882, 65685, 85858]&#10;            ) &#10;            AND events.order_is_valid = true&#10;        )&#10;      ) &#10;      OR customers.account_id = 626 &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            customers_health_dimensions &#10;          WHERE &#10;            customers_health_dimensions.customer_id = customers.id &#10;            AND customers_health_dimensions.engagement = 0&#10;        )&#10;      ) &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            trigger_campaign_customer &#10;          WHERE &#10;            trigger_campaign_customer.customer_id = customers.id &#10;            AND trigger_campaign_customer.is_active IS true &#10;            AND trigger_campaign_customer.is_test IS NOT true &#10;            AND trigger_campaign_customer.is_control_group IS NOT true&#10;        )&#10;      ) &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            customers, &#10;            customer_product_rollup &#10;          WHERE &#10;            customer_product_rollup.account_id = 626 &#10;            AND customers.id = customer_product_rollup.customer_id &#10;            AND ARRAY(&#10;              SELECT &#10;                unnest(&#10;                  customer_product_rollup.attribute_ids_viewed&#10;                ) &#10;              except &#10;              SELECT &#10;                unnest(&#10;                  customer_product_rollup.attribute_ids_purchased&#10;                )&#10;            ) &amp;amp;&amp;amp; ARRAY[86376, &#10;            66139, &#10;            66193, &#10;            85697, &#10;            66182, &#10;            71292, &#10;            73925, &#10;            66949, &#10;            67124, &#10;            61836, &#10;            75275, &#10;            66671, &#10;            83112, &#10;            65083, &#10;            65085, &#10;            7833, &#10;            62513, &#10;            87285, &#10;            7806, &#10;            72568, &#10;            67882, &#10;            65685, &#10;            85858]&#10;        )&#10;      )&#10;    ) &#10;    AND email IS NOT NULL &#10;    AND is_email_valid IS NOT false &#10;    AND optin IS true &#10;    AND (&#10;      customers.account_id = 626 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            events &#10;          WHERE &#10;            events.customer_id = customers.id &#10;            AND events.account_id = 626 &#10;            AND events.event_type = 'order' &#10;            AND (&#10;              events.product_ids &amp;amp;&amp;amp; ARRAY[ '3948352766070' ]&#10;            ) &#10;            AND events.order_is_valid = true&#10;        )&#10;      )&#10;    ) IS NOT true &#10;    AND (&#10;      customers.account_id = 626 &#10;      AND customers.dt_last_order &amp;gt; '2019-12-31T17:13:03.713632+00:00'&#10;    ) IS NOT true &#10;    AND (&#10;      customers.account_id = 626 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = customers.id &#10;            AND lists_customers.list_id = any(ARRAY[1513])&#10;        )&#10;      )&#10;    ) IS NOT true&#10;) &#10;SELECT &#10;  CASE WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;6_1&quot; IS true&#10;  ) THEN '6_1' WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;6_1&quot; IS DISTINCT &#10;    FROM &#10;      true &#10;      AND segment_combinations.&quot;6_2&quot; IS true&#10;  ) THEN '6_2' END AS node_str, &#10;  count(segment_combinations.id) AS n_customers &#10;FROM &#10;  segment_combinations &#10;GROUP BY &#10;  node_str&#10;" />
        </outline>
        <outline text="Without split json" _note="{&quot;recipients&quot;:{&quot;customer_list_id&quot;:null,&quot;customer_query&quot;:{&quot;and_filters&quot;:[{&quot;field&quot;:&quot;exclude_nonengaged&quot;,&quot;op&quot;:&quot;eq&quot;,&quot;value&quot;:[&quot;true&quot;]},{&quot;field&quot;:&quot;exclude_trigger_campaign_membership&quot;,&quot;op&quot;:&quot;any&quot;,&quot;value&quot;:[]}],&quot;filters&quot;:[{&quot;field&quot;:&quot;product&quot;,&quot;op&quot;:&quot;purchased_attribute&quot;,&quot;value&quot;:[{&quot;ids&quot;:[&quot;86376&quot;,&quot;66139&quot;,&quot;66193&quot;,&quot;85697&quot;,&quot;66182&quot;,&quot;71292&quot;,&quot;73925&quot;,&quot;66949&quot;,&quot;67124&quot;,&quot;61836&quot;,&quot;75275&quot;,&quot;66671&quot;,&quot;83112&quot;,&quot;65083&quot;,&quot;65085&quot;,&quot;7833&quot;,&quot;62513&quot;,&quot;87285&quot;,&quot;7806&quot;,&quot;72568&quot;,&quot;67882&quot;,&quot;65685&quot;,&quot;85858&quot;],&quot;type&quot;:&quot;category&quot;}]},{&quot;field&quot;:&quot;product&quot;,&quot;op&quot;:&quot;viewed_not_purchased_attribute&quot;,&quot;value&quot;:[{&quot;ids&quot;:[&quot;86376&quot;,&quot;66139&quot;,&quot;66193&quot;,&quot;85697&quot;,&quot;66182&quot;,&quot;71292&quot;,&quot;73925&quot;,&quot;66949&quot;,&quot;67124&quot;,&quot;61836&quot;,&quot;75275&quot;,&quot;66671&quot;,&quot;83112&quot;,&quot;65083&quot;,&quot;65085&quot;,&quot;7833&quot;,&quot;62513&quot;,&quot;87285&quot;,&quot;7806&quot;,&quot;72568&quot;,&quot;67882&quot;,&quot;65685&quot;,&quot;85858&quot;],&quot;type&quot;:&quot;category&quot;}]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;or&quot;},&quot;customer_suppress_list_id&quot;:null,&quot;customer_suppress_query&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;product&quot;,&quot;op&quot;:&quot;purchased&quot;,&quot;value&quot;:[&quot;3948352766070&quot;]},{&quot;field&quot;:&quot;date_last_order&quot;,&quot;op&quot;:&quot;after_ago&quot;,&quot;value&quot;:[{&quot;duration&quot;:&quot;14&quot;,&quot;unit&quot;:&quot;day&quot;}]},{&quot;field&quot;:&quot;list_id&quot;,&quot;op&quot;:&quot;eq&quot;,&quot;value&quot;:[1513]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;or&quot;},&quot;exclude_unengaged&quot;:true,&quot;exclude_all_automation&quot;:true},&quot;segmentation_tree&quot;:{&quot;type&quot;:&quot;initial&quot;}}">
          <outline text="Output SQL" _note="WITH segment_combinations AS (&#10;  SELECT &#10;    customers.id AS id, &#10;    true AS root &#10;  FROM &#10;    customers &#10;  WHERE &#10;    (&#10;      customers.account_id = 626 &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            customers_health_dimensions &#10;          WHERE &#10;            customers_health_dimensions.customer_id = customers.id &#10;            AND customers_health_dimensions.engagement = 0&#10;        )&#10;      ) &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            trigger_campaign_customer &#10;          WHERE &#10;            trigger_campaign_customer.customer_id = customers.id &#10;            AND trigger_campaign_customer.is_active IS true &#10;            AND trigger_campaign_customer.is_test IS NOT true &#10;            AND trigger_campaign_customer.is_control_group IS NOT true&#10;        )&#10;      ) &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            events &#10;          WHERE &#10;            events.customer_id = customers.id &#10;            AND events.account_id = 626 &#10;            AND events.event_type = 'order' &#10;            AND (&#10;              events.attribute_ids &amp;amp;&amp;amp; ARRAY[86376, &#10;              66139, 66193, 85697, 66182, 71292, &#10;              73925, 66949, 67124, 61836, 75275, &#10;              66671, 83112, 65083, 65085, 7833, 62513, &#10;              87285, 7806, 72568, 67882, 65685, 85858]&#10;            ) &#10;            AND events.order_is_valid = true&#10;        )&#10;      ) &#10;      OR customers.account_id = 626 &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            customers_health_dimensions &#10;          WHERE &#10;            customers_health_dimensions.customer_id = customers.id &#10;            AND customers_health_dimensions.engagement = 0&#10;        )&#10;      ) &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            trigger_campaign_customer &#10;          WHERE &#10;            trigger_campaign_customer.customer_id = customers.id &#10;            AND trigger_campaign_customer.is_active IS true &#10;            AND trigger_campaign_customer.is_test IS NOT true &#10;            AND trigger_campaign_customer.is_control_group IS NOT true&#10;        )&#10;      ) &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            customer_product_rollup &#10;          WHERE &#10;            customer_product_rollup.account_id = 626 &#10;            AND customers.id = customer_product_rollup.customer_id &#10;            AND ARRAY(&#10;              SELECT &#10;                unnest(&#10;                  customer_product_rollup.attribute_ids_viewed&#10;                ) &#10;              except &#10;              SELECT &#10;                unnest(&#10;                  customer_product_rollup.attribute_ids_purchased&#10;                )&#10;            ) &amp;amp;&amp;amp; ARRAY[86376, &#10;            66139, &#10;            66193, &#10;            85697, &#10;            66182, &#10;            71292, &#10;            73925, &#10;            66949, &#10;            67124, &#10;            61836, &#10;            75275, &#10;            66671, &#10;            83112, &#10;            65083, &#10;            65085, &#10;            7833, &#10;            62513, &#10;            87285, &#10;            7806, &#10;            72568, &#10;            67882, &#10;            65685, &#10;            85858]&#10;        )&#10;      )&#10;    ) &#10;    AND email IS NOT NULL &#10;    AND is_email_valid IS NOT false &#10;    AND optin IS true &#10;    AND (&#10;      customers.account_id = 626 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            events &#10;          WHERE &#10;            events.customer_id = customers.id &#10;            AND events.account_id = 626 &#10;            AND events.event_type = 'order' &#10;            AND (&#10;              events.product_ids &amp;amp;&amp;amp; ARRAY[ '3948352766070' ]&#10;            ) &#10;            AND events.order_is_valid = true&#10;        )&#10;      )&#10;    ) IS NOT true &#10;    AND (&#10;      customers.account_id = 626 &#10;      AND customers.dt_last_order &amp;gt; '2019-12-31T17:07:52.431149+00:00'&#10;    ) IS NOT true &#10;    AND (&#10;      customers.account_id = 626 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = customers.id &#10;            AND lists_customers.list_id = any(ARRAY[1513])&#10;        )&#10;      )&#10;    ) IS NOT true&#10;) &#10;SELECT &#10;  CASE WHEN (&#10;    segment_combinations.&quot;root&quot; IS true&#10;  ) THEN 'root' END AS node_str, &#10;  count(segment_combinations.id) AS n_customers &#10;FROM &#10;  segment_combinations &#10;GROUP BY &#10;  node_str&#10;" />
        </outline>
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;6&quot;&gt;Mon, Jan 6, 2020&lt;/time&gt; #om-interview Alain Ivars" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;6&quot;&gt;Mon, Jan 6, 2020&lt;/time&gt; Find total products and total products in orders for Ashleigh as report not working on app">
        <outline text="Query for products in orders" _note="SELECT count(*)&#10;FROM products&#10;JOIN (&#10;    WITH cte AS (&#10;        SELECT unnest(product_ids) id&#10;        FROM events&#10;        WHERE account_id = 992&#10;          AND event_type = 'order'&#10;    )&#10;    SELECT distinct(id)&#10;    FROM cte&#10;) AS in_orders ON products.their_id = in_orders.id" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;6&quot;&gt;Mon, Jan 6, 2020&lt;/time&gt; [FIXED BY BRUNO] Suppression list update issue">
        <outline text="Log">
          <outline text="https://www.scalyr.com/events?filter=account_id%3D1102&amp;amp;teamToken=M%2Ft2aK78HxuNx3YEMIuTQQ--&amp;amp;log=*suppression_list_interface_gearman*&amp;amp;logSource=prod_ecs_cluster%2Fmass_email&amp;amp;startTime=7%20days" />
        </outline>
        <outline text="s3 bucket">
          <outline text="https://s3.console.aws.amazon.com/s3/object/kickbox.ometria.email/1102/suppression/processed/d6187ff5-6d86-4f7b-9938-18e4e9a292cb.b2bd25b2-3556-417d-8fe7-85f70cafcdba.csv?region=eu-west-1&amp;amp;tab=overview" />
        </outline>
        <outline text="admin page">
          <outline text="https://admin.ometria.com/private/mass/suppression?account_id=1102#uploads" />
        </outline>
        <outline text="Lists update deploy">
          <outline text="Existing versions">
            <outline text="lists-update-generate-jobs.yaml 1.9.1" />
            <outline text="lists-update.yaml 1.9.1" />
          </outline>
          <outline text="Update grafana charts" />
          <outline _complete="true" text="Process">
            <outline _complete="true" text="Remove old cron" />
            <outline _complete="true" text="Deploy 2x new workers" />
            <outline _complete="true" text="Deploy 2x new generate job crons" />
            <outline _complete="true" text="Validate new queues are being filled">
              <outline text="shard.initial_update_lists.{shard}" />
              <outline text="shard.refresh_dynamic_lists.{shard}" />
            </outline>
            <outline _complete="true" text="Validate new metrics show on next run">
              <outline text="initial_update_lists_count_total" />
              <outline text="refresh_dynamic_lists_count_total" />
            </outline>
            <outline _complete="true" text="Monitor old beanstalk queues and validate drained">
              <outline text="shard.list_update.{shard}" />
            </outline>
            <outline _complete="true" text="Remove old workers" />
          </outline>
        </outline>
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;6&quot;&gt;Mon, Jan 6, 2020&lt;/time&gt; Review Bruno's PRs">
        <outline text="Kickbox" />
        <outline text="Suppression sync" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;6&quot;&gt;Mon, Jan 6, 2020&lt;/time&gt; #om-interview Konrad K (Southampton Sr backend)">
        <outline text="Opted for full sync in single thread (MC to OM API), argued that no need to prematurely optimise, but noted that we could use parallel processes if required to chunk pages" />
        <outline text="Opted for multiprocessing, and got confused about IO vs CPU bound ops. Had to explain that it was IO bound and therefore a single thread could be adequate" />
        <outline text="Wasn't a fan of separate isolated workers, saw value in maintaining the original process (all in one) AND the option of using a separate worker if necessary - which is overly complicated" />
        <outline text="I had to suggest a queue as the intermediate state persistence, but he did suggest that we could use a &quot;table&quot; db, but react to events, which is conceptually ok" />
        <outline text="Didn't have a chance to talk about issues with queues due to time restrictions" />
        <outline text="Might have hinted too hard, but understood the requirement of monitoring the dt_last_udpated metric" />
        <outline text="Mentioned CPU/mem/disk" />
        <outline text="Understood issue with slow internal API straight away (mem/disk of queue increase), but struggled a bit to understand how to deal with that (applying backpressure). That said, he might have hinted at the solution, and it might have been because I asked the question poorly (he asked about sync window being a limitation which suggested that he knew what was up)" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;12&quot; startDay=&quot;1&quot; startHour=&quot;2&quot;&gt;Sun, Dec 1, 2019 at 2:00am&lt;/time&gt; #om-interview Alain Ivers ">
        <outline text="Thinks ORM has no disadvantages" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;12&quot; startDay=&quot;16&quot;&gt;Mon, Dec 16, 2019&lt;/time&gt; Review Arun's PRs " />
      <outline _complete="true" text="Wed, Dec 16, 2019 Deliverability routing">
        <outline text="Merge/deploy deliverability_routing branch" />
        <outline text="SQL to populate test db" _note="BEGIN;&#10;&#10;INSERT INTO sparkpost_ip_pool&#10;(id, note, ip_addresses)&#10;VALUES&#10;('prod2', 'Bad pool', '{52.31.63.200,52.31.63.193}'::text[]),&#10;('prod5', 'Good deliverability shared', '{52.213.44.238,34.251.126.232}'::text[]),&#10;('prod6', 'Unused', '{34.253.46.218,52.208.89.174}'::text[]);&#10;&#10;INSERT INTO deliverability_domain_group&#10;(id, name, domains)&#10;VALUES&#10;(1, 'Microsoft', '{hotmail.com,hotmail.co.uk,hotmail.fr,hotmail.it,outlook.com,msn.com,live.co.uk,live.com}'::text[]);&#10;&#10;INSERT INTO deliverability_routing_rule&#10;(id, sort_key, account_id, domain_group, percentage, destination_ip_pool, description)&#10;VALUES&#10;(1, 1, 472, 1, 1, 'prod2', 'All Saltrock traffic to ms domains -&amp;gt; prod2'),&#10;(2, 2, 390, 1, 0.95, 'prod2', 'Moss Bros ms traffic'),&#10;(3, 3, 417, 1, 0.95, 'prod2', 'My 1st Years microsoft traffic'),&#10;(4, 4, 241, 1, 0.15, 'prod2', 'Neom Organics microsoft traffic'),&#10;(5, 5, 352, null, 0.5, 'prod5', 'Test 50% 352 &amp;gt; prod5'),&#10;(6, 6, 352, null, 1, 'prod6', 'Test catch all 352 -&amp;gt; prod6');" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;12&quot; startDay=&quot;9&quot;&gt;Mon, Dec 9, 2019&lt;/time&gt; Review Rui's reporting PR" />
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;12&quot; startDay=&quot;9&quot;&gt;Mon, Dec 9, 2019&lt;/time&gt; deploy updated dependencies for segmentation and datamodels including api.campaigns master" />
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;12&quot; startDay=&quot;9&quot;&gt;Mon, Dec 9, 2019&lt;/time&gt; Finalise and deploy api.campaigns master lib update" />
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;12&quot; startDay=&quot;9&quot;&gt;Mon, Dec 9, 2019&lt;/time&gt; Ensure build ready for api.campaigns">
        <outline text="lib.segmentation_tree" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;12&quot; startDay=&quot;2&quot;&gt;Mon, Dec 2, 2019&lt;/time&gt; Move lib.segmentation into separate lib">
        <outline _complete="true" text="grep for lib.*segmentation.*tree" />
        <outline _complete="true" text="api.campaigns" />
        <outline _complete="true" text="mass_email" />
        <outline _complete="true" text="Update and merge lib.segmentation (with column override changes)" />
        <outline _complete="true" text="Update ometria.lib.segmentation_tree requirements to new segmentation lib" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;12&quot; startDay=&quot;2&quot;&gt;Mon, Dec 2, 2019&lt;/time&gt; Build example campaign SQL for Al" />
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;12&quot; startDay=&quot;9&quot;&gt;Mon, Dec 9, 2019&lt;/time&gt; Ensure build ready for mass_email">
        <outline text="lib.segmentation_tree" />
        <outline text="observability" />
        <outline text="send_test change" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;12&quot; startDay=&quot;9&quot;&gt;Mon, Dec 9, 2019&lt;/time&gt; #om-interview Chris Rawlings (code review)">
        <outline text="Directory structure??" />
        <outline text="Does incremental calls solve the rate of processing issue?" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;12&quot; startDay=&quot;9&quot;&gt;Mon, Dec 9, 2019&lt;/time&gt; TO DEPLOY post code freeze">
        <outline text="api.campaigns (new lib.segmentation_tree)">
          <outline text="New lib.segmentation_tree " />
          <outline text="Paused campaign behaviour" />
        </outline>
        <outline _complete="true" text="mass_email">
          <outline text="major ometria.lib.segmentation update" />
          <outline text="new ometria.lib.segmentation_tree lib" />
          <outline text="support for proper template unsub validation through gearman (test send from api.campaigns)" />
        </outline>
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;12&quot; startDay=&quot;2&quot;&gt;Mon, Dec 2, 2019&lt;/time&gt; Clean up paused campaign behaviour">
        <outline _complete="true" text="Prevent segmentation tree from mutating" />
        <outline _complete="true" text="Variant (array) fields to prevent" />
        <outline text="Draft PR" _note="https://github.com/Ometria/ometria.api.campaigns/pull/55/files?file-filters%5B%5D=.py&amp;amp;file-filters%5B%5D=No+extension" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;12&quot; startDay=&quot;2&quot;&gt;Mon, Dec 2, 2019&lt;/time&gt; Review Aruns list used in work" />
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;12&quot; startDay=&quot;2&quot;&gt;Mon, Dec 2, 2019&lt;/time&gt; Review Simeon's trigger campaign changes related to BF issues" />
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;11&quot; startDay=&quot;25&quot;&gt;Mon, Nov 25, 2019&lt;/time&gt; Arch guild">
        <outline _complete="true" text="Review comments" />
        <outline _complete="true" text="Adapt dir structure" />
        <outline _complete="true" text="Merge" />
        <outline text="Book first meeting" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;11&quot; startDay=&quot;25&quot;&gt;Mon, Nov 25, 2019&lt;/time&gt; Trigger campaign debug">
        <outline text="account_id = 992" />
        <outline text="mode = 'active' or 'testing'" />
        <outline text="type = 'triggerfish2' " />
        <outline text="started_before_dt" />
        <outline text="not and">
          <outline text="entry_wait = 0" />
          <outline text="entry_trigger_type = 'subscribed'" />
        </outline>
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;11&quot; startDay=&quot;25&quot;&gt;Mon, Nov 25, 2019&lt;/time&gt; Create ADR for architecture guild in engineering.docs" />
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;11&quot; startDay=&quot;25&quot;&gt;Mon, Nov 25, 2019&lt;/time&gt; Intro to eng" />
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;11&quot; startDay=&quot;18&quot;&gt;Mon, Nov 18, 2019&lt;/time&gt; [CANCELLED - NOT DEPLOYED] [READY TO DEPLOY] Add campaign &quot;version id&quot; API support to identify concurrent user issues">
        <outline _complete="true" text="Altered to only compare state_version_id for now" />
        <outline _complete="true" text="General flow">
          <outline text="GET retrieve campaign with most recent version_id">
            <outline text="POST (new campaign) generates a new campaign with initial id = 1 " />
          </outline>
          <outline text="PUT, compare incoming data against existing data in database.">
            <outline text="If version_id is the same, then UPDATE is sequential and valid. Update payload, increment id and return" />
            <outline text="If different, increment version_id to after db version (always needs to be latest), save to db and return new in payload">
              <outline text="SELECT FOR UPDATE? Ensure no race conditions" />
            </outline>
          </outline>
        </outline>
        <outline _complete="true" text="ometria.migrations">
          <outline _complete="true" text="Introduce new &quot;state_version_id&quot; column on mass_campaign table" />
        </outline>
        <outline _complete="true" text="ometria.datamodels">
          <outline _complete="true" text="Add column above" />
        </outline>
        <outline _complete="true" text="ometria.api.campaigns">
          <outline text="Initial check function to compare incoming to existing data">
            <outline text="Use `retrieve_client_campaign_data` function" />
            <outline text="Order dict? Manual __eq__ for recursive comparison?">
              <outline text="json.dumps(data, sort_keys=True) recursively sorts keys" />
            </outline>
            <outline text="Ensure dicts haven't been mutated prior to comparison">
              <outline text="deepcopy?" />
            </outline>
          </outline>
          <outline text="If id equal">
            <outline text="Is sequential and valid update" />
            <outline text="If data differs, UPDATE, increment id and return" />
            <outline text="If data is the same, do not increment id and return original payload" />
          </outline>
          <outline text="If id not equal (would be less than db version)">
            <outline text="increment version_id to after db version" />
            <outline text="Emit log (warning level) detailing the sent payload is out of date, and another request have since incremented the state of the campaign in the backend" />
          </outline>
          <outline text="Ensure new id is saved in db on each PUT, if changed" />
          <outline text="Enforce mass_campaign.version_id defaults in API layer `.get('version_id', 0)` to avoid db backfill" />
          <outline text="Ensure user info is returned in logs (I think it is by default)" />
        </outline>
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;11&quot; startDay=&quot;25&quot;&gt;Mon, Nov 25, 2019&lt;/time&gt; Add Arun to admin backend" />
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;11&quot; startDay=&quot;25&quot;&gt;Mon, Nov 25, 2019&lt;/time&gt; Deploy mass_email with increased min workers" />
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;11&quot; startDay=&quot;25&quot;&gt;Mon, Nov 25, 2019&lt;/time&gt; #om-arun List references">
        <outline _complete="true" text="Requirements">
          <outline text="Needs to be scalable, with thought to use in incremental event based systems" />
          <outline text="Output is data in a correct format for (eventually) writing to a new table">
            <outline text="list_id" />
            <outline text="campaign_id" />
            <outline text="reference_type (mass_campaign etc)" />
          </outline>
          <outline text="More efficient in READ portion of operation to scan reference entities, and aggregate on list_ids scoped to account_id, id and type">
            <outline text="I.e. scan mass_campaign table, grab list_ids for each row and append to a set in one of a number of hash maps" />
          </outline>
          <outline text="Memory constraints? Streaming required? Can stream query results" _note="with self_closing_connection(account_id=self._account_id) as connection:&#10;    result = connection.execution_options(stream_results=True).execute(self.get_email_profile_data_join())&#10;&#10;    while True:&#10;        rows = result.fetchmany(celery_config.BROADCAST_JOBS_PER_BATCH)">
            <outline text="Async for each shard/account/table(/type)?" />
          </outline>
        </outline>
        <outline _complete="true" text="Locations">
          <outline text="Broadcast">
            <outline text="mass_campaign">
              <outline text="campaign.list_id" />
              <outline text="campaign.suppression_list_id" />
              <outline text="campaign.customer_query" />
              <outline text="campaign.customer_suppression_query" />
            </outline>
            <outline text="mass_campaign_configuration.segmentation_tree" />
            <outline text="?Templates" />
          </outline>
          <outline text="Lists">
            <outline text="Grab data from filter_data if relevant" />
          </outline>
          <outline text="Automation">
            <outline text="Run query on existing column" />
          </outline>
          <outline text="Connections">
            <outline text="UI already available" />
            <outline text="Identify UI and recreate query to identify rows" />
          </outline>
        </outline>
        <outline text="Check filter group thing (think it's covered but want to be sure)" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;11&quot; startDay=&quot;25&quot;&gt;Mon, Nov 25, 2019&lt;/time&gt; Update BF scaling spreadsheet">
        <outline _complete="true" text="RabbitMQ" />
        <outline _complete="true" text="Redis" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;11&quot; startDay=&quot;18&quot;&gt;Mon, Nov 18, 2019&lt;/time&gt; Grafana crit system dashboard rebuild">
        <outline _complete="true" text="Steps to find ALB metrics">
          <outline text="k get ingress api-public-ingress{something} -owide" />
          <outline text="b5a8815d-default-albingres-2a7b-1042815369.eu-west-1.elb.amazonaws.com" />
          <outline text="Paste into load balancers in prod aws console" />
          <outline text="ALB rules page points at correct target_group" _note="https://eu-west-1.console.aws.amazon.com/ec2/home?region=eu-west-1#ELBRules:type=app;loadBalancerName=b5a8815d-default-albingres-2a7b;loadBalancerId=b45a32c689482f31;listenerId=a200f1ddc3b33c27" />
        </outline>
        <outline _complete="true" text="Add transactional api metrics to public API availability panel" />
        <outline text="JSON backups">
          <outline _complete="true" text="Backup 12:22 12/11/19" _note="{&#10;  &quot;annotations&quot;: {&#10;    &quot;list&quot;: [&#10;      {&#10;        &quot;builtIn&quot;: 1,&#10;        &quot;datasource&quot;: &quot;-- Grafana --&quot;,&#10;        &quot;enable&quot;: true,&#10;        &quot;hide&quot;: true,&#10;        &quot;iconColor&quot;: &quot;rgba(0, 211, 255, 1)&quot;,&#10;        &quot;name&quot;: &quot;Annotations &amp;amp; Alerts&quot;,&#10;        &quot;type&quot;: &quot;dashboard&quot;&#10;      }&#10;    ]&#10;  },&#10;  &quot;editable&quot;: true,&#10;  &quot;gnetId&quot;: null,&#10;  &quot;graphTooltip&quot;: 0,&#10;  &quot;id&quot;: 63,&#10;  &quot;links&quot;: [],&#10;  &quot;panels&quot;: [&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 1,&#10;      &quot;format&quot;: &quot;percentunit&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 6,&#10;        &quot;w&quot;: 8,&#10;        &quot;x&quot;: 0,&#10;        &quot;y&quot;: 0&#10;      },&#10;      &quot;id&quot;: 4,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;1 - (\n  sum by(load_balancer) (aws_applicationelb_httpcode_elb_5_xx_count_sum{target_group=~\&quot;targetgroup/b5a8815d-f5de1266cd6946c5bcb/b12ea880aaa99cc2\&quot;} or aws_applicationelb_request_count_sum * 0)\n  /\n  sum by(load_balancer) (aws_applicationelb_request_count_sum{target_group=~\&quot;targetgroup/b5a8815d-f5de1266cd6946c5bcb/b12ea880aaa99cc2\&quot;})\n)&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;0.99, 0.995&quot;,&#10;      &quot;title&quot;: &quot;API public - Availability&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 1,&#10;      &quot;format&quot;: &quot;percentunit&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 6,&#10;        &quot;w&quot;: 8,&#10;        &quot;x&quot;: 8,&#10;        &quot;y&quot;: 0&#10;      },&#10;      &quot;id&quot;: 10,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;1-\nsum by (load_balancer_name, service_app) ((\n     (aws_elb_httpcode_backend_5_xx_sum or aws_elb_httpcode_elb_5_xx_sum * 0)\n  + \n     (aws_elb_httpcode_elb_5_xx_sum or aws_elb_httpcode_backend_5_xx_sum * 0)\n) or aws_elb_request_count_sum * 0 )\n\n/\n  sum by(load_balancer_name, service_app) (aws_elb_request_count_sum)\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;console2\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;0.99, 0.995&quot;,&#10;      &quot;title&quot;: &quot;APP - Availability&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: false,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 1,&#10;      &quot;format&quot;: &quot;s&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 6,&#10;        &quot;w&quot;: 8,&#10;        &quot;x&quot;: 16,&#10;        &quot;y&quot;: 0&#10;      },&#10;      &quot;id&quot;: 17,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;sum (rate(lists_update_duration_seconds_sum[5m])) / sum (rate(lists_update_duration_seconds_count[5m]))&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;&quot;,&#10;      &quot;title&quot;: &quot;Segments - Avg processing time&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 0,&#10;      &quot;format&quot;: &quot;ms&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 6,&#10;        &quot;w&quot;: 8,&#10;        &quot;x&quot;: 0,&#10;        &quot;y&quot;: 6&#10;      },&#10;      &quot;id&quot;: 5,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;(histogram_quantile(0.50, sum by(le) (rate(http_request_duration_seconds_bucket{api=\&quot;connections\&quot;, kubernetes_namespace=\&quot;default\&quot;}[5m])))) * 1000&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;legendFormat&quot;: &quot;&quot;,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;10, 100&quot;,&#10;      &quot;title&quot;: &quot;API public - Latency&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 0,&#10;      &quot;format&quot;: &quot;ms&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 6,&#10;        &quot;w&quot;: 8,&#10;        &quot;x&quot;: 8,&#10;        &quot;y&quot;: 6&#10;      },&#10;      &quot;id&quot;: 11,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;((sum by (load_balancer_name, service_app) (aws_elb_latency_sum)\n/ \nsum by (load_balancer_name, service_app) (aws_elb_request_count_sum))\n\n* 1000)\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;console2\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;50, 500&quot;,&#10;      &quot;title&quot;: &quot;APP - Latency&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: false,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 1,&#10;      &quot;format&quot;: &quot;s&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 6,&#10;        &quot;w&quot;: 8,&#10;        &quot;x&quot;: 16,&#10;        &quot;y&quot;: 6&#10;      },&#10;      &quot;id&quot;: 16,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;sum (rate(lists_start_processing_latency_seconds_sum[5m])) / sum (rate(lists_start_processing_latency_seconds_count[5m]))&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;&quot;,&#10;      &quot;title&quot;: &quot;Segments - Avg start latency&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 4,&#10;      &quot;format&quot;: &quot;percentunit&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 6,&#10;        &quot;w&quot;: 8,&#10;        &quot;x&quot;: 0,&#10;        &quot;y&quot;: 12&#10;      },&#10;      &quot;id&quot;: 6,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;1 -\n(\n  sum by (load_balancer_name, service_app) (aws_elb_httpcode_elb_5_xx_sum or aws_elb_request_count_sum * 0)\n  /\n  sum by (load_balancer_name, service_app) (aws_elb_request_count_sum)\n)\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;preferences-center-v2\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;legendFormat&quot;: &quot;availability&quot;,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;0.9, 0.95&quot;,&#10;      &quot;title&quot;: &quot;Prefs Centre - Availability&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 4,&#10;      &quot;format&quot;: &quot;percentunit&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 6,&#10;        &quot;w&quot;: 8,&#10;        &quot;x&quot;: 8,&#10;        &quot;y&quot;: 12&#10;      },&#10;      &quot;id&quot;: 12,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;1-\nsum by (load_balancer_name, service_app) ((\n     (aws_elb_httpcode_backend_5_xx_sum or aws_elb_httpcode_elb_5_xx_sum * 0)\n  + \n     (aws_elb_httpcode_elb_5_xx_sum or aws_elb_httpcode_backend_5_xx_sum * 0)\n) or aws_elb_request_count_sum * 0 )\n\n/\n  sum by(load_balancer_name, service_app) (aws_elb_request_count_sum)\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;image-recs\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;0.99, 0.995&quot;,&#10;      &quot;title&quot;: &quot;Image recs - Availability&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: false,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 1,&#10;      &quot;format&quot;: &quot;s&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 6,&#10;        &quot;w&quot;: 8,&#10;        &quot;x&quot;: 16,&#10;        &quot;y&quot;: 12&#10;      },&#10;      &quot;id&quot;: 15,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;sum (rate(lists_update_frequency_seconds_sum[5m])) / sum (rate(lists_update_frequency_seconds_count[5m]))&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;&quot;,&#10;      &quot;title&quot;: &quot;Segments - Avg update job frequency&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 0,&#10;      &quot;format&quot;: &quot;ms&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 6,&#10;        &quot;w&quot;: 8,&#10;        &quot;x&quot;: 0,&#10;        &quot;y&quot;: 18&#10;      },&#10;      &quot;id&quot;: 7,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;app&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;(sum by (load_balancer_name, service_app) (aws_elb_latency_sum)\n/ \nsum by (load_balancer_name, service_app) (aws_elb_request_count_sum)) * 1000\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;preferences-center-v2\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;legendFormat&quot;: &quot;avg&quot;,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;50, 500&quot;,&#10;      &quot;title&quot;: &quot;Prefs centre - Latency&quot;,&#10;      &quot;transparent&quot;: false,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 0,&#10;      &quot;format&quot;: &quot;ms&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 6,&#10;        &quot;w&quot;: 8,&#10;        &quot;x&quot;: 8,&#10;        &quot;y&quot;: 18&#10;      },&#10;      &quot;id&quot;: 13,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;((sum by (load_balancer_name, service_app) (aws_elb_latency_sum)\n/ \nsum by (load_balancer_name, service_app) (aws_elb_request_count_sum))\n\n* 1000)\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;image-recs\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;50, 500&quot;,&#10;      &quot;title&quot;: &quot;Image recs - Latency&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 2,&#10;      &quot;format&quot;: &quot;percentunit&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 6,&#10;        &quot;w&quot;: 8,&#10;        &quot;x&quot;: 0,&#10;        &quot;y&quot;: 24&#10;      },&#10;      &quot;id&quot;: 8,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;1-\nsum by (load_balancer_name, service_app) ((\n     (aws_elb_httpcode_backend_5_xx_sum or aws_elb_httpcode_elb_5_xx_sum * 0)\n  + \n     (aws_elb_httpcode_elb_5_xx_sum or aws_elb_httpcode_backend_5_xx_sum * 0)\n) or aws_elb_request_count_sum * 0 )\n\n/\n  sum by(load_balancer_name, service_app) (aws_elb_request_count_sum)\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;js-tracker-traefik\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;20s&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;legendFormat&quot;: &quot;availability&quot;,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;99.9, 99.99&quot;,&#10;      &quot;title&quot;: &quot;trk.ometria.com - Availability&quot;,&#10;      &quot;transparent&quot;: false,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 0,&#10;      &quot;format&quot;: &quot;ms&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 6,&#10;        &quot;w&quot;: 8,&#10;        &quot;x&quot;: 8,&#10;        &quot;y&quot;: 24&#10;      },&#10;      &quot;id&quot;: 14,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;((sum by (load_balancer_name, service_app) (aws_elb_latency_sum)\n/ \nsum by (load_balancer_name, service_app) (aws_elb_request_count_sum))\n\n* 1000)\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;js-tracker-traefik\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;50, 500&quot;,&#10;      &quot;title&quot;: &quot;JS Tracker Pipeline - Latency&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    }&#10;  ],&#10;  &quot;refresh&quot;: false,&#10;  &quot;schemaVersion&quot;: 16,&#10;  &quot;style&quot;: &quot;dark&quot;,&#10;  &quot;tags&quot;: [],&#10;  &quot;templating&quot;: {&#10;    &quot;list&quot;: []&#10;  },&#10;  &quot;time&quot;: {&#10;    &quot;from&quot;: &quot;now-24h&quot;,&#10;    &quot;to&quot;: &quot;now&quot;&#10;  },&#10;  &quot;timepicker&quot;: {&#10;    &quot;refresh_intervals&quot;: [&#10;      &quot;5s&quot;,&#10;      &quot;10s&quot;,&#10;      &quot;30s&quot;,&#10;      &quot;1m&quot;,&#10;      &quot;5m&quot;,&#10;      &quot;15m&quot;,&#10;      &quot;30m&quot;,&#10;      &quot;1h&quot;,&#10;      &quot;2h&quot;,&#10;      &quot;1d&quot;&#10;    ],&#10;    &quot;time_options&quot;: [&#10;      &quot;5m&quot;,&#10;      &quot;15m&quot;,&#10;      &quot;1h&quot;,&#10;      &quot;6h&quot;,&#10;      &quot;12h&quot;,&#10;      &quot;24h&quot;,&#10;      &quot;2d&quot;,&#10;      &quot;7d&quot;,&#10;      &quot;30d&quot;&#10;    ]&#10;  },&#10;  &quot;timezone&quot;: &quot;&quot;,&#10;  &quot;title&quot;: &quot;Critical Systems&quot;,&#10;  &quot;uid&quot;: &quot;lY0h44JZz&quot;,&#10;  &quot;version&quot;: 41&#10;}&#10;" />
          <outline _complete="true" text="Backup 15:01 12/11/19" _note="{&#10;  &quot;annotations&quot;: {&#10;    &quot;list&quot;: [&#10;      {&#10;        &quot;builtIn&quot;: 1,&#10;        &quot;datasource&quot;: &quot;-- Grafana --&quot;,&#10;        &quot;enable&quot;: true,&#10;        &quot;hide&quot;: true,&#10;        &quot;iconColor&quot;: &quot;rgba(0, 211, 255, 1)&quot;,&#10;        &quot;name&quot;: &quot;Annotations &amp;amp; Alerts&quot;,&#10;        &quot;type&quot;: &quot;dashboard&quot;&#10;      }&#10;    ]&#10;  },&#10;  &quot;editable&quot;: true,&#10;  &quot;gnetId&quot;: null,&#10;  &quot;graphTooltip&quot;: 0,&#10;  &quot;id&quot;: 63,&#10;  &quot;links&quot;: [],&#10;  &quot;panels&quot;: [&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 1,&#10;      &quot;format&quot;: &quot;percentunit&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 5,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 0,&#10;        &quot;y&quot;: 0&#10;      },&#10;      &quot;id&quot;: 4,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;1 - (\n  sum by(load_balancer) (aws_applicationelb_httpcode_elb_5_xx_count_sum{target_group=~\&quot;targetgroup/b5a8815d-f5de1266cd6946c5bcb/b12ea880aaa99cc2\&quot;} or aws_applicationelb_request_count_sum * 0)\n  /\n  sum by(load_balancer) (aws_applicationelb_request_count_sum{target_group=~\&quot;targetgroup/b5a8815d-f5de1266cd6946c5bcb/b12ea880aaa99cc2\&quot;})\n)&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;0.99, 0.995&quot;,&#10;      &quot;title&quot;: &quot;API public - Availability&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 1,&#10;      &quot;format&quot;: &quot;percentunit&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 5,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 6,&#10;        &quot;y&quot;: 0&#10;      },&#10;      &quot;id&quot;: 10,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;1-\nsum by (load_balancer_name, service_app) ((\n     (aws_elb_httpcode_backend_5_xx_sum or aws_elb_httpcode_elb_5_xx_sum * 0)\n  + \n     (aws_elb_httpcode_elb_5_xx_sum or aws_elb_httpcode_backend_5_xx_sum * 0)\n) or aws_elb_request_count_sum * 0 )\n\n/\n  sum by(load_balancer_name, service_app) (aws_elb_request_count_sum)\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;console2\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;0.99, 0.995&quot;,&#10;      &quot;title&quot;: &quot;APP - Availability&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: false,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 1,&#10;      &quot;format&quot;: &quot;s&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 5,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 12,&#10;        &quot;y&quot;: 0&#10;      },&#10;      &quot;id&quot;: 18,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;sum (rate(lists_update_duration_seconds_sum[5m])) / sum (rate(lists_update_duration_seconds_count[5m]))&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;&quot;,&#10;      &quot;title&quot;: &quot;Segments - Avg processing time&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 2,&#10;      &quot;format&quot;: &quot;s&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 5,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 18,&#10;        &quot;y&quot;: 0&#10;      },&#10;      &quot;id&quot;: 17,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;sum by(job) (rate(trigger_first_action_latency_seconds_sum{wait=\&quot;no_wait\&quot;}[5m])) / sum by(job) (rate(trigger_first_action_latency_seconds_count{wait=\&quot;no_wait\&quot;}[5m]))&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;300, 600&quot;,&#10;      &quot;title&quot;: &quot;Automation - First action latency&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 0,&#10;      &quot;format&quot;: &quot;ms&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 5,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 0,&#10;        &quot;y&quot;: 5&#10;      },&#10;      &quot;id&quot;: 5,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;(histogram_quantile(0.50, sum by(le) (rate(http_request_duration_seconds_bucket{api=\&quot;connections\&quot;, kubernetes_namespace=\&quot;default\&quot;}[5m])))) * 1000&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;legendFormat&quot;: &quot;&quot;,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;10, 100&quot;,&#10;      &quot;title&quot;: &quot;API public - Latency&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 0,&#10;      &quot;format&quot;: &quot;ms&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 5,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 6,&#10;        &quot;y&quot;: 5&#10;      },&#10;      &quot;id&quot;: 11,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;((sum by (load_balancer_name, service_app) (aws_elb_latency_sum)\n/ \nsum by (load_balancer_name, service_app) (aws_elb_request_count_sum))\n\n* 1000)\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;console2\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;50, 500&quot;,&#10;      &quot;title&quot;: &quot;APP - Latency&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: false,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 1,&#10;      &quot;format&quot;: &quot;s&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 5,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 12,&#10;        &quot;y&quot;: 5&#10;      },&#10;      &quot;id&quot;: 16,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;sum (rate(lists_start_processing_latency_seconds_sum[5m])) / sum (rate(lists_start_processing_latency_seconds_count[5m]))&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;&quot;,&#10;      &quot;title&quot;: &quot;Segments - Avg start latency&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: false,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 2,&#10;      &quot;format&quot;: &quot;short&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 5,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 18,&#10;        &quot;y&quot;: 5&#10;      },&#10;      &quot;id&quot;: 19,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;increase(ometria_trigger_campaigns_runner_node_result_completed_email[1h])&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;&quot;,&#10;      &quot;title&quot;: &quot;Automation - Emails sent / hour&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;current&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 4,&#10;      &quot;format&quot;: &quot;percentunit&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 5,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 0,&#10;        &quot;y&quot;: 10&#10;      },&#10;      &quot;id&quot;: 6,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;1 -\n(\n  sum by (load_balancer_name, service_app) (aws_elb_httpcode_elb_5_xx_sum or aws_elb_request_count_sum * 0)\n  /\n  sum by (load_balancer_name, service_app) (aws_elb_request_count_sum)\n)\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;preferences-center-v2\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;legendFormat&quot;: &quot;availability&quot;,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;0.9, 0.95&quot;,&#10;      &quot;title&quot;: &quot;Prefs Centre - Availability&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 4,&#10;      &quot;format&quot;: &quot;percentunit&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 5,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 6,&#10;        &quot;y&quot;: 10&#10;      },&#10;      &quot;id&quot;: 12,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;1-\nsum by (load_balancer_name, service_app) ((\n     (aws_elb_httpcode_backend_5_xx_sum or aws_elb_httpcode_elb_5_xx_sum * 0)\n  + \n     (aws_elb_httpcode_elb_5_xx_sum or aws_elb_httpcode_backend_5_xx_sum * 0)\n) or aws_elb_request_count_sum * 0 )\n\n/\n  sum by(load_balancer_name, service_app) (aws_elb_request_count_sum)\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;image-recs\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;0.99, 0.995&quot;,&#10;      &quot;title&quot;: &quot;Image recs - Availability&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: false,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 1,&#10;      &quot;format&quot;: &quot;s&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 5,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 12,&#10;        &quot;y&quot;: 10&#10;      },&#10;      &quot;id&quot;: 15,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;sum (rate(lists_update_frequency_seconds_sum[5m])) / sum (rate(lists_update_frequency_seconds_count[5m]))&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;&quot;,&#10;      &quot;title&quot;: &quot;Segments - Avg update job frequency&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: false,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 2,&#10;      &quot;format&quot;: &quot;short&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 5,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 18,&#10;        &quot;y&quot;: 10&#10;      },&#10;      &quot;id&quot;: 20,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;increase(ometria_trigger_campaigns_runner_node_any[1h])&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;&quot;,&#10;      &quot;title&quot;: &quot;Automation - Node evaluations / hour&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;current&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 0,&#10;      &quot;format&quot;: &quot;ms&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 5,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 0,&#10;        &quot;y&quot;: 15&#10;      },&#10;      &quot;id&quot;: 7,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;app&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;(sum by (load_balancer_name, service_app) (aws_elb_latency_sum)\n/ \nsum by (load_balancer_name, service_app) (aws_elb_request_count_sum)) * 1000\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;preferences-center-v2\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;legendFormat&quot;: &quot;avg&quot;,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;50, 500&quot;,&#10;      &quot;title&quot;: &quot;Prefs centre - Latency&quot;,&#10;      &quot;transparent&quot;: false,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 0,&#10;      &quot;format&quot;: &quot;ms&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 5,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 6,&#10;        &quot;y&quot;: 15&#10;      },&#10;      &quot;id&quot;: 13,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;((sum by (load_balancer_name, service_app) (aws_elb_latency_sum)\n/ \nsum by (load_balancer_name, service_app) (aws_elb_request_count_sum))\n\n* 1000)\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;image-recs\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;50, 500&quot;,&#10;      &quot;title&quot;: &quot;Image recs - Latency&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: false,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 2,&#10;      &quot;format&quot;: &quot;short&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 5,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 18,&#10;        &quot;y&quot;: 15&#10;      },&#10;      &quot;id&quot;: 21,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;increase(ometria_trigger_campaigns_membership_write_entry_trigger_campaign_customer[1h])&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;&quot;,&#10;      &quot;title&quot;: &quot;Automation - Campaign entries / hour&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;current&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 2,&#10;      &quot;format&quot;: &quot;percentunit&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 5,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 0,&#10;        &quot;y&quot;: 20&#10;      },&#10;      &quot;id&quot;: 8,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;1-\nsum by (load_balancer_name, service_app) ((\n     (aws_elb_httpcode_backend_5_xx_sum or aws_elb_httpcode_elb_5_xx_sum * 0)\n  + \n     (aws_elb_httpcode_elb_5_xx_sum or aws_elb_httpcode_backend_5_xx_sum * 0)\n) or aws_elb_request_count_sum * 0 )\n\n/\n  sum by(load_balancer_name, service_app) (aws_elb_request_count_sum)\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;js-tracker-traefik\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;20s&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;legendFormat&quot;: &quot;availability&quot;,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;99.9, 99.99&quot;,&#10;      &quot;title&quot;: &quot;trk.ometria.com - Availability&quot;,&#10;      &quot;transparent&quot;: false,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 0,&#10;      &quot;format&quot;: &quot;ms&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 5,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 6,&#10;        &quot;y&quot;: 20&#10;      },&#10;      &quot;id&quot;: 14,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;((sum by (load_balancer_name, service_app) (aws_elb_latency_sum)\n/ \nsum by (load_balancer_name, service_app) (aws_elb_request_count_sum))\n\n* 1000)\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;js-tracker-traefik\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;50, 500&quot;,&#10;      &quot;title&quot;: &quot;JS Tracker Pipeline - Latency&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    }&#10;  ],&#10;  &quot;refresh&quot;: false,&#10;  &quot;schemaVersion&quot;: 16,&#10;  &quot;style&quot;: &quot;dark&quot;,&#10;  &quot;tags&quot;: [],&#10;  &quot;templating&quot;: {&#10;    &quot;list&quot;: []&#10;  },&#10;  &quot;time&quot;: {&#10;    &quot;from&quot;: &quot;now-24h&quot;,&#10;    &quot;to&quot;: &quot;now&quot;&#10;  },&#10;  &quot;timepicker&quot;: {&#10;    &quot;refresh_intervals&quot;: [&#10;      &quot;5s&quot;,&#10;      &quot;10s&quot;,&#10;      &quot;30s&quot;,&#10;      &quot;1m&quot;,&#10;      &quot;5m&quot;,&#10;      &quot;15m&quot;,&#10;      &quot;30m&quot;,&#10;      &quot;1h&quot;,&#10;      &quot;2h&quot;,&#10;      &quot;1d&quot;&#10;    ],&#10;    &quot;time_options&quot;: [&#10;      &quot;5m&quot;,&#10;      &quot;15m&quot;,&#10;      &quot;1h&quot;,&#10;      &quot;6h&quot;,&#10;      &quot;12h&quot;,&#10;      &quot;24h&quot;,&#10;      &quot;2d&quot;,&#10;      &quot;7d&quot;,&#10;      &quot;30d&quot;&#10;    ]&#10;  },&#10;  &quot;timezone&quot;: &quot;&quot;,&#10;  &quot;title&quot;: &quot;Critical Systems&quot;,&#10;  &quot;uid&quot;: &quot;lY0h44JZz&quot;,&#10;  &quot;version&quot;: 59&#10;}" />
          <outline text="Backup 12:05 18/11/19" _note="{&#10;  &quot;annotations&quot;: {&#10;    &quot;list&quot;: [&#10;      {&#10;        &quot;builtIn&quot;: 1,&#10;        &quot;datasource&quot;: &quot;-- Grafana --&quot;,&#10;        &quot;enable&quot;: true,&#10;        &quot;hide&quot;: true,&#10;        &quot;iconColor&quot;: &quot;rgba(0, 211, 255, 1)&quot;,&#10;        &quot;name&quot;: &quot;Annotations &amp;amp; Alerts&quot;,&#10;        &quot;type&quot;: &quot;dashboard&quot;&#10;      }&#10;    ]&#10;  },&#10;  &quot;editable&quot;: true,&#10;  &quot;gnetId&quot;: null,&#10;  &quot;graphTooltip&quot;: 0,&#10;  &quot;id&quot;: 63,&#10;  &quot;links&quot;: [],&#10;  &quot;panels&quot;: [&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 2,&#10;      &quot;format&quot;: &quot;percentunit&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 4,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 0,&#10;        &quot;y&quot;: 0&#10;      },&#10;      &quot;id&quot;: 4,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;1-\nsum by (load_balancer_name) ((\n    (\n        aws_applicationelb_httpcode_target_5_xx_count_sum{target_group=~\&quot;targetgroup/b5a8815d-f5de1266cd6946c5bcb/b12ea880aaa99cc2\&quot;}\n      or\n        aws_applicationelb_httpcode_elb_5_xx_count_sum{target_group=~\&quot;targetgroup/b5a8815d-f5de1266cd6946c5bcb/b12ea880aaa99cc2\&quot;} * 0\n    )\n  + \n    (\n        aws_applicationelb_httpcode_elb_5_xx_count_sum{target_group=~\&quot;targetgroup/b5a8815d-f5de1266cd6946c5bcb/b12ea880aaa99cc2\&quot;}\n      or\n        aws_applicationelb_httpcode_target_5_xx_count_sum{target_group=~\&quot;targetgroup/b5a8815d-f5de1266cd6946c5bcb/b12ea880aaa99cc2\&quot;} * 0\n    )\n) or aws_applicationelb_request_count_sum{target_group=~\&quot;targetgroup/b5a8815d-f5de1266cd6946c5bcb/b12ea880aaa99cc2\&quot;} * 0 )\n\n/\n  sum by(load_balancer_name) (aws_applicationelb_request_count_sum{target_group=~\&quot;targetgroup/b5a8815d-f5de1266cd6946c5bcb/b12ea880aaa99cc2\&quot;})&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;B&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;0.995, 0.9995&quot;,&#10;      &quot;title&quot;: &quot;API public - Availability&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 0,&#10;      &quot;format&quot;: &quot;ms&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 4,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 6,&#10;        &quot;y&quot;: 0&#10;      },&#10;      &quot;id&quot;: 5,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;(histogram_quantile(0.90, sum by(le) (rate(http_request_duration_seconds_bucket{api=\&quot;connections\&quot;, kubernetes_namespace=\&quot;default\&quot;}[5m])))) * 1000&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;legendFormat&quot;: &quot;&quot;,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;50, 500&quot;,&#10;      &quot;title&quot;: &quot;API public - Latency (90th %ile)&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: false,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 1,&#10;      &quot;format&quot;: &quot;s&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 4,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 12,&#10;        &quot;y&quot;: 0&#10;      },&#10;      &quot;id&quot;: 18,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;sum (rate(lists_update_duration_seconds_sum[5m])) / sum (rate(lists_update_duration_seconds_count[5m]))&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;&quot;,&#10;      &quot;title&quot;: &quot;Segments - Avg processing time&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 2,&#10;      &quot;format&quot;: &quot;s&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 4,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 18,&#10;        &quot;y&quot;: 0&#10;      },&#10;      &quot;id&quot;: 17,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;sum by(job) (rate(trigger_first_action_latency_seconds_sum{wait=\&quot;no_wait\&quot;}[5m])) / sum by(job) (rate(trigger_first_action_latency_seconds_count{wait=\&quot;no_wait\&quot;}[5m]))&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;300, 600&quot;,&#10;      &quot;title&quot;: &quot;Automation - First action latency&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 1,&#10;      &quot;format&quot;: &quot;percentunit&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 4,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 0,&#10;        &quot;y&quot;: 4&#10;      },&#10;      &quot;id&quot;: 10,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;1-\nsum by (load_balancer_name, service_app) ((\n     (aws_elb_httpcode_backend_5_xx_sum or aws_elb_httpcode_elb_5_xx_sum * 0)\n  + \n     (aws_elb_httpcode_elb_5_xx_sum or aws_elb_httpcode_backend_5_xx_sum * 0)\n) or aws_elb_request_count_sum * 0 )\n\n/\n  sum by(load_balancer_name, service_app) (aws_elb_request_count_sum)\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;console2\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        },&#10;        {&#10;          &quot;expr&quot;: &quot;&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;B&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;0.99, 0.995&quot;,&#10;      &quot;title&quot;: &quot;APP - Availability&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 0,&#10;      &quot;format&quot;: &quot;ms&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 4,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 6,&#10;        &quot;y&quot;: 4&#10;      },&#10;      &quot;id&quot;: 11,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;((sum by (load_balancer_name, service_app) (aws_elb_latency_sum)\n/ \nsum by (load_balancer_name, service_app) (aws_elb_request_count_sum))\n\n* 1000)\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;console2\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;50, 500&quot;,&#10;      &quot;title&quot;: &quot;APP - Latency&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: false,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 1,&#10;      &quot;format&quot;: &quot;s&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 4,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 12,&#10;        &quot;y&quot;: 4&#10;      },&#10;      &quot;id&quot;: 16,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;sum (rate(lists_start_processing_latency_seconds_sum[5m])) / sum (rate(lists_start_processing_latency_seconds_count[5m]))&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;&quot;,&#10;      &quot;title&quot;: &quot;Segments - Avg start latency&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: false,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 2,&#10;      &quot;format&quot;: &quot;short&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 4,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 18,&#10;        &quot;y&quot;: 4&#10;      },&#10;      &quot;id&quot;: 19,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;increase(ometria_trigger_campaigns_runner_node_result_completed_email[1h])&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;&quot;,&#10;      &quot;title&quot;: &quot;Automation - Emails sent / hour&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;current&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 4,&#10;      &quot;format&quot;: &quot;percentunit&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 4,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 0,&#10;        &quot;y&quot;: 8&#10;      },&#10;      &quot;id&quot;: 22,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;1-\nsum by (load_balancer_name) ((\n    (\n        aws_applicationelb_httpcode_target_5_xx_count_sum{target_group=~\&quot;targetgroup/b5a8815d-01415857c2c31244283/d8c0f7ca95cee9ac\&quot;}\n      or\n        aws_applicationelb_httpcode_elb_5_xx_count_sum{target_group=~\&quot;targetgroup/b5a8815d-01415857c2c31244283/d8c0f7ca95cee9ac\&quot;} * 0\n    )\n  + \n    (\n        aws_applicationelb_httpcode_elb_5_xx_count_sum{target_group=~\&quot;targetgroup/b5a8815d-01415857c2c31244283/d8c0f7ca95cee9ac\&quot;}\n      or\n        aws_applicationelb_httpcode_target_5_xx_count_sum{target_group=~\&quot;targetgroup/b5a8815d-01415857c2c31244283/d8c0f7ca95cee9ac\&quot;} * 0\n    )\n) or aws_applicationelb_request_count_sum{target_group=~\&quot;targetgroup/b5a8815d-01415857c2c31244283/d8c0f7ca95cee9ac\&quot;} * 0 )\n\n/\n  sum by(load_balancer_name) (aws_applicationelb_request_count_sum{target_group=~\&quot;targetgroup/b5a8815d-01415857c2c31244283/d8c0f7ca95cee9ac\&quot;})&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;B&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;0.995, 0.9995&quot;,&#10;      &quot;title&quot;: &quot;API transactional - Availability&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 2,&#10;      &quot;format&quot;: &quot;s&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 4,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 6,&#10;        &quot;y&quot;: 8&#10;      },&#10;      &quot;id&quot;: 23,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;(histogram_quantile(0.9, sum by(le) (rate(api_transactional_latency_seconds_bucket[5m]))))&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;legendFormat&quot;: &quot;&quot;,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;2, 4&quot;,&#10;      &quot;title&quot;: &quot;API transactional - Latency (90th %ile)&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: false,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 1,&#10;      &quot;format&quot;: &quot;s&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 4,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 12,&#10;        &quot;y&quot;: 8&#10;      },&#10;      &quot;id&quot;: 15,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;sum (rate(lists_update_frequency_seconds_sum[5m])) / sum (rate(lists_update_frequency_seconds_count[5m]))&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;&quot;,&#10;      &quot;title&quot;: &quot;Segments - Avg update job frequency&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: false,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 2,&#10;      &quot;format&quot;: &quot;short&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 4,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 18,&#10;        &quot;y&quot;: 8&#10;      },&#10;      &quot;id&quot;: 20,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;increase(ometria_trigger_campaigns_runner_node_any[1h])&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;&quot;,&#10;      &quot;title&quot;: &quot;Automation - Node evaluations / hour&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;current&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 4,&#10;      &quot;format&quot;: &quot;percentunit&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 4,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 0,&#10;        &quot;y&quot;: 12&#10;      },&#10;      &quot;id&quot;: 12,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;1-\nsum by (load_balancer_name, service_app) ((\n     (aws_elb_httpcode_backend_5_xx_sum or aws_elb_httpcode_elb_5_xx_sum * 0)\n  + \n     (aws_elb_httpcode_elb_5_xx_sum or aws_elb_httpcode_backend_5_xx_sum * 0)\n) or aws_elb_request_count_sum * 0 )\n\n/\n  sum by(load_balancer_name, service_app) (aws_elb_request_count_sum)\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;image-recs\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;0.99, 0.995&quot;,&#10;      &quot;title&quot;: &quot;Image recs - Availability&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 0,&#10;      &quot;format&quot;: &quot;s&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 4,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 6,&#10;        &quot;y&quot;: 12&#10;      },&#10;      &quot;id&quot;: 13,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;(histogram_quantile(0.9, sum by(le) (rate(image_recs_product_recs_request_duration_seconds_bucket[5m]))))&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;0.05, 0.5&quot;,&#10;      &quot;title&quot;: &quot;Image recs - Latency (90th %ile)&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: false,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 2,&#10;      &quot;format&quot;: &quot;short&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 4,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 18,&#10;        &quot;y&quot;: 12&#10;      },&#10;      &quot;id&quot;: 21,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;increase(ometria_trigger_campaigns_membership_write_entry_trigger_campaign_customer[1h])&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;&quot;,&#10;      &quot;title&quot;: &quot;Automation - Campaign entries / hour&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;current&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#d44a3a&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#508642&quot;&#10;      ],&#10;      &quot;decimals&quot;: 4,&#10;      &quot;format&quot;: &quot;percentunit&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 4,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 0,&#10;        &quot;y&quot;: 16&#10;      },&#10;      &quot;id&quot;: 6,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;1-\nsum by (load_balancer_name, service_app) ((\n     (aws_elb_httpcode_backend_5_xx_sum or aws_elb_httpcode_elb_5_xx_sum * 0)\n  + \n     (aws_elb_httpcode_elb_5_xx_sum or aws_elb_httpcode_backend_5_xx_sum * 0)\n) or aws_elb_request_count_sum * 0 )\n\n/\n  sum by(load_balancer_name, service_app) (aws_elb_request_count_sum)\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;preferences-center-v2\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;B&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;0.9, 0.95&quot;,&#10;      &quot;title&quot;: &quot;Prefs Centre - Availability&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 0,&#10;      &quot;format&quot;: &quot;ms&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 4,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 6,&#10;        &quot;y&quot;: 16&#10;      },&#10;      &quot;id&quot;: 7,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;app&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;(sum by (load_balancer_name, service_app) (aws_elb_latency_sum)\n/ \nsum by (load_balancer_name, service_app) (aws_elb_request_count_sum)) * 1000\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;preferences-center-v2\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;legendFormat&quot;: &quot;avg&quot;,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;50, 500&quot;,&#10;      &quot;title&quot;: &quot;Prefs centre - Latency&quot;,&#10;      &quot;transparent&quot;: false,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 2,&#10;      &quot;format&quot;: &quot;percentunit&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 4,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 0,&#10;        &quot;y&quot;: 20&#10;      },&#10;      &quot;id&quot;: 8,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;1-\nsum by (load_balancer_name, service_app) ((\n     (aws_elb_httpcode_backend_5_xx_sum or aws_elb_httpcode_elb_5_xx_sum * 0)\n  + \n     (aws_elb_httpcode_elb_5_xx_sum or aws_elb_httpcode_backend_5_xx_sum * 0)\n) or aws_elb_request_count_sum * 0 )\n\n/\n  sum by(load_balancer_name, service_app) (aws_elb_request_count_sum)\n\n* on(load_balancer_name) group_left(service_app)\n\naws_elb_info{service_app=\&quot;js-tracker-traefik\&quot;}&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;20s&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;legendFormat&quot;: &quot;availability&quot;,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;99.9, 99.99&quot;,&#10;      &quot;title&quot;: &quot;trk.ometria.com - Availability&quot;,&#10;      &quot;transparent&quot;: false,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    },&#10;    {&#10;      &quot;cacheTimeout&quot;: null,&#10;      &quot;colorBackground&quot;: true,&#10;      &quot;colorPostfix&quot;: false,&#10;      &quot;colorPrefix&quot;: false,&#10;      &quot;colorValue&quot;: false,&#10;      &quot;colors&quot;: [&#10;        &quot;#508642&quot;,&#10;        &quot;rgba(237, 129, 40, 0.89)&quot;,&#10;        &quot;#d44a3a&quot;&#10;      ],&#10;      &quot;decimals&quot;: 0,&#10;      &quot;format&quot;: &quot;s&quot;,&#10;      &quot;gauge&quot;: {&#10;        &quot;maxValue&quot;: 100,&#10;        &quot;minValue&quot;: 0,&#10;        &quot;show&quot;: false,&#10;        &quot;thresholdLabels&quot;: false,&#10;        &quot;thresholdMarkers&quot;: true&#10;      },&#10;      &quot;gridPos&quot;: {&#10;        &quot;h&quot;: 4,&#10;        &quot;w&quot;: 6,&#10;        &quot;x&quot;: 6,&#10;        &quot;y&quot;: 20&#10;      },&#10;      &quot;id&quot;: 14,&#10;      &quot;interval&quot;: null,&#10;      &quot;links&quot;: [],&#10;      &quot;mappingType&quot;: 1,&#10;      &quot;mappingTypes&quot;: [&#10;        {&#10;          &quot;name&quot;: &quot;value to text&quot;,&#10;          &quot;value&quot;: 1&#10;        },&#10;        {&#10;          &quot;name&quot;: &quot;range to text&quot;,&#10;          &quot;value&quot;: 2&#10;        }&#10;      ],&#10;      &quot;maxDataPoints&quot;: 100,&#10;      &quot;nullPointMode&quot;: &quot;connected&quot;,&#10;      &quot;nullText&quot;: null,&#10;      &quot;postfix&quot;: &quot;&quot;,&#10;      &quot;postfixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;prefix&quot;: &quot;&quot;,&#10;      &quot;prefixFontSize&quot;: &quot;50%&quot;,&#10;      &quot;rangeMaps&quot;: [&#10;        {&#10;          &quot;from&quot;: &quot;null&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;to&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;sparkline&quot;: {&#10;        &quot;fillColor&quot;: &quot;#82b5d8&quot;,&#10;        &quot;full&quot;: true,&#10;        &quot;lineColor&quot;: &quot;#1f78c1&quot;,&#10;        &quot;show&quot;: true&#10;      },&#10;      &quot;tableColumn&quot;: &quot;load_balancer_name&quot;,&#10;      &quot;targets&quot;: [&#10;        {&#10;          &quot;expr&quot;: &quot;(histogram_quantile(0.9, sum by(le) (rate(tracker_process_duration_seconds_bucket[5m]))))&quot;,&#10;          &quot;format&quot;: &quot;time_series&quot;,&#10;          &quot;interval&quot;: &quot;&quot;,&#10;          &quot;intervalFactor&quot;: 1,&#10;          &quot;refId&quot;: &quot;A&quot;&#10;        }&#10;      ],&#10;      &quot;thresholds&quot;: &quot;0.05, 0.5&quot;,&#10;      &quot;title&quot;: &quot;JS Tracker Pipeline - Latency (90th %ile)&quot;,&#10;      &quot;type&quot;: &quot;singlestat&quot;,&#10;      &quot;valueFontSize&quot;: &quot;80%&quot;,&#10;      &quot;valueMaps&quot;: [&#10;        {&#10;          &quot;op&quot;: &quot;=&quot;,&#10;          &quot;text&quot;: &quot;N/A&quot;,&#10;          &quot;value&quot;: &quot;null&quot;&#10;        }&#10;      ],&#10;      &quot;valueName&quot;: &quot;avg&quot;&#10;    }&#10;  ],&#10;  &quot;refresh&quot;: false,&#10;  &quot;schemaVersion&quot;: 16,&#10;  &quot;style&quot;: &quot;dark&quot;,&#10;  &quot;tags&quot;: [],&#10;  &quot;templating&quot;: {&#10;    &quot;list&quot;: []&#10;  },&#10;  &quot;time&quot;: {&#10;    &quot;from&quot;: &quot;now-24h&quot;,&#10;    &quot;to&quot;: &quot;now&quot;&#10;  },&#10;  &quot;timepicker&quot;: {&#10;    &quot;refresh_intervals&quot;: [&#10;      &quot;5s&quot;,&#10;      &quot;10s&quot;,&#10;      &quot;30s&quot;,&#10;      &quot;1m&quot;,&#10;      &quot;5m&quot;,&#10;      &quot;15m&quot;,&#10;      &quot;30m&quot;,&#10;      &quot;1h&quot;,&#10;      &quot;2h&quot;,&#10;      &quot;1d&quot;&#10;    ],&#10;    &quot;time_options&quot;: [&#10;      &quot;5m&quot;,&#10;      &quot;15m&quot;,&#10;      &quot;1h&quot;,&#10;      &quot;6h&quot;,&#10;      &quot;12h&quot;,&#10;      &quot;24h&quot;,&#10;      &quot;2d&quot;,&#10;      &quot;7d&quot;,&#10;      &quot;30d&quot;&#10;    ]&#10;  },&#10;  &quot;timezone&quot;: &quot;&quot;,&#10;  &quot;title&quot;: &quot;Critical Systems&quot;,&#10;  &quot;uid&quot;: &quot;lY0h44JZz&quot;,&#10;  &quot;version&quot;: 91&#10;}" />
        </outline>
        <outline _complete="true" text="Add transactional API to public API metrics">
          <outline text="Check actual generated metrics">
            <outline text="api_transactional_latency_seconds_count" />
          </outline>
        </outline>
        <outline text="Check boundaries against SL(O/A)'s" />
      </outline>
      <outline _complete="true" text="Install qutebrowser" />
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;11&quot; startDay=&quot;18&quot;&gt;Mon, Nov 18, 2019&lt;/time&gt; Transactional API debug">
        <outline text="accounts.get gearman call thread scoped locking to prevent race conditions saturating gearman workers" />
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;11&quot; startDay=&quot;18&quot;&gt;Mon, Nov 18, 2019&lt;/time&gt; #om-interview Oliver Saunders (Backend - Southampton)">
        <outline text="Whiteboarding">
          <outline text="Quite nervous, requires quite a lot of prompting to get info" />
          <outline text="Draw a solution with three separate E T L components, but with little thought around how they communicate" />
          <outline text="Mentioned queueing but didn't really expand that far" />
          <outline text="Nailed the dt_updated (taken initially) thing straight away" />
          <outline text="Understood the monitoring issue (suggested watching the dt and pushing an alert when over a threshold)" />
          <outline text="Acknowledged a good number of other metrics, middle queue levels etc" />
          <outline text="How to deal with situation where job is taking longer than {2 hours}?">
            <outline text="Not sure" />
          </outline>
          <outline text="What are we bottlenecked by?">
            <outline text="Acknowledged mailchimp rate limiting" />
          </outline>
          <outline text="Doesn't appear to understand a system where we'd have separately scaling components" />
        </outline>
        <outline text="Code review">
          <outline text="" />
        </outline>
      </outline>
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;11&quot; startDay=&quot;18&quot;&gt;Mon, Nov 18, 2019&lt;/time&gt; Wrote some sqla for split segment API" _note="from sqlalchemy import case, func, insert, literal, select&#10;&#10;from ometria_datamodels.ecomm import ListCustomer&#10;&#10;&#10;def main():&#10;    list_id = 10&#10;    case_conditions = case(&#10;        [&#10;            (literal(True) == True, 10),&#10;            (literal(True) == False, 20),&#10;        ],&#10;        else_=30&#10;    ).label(&quot;list_id&quot;)&#10;    rank = 5&#10;&#10;    cte = (select([ListCustomer.__table__.c.customer_id,&#10;                   func.rank().over(order_by=func.random()).label(&quot;rank&quot;)])&#10;           .where(ListCustomer.__table__.c.list_id==list_id)&#10;           .cte(&quot;cte&quot;))&#10;&#10;    q = (select([case_conditions] + [cte.c.customer_id,&#10;                                     func.now().label(&quot;dt_added&quot;),&#10;                                     literal(False).label(&quot;is_observed&quot;)])&#10;         .where(cte.c.rank &amp;lt;= rank))&#10;&#10;    ins = (insert(ListCustomer.__table__)&#10;           .from_select([&quot;list_id&quot;,&#10;                         &quot;customer_id&quot;,&#10;                         &quot;dt_added&quot;,&#10;                         &quot;is_observed&quot;],&#10;                        q,&#10;                        include_defaults=False))&#10;    print(ins.compile(compile_kwargs={&quot;literal_binds&quot;: True}))&#10;&#10;&#10;if __name__ == &quot;__main__&quot;:&#10;    main()&#10;" />
      <outline _complete="true" text="#important Kerry Lattice feedback" />
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;11&quot; startDay=&quot;18&quot;&gt;Mon, Nov 18, 2019&lt;/time&gt; Review Arun's &quot;used in automation&quot; changes" />
      <outline _complete="true" text="Arun's &quot;used in automation&quot; backfill script" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;20&quot;&gt;Mon, Jan 20, 2020&lt;/time&gt; Fixed mass email monitoring long batch alert (query was incorrect)" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;20&quot;&gt;Mon, Jan 20, 2020&lt;/time&gt; Adapted ometria.checks script to alert on long sending batches" />
    </outline>
  </outline>
  <outline text="Recipes">
    <outline text="BBC 6 ingredient 1 pot dinners" _note="&lt;a href=&quot;https://www.bbc.co.uk/food/collections/5_ingredient_one-pot_dinners&quot;&gt;https://www.bbc.co.uk/food/collections/5_ingredient_one-pot_dinners&lt;/a&gt;" />
    <outline text="Mushroom risotto" _note="&lt;a href=&quot;https://www.google.com/amp/s/www.bbcgoodfood.com/recipes/mushroom-risotto%3famp&quot;&gt;https://www.google.com/amp/s/www.bbcgoodfood.com/recipes/mushroom-risotto%3famp&lt;/a&gt;" />
    <outline text="Bolognese &lt;a href=&quot;https://youtu.be/Sw_Ze9zIafM&quot;&gt;https://youtu.be/Sw_Ze9zIafM&lt;/a&gt;">
      <outline text="Ingredients">
        <outline text="2/3 carrots" />
        <outline text="2/3 celery" />
        <outline text="Onion" />
        <outline text="Pancetta 150-200g" />
        <outline text="Beef &amp;amp; pork mince" />
        <outline text="Tomato paste" />
        <outline text="Chicken stock" />
        <outline text="Thyme" />
        <outline text="Wine" />
        <outline text="" />
      </outline>
      <outline text="Dice celery, carrots, onion, pancetta, put in bowl" />
      <outline text="Oil and butter in big pan" />
      <outline text="Then mixture from above bowl into it, fry" />
      <outline text="Add beef and pork, fry/cook all moisture off" />
      <outline text="Add thyme?" />
      <outline text="Add wine 1-2 glasses, wait until it's mostly cooked off" />
      <outline text="Add tomato paste ~300g" />
      <outline text="?Add cup of milk??" />
      <outline text="Add 2 cups of stock" />
      <outline text="Add salt and pepper" />
      <outline text="Cook min 45 mins, stir occasionally" />
    </outline>
    <outline text="Carbonara &lt;a href=&quot;https://www.recipesfromitaly.com/spaghetti-carbonara-original-recipe/&quot;&gt;https://www.recipesfromitaly.com/spaghetti-carbonara-original-recipe/&lt;/a&gt;" />
    <outline text="Roast chicken and potato (cast iron) https://www.bonappetit.com/recipe/cast-iron-roast-chicken-with-crispy-potatoes" _note="55 mins at ~220c fan oven seemed to be perfect for a 1.4kg chicken (based on 20 min/lb)&#10;Added a sliced courgette after initial 30 mins (so final 25 mins) which was perfect" />
    <outline text="Chicken pie https://www.bbc.co.uk/food/recipes/chicken_and_tarragon_pie_93074" />
  </outline>
  <outline text="Kettlebells">
    <outline text="2020-05 #riteofpassage">
      <outline text="Heavy (Monday)">
        <outline text="Up to 5x5 ladders" />
        <outline text="Hard swings - roll 2 die, max swings in time with working weight" />
      </outline>
      <outline text="Light (Weds)">
        <outline text="Easy CnP or just MP 2 rungs lower than heavy day" />
        <outline text="Easy snatches, 2 die and 50-60% max with snatch test weight" />
      </outline>
      <outline text="Variety (Thurs)">
        <outline text="Do whatever but take it easy" />
      </outline>
      <outline text="Medium (Fri)">
        <outline text="CnP ladders, 1 rung lower than heavy day" />
        <outline text="Moderate swings - 2 die, 70-80% effort with working weight" />
      </outline>
      <outline text="Variety (Sat)">
        <outline text="You may do any one, two, or all three of the following options" />
        <outline text="5 x 5 loaded cleans alternated with 5 x 1 get-ups with KB heavier than CnP ladders. Rest for a few minutes between sets" />
        <outline text="Do 2–3 sets of 5–10 swings and/or 2–3 sets of 1–10 snatches with a kettlebell heavier than the one you are doing timed sets with" />
        <outline text="Do whatever you want and take it easy." />
      </outline>
    </outline>
    <outline text="Log" _note="RL = Rep Ladder">
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;7&quot; startDay=&quot;4&quot;&gt;Sat, Jul 4, 2020&lt;/time&gt; #riteofpassage #TGU 40kg worked up to 4/4" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;7&quot; startDay=&quot;3&quot;&gt;Fri, Jul 3, 2020&lt;/time&gt; #riteofpassage #press 40kg max attempts. 1L, 2R" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;7&quot; startDay=&quot;3&quot;&gt;Fri, Jul 3, 2020&lt;/time&gt; #longcycle #oa 40kg 5/5 x2" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;7&quot; startDay=&quot;2&quot;&gt;Thu, Jul 2, 2020&lt;/time&gt; #riteofpassage #clean #dh 20/20/20/20  " />
      <outline text="Wed, Jul 1, 2020 #riteofpassage #CnP 40kg ladders 1/1/1 (row superset)" _note="Playing with heavier bell for bants" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;7&quot; startDay=&quot;1&quot;&gt;Wed, Jul 1, 2020&lt;/time&gt; #riteofpassage #snatch 24kg 3m 30/20(10) continuous without putting down" _note="Bell rang before final 10, so momentarily stopped before picking back up and finishing final 10 quickly. Pace too slow, but lots of gas in the tank" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;29&quot;&gt;Mon, Jun 29, 2020&lt;/time&gt; #riteofpassage #CnP 36kg ladders 3/3/2 (row superset) " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;29&quot;&gt;Mon, Jun 29, 2020&lt;/time&gt; #riteofpassage #swing #oa 36kg 6m 8x10 alternating, total 80 " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;27&quot;&gt;Sat, Jun 27, 2020&lt;/time&gt; #riteofpassage #clean 36kg 5/5 x5 #superset  " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;27&quot;&gt;Sat, Jun 27, 2020&lt;/time&gt; #riteofpassage #TGU 36kg 1/1 x5 #superset  " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;27&quot;&gt;Sat, Jun 27, 2020&lt;/time&gt; #riteofpassage #snatch 28kg 10/10 x3 " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;26&quot;&gt;Fri, Jun 26, 2020&lt;/time&gt; #riteofpassage #CnP 32kg ladders 2/2/2/2/2 (row superset), then max CnP reps attempt with 36kg 5L/6R, big PB! Progress to 36 next week" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;26&quot;&gt;Fri, Jun 26, 2020&lt;/time&gt; #riteofpassage #swing #oa 32kg 4m 10x6, finished with 30 seconds left but stopped, took it easy after max CnP" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;26&quot;&gt;Fri, Jun 26, 2020&lt;/time&gt; #riteofpassage " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;25&quot;&gt;Thu, Jun 25, 2020&lt;/time&gt; #riteofpassage #clean #dh 20/20/14 #fatigued (probably too hot)" />
      <outline text="Wed, Jun 24, 2020 #riteofpassage #CnP 32kg ladders 1/1/1/1/1 (row superset)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;24&quot;&gt;Wed, Jun 24, 2020&lt;/time&gt; #riteofpassage #snatch 24kg 10m 20/20, 15/15, 10/10 x3 (130 total)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;22&quot;&gt;Mon, Jun 22, 2020&lt;/time&gt; #riteofpassage #CnP 32kg ladders 3/3/3/3/3 (row superset)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;22&quot;&gt;Mon, Jun 22, 2020&lt;/time&gt; #riteofpassage #swing #oa 32kg 8m 10x10 alternating, 8/8 (total 108)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;20&quot;&gt;Sat, Jun 20, 2020&lt;/time&gt; #riteofpassage #clean 36kg 5/5 x5 #superset " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;20&quot;&gt;Sat, Jun 20, 2020&lt;/time&gt; #riteofpassage #TGU 36kg 1/1 x5 #superset " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;20&quot;&gt;Sat, Jun 20, 2020&lt;/time&gt; #riteofpassage #snatch 28kg 10/10 x3" />
      <outline text="Fri, Jun 19, 2020 #riteofpassage #CnP 32kg ladders 2/2/2/2 (row superset)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;19&quot;&gt;Fri, Jun 19, 2020&lt;/time&gt; #riteofpassage #swing #oa 32kg 7m 10x10 alternating (total 100)" />
      <outline text="Thu, Jun 18, 2020 #riteofpassage #windmill ladders 1/2/3, with 20kg, 28kg, 36kg #superset" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;18&quot;&gt;Thu, Jun 18, 2020&lt;/time&gt; #riteofpassage #goblet ladders 5/10/15 with 20kg, 28kg. 3/6/9 with 36kg #superset" _note="Goblets were straightforward but want to keep it low intensity today" />
      <outline text="Wed, Jun 17, 2020 #riteofpassage #CnP 32kg ladders 1/1/1/1 (row superset)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;17&quot;&gt;Wed, Jun 17, 2020&lt;/time&gt; #riteofpassage #snatch 24kg 6m 20/20/10/10/10/10 (80 total)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;15&quot;&gt;Mon, Jun 15, 2020&lt;/time&gt; #riteofpassage #CnP 32kg ladders 3/3/3/3 (row superset)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;15&quot;&gt;Mon, Jun 15, 2020&lt;/time&gt; #riteofpassage #swing #dh 32kg 3m 20x2, then either 10x2 or 10x4 (can't remember as writing two days later), however it felt clean and easy" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;12&quot;&gt;Fri, Jun 12, 2020&lt;/time&gt; #riteofpassage #swing #dh 32kg 8m 20x5, 10x3 (total 130)" _note="Felt snappy and clean and easiest they have felt" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;13&quot;&gt;Sat, Jun 13, 2020&lt;/time&gt; #riteofpassage #clean 36kg 5/5 x5 #superset" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;13&quot;&gt;Sat, Jun 13, 2020&lt;/time&gt; #riteofpassage #TGU 36kg 1/1 x5 #superset" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;13&quot;&gt;Sat, Jun 13, 2020&lt;/time&gt; #riteofpassage #snatch 24kg 5/5, 36kg 5/5, 48kg 5/5 PB!" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;12&quot;&gt;Fri, Jun 12, 2020&lt;/time&gt; #riteofpassage #CnP 32kg ladders 2/2/2 (row superset)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;11&quot;&gt;Thu, Jun 11, 2020&lt;/time&gt; #riteofpassage #bentpress 24kg ladder 1/2/3, 36kg ladder 1/2/3" />
      <outline text="Wed, Jun 10, 2020 #riteofpassage  #CnP 32kg 1/1/1 rows superset" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;10&quot;&gt;Wed, Jun 10, 2020&lt;/time&gt; #riteofpassage #snatch 24kg 7m alternating 10s, 80 total" />
      <outline text="Mon, Jun 8, 2020 #riteofpassage #CnP 32kg ladders 3/3/3 (row superset)" _note="Reset volume to start again fresh, back pain nearly nonexistent" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;8&quot;&gt;Mon, Jun 8, 2020&lt;/time&gt; #riteofpassage #swing #dh 32kg 9m, 30/30/20/20/10/10/10/10 (total 140)" _note="Missed second set of 30 which threw it all off. First 30 was well hard" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;5&quot;&gt;Fri, Jun 5, 2020&lt;/time&gt; #riteofpassage #CnP #deload 24kg ladders 4/4/4/4/4 (row superset)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;5&quot;&gt;Fri, Jun 5, 2020&lt;/time&gt; #riteofpassage #swing #dh #deload 24kg 11m 20x9, 18 (total 198). Bell rang in final set due to poor timing" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;3&quot;&gt;Wed, Jun 3, 2020&lt;/time&gt; #riteofpassage #CnP #deload 24kg ladders 3/3/3/3/3 (row superset)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;3&quot;&gt;Wed, Jun 3, 2020&lt;/time&gt; #riteofpassage #snatch 24kg 8m alternating 10s, 80 total" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;1&quot;&gt;Mon, Jun 1, 2020&lt;/time&gt; #riteofpassage #CnP #deload 24kg ladders 5/5/5/5/5 (row superset)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;1&quot;&gt;Mon, Jun 1, 2020&lt;/time&gt; #riteofpassage #snatch 24kg 5m test, alternating 30/20(10)/10/10/5 (total 85)" _note="Missed second set of 30 which threw it all off. First 30 was well hard" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;29&quot;&gt;Fri, May 29, 2020&lt;/time&gt; #riteofpassage skipped #CnP and quickly gave up on #swing. Super #fatigued and lat feeling quite sore. Active recovery work for next couple days" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;28&quot;&gt;Thu, May 28, 2020&lt;/time&gt; #run light jog down to beach, along and back" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;27&quot;&gt;Wed, May 27, 2020&lt;/time&gt; #CnP #riteofpassage 32kg ladders 3/3/3/3/3 " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;27&quot;&gt;Wed, May 27, 2020&lt;/time&gt; #riteofpassage #row #oa 32kg superset (like for like) with CnP " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;27&quot;&gt;Wed, May 27, 2020&lt;/time&gt; #riteofpassage #snatch 24kg 5m effort, 20/20, 10/10x2 (total 80)" _note="60% effort, with 10 seconds left at the end" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;25&quot;&gt;Mon, May 25, 2020&lt;/time&gt; #CnP #riteofpassage 32kg ladders 5/5/5/5/5 " _note="Took a long time! Worth running for a couple weeks until time reduces and form consistently good?" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;25&quot;&gt;Mon, May 25, 2020&lt;/time&gt; #riteofpassage #row #oa 32kg superset (like for like) with CnP   " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;25&quot;&gt;Mon, May 25, 2020&lt;/time&gt; #riteofpassage #swing #dh 32kg #EMOM max effort 9m, 30/30/20/20/10/10/10/10/7 (total 147)" _note="Was realistically closer to 90% at the end, still building" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;23&quot;&gt;Sat, May 23, 2020&lt;/time&gt; #riteofpassage #clean 36kg 5/5 x5 #superset " />
      <outline text="Sat, May 23, 2020 #riteofpassage #TGU 36kg 1/1 x5 #superset " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;23&quot;&gt;Sat, May 23, 2020&lt;/time&gt; #riteofpassage #snatch 32kg 5/5 x1 then called it #fatigued " />
      <outline text="Fri, May 22, 2020 #CnP #riteofpassage 32kg ladders 4/4/4/4/4" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;22&quot;&gt;Fri, May 22, 2020&lt;/time&gt; #riteofpassage #row #oa 32kg superset (like for like) with CnP" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;22&quot;&gt;Fri, May 22, 2020&lt;/time&gt; #riteofpassage #swing #dh 32kg moderate effort 6m, 20, 20, 20, 10, 10, 10, 15. Total 105" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;21&quot;&gt;Thu, May 21, 2020&lt;/time&gt; #riteofpassage #bentpress 24kg ladder 1/2/3, 36kg ladder 1/2/3" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;20&quot;&gt;Wed, May 20, 2020&lt;/time&gt; #CnP #riteofpassage 32kg ladders 3/3/2/2/2" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;20&quot;&gt;Wed, May 20, 2020&lt;/time&gt; #riteofpassage #row #oa 32kg superset (like for like) with CnP" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;20&quot;&gt;Wed, May 20, 2020&lt;/time&gt; #riteofpassage #snatch 24kg 8 reps E45s, total of 96 reps in 9 mins total" _note="60% effort, seemed pretty accurate estimate" />
      <outline text="Mon, May 18, 2020 #CnP #riteofpassage 32kg ladders 5/5/4/4/4" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;18&quot;&gt;Mon, May 18, 2020&lt;/time&gt; #riteofpassage #row #oa 32kg superset (like for like) with CnP  " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;18&quot;&gt;Mon, May 18, 2020&lt;/time&gt; #riteofpassage #swing #dh 32kg #EMOM  5m, 25/25/25/15/20 (total 115)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;16&quot;&gt;Sat, May 16, 2020&lt;/time&gt; #riteofpassage #clean 36kg 5/5 x5 #superset" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;16&quot;&gt;Sat, May 16, 2020&lt;/time&gt; #riteofpassage #TGU 36kg 1/1 x5 #superset" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;16&quot;&gt;Sat, May 16, 2020&lt;/time&gt; #riteofpassage #snatch 32kg 10/10 x3" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;15&quot;&gt;Fri, May 15, 2020&lt;/time&gt; #CnP #riteofpassage 32kg ladders 3/3/3/3/3" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;15&quot;&gt;Fri, May 15, 2020&lt;/time&gt; #riteofpassage #row #oa 32kg superset (like for like) with CnP " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;15&quot;&gt;Fri, May 15, 2020&lt;/time&gt; #swing #dh #riteofpassage 32kg #EMOM 4m x20" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;14&quot;&gt;Thu, May 14, 2020&lt;/time&gt; #riteofpassage #windmill 36kg 1/1 x5" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;13&quot;&gt;Wed, May 13, 2020&lt;/time&gt; #CnP #riteofpassage 32kg ladders 2/2/2/2/2 #superset " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;13&quot;&gt;Wed, May 13, 2020&lt;/time&gt; #riteofpassage #row #oa 32kg superset (like for like) with CnP" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;13&quot;&gt;Wed, May 13, 2020&lt;/time&gt; #snatch #riteofpassage 24kg #EMOM 8m x10" />
      <outline text="Mon, May 11, 2020 #CnP #riteofpassage 32kg ladders 4/4/4/4/4" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;11&quot;&gt;Mon, May 11, 2020&lt;/time&gt; #riteofpassage #swing #dh 32kg 8m #EMOM x15 (total 120 reps)" _note="Supposed to be 100% effort, wasn't far off but probably had a bit more in the tank" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;8&quot;&gt;Fri, May 8, 2020&lt;/time&gt; #CnP #riteofpassage 32kg ladders 3/3/3/2/2" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;7&quot;&gt;Thu, May 7, 2020&lt;/time&gt; #TGU 36kg 1/1 x2" _note="Not feeling well invested in training this week likely due to new environment following house move" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;7&quot;&gt;Thu, May 7, 2020&lt;/time&gt; #goblet 24kg x12, 36kg x8, 48kg x4" _note="Heart not in it, so stopped" />
      <outline text="Wed, May 6, 2020 #press #riteofpassage 32kg ladders 2/2/2/1/1 " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;6&quot;&gt;Wed, May 6, 2020&lt;/time&gt; #swing #dh #EMOM 32kgx10, 10m" _note="Dice roll, supposed to be 80% effort but came in closer to 60%, quite easy" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;5&quot;&gt;Tue, May 5, 2020&lt;/time&gt; #snatch 24kg ladder 5/10/15 then gave up #fatigued" _note="Moving week, tired from RoP day before, possibly not enough food and possibly hungover" />
      <outline text="Mon, May 4, 2020 #CnP #riteofpassage 32kg ladders 4/4/4/3/3" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;1&quot;&gt;Fri, May 1, 2020&lt;/time&gt; #bentpress ladders 24kg 1/2/3, 36kg 1/2/3/1/2" _note="Hips took ages to warmup on lighter weight. Lost balance a couple of times but reattempts meant volume PB with 36." />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;30&quot;&gt;Thu, Apr 30, 2020&lt;/time&gt; #complex #EMOM #oa #swing #clean #frontsquat. First 10m, 3 swing, 3 clean, 3 FS one side, alternating sides. 11m-30m, 4 of each. Total 110 each lift" _note="Cardio started getting hard low 20s, hips started struggling late 20" />
      <outline text="Wed, Apr 29, 2020 #TGU 32kg 1/1 x1, 2/2 x3 #fatigued in grip/arms/shoulders" />
      <outline text="Tue, Apr 28, 2020 #run copse route, continuous no break, felt good" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;27&quot;&gt;Mon, Apr 27, 2020&lt;/time&gt; #CnP 32kg ladders 4/4/4/3/3" _note="Ladder PB streak continues" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;27&quot;&gt;Mon, Apr 27, 2020&lt;/time&gt; #swing #dh 24kg 20 x5 (100 total)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;25&quot;&gt;Sat, Apr 25, 2020&lt;/time&gt; #superset #swing #dh 32kg 10, 15, 25, 25. Then 20 x5 (total 175)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;25&quot;&gt;Sat, Apr 25, 2020&lt;/time&gt; #superset #goblet 48kg 2,4,6. Then 5 x5 (total 37)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;24&quot;&gt;Fri, Apr 24, 2020&lt;/time&gt; #longcycle #oa 8/8 one set #fatigued " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;24&quot;&gt;Fri, Apr 24, 2020&lt;/time&gt; #bentpress ladders 24kg 1/2/3, 36kg 1/2 #fatigued" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;24&quot;&gt;Fri, Apr 24, 2020&lt;/time&gt; #armbar #bent #press 5/5 x3" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;23&quot;&gt;Thu, Apr 23, 2020&lt;/time&gt; #TGU 32kg ladders, 1/2/2.5 (up, not down), 1/2 (6.5 per side total)" _note="Solid, 3 reps per side will be a good feeling, not far off" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;23&quot;&gt;Thu, Apr 23, 2020&lt;/time&gt; #snatch 5m #test 75 reps then caved. Did in 10/10 #EMOM pattern with tactical swop" _note="Definitely got it now I know what to expect, retest in a couple days" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;21&quot;&gt;Tue, Apr 21, 2020&lt;/time&gt; #TGU 32kg attempted 1/1, 2/2, 2/2, not pretty #fatigued  " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;21&quot;&gt;Tue, Apr 21, 2020&lt;/time&gt; #clean #oa 32kg 5/5, stopped due to #fatigued   " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;20&quot;&gt;Mon, Apr 20, 2020&lt;/time&gt; #complex #EMOM 2x24kg, 30m, swing, clean, snatch, front squat. Final #heartrate 124 BPM" _note="Hip fatigue became dimishing factor rather than cardio - good steady state intensity, heart rate comfortable throughout" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;20&quot;&gt;Mon, Apr 20, 2020&lt;/time&gt; #snatch 24kg, 25/25, 15/15, rests between all sets " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;20&quot;&gt;Mon, Apr 20, 2020&lt;/time&gt; #RDL #ol 24kg 5x5" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;19&quot;&gt;Sun, Apr 19, 2020&lt;/time&gt; #press #oa worked up to #max reps 36kg Lx4, Rx6" _note="Huge PB, previous was 1 per side (6 months ago left was mostly misses)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;19&quot;&gt;Sun, Apr 19, 2020&lt;/time&gt; #TGU #partial to elbow, 24kg 5/5, 36kg 5/5, 48kg static holds" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;19&quot;&gt;Sun, Apr 19, 2020&lt;/time&gt; 24kg #bottomup #press and static holds" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;17&quot;&gt;Fri, Apr 17, 2020&lt;/time&gt; #bentpress ladders 24kg 1/2/3, 32kg 1/2/3, 36kg 1/2/3" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;17&quot;&gt;Fri, Apr 17, 2020&lt;/time&gt; #press #oa #max reps 24kg Lx15, Rx15" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;17&quot;&gt;Fri, Apr 17, 2020&lt;/time&gt; #RDL #ol 24kg 4(5)x5, might have done 5 sets, can't remember " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;16&quot;&gt;Thu, Apr 16, 2020&lt;/time&gt; #jerk 2x24kg 10x3, 1x24kg 10x6 (per side), 100 per side total" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;15&quot;&gt;Wed, Apr 15, 2020&lt;/time&gt; #TGU 32kg 1/1 x2, 2/2 x3 (down to prone with arm extended then back up for second rep). 8 reps total/side" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;14&quot;&gt;Tue, Apr 14, 2020&lt;/time&gt; #swing 32kg x10, E30s x8" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;14&quot;&gt;Tue, Apr 14, 2020&lt;/time&gt; #snatch #EMOM 24kg x12, 10m" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;14&quot;&gt;Tue, Apr 14, 2020&lt;/time&gt; #RDL #ol 24kg 3x5" _note="Weight outside working leg, leg near straight and locked, weight through heel" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;13&quot;&gt;Mon, Apr 13, 2020&lt;/time&gt; #CnP 32kg ladders 4/4/3/3/3" _note="Ladder PB" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;13&quot;&gt;Mon, Apr 13, 2020&lt;/time&gt; #swing #oa 32kg 5/5 x3" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;11&quot;&gt;Sat, Apr 11, 2020&lt;/time&gt; light play with 12kg, tactical snatches" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;10&quot;&gt;Fri, Apr 10, 2020&lt;/time&gt; #complex swing, clean, snatch, press, front s/squat, rear s/squat, front squat. Alternating left and right, ~10 per side (wasn't counting) #fatigued" _note="Must review volume next week, as hit fatigue state on Weds. Perhaps Weds should be active rest day (very light work or none). Find somewhere else to put heavy swings/goblets, or remove heavy swings and only find space for goblets" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;9&quot;&gt;Thu, Apr 9, 2020&lt;/time&gt; #bentpress ladders 24kg 1/2/3, 32kg 1/2/3, 36kg 1/2 #fatigued" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;8&quot;&gt;Wed, Apr 8, 2020&lt;/time&gt; #swing #goblet #superset #EMOM 48kg 8m, 10 swing 5 goblet alternating. Then another 20rep swing set and 3 goblets, hammy gave up, so stopped #fatigued" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;7&quot;&gt;Tue, Apr 7, 2020&lt;/time&gt; #TGU #EMOM 32kgx16" _note="Getting routine, 20 should be doable" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;7&quot;&gt;Tue, Apr 7, 2020&lt;/time&gt; #swing #offset 24kg 10/10 x5 " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;6&quot;&gt;Mon, Apr 6, 2020&lt;/time&gt; #CnP 32kg ladders 3/3/3/3/3, 36kg 1/1" _note="36 was very straightforward, even after main ladders. Suspect easily 40+ max, even on left" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;6&quot;&gt;Mon, Apr 6, 2020&lt;/time&gt; #snatch 24kg 5/5, 36kg 5/5, 48kg 1(r)/f(l)" _note="Much easier than anticipated, left was close but fatigued shoulder prevented from commiting. Beast reps soon!" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;6&quot;&gt;Mon, Apr 6, 2020&lt;/time&gt; #clean 48kg 5/5 x3" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;3&quot;&gt;Fri, Apr 3, 2020&lt;/time&gt; #snatch #EMOM 24kg x10, 20m" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;3&quot;&gt;Fri, Apr 3, 2020&lt;/time&gt; #splitsquat 2x24kg 5/5 x3" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;3&quot;&gt;Fri, Apr 3, 2020&lt;/time&gt; #RDL #ol 1/1 x2" _note="Experimenting" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;2&quot;&gt;Thu, Apr 2, 2020&lt;/time&gt; #bentpress ladders 24kg 1/2/3, 32kg 1/2/3, 36kg 1/2/1" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;2&quot;&gt;Thu, Apr 2, 2020&lt;/time&gt; #snatch 24kg 5/5, 32kg 5/5, shoulder too fatigued to do 36 properly" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;1&quot;&gt;Wed, Apr 1, 2020&lt;/time&gt; #swing #goblet #superset #EMOM 48kg 12m, 10 swing 5 goblet alternating" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;31&quot;&gt;Tue, Mar 31, 2020&lt;/time&gt; #TGU #EMOM 32kgx14" _note="Getting routine, 20 should be doable" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;31&quot;&gt;Tue, Mar 31, 2020&lt;/time&gt; #swing #offset 16kg 10/10, 24kg 10/10 x4" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;30&quot;&gt;Mon, Mar 30, 2020&lt;/time&gt; #CnP 32kg ladders 3/3/3/1" _note="Failed 2nd rung of 4th ladder, shoulder felt fatigued from bent press on Sat" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;30&quot;&gt;Mon, Mar 30, 2020&lt;/time&gt; #snatch 24kg pyramid 5/10/15/20/15/10/5 (per side) (160 reps total)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;28&quot;&gt;Sat, Mar 28, 2020&lt;/time&gt; #bentpress warmup with 24. 32kg 1/1 x3. 36kg 1/1 x4. 48kg very near miss right, not as close left" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;27&quot;&gt;Fri, Mar 27, 2020&lt;/time&gt; #clean #dh 20,20,20,15,15" _note="Supposed to be sets of 20, ran out of steam on 4th - great workout, dense and beneficial" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;26&quot;&gt;Thu, Mar 26, 2020&lt;/time&gt; #longcycle #oa Timed (8&quot;) 10/10, 8/8, then rest, and untimed 6/6 (24/24 total)" _note="10/10 clobbered me, should go 9/9 first. Although 4th day training on the trot means I'm quite fatigued - possibly a contributing factor" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;26&quot;&gt;Thu, Mar 26, 2020&lt;/time&gt; #TGU #EMOM 32kgx10 " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;25&quot;&gt;Wed, Mar 25, 2020&lt;/time&gt; #swing #goblet #superset #EMOM 48kg 10m, 10 swing 5 goblet alternating (1 exercise per min)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;24&quot;&gt;Tue, Mar 24, 2020&lt;/time&gt; #snatch worked up to 36kg x5 #EMOM 10 mins" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;24&quot;&gt;Tue, Mar 24, 2020&lt;/time&gt; #bentpress 24kg ladder 3/, 32kg ladders 2/2/1" _note="More progression!" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;23&quot;&gt;Mon, Mar 23, 2020&lt;/time&gt; #CnP 32kg ladders 3/3/3/1" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;23&quot;&gt;Mon, Mar 23, 2020&lt;/time&gt; #TGU #EMOM 32kgx7 (missed 8th rep - 4th on right)" _note="C+P fatigue, plus hip tightness made this difficult, still felt better than Saturday" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;21&quot;&gt;Sat, Mar 21, 2020&lt;/time&gt; #TGU 32kg 4 rounds 1/1, alternating with Kim" _note="Very fatigued from week's training" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;20&quot;&gt;Fri, Mar 20, 2020&lt;/time&gt; #snatch #oa 16kg alternating sets of 10 ~&amp;gt; 140 reps" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;20&quot;&gt;Fri, Mar 20, 2020&lt;/time&gt; #pistols 3 rounds 1/2/3" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;19&quot;&gt;Thu, Mar 19, 2020&lt;/time&gt; #longcycle #oa 32kg 3 rounds 8/8 8&quot; 90&quot;/rest " _note="Ready to progress" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;19&quot;&gt;Thu, Mar 19, 2020&lt;/time&gt; #bentpress 24kg 1 round 1/2/3, 32kg 2 rounds 1/2 " _note="2nd set on left was attempt at 2 rep ladder but failed, so moved to singles" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;17&quot;&gt;Tue, Mar 17, 2020&lt;/time&gt; #longcycle Worked up to 48kg. 2 comfortable single reps on right, two near misses on left" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;17&quot;&gt;Tue, Mar 17, 2020&lt;/time&gt; #swing #goblet #superset #pyramid 2/4/6/8/6/4/2 (of each move on each step 2/2 swing and goblets etc)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;16&quot;&gt;Mon, Mar 16, 2020&lt;/time&gt; #CnP 32kg 2 rounds 1/2/3, 1 round 1/2/2" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;16&quot;&gt;Mon, Mar 16, 2020&lt;/time&gt; #bentpress 24kg 1 round 1/2/3, 1 round 1/2" _note="Fatigued from Saturday, and possible CnP" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;14&quot;&gt;Sat, Mar 14, 2020&lt;/time&gt; #longcycle #oa 32kg 3 rounds 8/8 8&quot; 90&quot;/rest" _note="Easier than last full with 10&quot; reps" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;14&quot;&gt;Sat, Mar 14, 2020&lt;/time&gt; #bentpress 24kg 1 round 1/2/3, 32kg 4 rounds 1/1" _note="2nd set on left was attempt at 2 rep ladder but failed, so moved to singles" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;14&quot;&gt;Sat, Mar 14, 2020&lt;/time&gt; #pistols 1 round 1/1, then attempts at 8kg weighted, made on left, not on right" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;12&quot;&gt;Thu, Mar 12, 2020&lt;/time&gt; #longcycle #oa 32kg untimed fast pace, 8/8, 5/5, 2/2" _note="Fatigued from yday session" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;12&quot;&gt;Thu, Mar 12, 2020&lt;/time&gt; #bentpress 24kg 1/2 ladder, then 32kg 1/1 x2" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;11&quot;&gt;Wed, Mar 11, 2020&lt;/time&gt; #longcycle #oa 32kg 3 rounds 8/8 10&quot; 90&quot;/rest" _note="tired and slightly hungover so happy with result, happy to progress to next iteration" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;9&quot;&gt;Mon, Mar 9, 2020&lt;/time&gt; #longcycle #oa 32kg 3 rounds 8/8 10&quot; 90&quot;/rest, failed last 1(R) on final set, did separately " _note="Very close to full set" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;9&quot;&gt;Mon, Mar 9, 2020&lt;/time&gt; #pistols 2 rounds 1/2/3" _note="Tekkers feeling cleaner, but at risk of overdoing it on right leg, so didn't start on third ladder" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;9&quot;&gt;Mon, Mar 9, 2020&lt;/time&gt; #bentpress 24kg 1/2/3 x2 (12/12 total) " _note="Could probably have done another round. As technique improves, weight becomes exponentially easier, will soon progress to 32" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;6&quot;&gt;Fri, Mar 6, 2020&lt;/time&gt; #longcycle #oa 32kg 3 rounds 8/8 10&quot; 90&quot;/rest, failed last 4(R) on final set, did separately" _note="Hard" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;6&quot;&gt;Fri, Mar 6, 2020&lt;/time&gt; #pistols 2 rounds 1/2/3, 1 round 1/2" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;6&quot;&gt;Fri, Mar 6, 2020&lt;/time&gt; #bentpress 24kg 1/1, 2/2, 3/3, 1/1 (7/7 total)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;4&quot;&gt;Wed, Mar 4, 2020&lt;/time&gt; #jerk #oa #superset worked up 36kg 5/5, 3 rounds" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;4&quot;&gt;Wed, Mar 4, 2020&lt;/time&gt; #snatch #superset worked up to 36kg 5/5, 3 rounds" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;3&quot;&gt;Tue, Mar 3, 2020&lt;/time&gt; #longcycle #oa 32kg 3 rounds 7/7 10&quot; (2'20&quot;/set) 90&quot;/rest   " _note="Easier still" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;3&quot;&gt;Tue, Mar 3, 2020&lt;/time&gt; #bentpress 24kg 1/1, 2/2, 3/3 (6/6 total)" _note="First complete ladder! Wobbly on left 3, but good to start next ladder" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;3&quot;&gt;Tue, Mar 3, 2020&lt;/time&gt; #pistols 2 rounds 1/2/3" _note="Ready for third ladder" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;2&quot;&gt;Mon, Mar 2, 2020&lt;/time&gt; 16kg #clean for &quot;some&quot;" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;1&quot;&gt;Sun, Mar 1, 2020&lt;/time&gt; #longcycle #oa 32kg 3 rounds 7/7 10&quot; (2'20&quot;/set) 90&quot;/rest  " _note="Easier than last session. Nearly ready for progression" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;1&quot;&gt;Sun, Mar 1, 2020&lt;/time&gt; #bentpress 24kg 1 round 1/2, 3 rounds 1/1 (6 total)  " _note="Attempted ladders - getting more comfortable" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;1&quot;&gt;Sun, Mar 1, 2020&lt;/time&gt; #pistols 2 rounds 1/2/3 (consecutive reps on higher rungs) " _note="Move towards ladders in general" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;29&quot;&gt;Sat, Feb 29, 2020&lt;/time&gt; #longcycle #oa 32kg 3 rounds 7/7 10&quot; (2'20&quot;/set) 90&quot;/rest " _note="Surprisingly hard (harder than last session)" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;29&quot;&gt;Sat, Feb 29, 2020&lt;/time&gt; #bentpress 24kg 6 rounds 1/1, 32kg 1 round 1/1 " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;29&quot;&gt;Sat, Feb 29, 2020&lt;/time&gt; #pistols alt 4r x 6 = 24 (progress next session) " _note="Reducing reliance on bands" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;26&quot;&gt;Wed, Feb 26, 2020&lt;/time&gt; #snatch #oa 24kg 10/10x5, 20/(12,8)x1, 10/10x3, 200reps total. Rest til minumum recovery between sets " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;25&quot;&gt;Tue, Feb 25, 2020&lt;/time&gt; #longcycle #oa 32kg 3 rounds 7/7 10&quot; (2'20&quot;/set) 90&quot;/rest " _note="Perhaps easier than last time. More of a groove" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;25&quot;&gt;Tue, Feb 25, 2020&lt;/time&gt; #bentpress Managed a couple with 32 on right. Couldn't do any on left (even 24) as shoulder seemed fatigued " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;25&quot;&gt;Tue, Feb 25, 2020&lt;/time&gt; #pistols alt 4r x 6 = 24  " _note="First set with less assistance from bands (single loop rather than double). Starting to feel cleaner. Last set still a challenge" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;24&quot;&gt;Mon, Feb 24, 2020&lt;/time&gt; #longcycle #oa 24kg 5 rounds 10/10, rest til heartrate drop " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;24&quot;&gt;Mon, Feb 24, 2020&lt;/time&gt; #bentpress 24kg worked up to ~5-6 rounds 1/1" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;24&quot;&gt;Mon, Feb 24, 2020&lt;/time&gt; #pistols alt 4r x 6 = 24  " _note="Starting to get slightly more routine. Still need to work on activation" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;23&quot;&gt;Sun, Feb 23, 2020&lt;/time&gt; #longcycle #oa 32kg 3 rounds 7/7 10&quot; (2'20&quot;/set) 90&quot;/rest" _note="Extra rep starting to make this more challenging" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;23&quot;&gt;Sun, Feb 23, 2020&lt;/time&gt; #windmill 24kg ladder 1/2/3" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;23&quot;&gt;Sun, Feb 23, 2020&lt;/time&gt; #pistols alt 4r, didn't continue as fatigue requires rest" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;23&quot;&gt;Sun, Feb 23, 2020&lt;/time&gt; #bentpress 24kg attempted a couple reps each side but need to rest so gave up" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;20&quot;&gt;Thu, Feb 20, 2020&lt;/time&gt; #longcycle #oa 32kg 3 rounds 6/6 10&quot; (2'/set) 90&quot;/rest" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;20&quot;&gt;Thu, Feb 20, 2020&lt;/time&gt; #windmill 24kg ladder 1/2/3" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;20&quot;&gt;Thu, Feb 20, 2020&lt;/time&gt; #superset #pistols alt 4r x 6 = 24" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;20&quot;&gt;Thu, Feb 20, 2020&lt;/time&gt; #superset #bentpress 24kg 6 rounds 1/1" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;19&quot;&gt;Wed, Feb 19, 2020&lt;/time&gt; #longcycle #oa 32kg 3 rounds 5/5 12&quot; (2'/set), 2'/rest" _note="2 min break too long" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;19&quot;&gt;Wed, Feb 19, 2020&lt;/time&gt; #pistols alt 4r x 6 = 24" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;18&quot;&gt;Tue, Feb 18, 2020&lt;/time&gt; #longcycle #oa 32kg 3 rounds 5/5 12&quot; (2'/set), 2'/rest" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;18&quot;&gt;Tue, Feb 18, 2020&lt;/time&gt; #bentpress progressions (+ windmill)" _note="Nearly doing full bent press now" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;16&quot;&gt;Thu, Jan 16, 2020&lt;/time&gt; #session3 #jerks #oa 24x10, worked up to a few sets (up to 5 reps each) at 36. Twinge in left mid back stopped" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;16&quot;&gt;Thu, Jan 16, 2020&lt;/time&gt; #session3 #clean #oa worked up to a couple sets of 6 at 40. Left wrist fatigue" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;16&quot;&gt;Thu, Jan 16, 2020&lt;/time&gt; #session3 #pistols band assisted per side 6 to box, 14 to floor" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;14&quot;&gt;Tue, Jan 14, 2020&lt;/time&gt; #TGU #EMOM 32kgx20" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;14&quot;&gt;Tue, Jan 14, 2020&lt;/time&gt; #snatch 24kgx10 #EMOM x10" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;13&quot;&gt;Mon, Jan 13, 2020&lt;/time&gt; #session1 #CnP 32kg RL 4,3,3,3,3" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;13&quot;&gt;Mon, Jan 13, 2020&lt;/time&gt; #session1 #superset #swing #db #goblet 48kg (5x3)x6 supposed to be 8 rounds" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;10&quot;&gt;Fri, Jan 10, 2020&lt;/time&gt; #session4 #TGU #EMOM 36kgx10 alternating" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;10&quot;&gt;Fri, Jan 10, 2020&lt;/time&gt; #session4 #snatch 24kg 6+6 #EMOM x5" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;10&quot;&gt;Fri, Jan 10, 2020&lt;/time&gt; #session4 #kneeling #windmill 24kg 2x5(X2) to hand" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;9&quot;&gt;Thu, Jan 9, 2020&lt;/time&gt; #session3 #jerks 24x5(X2), 32x5(x1), 36x5, 40x2,44x1,48x1,55x1 on right" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;9&quot;&gt;Thu, Jan 9, 2020&lt;/time&gt; #session3 #clean #dh 40sx3 #EMOM x8" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;9&quot;&gt;Thu, Jan 9, 2020&lt;/time&gt; #session3 #pistols progression ~15 mins alternating band assisted off box (below parallel)" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;7&quot;&gt;Tue, Jan 7, 2020&lt;/time&gt; #session2 #TGU #EMOM 32kgx18" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;7&quot;&gt;Tue, Jan 7, 2020&lt;/time&gt; #session2 #snatch 24kgx10 #EMOM x12" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;7&quot;&gt;Tue, Jan 7, 2020&lt;/time&gt; #session2 #kneeling #windmill 24kg 2x3(X2) to hand" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;6&quot;&gt;Mon, Jan 6, 2020&lt;/time&gt; #session1 #CnP 32kg RL 3,3,3,3,3" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;6&quot;&gt;Mon, Jan 6, 2020&lt;/time&gt; #session1 #superset #swing #dh #goblet 48kg (5,2)x7" />
      <outline _complete="true" text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;3&quot;&gt;Fri, Jan 3, 2020&lt;/time&gt; #CnP 32kg RL 3,3,3,3(,3?) unsure if 4/5 ladders!  " />
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;12&quot; startDay=&quot;28&quot;&gt;Sat, Dec 28, 2019&lt;/time&gt; #CnP 32kg RL 3,3,2,2,2  " />
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;12&quot; startDay=&quot;22&quot;&gt;Sun, Dec 22, 2019&lt;/time&gt; #CnP 32kg RL 3,2,3  " />
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;12&quot; startDay=&quot;16&quot;&gt;Mon, Dec 16, 2019&lt;/time&gt; #CnP 28kg RL 5,5,5,5,5  " />
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;12&quot; startDay=&quot;9&quot;&gt;Mon, Dec 9, 2019&lt;/time&gt; #CnP 28kg RL 5,5,4,4,4  " />
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;12&quot; startDay=&quot;2&quot;&gt;Mon, Dec 2, 2019&lt;/time&gt; #CnP 28kg RL 5,5,4,4  " />
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;11&quot; startDay=&quot;18&quot;&gt;Mon, Nov 18, 2019&lt;/time&gt; #CnP 28kg RL 4,4,4,4,4   " />
      <outline _complete="true" text="&lt;time startYear=&quot;2019&quot; startMonth=&quot;11&quot; startDay=&quot;13&quot;&gt;Wed, Nov 13, 2019&lt;/time&gt; #CnP 28kg RL 4,4,4,2   " />
    </outline>
    <outline text="Reference material">
      <outline text="Snatch">
        <outline text="Snatch test training protocol" _note="https://www.strongfirst.com/solid-game-plan-acing-snatch-test/" />
        <outline text="Snatch program" _note="&lt;a href=&quot;https://strengthmatters.com/training-plan-snatch-heavy-kettlebells/&quot;&gt;https://strengthmatters.com/training-plan-snatch-heavy-kettlebells/&lt;/a&gt;" />
      </outline>
      <outline text="Press">
        <outline text="various progressions" _note="&lt;a href=&quot;https://www.strongfirst.com/big-bell-theory-plans-for-pressing-bigger-kettlebells/&quot;&gt;https://www.strongfirst.com/big-bell-theory-plans-for-pressing-bigger-kettlebells/&lt;/a&gt;" />
      </outline>
      <outline text="How TNT train for the TSC" _note="&lt;a href=&quot;https://www.strongfirst.com/how-we-train-for-the-tsc-at-tnt/&quot;&gt;https://www.strongfirst.com/how-we-train-for-the-tsc-at-tnt/&lt;/a&gt;" />
      <outline text="Flexible Steel program minimum" _note="https://www.youtube.com/watch?v=E_oWgMF5rCw" />
      <outline text="Pistol squat progressions" _note="https://www.strongfirst.com/one-good-rep-perform-perfect-pistol/" />
      <outline text="Discussion on A(lactic)+A(erobic)" _note="https://www.strongfirst.com/community/threads/what-is-a-a-and-how-can-i-find-out-more.11619/" />
      <outline text="Arryn Grogan die-rolled variability" _note="https://www.strongfirst.com/simplify-your-strength-programming-using-die-rolled-variability/" />
      <outline text="&lt;a href=&quot;https://thekettlebelllocker.com/blog/f/heavy-kettlebell-workout-92kg-kettlebell-one-arm-long-cycle&quot;&gt;https://thekettlebelllocker.com/blog/f/heavy-kettlebell-workout-92kg-kettlebell-one-arm-long-cycle&lt;/a&gt;" />
      <outline text="riteofpassage" _note="&lt;a href=&quot;https://www.oaklandsmostpowerful.com/programming-resources&quot;&gt;https://www.oaklandsmostpowerful.com/programming-resources&lt;/a&gt;" />
      <outline text="Bent press series" _note="https://www.youtube.com/watch?v=2-NiIuzqCk0" />
      <outline text="Strongsport">
        <outline text="Strongsport rankings" _note="https://web.archive.org/web/20111219053923/www.worldkettlebellclub.com/ranks.php" />
        <outline text="Strongsport forum discussion" _note="https://www.strongfirst.com/community/threads/strongsport.2490/" />
      </outline>
    </outline>
    <outline text="Program archive">
      <outline _complete="true" text="#2019-09 3x week">
        <outline text="Monday">
          <outline text="Clean &amp;amp; press" />
          <outline text="SA swings" />
        </outline>
        <outline text="Wednesday">
          <outline text="TGUs" />
          <outline text="Snatches" />
        </outline>
        <outline text="Friday">
          <outline text="Clean &amp;amp; jerk" />
          <outline text="Double cleans" />
          <outline text="(snatches)" />
        </outline>
      </outline>
      <outline text="2020-02">
        <outline text="Progressions">
          <outline text="Heavy SA long cycle (32kg)" _note="Repeat until completed in control, drop to lighter bell for recovery if required">
            <outline _complete="true" text="3 rounds 5/5 12&quot; (2'/set) 2'/rest" />
            <outline _complete="true" text="3 rounds 6/6 10&quot; (2'/set) 90&quot;/rest" _note="Increased reps, reduced pauses" />
            <outline _complete="true" text="3 rounds 7/7 10&quot; (2'20&quot;/set) 90&quot;/rest" _note="Increased reps" />
            <outline _complete="true" text="3 rounds 8/8 10&quot; (2'40&quot;/set) 90&quot;/rest" _note="Increased reps" />
            <outline _complete="true" text="3 rounds 8/8 8&quot; (2'8&quot;/set) 90&quot;/rest" _note="Reduced pauses" />
            <outline text="4 rounds 8/8 8&quot; (2'8&quot;/set) 90&quot;/rest" _note="Increased rounds" />
            <outline text="4 rounds 10/10 8&quot; (2'40&quot;/set) 90&quot;/rest" _note="Increased reps" />
            <outline text="5 rounds 10/10 8&quot; (2'40&quot;/set) 90&quot;/rest" _note="Increased sets" />
            <outline text="10/10 x 5 untimed" />
            <outline text="Strongsport 32kg rank attempt 16/16 in 4'" />
            <outline text="Revisit" />
          </outline>
          <outline text="Pistols (band assisted)" _note="Repeat until controlled consistent completion. Work towards minimal band assistance">
            <outline _complete="true" text="alt 4r x 6 = 24" />
            <outline _complete="true" text="3 rung ladder x 2, total 12/side" />
            <outline text="3 rung ladder x 3, total 18/side" />
            <outline text="3 rung ladder x 4, total 24/side" />
            <outline text="3 rung ladder x 5, total 30/side" />
            <outline text="4 rung ladder x 5, total 50/side" />
            <outline text="5 rund ladder x 5, total 75/side" />
            <outline text="Re-evaluate" />
          </outline>
          <outline text="Bent press">
            <outline _complete="true" text="1/1 x 6" />
            <outline text="3 rung ladder x 2" />
            <outline text="3 rung ladder x 3" />
            <outline text="3 rung ladder x 4" />
            <outline text="3 rung ladder x 5" />
            <outline text="4 rung ladder x 5" />
            <outline text="5 rung ladder x 5" />
            <outline text="Increase weight" />
          </outline>
        </outline>
      </outline>
      <outline text="2020-01">
        <outline text="Mon - Heavy">
          <outline text="SH C+P RL - up to 5x5 rung ladders then progress" />
          <outline text="Superset - 2 dice EMOM">
            <outline text="DH swings - heavy" />
            <outline text="Goblet squats" />
          </outline>
        </outline>
        <outline text="Tues - Med">
          <outline text="TGUs - med - 10+ (2x5+)" />
          <outline text="Snatches - 24kg - 10 reps EMOM" />
          <outline text="Bent press progression - light/med" />
        </outline>
        <outline text="Weds - Light">
          <outline text="SH swings - 2 dice 20 reps EMOM (2x10)" />
          <outline text="Walking lunges" />
        </outline>
        <outline text="Thurs - Heavy">
          <outline text="SH jerks - Heavy - 5 sets per side (reps dependent on kb availability)" />
          <outline text="DH cleans - 24s - 10 EMOM til breakdown" />
          <outline text="Pistol squat progression" />
        </outline>
        <outline text="Fri - Med">
          <outline text="TGUs - med-heavy - 10 (2x5)" />
          <outline text="Snatches - 24kg - 5 mins max reps (EMOM progression)" />
          <outline text="Bent press progression - light/med" />
        </outline>
      </outline>
    </outline>
    <outline _complete="true" text="Kettlebells required">
      <outline _complete="true" text="12 (£31)" />
      <outline _complete="true" text="8, 12, 16 (£78.99)" />
      <outline _complete="true" text="24x2 (£110)" />
      <outline _complete="true" text="32" />
      <outline _complete="true" text="36 (£90)" />
      <outline text="(48) (£114.99)" />
      <outline _complete="true" text="Total with low set and no 48 (£278.99)" />
      <outline _complete="true" text="Total (£231)" />
      <outline _complete="true" text="Total with 48 bell and no low set (£345.99)" />
    </outline>
    <outline text="Goals">
      <outline text="48kg strict press" />
      <outline text="Bent press" />
      <outline text="Snatch test" />
      <outline text="Pistol squat" />
      <outline text="Hip mobility" />
    </outline>
    <outline text="Bruno Kettlebells">
      <outline text="Log" _note="Training log, keep it flat for cool filtering abilities!">
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;7&quot; startDay=&quot;1&quot;&gt;Wed, Jul 1, 2020&lt;/time&gt; #swing #dh 5x20 24kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;7&quot; startDay=&quot;1&quot;&gt;Wed, Jul 1, 2020&lt;/time&gt; #CnP ladders 2x 3/4/6 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;7&quot; startDay=&quot;1&quot;&gt;Wed, Jul 1, 2020&lt;/time&gt; #chestpress #inclined 2x10 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;7&quot; startDay=&quot;1&quot;&gt;Wed, Jul 1, 2020&lt;/time&gt; #rows #sh 2x15 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;7&quot; startDay=&quot;1&quot;&gt;Wed, Jul 1, 2020&lt;/time&gt; #shrug #sh 2x25 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;27&quot;&gt;Sat, Jun 27, 2020&lt;/time&gt; #overheadpress 4/4 6/6 4/6 4/5" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;27&quot;&gt;Sat, Jun 27, 2020&lt;/time&gt; #chestpress #inclined 2x5 24kg #fatigued" _note="overheadpress fatigued" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;27&quot;&gt;Sat, Jun 27, 2020&lt;/time&gt; #rows #sh 3x15 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;27&quot;&gt;Sat, Jun 27, 2020&lt;/time&gt; #sh #shrug 2x25 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;25&quot;&gt;Thu, Jun 25, 2020&lt;/time&gt; #swing #dh 5x20 24kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;25&quot;&gt;Thu, Jun 25, 2020&lt;/time&gt; #CnP ladders 2x 2/4/6 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;25&quot;&gt;Thu, Jun 25, 2020&lt;/time&gt; #gobletsquats 2x15 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;25&quot;&gt;Thu, Jun 25, 2020&lt;/time&gt; #rows #sh 2x15 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;25&quot;&gt;Thu, Jun 25, 2020&lt;/time&gt; #chestpress #inclined 2x10 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;25&quot;&gt;Thu, Jun 25, 2020&lt;/time&gt; #shrug #sh 2x25 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;23&quot;&gt;Tue, Jun 23, 2020&lt;/time&gt; #swing #dh 5x20 24kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;23&quot;&gt;Tue, Jun 23, 2020&lt;/time&gt; #CnP ladders 2x 2/4/6 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;23&quot;&gt;Tue, Jun 23, 2020&lt;/time&gt; #chestpress #inclined 2x10 24kg #fatigued " _note="2nd set only 7 on the left" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;23&quot;&gt;Tue, Jun 23, 2020&lt;/time&gt; #rows #sh 2x15 24kg" _note="2nd set was way hard" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;23&quot;&gt;Tue, Jun 23, 2020&lt;/time&gt; #shrug #sh 2x25 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;20&quot;&gt;Sat, Jun 20, 2020&lt;/time&gt; #swing #dh 5x20 24kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;20&quot;&gt;Sat, Jun 20, 2020&lt;/time&gt; #CnP ladders 2x 2/4/6 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;20&quot;&gt;Sat, Jun 20, 2020&lt;/time&gt; #chestpress #inclined 3x8 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;20&quot;&gt;Sat, Jun 20, 2020&lt;/time&gt; #chestpress 2x13 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;20&quot;&gt;Sat, Jun 20, 2020&lt;/time&gt; #gobletsquats 2x15 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;20&quot;&gt;Sat, Jun 20, 2020&lt;/time&gt; #rows #sh 2x12 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;20&quot;&gt;Sat, Jun 20, 2020&lt;/time&gt; #shrug #sh 2x20 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;18&quot;&gt;Thu, Jun 18, 2020&lt;/time&gt; #swing #dh 5x20 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;18&quot;&gt;Thu, Jun 18, 2020&lt;/time&gt; #CnP ladders 2x 2/3/4 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;18&quot;&gt;Thu, Jun 18, 2020&lt;/time&gt; #chestpress #inclined 3x8 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;18&quot;&gt;Thu, Jun 18, 2020&lt;/time&gt; #gobletsquats 2x15 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;18&quot;&gt;Thu, Jun 18, 2020&lt;/time&gt; #shrug #sh 2x20 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;16&quot;&gt;Tue, Jun 16, 2020&lt;/time&gt; #swing #dh 4x20 24kg " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;16&quot;&gt;Tue, Jun 16, 2020&lt;/time&gt; #CnP ladders 2/2/4/4 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;16&quot;&gt;Tue, Jun 16, 2020&lt;/time&gt; #chestpress 2x12 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;16&quot;&gt;Tue, Jun 16, 2020&lt;/time&gt; #rows #sh 2x12 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;16&quot;&gt;Tue, Jun 16, 2020&lt;/time&gt; #shrug #sh 2x20 24kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;11&quot;&gt;Thu, Jun 11, 2020&lt;/time&gt; #swing #dh 4x20 18kg #EMOM   " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;11&quot;&gt;Thu, Jun 11, 2020&lt;/time&gt; #CnP ladders  6/10/12 18kg  " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;11&quot;&gt;Thu, Jun 11, 2020&lt;/time&gt; #rows #sh 3x15 18kg  " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;11&quot;&gt;Thu, Jun 11, 2020&lt;/time&gt; #gobletsquats 2x15 18kg " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;11&quot;&gt;Thu, Jun 11, 2020&lt;/time&gt; #chestpress #inclined 2x15 18kg  " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;11&quot;&gt;Thu, Jun 11, 2020&lt;/time&gt; #shrug #sh 3x20 18kg  " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;9&quot;&gt;Tue, Jun 9, 2020&lt;/time&gt; #swing #dh 4x20 18kg #EMOM  " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;9&quot;&gt;Tue, Jun 9, 2020&lt;/time&gt; #CnP ladders  6/10/12 18kg " />
        <outline text="Tue, Jun 9, 2020 #rows #sh 3x15 18kg " />
        <outline text="Tue, Jun 9, 2020 #gobletsquats 3x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;9&quot;&gt;Tue, Jun 9, 2020&lt;/time&gt; #chestpress #inclined 15/12/12 18kg " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;9&quot;&gt;Tue, Jun 9, 2020&lt;/time&gt; #shrug #sh 3x20 18kg " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;7&quot;&gt;Sun, Jun 7, 2020&lt;/time&gt; #swing #dh 5x20 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;7&quot;&gt;Sun, Jun 7, 2020&lt;/time&gt; #CnP ladders 2x 6/10/12 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;7&quot;&gt;Sun, Jun 7, 2020&lt;/time&gt; #chestpress #inclined 3x12 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;7&quot;&gt;Sun, Jun 7, 2020&lt;/time&gt; #chestpress 2x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;7&quot;&gt;Sun, Jun 7, 2020&lt;/time&gt; #rows #sh 3x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;7&quot;&gt;Sun, Jun 7, 2020&lt;/time&gt; #shrug #sh 3x20 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;5&quot;&gt;Fri, Jun 5, 2020&lt;/time&gt; #swing #dh 5x20 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;5&quot;&gt;Fri, Jun 5, 2020&lt;/time&gt; #CnP ladders 2x 6,10,12 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;5&quot;&gt;Fri, Jun 5, 2020&lt;/time&gt; #gobletsquats 2x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;5&quot;&gt;Fri, Jun 5, 2020&lt;/time&gt; #rows #sh 2x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;5&quot;&gt;Fri, Jun 5, 2020&lt;/time&gt; #shrug #sh 2x20 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;3&quot;&gt;Wed, Jun 3, 2020&lt;/time&gt; #swing #dh 5x20 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;3&quot;&gt;Wed, Jun 3, 2020&lt;/time&gt; #CnP ladders 2x 4,6,8,10 18kg " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;3&quot;&gt;Wed, Jun 3, 2020&lt;/time&gt; #chestpress #inclined 2x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;3&quot;&gt;Wed, Jun 3, 2020&lt;/time&gt; #chestpress 2x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;3&quot;&gt;Wed, Jun 3, 2020&lt;/time&gt; #gobletsquats 3x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;6&quot; startDay=&quot;3&quot;&gt;Wed, Jun 3, 2020&lt;/time&gt; #shrug #sh 2x20 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;31&quot;&gt;Sun, May 31, 2020&lt;/time&gt; #swing #dh 5x20 18kg #EMOM  " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;31&quot;&gt;Sun, May 31, 2020&lt;/time&gt; #CnP ladders 2x 4,6,8,10 18kg " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;31&quot;&gt;Sun, May 31, 2020&lt;/time&gt; #rows #sh 3x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;31&quot;&gt;Sun, May 31, 2020&lt;/time&gt; #gobletsquats 3x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;31&quot;&gt;Sun, May 31, 2020&lt;/time&gt; #chestpress #inclined 2x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;31&quot;&gt;Sun, May 31, 2020&lt;/time&gt; #shrug #sh 2x20 18kg " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;29&quot;&gt;Fri, May 29, 2020&lt;/time&gt; #swing #dh 5x20 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;29&quot;&gt;Fri, May 29, 2020&lt;/time&gt; #CnP ladders 2x 4,6,8,10 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;29&quot;&gt;Fri, May 29, 2020&lt;/time&gt; #chestpress #inclined 2x15 18kg #fatigued " _note="14l/r on last set" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;29&quot;&gt;Fri, May 29, 2020&lt;/time&gt; #shrug #sh 2x20 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;26&quot;&gt;Tue, May 26, 2020&lt;/time&gt; #swing #dh 5x20 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;26&quot;&gt;Tue, May 26, 2020&lt;/time&gt; #CnP ladders 2x 4,6,8,10 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;26&quot;&gt;Tue, May 26, 2020&lt;/time&gt; #rows #sh 3x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;26&quot;&gt;Tue, May 26, 2020&lt;/time&gt; #pressups 2x20" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;26&quot;&gt;Tue, May 26, 2020&lt;/time&gt; #shrug #sh 2x20 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;23&quot;&gt;Sat, May 23, 2020&lt;/time&gt; #swing #dh 5x20 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;23&quot;&gt;Sat, May 23, 2020&lt;/time&gt; #overheadpress ladders 4,6,8,10 18kg #fatigued" _note="left stopped at 9 again" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;23&quot;&gt;Sat, May 23, 2020&lt;/time&gt; #chestpress #inclined 2x15 18kg #fatigued " _note="1st: 13L 2nd:12L" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;23&quot;&gt;Sat, May 23, 2020&lt;/time&gt; #chestpress 2x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;23&quot;&gt;Sat, May 23, 2020&lt;/time&gt; #pressups close grip 3x12" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;23&quot;&gt;Sat, May 23, 2020&lt;/time&gt; #gobletsquats 3x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;23&quot;&gt;Sat, May 23, 2020&lt;/time&gt; #shrug #sh 2x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;21&quot;&gt;Thu, May 21, 2020&lt;/time&gt; #swing #dh 5x20 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;21&quot;&gt;Thu, May 21, 2020&lt;/time&gt; #overheadpress ladders 4,6,8,10 18kg #fatigued" _note="left stopped at 9" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;21&quot;&gt;Thu, May 21, 2020&lt;/time&gt; #rows 3x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;21&quot;&gt;Thu, May 21, 2020&lt;/time&gt; #gobletsquats 3x12 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;21&quot;&gt;Thu, May 21, 2020&lt;/time&gt; #shrug #sh 2x10 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;19&quot;&gt;Tue, May 19, 2020&lt;/time&gt; #swing #dh 5x20 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;19&quot;&gt;Tue, May 19, 2020&lt;/time&gt; #CnP 4x10 18kg " _note="4th set onoy 9 on left" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;19&quot;&gt;Tue, May 19, 2020&lt;/time&gt; #TGU 6 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;19&quot;&gt;Tue, May 19, 2020&lt;/time&gt; #chestpress #inclined 2x12 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;19&quot;&gt;Tue, May 19, 2020&lt;/time&gt; #shrug #sh 2x10 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;16&quot;&gt;Sat, May 16, 2020&lt;/time&gt; #swing #dh 5x15 18kg #EMOM " />
        <outline text="Sat, May 16, 2020 #CnP 4x10 18kg " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;16&quot;&gt;Sat, May 16, 2020&lt;/time&gt; #gobletsquats 3x12 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;16&quot;&gt;Sat, May 16, 2020&lt;/time&gt; #rows 4x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;16&quot;&gt;Sat, May 16, 2020&lt;/time&gt; #chestpress #inclined 2x12 18kg " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;16&quot;&gt;Sat, May 16, 2020&lt;/time&gt; #shrug #sh 2x15 18kg (no rest)" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;12&quot;&gt;Tue, May 12, 2020&lt;/time&gt; #swing #dh 5x15 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;12&quot;&gt;Tue, May 12, 2020&lt;/time&gt; #CnP 3x10 18kg" _note="left good throughout" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;12&quot;&gt;Tue, May 12, 2020&lt;/time&gt; #chestpress #inclined 2x12 18kg " _note="left 12" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;12&quot;&gt;Tue, May 12, 2020&lt;/time&gt; #chestpress 2x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;12&quot;&gt;Tue, May 12, 2020&lt;/time&gt; #pressups 2x15 close grip #fatigued " _note="stopped at 12" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;12&quot;&gt;Tue, May 12, 2020&lt;/time&gt; #overheadpress  ladders 2,4,6,8,10 18kg #fatigued " _note="left didnt make it to 8" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;12&quot;&gt;Tue, May 12, 2020&lt;/time&gt; #tyfrontraise 3x5 #fatigued " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;12&quot;&gt;Tue, May 12, 2020&lt;/time&gt; #shrug #sh 2x10 18kg " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;10&quot;&gt;Sun, May 10, 2020&lt;/time&gt; #swing #dh 5x10 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;10&quot;&gt;Sun, May 10, 2020&lt;/time&gt; #CnP 18kg 3x10 " _note="3rd set fatigued on left" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;10&quot;&gt;Sun, May 10, 2020&lt;/time&gt; #TGU 6 18kg " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;10&quot;&gt;Sun, May 10, 2020&lt;/time&gt; #gobletsquats 3x10 #EMOM  18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;10&quot;&gt;Sun, May 10, 2020&lt;/time&gt; #rows 3x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;8&quot;&gt;Fri, May 8, 2020&lt;/time&gt; #swing #dh 3x10 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;8&quot;&gt;Fri, May 8, 2020&lt;/time&gt; #clean 18kg 3x10 #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;8&quot;&gt;Fri, May 8, 2020&lt;/time&gt; #chestpress #inclined 2x15 18kg" _note="left fatigued - got to 13" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;8&quot;&gt;Fri, May 8, 2020&lt;/time&gt; #chestpress 2x15 18kg" _note="left was a grind but made it" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;8&quot;&gt;Fri, May 8, 2020&lt;/time&gt; #pressups 2x15 close grip" _note="fatigued only 13 on the 2nd set" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;8&quot;&gt;Fri, May 8, 2020&lt;/time&gt; #overheadpress ladders 2,4,6,8,10 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;8&quot;&gt;Fri, May 8, 2020&lt;/time&gt; #tyfrontraise 3x5" />
        <outline text="Fri, May 8, 2020 #shrug #sh 2x10 18kg " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;4&quot;&gt;Mon, May 4, 2020&lt;/time&gt; #swing #dh 3x10 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;4&quot;&gt;Mon, May 4, 2020&lt;/time&gt; #swing #sh 3x10 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;4&quot;&gt;Mon, May 4, 2020&lt;/time&gt; #clean 18kg  2x10" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;4&quot;&gt;Mon, May 4, 2020&lt;/time&gt; #TGU 6 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;4&quot;&gt;Mon, May 4, 2020&lt;/time&gt; #rows #sh 3x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;4&quot;&gt;Mon, May 4, 2020&lt;/time&gt; #gobletsquats 3x10 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;2&quot;&gt;Sat, May 2, 2020&lt;/time&gt; #swing #dh 3x10 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;2&quot;&gt;Sat, May 2, 2020&lt;/time&gt; #swing #sh 3x10 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;2&quot;&gt;Sat, May 2, 2020&lt;/time&gt; #clean 18kg  20" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;2&quot;&gt;Sat, May 2, 2020&lt;/time&gt; #chestpress #inclined 2x15 18kg #fatigued " _note="10/13 2nd set" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;2&quot;&gt;Sat, May 2, 2020&lt;/time&gt; #chestpress 2x15 18kg #fatigued " _note="13/16 10/15" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;2&quot;&gt;Sat, May 2, 2020&lt;/time&gt; #pressups 2x15 close grip" _note="had to rest significantly " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;2&quot;&gt;Sat, May 2, 2020&lt;/time&gt; #overheadpress ladders 2,4,6,8 18kg " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;2&quot;&gt;Sat, May 2, 2020&lt;/time&gt; #tyfrontraise 3x5" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;2&quot;&gt;Sat, May 2, 2020&lt;/time&gt; #shrug #sh 2x10 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;1&quot;&gt;Fri, May 1, 2020&lt;/time&gt; #swing #dh 3x10 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;1&quot;&gt;Fri, May 1, 2020&lt;/time&gt; #swing #sh 3x10 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;1&quot;&gt;Fri, May 1, 2020&lt;/time&gt; #clean 18kg" _note="terrible technique" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;1&quot;&gt;Fri, May 1, 2020&lt;/time&gt; #rows #sh 3x18 18kg " _note="3rd set was rough" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;1&quot;&gt;Fri, May 1, 2020&lt;/time&gt; #gobletsquats 3x12 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;5&quot; startDay=&quot;1&quot;&gt;Fri, May 1, 2020&lt;/time&gt; #pressups 1x20 1x12 shoulder-width" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;28&quot;&gt;Tue, Apr 28, 2020&lt;/time&gt; #swing #dh 3x10 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;28&quot;&gt;Tue, Apr 28, 2020&lt;/time&gt; #swing #sh 6x10 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;28&quot;&gt;Tue, Apr 28, 2020&lt;/time&gt; #overheadpress ladders 2,4,6,8 x2 18kg 20 per side" _note="good one. will repeat next time before moving to 10" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;28&quot;&gt;Tue, Apr 28, 2020&lt;/time&gt; #tyfrontraise 3x5 75 total" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;28&quot;&gt;Tue, Apr 28, 2020&lt;/time&gt; #chestpress 2x15 18kg" _note="2nd set left hand fatigued" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;28&quot;&gt;Tue, Apr 28, 2020&lt;/time&gt; #pressups 3x12" />
        <outline text="" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;25&quot;&gt;Sat, Apr 25, 2020&lt;/time&gt; #swing #dh 3x10 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;25&quot;&gt;Sat, Apr 25, 2020&lt;/time&gt; #swing #sh 6x10 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;25&quot;&gt;Sat, Apr 25, 2020&lt;/time&gt; #TGU 10 18kg #EMOM " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;25&quot;&gt;Sat, Apr 25, 2020&lt;/time&gt; #rows #sh 3x15 18kg" />
        <outline text="" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;24&quot;&gt;Fri, Apr 24, 2020&lt;/time&gt; #swing #dh 3x20 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;24&quot;&gt;Fri, Apr 24, 2020&lt;/time&gt; #swing #sh 3x10 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;24&quot;&gt;Fri, Apr 24, 2020&lt;/time&gt; #overheadpress pyramid 2,4,6 x2 18kg  24 per side" _note="nice first try :)" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;24&quot;&gt;Fri, Apr 24, 2020&lt;/time&gt; #tyfrontraise 3x5" _note="bit weak towards the end of 2nd and 3rd set but not bad given that after overhead ladders" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;24&quot;&gt;Fri, Apr 24, 2020&lt;/time&gt; #chestpress 2x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;24&quot;&gt;Fri, Apr 24, 2020&lt;/time&gt; #pressups 3x12" _note="hard but got it done" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;24&quot;&gt;Fri, Apr 24, 2020&lt;/time&gt; #rows #sh 3x15 18kg" />
        <outline text="" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;20&quot;&gt;Mon, Apr 20, 2020&lt;/time&gt; #swing #dh 3x20 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;20&quot;&gt;Mon, Apr 20, 2020&lt;/time&gt; #swing #sh 3x10 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;20&quot;&gt;Mon, Apr 20, 2020&lt;/time&gt; #tyfrontraise 3x5 7kg" _note="last set still tough" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;20&quot;&gt;Mon, Apr 20, 2020&lt;/time&gt; #chestpress 2x15 18kg" _note="easy" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;20&quot;&gt;Mon, Apr 20, 2020&lt;/time&gt; #pressups 3x12 close grip" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;20&quot;&gt;Mon, Apr 20, 2020&lt;/time&gt; #overheadpress 8/10 7/7 6/7  (l/r) 18kg" _note="left weaker" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;20&quot;&gt;Mon, Apr 20, 2020&lt;/time&gt; #gobletsquats 3x10 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;18&quot;&gt;Sat, Apr 18, 2020&lt;/time&gt; #swing #dh 3x20 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;18&quot;&gt;Sat, Apr 18, 2020&lt;/time&gt; #swing #sh 3x10 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;18&quot;&gt;Sat, Apr 18, 2020&lt;/time&gt; #tyfrontraise 3x5 7kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;18&quot;&gt;Sat, Apr 18, 2020&lt;/time&gt; #TGU 4 double 2 single" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;18&quot;&gt;Sat, Apr 18, 2020&lt;/time&gt; #rows #sh 3x15 18kg" />
        <outline text="" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;16&quot;&gt;Thu, Apr 16, 2020&lt;/time&gt; #swing #dh 3x20 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;16&quot;&gt;Thu, Apr 16, 2020&lt;/time&gt; #swing #sh 3x10 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;16&quot;&gt;Thu, Apr 16, 2020&lt;/time&gt; #tyfrontraise 3x5 7kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;16&quot;&gt;Thu, Apr 16, 2020&lt;/time&gt; #TGU 6" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;16&quot;&gt;Thu, Apr 16, 2020&lt;/time&gt; #chestpress 2x15 18kg" _note="2nd set left 12" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;16&quot;&gt;Thu, Apr 16, 2020&lt;/time&gt; #pressups 2x12 close grip " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;16&quot;&gt;Thu, Apr 16, 2020&lt;/time&gt; #overheadpress 2x8 18kg" _note="2nd set only got 6 on left" />
        <outline text="" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;14&quot;&gt;Tue, Apr 14, 2020&lt;/time&gt; #swing #dh 3x20 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;14&quot;&gt;Tue, Apr 14, 2020&lt;/time&gt; #swing #sh 5x10 #EMOM 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;14&quot;&gt;Tue, Apr 14, 2020&lt;/time&gt; #chestpress 2x15 18kg" _note="2nd set left only 10 :( " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;14&quot;&gt;Tue, Apr 14, 2020&lt;/time&gt; #pressups 1x12 1x9 close grip" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;14&quot;&gt;Tue, Apr 14, 2020&lt;/time&gt; #overheadpress 1x8 1x5 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;14&quot;&gt;Tue, Apr 14, 2020&lt;/time&gt; #tyfrontraise 2x5 8kg 1x5 7kg" _note="i'm too fatigued. weak 2nd set. should probably drop weight further" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;14&quot;&gt;Tue, Apr 14, 2020&lt;/time&gt; #thruster 3x10 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;14&quot;&gt;Tue, Apr 14, 2020&lt;/time&gt; #rows #sh 3x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;12&quot;&gt;Sun, Apr 12, 2020&lt;/time&gt; #swing #dh 3x20 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;12&quot;&gt;Sun, Apr 12, 2020&lt;/time&gt; #swing #sh 5x10 #EMOM 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;12&quot;&gt;Sun, Apr 12, 2020&lt;/time&gt; #rows #sh 3x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;12&quot;&gt;Sun, Apr 12, 2020&lt;/time&gt; #chestpress 1x15 1x13 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;12&quot;&gt;Sun, Apr 12, 2020&lt;/time&gt; #overheadpress 3x7 18kg" />
        <outline text="Sun, Apr 12, 2020 #&lt;u&gt;tyfrontraise&lt;/u&gt;&lt;u&gt; 3x5 8kg&lt;/u&gt;" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;10&quot;&gt;Fri, Apr 10, 2020&lt;/time&gt; #swing #dh #EMOM 5x20 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;10&quot;&gt;Fri, Apr 10, 2020&lt;/time&gt; #TGU 10 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;10&quot;&gt;Fri, Apr 10, 2020&lt;/time&gt; #pressups 3x12 close grip" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;10&quot;&gt;Fri, Apr 10, 2020&lt;/time&gt; #chestpress #sh 2x10 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;10&quot;&gt;Fri, Apr 10, 2020&lt;/time&gt; #overheadpress 3x7 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;10&quot;&gt;Fri, Apr 10, 2020&lt;/time&gt; #rows #sh 3x15 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;8&quot;&gt;Wed, Apr 8, 2020&lt;/time&gt; #swing #dh 5x20 #EMOM  18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;8&quot;&gt;Wed, Apr 8, 2020&lt;/time&gt; #TGU 10 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;8&quot;&gt;Wed, Apr 8, 2020&lt;/time&gt; #rows #sh 3x15 18kg (1min rest)" _note="left hand last set was about 10 decent ones only. not sure if rest is smaller or just fatigued" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;8&quot;&gt;Wed, Apr 8, 2020&lt;/time&gt; #overheadpress 2x8 1x5 18kg" _note="right arm made to 8 but left only 5" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;8&quot;&gt;Wed, Apr 8, 2020&lt;/time&gt; #pressups 2x10 close grip" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;6&quot;&gt;Mon, Apr 6, 2020&lt;/time&gt; #swing #dh 5x20 18kg (30sec rest)" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;6&quot;&gt;Mon, Apr 6, 2020&lt;/time&gt; #TGU 1x2 10kg 5x1 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;6&quot;&gt;Mon, Apr 6, 2020&lt;/time&gt; #swing #sh 5x10 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;6&quot;&gt;Mon, Apr 6, 2020&lt;/time&gt; #rows #sh 3x15 18kg" _note="tough one at the end" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;6&quot;&gt;Mon, Apr 6, 2020&lt;/time&gt; #overheadpress 2x8 18kg" _note="very tough - probs too tired from pushing on the rows" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;6&quot;&gt;Mon, Apr 6, 2020&lt;/time&gt; #pressups 2x10 close grip" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;4&quot;&gt;Sat, Apr 4, 2020&lt;/time&gt; #swing #dh 5x20 18kg (30sec rest)" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;4&quot;&gt;Sat, Apr 4, 2020&lt;/time&gt; #TGU 1x2 10kg (warmup) 4x1 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;4&quot;&gt;Sat, Apr 4, 2020&lt;/time&gt; #swing #sh 5x10 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;4&quot;&gt;Sat, Apr 4, 2020&lt;/time&gt; #rows #sh 3x12 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;4&quot;&gt;Sat, Apr 4, 2020&lt;/time&gt; #overheadpress 1x10 2x5  18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;4&quot; startDay=&quot;4&quot;&gt;Sat, Apr 4, 2020&lt;/time&gt; #pressups 1x10, 7 close grip (slow)" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;31&quot;&gt;Tue, Mar 31, 2020&lt;/time&gt; #swing #dh 5x20 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;31&quot;&gt;Tue, Mar 31, 2020&lt;/time&gt; #TGU 1x1 10kg (warmup) 3x1 18kg" _note="much better, should be able to hit 4 next time" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;31&quot;&gt;Tue, Mar 31, 2020&lt;/time&gt; #swing #sh 5x10 18kg" _note="felt good both hands" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;31&quot;&gt;Tue, Mar 31, 2020&lt;/time&gt; #rows #sh 3x12 18kg" _note="good one" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;31&quot;&gt;Tue, Mar 31, 2020&lt;/time&gt; #overheadpress 3x5 18kg" _note="hard work on the left on last set" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;31&quot;&gt;Tue, Mar 31, 2020&lt;/time&gt; #gobletsquats 3x10 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;31&quot;&gt;Tue, Mar 31, 2020&lt;/time&gt; #pressups 2x12 1x7 close grip" _note="too week on the 3rd set" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;29&quot;&gt;Sun, Mar 29, 2020&lt;/time&gt; #swing #dh 5x20" _note="easy" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;29&quot;&gt;Sun, Mar 29, 2020&lt;/time&gt; #swing #sh 5x10" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;29&quot;&gt;Sun, Mar 29, 2020&lt;/time&gt; #TGU 1x1 10kg (warmup) 2x1 18KB 1x2 10kg" _note="left arm still weak on 2nd set" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;29&quot;&gt;Sun, Mar 29, 2020&lt;/time&gt; #rows #sh 2x12 18KB (no rest) 2x10 18KB (no rest)" _note="2nd part was hard to get to 10" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;29&quot;&gt;Sun, Mar 29, 2020&lt;/time&gt; #overheadpress 3X5 18KB" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;29&quot;&gt;Sun, Mar 29, 2020&lt;/time&gt; #pressups 2x12 1x10" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;26&quot;&gt;Thu, Mar 26, 2020&lt;/time&gt; #swing #dh 5x20" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;26&quot;&gt;Thu, Mar 26, 2020&lt;/time&gt; #TGU 1x3 10kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;26&quot;&gt;Thu, Mar 26, 2020&lt;/time&gt; #TGU 2x1 18KB" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;26&quot;&gt;Thu, Mar 26, 2020&lt;/time&gt; #rows #sh 1x12 2x10 18KB" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;26&quot;&gt;Thu, Mar 26, 2020&lt;/time&gt; #thruster 5x10" />
        <outline text="" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;24&quot;&gt;Tue, Mar 24, 2020&lt;/time&gt; #swing #dh 6x20" _note="easy and way under 10mins" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;24&quot;&gt;Tue, Mar 24, 2020&lt;/time&gt; #TGU 2x3 10kg" _note="went well. might try a 3rd set next time" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;24&quot;&gt;Tue, Mar 24, 2020&lt;/time&gt; #TGU 1x3 18KB" _note="left arm harder. not comfortable going more than 1 rep" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;24&quot;&gt;Tue, Mar 24, 2020&lt;/time&gt; #thruster 5x10" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;24&quot;&gt;Tue, Mar 24, 2020&lt;/time&gt; #rows #sh 2x10 18KB" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;22&quot;&gt;Sun, Mar 22, 2020&lt;/time&gt; #swing #dh 4x30" _note="easy" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;22&quot;&gt;Sun, Mar 22, 2020&lt;/time&gt; #TGU 1x3 10kg &lt;b&gt;fullmove&lt;/b&gt;" _note="pretty good ok on both sides." />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;22&quot;&gt;Sun, Mar 22, 2020&lt;/time&gt; #TGU 1x1 18KB &lt;b&gt;fullmove &lt;/b&gt;" _note="right arm felt challenging but ok. left arm a lot more shaky." />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;22&quot;&gt;Sun, Mar 22, 2020&lt;/time&gt; #thruster 5x10" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;22&quot;&gt;Sun, Mar 22, 2020&lt;/time&gt; #overheadpress 3reps" _note="right arm did 3 fine. left arm start hurting on the same spot on the 1st rep. will do ligther waits on both arms to rebuild" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;22&quot;&gt;Sun, Mar 22, 2020&lt;/time&gt; #overheadpress 2x10 10kg DB" _note="right arm is light obvs, left not as much" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;22&quot;&gt;Sun, Mar 22, 2020&lt;/time&gt; #rows #sh 2x10 18KB" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;19&quot;&gt;Thu, Mar 19, 2020&lt;/time&gt; #swing #dh 3x30, 1x20" _note="3 sets of 30 reps 4th set of 20" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;19&quot;&gt;Thu, Mar 19, 2020&lt;/time&gt; #TGU 3x3 10kg to elbow" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;19&quot;&gt;Thu, Mar 19, 2020&lt;/time&gt; #TGU 3x3 18KB to side (before elbow) " _note="right arm can handle it. left arm really just about, it's kinda shaky" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;19&quot;&gt;Thu, Mar 19, 2020&lt;/time&gt; #thruster 5x10" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;19&quot;&gt;Thu, Mar 19, 2020&lt;/time&gt; #overheadpress 3x1" _note="right arm ok, left arm last set hurts near the wrist :( " />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;19&quot;&gt;Thu, Mar 19, 2020&lt;/time&gt; #pressups 2x15" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;17&quot;&gt;Tue, Mar 17, 2020&lt;/time&gt; #swing #dh 5x10" _note="Felt fine at 5sets. Kept going and did all 10 sets. Felt like could keep going further. Did small breaks between sets ( under 30secs)" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;17&quot;&gt;Tue, Mar 17, 2020&lt;/time&gt; #TGU 3x3 bodyweight with shoe" _note="I did the bodyweight version and progressed standing on the elbow. Then I used a 10kg dumbbell and did the same thing. 5x2.&#10;" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;17&quot;&gt;Tue, Mar 17, 2020&lt;/time&gt; #gobletsquats 5x5" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;17&quot;&gt;Tue, Mar 17, 2020&lt;/time&gt; #overheadpress #sh 1x1" _note="tried to see where my shoulders were at very slowly. Right one managed. Left one not so much. Not ready for this at 18kg" />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;17&quot;&gt;Tue, Mar 17, 2020&lt;/time&gt;  #overheadpress #dh 3x10" _note="no problems here." />
        <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;17&quot;&gt;Tue, Mar 17, 2020&lt;/time&gt; #pressups 2x15" _note="for the lulz. &lt;b&gt;no stretching at the end?&lt;/b&gt;" />
      </outline>
      <outline text="Program - Simple and sinister" _note="No need to overcomplicate early on, keep it simple and follow structured progressions outlined. Once you've reached &quot;simple standard&quot;, or are getting near to it and bored, we'll write the next program. Importance of learning the swing, and &quot;bang-for-buck&quot; of TGU cannot be stressed enough. You'll reach the standard for swings likely very quickly, TGUs might take a little longer.">
        <outline text="Session A" _note="Only session for now">
          <outline text="Swing progression" />
          <outline text="TGU progression" />
        </outline>
      </outline>
      <outline text="Progressions" _note="Complete each progression as you achieve it. A progression is &quot;complete&quot; when you finish the sets in a timely period, without and breakdown of form.&#10;&#10;If one progression is ridiculously easy, feel free to skip and add in an extra set etc. End goal is the &quot;standard&quot; at the end">
        <outline text="Swing" _note="Very straight forward progression. Keep rests between sets short without compromising form, some progressions are timed">
          <outline text="#dh (double hand) 5x10 (5 sets of 10)" />
          <outline text="#dh 6x10" />
          <outline text="#dh 7x10" />
          <outline text="#dh 8x10" />
          <outline text="#dh 9x10" />
          <outline text="#dh 10x10" />
          <outline text="#dh 10x10 &amp;lt; 5 mins" />
          <outline text="#sh (single hand) 6x10" />
          <outline text="#sh (single hand) 8x10" />
          <outline text="#sh (single hand) 10x10" />
          <outline text="🎉 #sh (single hand) 10x10 &amp;lt; 5 mins 🎉" />
        </outline>
        <outline text="TGUs" _note="Always start with bodyweight warmup*, a couple a side. Place a shoe on your closed fist and balance it overhead to practice the movement. Plenty of decent YT vids for direction. Look at StrongFirst - good up to date info">
          <outline text="3/3 *bodyweight (balancing shoe on closed fist)" _note="Not a progression per se, but worth practicing to begin with - less important as you become more accustomed to the move" />
          <outline text="5/5 bodyweight as above " />
          <outline text="3/3 roll to elbow (first stage of TGU, from floor to leaning on elbow)" _note="Once you can do 1 a side, you'll progress quickly" />
          <outline text="5/5 roll to elbow" />
          <outline text="5/5 tall sit (up to elbow, then push through to tall-sit position, can explain separately)" />
          <outline text="3/3 full TGU" _note="might require intermediate stages, but in my experience roll to elbow and tall-sit were the most challenging to start" />
          <outline text="5/5 full TGU" />
          <outline text="🎉 5/5 TGU &amp;lt; 10 mins 🎉" />
        </outline>
      </outline>
    </outline>
    <outline text="Rui Kettlebells">
      <outline text="Log">
        <outline text="Thu 25 June">
          <outline text="3x10 #halo" />
          <outline text="3x2x4 #overheadwarmup " />
          <outline text="2x 6/8/10 #cleanpress " />
          <outline text="3x15 #rows " />
          <outline text="2x2x8 #chestpress " />
        </outline>
        <outline text="Sat 20 June">
          <outline text="5x2x10 #deadlift " />
          <outline text="3x15 #rows " />
          <outline text="5x20 #swing #dh" />
          <outline text="1x2x10 #swing #sh" />
        </outline>
        <outline text="Thu 18 June">
          <outline text="Warmup x3">
            <outline text="2x10 #halo" />
            <outline text="30'' plank" />
            <outline text="2x15'' #overheadhold " />
          </outline>
          <outline text="3x2x10 #rows " />
          <outline text="2x 4/5 #overheadwarmup" />
          <outline text="3x2x6/7/8 #cleanpress" />
          <outline text="3x12 #gobletsquats " />
        </outline>
        <outline text="Mon 15 June">
          <outline text="Circuit x3">
            <outline text="2x10 #deadlift " />
            <outline text="2x10 #halo" />
            <outline text="2x4 #overheadwarmup " />
          </outline>
          <outline text="Circuit x3">
            <outline text="20 #swing #dh" />
            <outline text="10 #gobletsquats " />
            <outline text="2x10 #rows " />
          </outline>
        </outline>
        <outline text="Fri 12 June">
          <outline text="5x20 #deadlift" />
          <outline text="3x2x10 #halo" />
          <outline text="2x 6/8/10 #pushpress" />
          <outline text="5x15 #swings #dh" />
          <outline text="2x2x5 #chestpress " />
        </outline>
        <outline text="Wed 10 June">
          <outline text="Warmup x3">
            <outline text="2x10 #halo" />
            <outline text="plank" />
            <outline text="#overheadhold " />
          </outline>
          <outline text="2x 4/5 #overheadwarmup" />
          <outline text="3x2x6 #cleanpress" />
          <outline text="2x6 #pushpress " />
          <outline text="4x20 #swing #dh" />
          <outline text="3x2x10 #rows " />
        </outline>
        <outline text="Tue 28 Apr">
          <outline text="todo" />
        </outline>
        <outline text="Sun 26 Apr">
          <outline text="Circuits" />
        </outline>
        <outline text="Thu 23 Apr">
          <outline text="5x2x10 #deadlift " />
          <outline text="3x2x10 #halo " />
          <outline text="2x2x5 #pushpress " />
          <outline text="2x30s #overheadhold " />
          <outline text="3x20 #swing " />
          <outline text="2x2x10 #swing #sh" />
          <outline text="2x3 #TGU to shoulder" />
        </outline>
        <outline text="Mon 20 Apr">
          <outline text="Circuits">
            <outline text="Deadlifts+Rows" />
            <outline text="Squats+Overhead hold" />
          </outline>
        </outline>
        <outline text="Sat 18 Apr">
          <outline text="3x2x10 #halo " />
          <outline text="5x2x10 #deadlift " />
          <outline text="3x20 #swing" />
          <outline text="2x2x10 #swing #sh" />
          <outline text="3x2x10 #clean" />
          <outline text="2x2x30sec #overheadhold" />
          <outline text="3x10 #gobletsquats " />
        </outline>
        <outline text="Thu 16 Apr">
          <outline text="6x2x10 #deadlift " />
          <outline text="2x2x10 #halo " />
          <outline text="6x10 #swing " />
          <outline text="1x2x10 #swing #sh" />
          <outline text="3x10 #gobletsquats " />
        </outline>
        <outline text="Tue 14 Apr">
          <outline text="5x2x10 #deadlift " />
          <outline text="3x10 #swing " />
          <outline text="1x2x10 #swing #sh" />
          <outline text="3x10 #gobletsquats " />
          <outline text="... ?" />
        </outline>
        <outline text="Sun 12 Apr">
          <outline text="forgot to log" />
        </outline>
        <outline text="Fri 10 Apr">
          <outline text="5x2x10 #sh #deadlift 16kg" />
          <outline text="2x2x10 #halo 16kg" />
          <outline text="5x10 #swing 16kg" />
          <outline text="2x2x5 #overheadpress 16kg" />
          <outline text="1x2x8 #pushpress 16kg" />
          <outline text="2x3 #TGU step 1 16kg" />
          <outline text="2x10 #rows 16kg" />
        </outline>
        <outline text="Wed 8 Apr">
          <outline text="2x2x10 #halo 16kg" />
          <outline text="3x2x10 #sh #deadlift 16kg" />
          <outline text="3x10 #gobletsquats 16kg" />
          <outline text="6x10 #swing 16kg" />
          <outline text="2x2x5 #overheadpress 16kg" />
          <outline text="2x2x10 #rows 16kg" />
        </outline>
        <outline text="Mon 6 Apr">
          <outline text="2x2x10 #halo 16kg" />
          <outline text="2x2x10 #sh #deadlift 16kg" />
          <outline text="6x10 #swing 16kg" />
          <outline text="2x2x10 #clean 16kg" />
          <outline text="2x2x4 #overheadpress 16kg" />
        </outline>
        <outline text="Sat 4 April">
          <outline text="2x2x10 #halo 16kg" />
          <outline text="3x10 #sh #deadlift 16kg" />
          <outline text="6x10 #swing 16kg" />
          <outline text="2x10 #rows 16kg" />
          <outline text="2x2x6 #overheadpress 16kg" />
          <outline text="2x10 #gobletsquats 16kg" />
        </outline>
        <outline text="Thu 2 April">
          <outline text="2x2x10 #halo 16kg" />
          <outline text="2x10 #dh #deadlift 16kg" _note="Mistake, single hand next time" />
          <outline text="6x10 #swing 16kg" />
          <outline text="2x2x10 #clean 16kg" />
          <outline text="2x2x5 #overheadpress 16kg" />
          <outline text="2x10 #rows 16kg" />
        </outline>
        <outline text="Tue 31 March">
          <outline text="2x10 #gobletsquats 16kg" />
          <outline text="2x2x10 #halo 16kg" />
          <outline text="5x10 #swing 16kg" />
          <outline text="2x2x5 #clean 16kg" />
          <outline text="2x2x1 #overheadpress 16kg" />
        </outline>
        <outline text="Sun 29 March">
          <outline text="5x10 #swing 16kg" />
          <outline text="3/3 #tgu body weight + step 0 16kg" />
        </outline>
        <outline text="Fri 27 March">
          <outline text="5x10 #swing 16kg" />
          <outline text="3/3 #tgu body weight + step 0 16kg" />
        </outline>
        <outline text="Wed 25 March">
          <outline text="5x10 #swing 16kg" />
          <outline text="3/3 #tgu body weight + step 0 16kg" />
        </outline>
      </outline>
      <outline text="Program - Simple and sinister" _note="No need to overcomplicate early on, keep it simple and follow structured progressions outlined. Once you've reached &quot;simple standard&quot;, or are getting near to it and bored, we'll write the next program. Importance of learning the swing, and &quot;bang-for-buck&quot; of TGU cannot be stressed enough. You'll reach the standard for swings likely very quickly, TGUs might take a little longer.">
        <outline text="Session A" _note="Only session for now">
          <outline text="Swing progression" />
          <outline text="TGU progression" />
        </outline>
      </outline>
      <outline text="Progressions" _note="Complete each progression as you achieve it. A progression is &quot;complete&quot; when you finish the sets in a timely period, without and breakdown of form.&#10;&#10;If one progression is ridiculously easy, feel free to skip and add in an extra set etc. End goal is the &quot;standard&quot; at the end">
        <outline text="Swing" _note="Very straight forward progression. Keep rests between sets short without compromising form, some progressions are timed">
          <outline text="#dh (double hand) 5x10 (5 sets of 10)" />
          <outline text="#dh 6x10" />
          <outline text="#dh 7x10" />
          <outline text="#dh 8x10" />
          <outline text="#dh 9x10" />
          <outline text="#dh 10x10" />
          <outline text="#dh 10x10 &amp;lt; 5 mins" />
          <outline text="#sh (single hand) 6x10" />
          <outline text="#sh (single hand) 8x10" />
          <outline text="#sh (single hand) 10x10" />
          <outline text="🎉 #sh (single hand) 10x10 &amp;lt; 5 mins 🎉" />
        </outline>
        <outline text="TGUs" _note="Always start with bodyweight warmup*, a couple a side. Place a shoe on your closed fist and balance it overhead to practice the movement. Plenty of decent YT vids for direction. Look at StrongFirst - good up to date info">
          <outline text="3/3 *bodyweight (balancing shoe on closed fist)" _note="Not a progression per se, but worth practicing to begin with - less important as you become more accustomed to the move" />
          <outline text="5/5 bodyweight as above " />
          <outline text="3/3 roll to elbow (first stage of TGU, from floor to leaning on elbow)" _note="Once you can do 1 a side, you'll progress quickly" />
          <outline text="5/5 roll to elbow" />
          <outline text="5/5 tall sit (up to elbow, then push through to tall-sit position, can explain separately)" />
          <outline text="3/3 full TGU" _note="might require intermediate stages, but in my experience roll to elbow and tall-sit were the most challenging to start" />
          <outline text="5/5 full TGU" />
          <outline text="🎉 5/5 TGU &amp;lt; 10 mins 🎉" />
        </outline>
      </outline>
    </outline>
  </outline>
  <outline text="Life">
    <outline _complete="true" text="Job interviews">
      <outline _complete="true" text="Housekeep" />
      <outline text="Myrecovery">
        <outline _complete="true" text="Passed initial stage" />
        <outline text="Final stage on Tuesday" />
      </outline>
      <outline text="Ometria">
        <outline _complete="true" text="Jess and Stefan (?)" />
        <outline _complete="true" text="Technical challenge">
          <outline _complete="true" text="Figure out when to alert admin" />
          <outline _complete="true" text="Various request catch conditions" />
          <outline _complete="true" text="Tidy up">
            <outline _complete="true" text="Helper function for requests" />
            <outline _complete="true" text="URLs as ENV vars" />
          </outline>
          <outline _complete="true" text="General checking over" />
        </outline>
        <outline _complete="true" text="If successful they'll condense two stage into one for me." />
        <outline _complete="true" text="Values">
          <outline text="We love to learn and teach" />
          <outline text="Everything we do is data-driven" />
          <outline text="We deliver first, gain second" />
          <outline text="We are always polite and positive" />
          <outline text="We are honest and open" />
          <outline text="We have unwaivering respect for our customers' data" />
          <outline text="We never compromise" />
          <outline text="We totally trust each other" />
          <outline text="We win together" />
          <outline text="We make this a better place to be" />
          <outline text="We are exceptional" />
        </outline>
        <outline _complete="true" text="Final interview / Authentication">
          <outline text="Meet the engineering team" />
          <outline text="Rita Martins - Email marketing consultant">
            <outline text="https://blog.ometria.com/a-smart-marketers-guide-to-re-engaging-inactive-customers" />
          </outline>
          <outline text="Maddy Scragg - Customer success manager" />
          <outline text="Nathan Frost - Business Development manager" />
          <outline text="Ivan Mazour - Founder and CEO" />
        </outline>
        <outline text="https://www.huffingtonpost.com/entry/how-ometria-put-the-cult-into-culture-a-successful_us_59edac3ee4b092f9f2419397" />
      </outline>
      <outline text="Festicket">
        <outline text="Awaiting initial chat" />
        <outline text="Prep">
          <outline text="Access specifiers" />
        </outline>
      </outline>
      <outline text="Condurance" />
    </outline>
    <outline _complete="true" text="To-do">
      <outline _complete="true" text="Adjust bill amount of cleo to account for less credit card payback" />
      <outline _complete="true" text="Passport application" />
      <outline _complete="true" text="Read electric meter" />
      <outline _complete="true" text="Put washes on" />
      <outline _complete="true" text="Pay bills" />
      <outline _complete="true" text="Remove old noodles from fridge" />
      <outline _complete="true" text="Take out food bin" />
      <outline _complete="true" text="Mum's birthday" />
      <outline _complete="true" text="Ometria test" />
      <outline _complete="true" text="Festicket test" />
      <outline _complete="true" text="Skiing flights" />
      <outline _complete="true" text="Address edf price increase (was £39 a month, now £44, and account current ~£150 in debit so may increase again). Swap to new company." />
      <outline _complete="true" text="Address water charges" />
      <outline _complete="true" text="Open bank account" />
      <outline _complete="true" text="Indian visa" />
      <outline _complete="true" text="Call insurance company to check validity (nationwide account)" />
      <outline _complete="true" text="scan sky docs for dad" />
      <outline _complete="true" text="Sort clothes" />
      <outline _complete="true" text="Kim birthday meal location - book for 11">
        <outline text="Waiting for response from Piano Works" />
        <outline text="Kelvin suggests Quaglino's" />
      </outline>
      <outline _complete="true" text="Kim birthday present">
        <outline text="Apple airpods" />
        <outline text="Swedish clothes?">
          <outline text="https://www.woodwood.com/commodity/4191-double-a-arly-cardigan" />
        </outline>
        <outline text="Jewellery">
          <outline text="https://www.triwa.com/gb/watches/womens-watches/" />
          <outline text="Fine jewellery section from not on the high street" />
        </outline>
        <outline text="trainers" />
      </outline>
      <outline _complete="true" text="Dad present">
        <outline text="Tech?" />
        <outline text="Driving experience?" />
        <outline text="Beer festival?" />
      </outline>
      <outline _complete="true" text="Liz Present">
        <outline text="Nice bag?!" />
      </outline>
      <outline _complete="true" text="Take bin out" />
      <outline _complete="true" text="Take food bin out" />
      <outline _complete="true" text="Take recycling out" />
      <outline _complete="true" text="Switzerland things to do" />
      <outline _complete="true" text="Clothes washes" />
      <outline _complete="true" text="Extra meal for Kim? Can't remember when she's in Wales" />
      <outline _complete="true" text="Wedding buy list">
        <outline text="Black shoes">
          <outline text="Doc martens?" />
        </outline>
        <outline text="Blue chinos" />
        <outline text="Black belt" />
        <outline text="Black tie" />
      </outline>
      <outline _complete="true" text="November trip">
        <outline text="book manshausen" />
        <outline text="book flights" />
        <outline text="book ferry" />
        <outline text="time off work (plus for Kim)" />
      </outline>
      <outline _complete="true" text="Pre Kim arriving">
        <outline text="Buy shampoo and conditioner" />
        <outline text="Tidy" />
      </outline>
      <outline _complete="true" text="Buy keyboard?" />
    </outline>
    <outline _complete="true" text="Important stuff">
      <outline _complete="true" text="Car clone">
        <outline text="PCN XL13967352" />
        <outline text="RV15 XXN" />
        <outline text="https://www.bexley.gov.uk/services/parking/view-evidence-challenge-issue-penalty-charge-notice-pcn" />
        <outline text="https://www.camscanner.com/share/show?encrypt_id=MHgzZjMwY2Nj&amp;amp;sid=D5004A569C484268VX7Xy6KL" />
        <outline text="Call ref">
          <outline text="CAD 3380 8/11/19" />
        </outline>
        <outline text="parking.services@bexley.gov.uk">
          <outline text="PCN number" />
          <outline text="Reg no." />
        </outline>
        <outline text="DVLA">
          <outline text="Write in to them">
            <outline text="They will send acknowledgement" />
          </outline>
          <outline text="Physically write in to address:" _note="Vehicles Team DVLA Swansea&#10;SA99 1ZZ" />
          <outline text="Vehicles Team DVLA Swansea" />
          <outline text="SA99 1ZZ" />
          <outline text="Will receive ack in 2-4 weeks" />
          <outline text="What to do?">
            <outline text="Log book and covering letter to same address" />
            <outline text="Respond " />
          </outline>
        </outline>
      </outline>
      <outline _complete="true" text="Relish">
        <outline text="qzEPZWJh" />
        <outline text="No 0330 686 6000" />
      </outline>
      <outline _complete="true" text="JUYHLY6MG7ETNNDS" />
    </outline>
    <outline text="#life #house Essentials">
      <outline _complete="true" text="Kitchen - £149.32">
        <outline text="Nisbets">
          <outline text="Carbon steel general pan - £12.79" _note="https://www.nisbets.co.uk/vogue-carbon-steel-induction-frying-pan-255mm/gd064" />
          <outline text="Baking tray - £7.99" _note="https://www.nisbets.co.uk/vogue-non-stick-carbon-steel-baking-tray/p_gd014" />
          <outline text="Chopping board - £8.49" _note="https://www.nisbets.co.uk/hygiplas-high-density-white-chopping-board-small/hc867" />
          <outline text="Flat front spatula - £3.19" _note="https://www.nisbets.co.uk/vogue-flexible-slotted-turner-14in/dp013" />
          <outline text="Tea towels - £7.47 (3 bought individually)" _note="https://www.nisbets.co.uk/vogue-heavy-blue-tea-towel/e918" />
          <outline text="Oven cloth - £2.99" _note="https://www.nisbets.co.uk/vogue-standard-oven-cloth/e930&#10;Heavy duty - https://www.nisbets.co.uk/vogue-heavy-duty-oven-cloth/e929" />
        </outline>
        <outline text="Amazon" />
        <outline text="Chef knives - £32.98">
          <outline text="General chef knife - £28.99" _note="https://www.nisbets.co.uk/victorinox-fibrox-carving-knife-extra-broad-blade-205mm/c662">
            <outline text="https://www.amazon.co.uk/d/Home/Victorinox-Chefs-Knife-Extra-Broad/B000IAZC4Q/?tag=budget-knife-gf-21" />
          </outline>
          <outline text="Victorinox paring knife - £3.99" _note="https://www.nisbets.co.uk/victorinox-paring-knife-green-80mm/cp840" />
        </outline>
        <outline text="Cutlery - £23.46">
          <outline text="Forks - £5.99 (12)" _note="https://www.nisbets.co.uk/olympia-harley-table-fork/d691" />
          <outline text="Knives - £9.59 (12)" _note="https://www.nisbets.co.uk/olympia-harley-table-knife/d690" />
          <outline text="Spoons - £4.79" _note="https://www.nisbets.co.uk/olympia-harley-dessert-spoon/d695" />
          <outline text="Teaspoons - £3.09" _note="https://www.nisbets.co.uk/olympia-harley-teaspoon/d697" />
          <outline _complete="true" text="Steak knives" />
        </outline>
        <outline text="Crockery - £49.96">
          <outline text="Big plates - £14.99 (6)" _note="https://www.nisbets.co.uk/athena-hotelware-narrow-rimmed-plates-284mm/cf365" />
          <outline text="Small plates - £9.99 (12)" _note="https://www.nisbets.co.uk/athena-hotelware-narrow-rimmed-plates-165mm/cf360" />
          <outline text="Flat bowls - £9.99 (6)" _note="https://www.nisbets.co.uk/athena-hotelware-rimmed-soup-pasta-bowls-228mm/cc214" />
          <outline text="Mugs - £14.99" _note="https://www.nisbets.co.uk/olympia-enamel-mug-350ml/gm516" />
          <outline text="Glasses" />
          <outline _complete="true" text="Big bowls" />
        </outline>
        <outline _complete="true" text="Cast iron pan" />
        <outline _complete="true" text="Big boiling pot" />
      </outline>
      <outline _complete="true" text="WiFi access points" />
      <outline _complete="true" text="Mattress protector" />
      <outline _complete="true" text="Home &amp;amp; Contents Insurance" />
      <outline _complete="true" text="Furniture">
        <outline _complete="true" text="Mattress - £949 / 2 = £474.50" _note="Simba super king hybrid" />
        <outline _complete="true" text="Bed" />
        <outline _complete="true" text="Sofa" />
      </outline>
      <outline text="Amazon/nisbets">
        <outline text="Bulbs" />
        <outline text="Meat prong thermometer" />
        <outline text="Ice cream scoop" />
        <outline text="Serving spoon" />
        <outline text="Tongues" />
        <outline text="Big saucepan" />
        <outline text="Sieve" />
        <outline text="Enamel cast iron oven pan" />
        <outline text="Milk jug" />
        <outline text="Larger carbon steel pan w/lids" />
        <outline text="Microwave cover" />
        <outline text="Clothes line prop" />
      </outline>
      <outline text="House snagging">
        <outline _complete="true" text="Loft power socket" />
        <outline _complete="true" text="Cable clips" />
        <outline text="Source of power for ring/keybad" />
        <outline _complete="true" text="Pati sewing kit" />
        <outline _complete="true" text="Oil/wd40" />
      </outline>
    </outline>
    <outline text="Shopping list #shopping">
      <outline _complete="true" text="Vikal" />
      <outline _complete="true" text="Nutella things" />
      <outline _complete="true" text="Curry ingredients" />
      <outline _complete="true" text="Double fitted sheet" />
      <outline _complete="true" text="Super king fitted sheet" />
      <outline _complete="true" text="Milk (4 pints green)" />
      <outline _complete="true" text="Fage" />
      <outline _complete="true" text="Bread seeded batch - warburtons or hovis" />
      <outline _complete="true" text="Quiche " />
      <outline _complete="true" text="Baby oil " />
      <outline _complete="true" text="Tights" />
      <outline _complete="true" text="Bin bags" />
      <outline _complete="true" text="Bagels " />
      <outline _complete="true" text="Lettuce" />
      <outline _complete="true" text="Tomato" />
      <outline _complete="true" text="Beer tomato" />
      <outline _complete="true" text="Spring onion" />
      <outline _complete="true" text="Cheese" />
      <outline _complete="true" text="Seeded batch" />
      <outline _complete="true" text="Finest bacon" />
      <outline _complete="true" text="Finest eggs" />
      <outline _complete="true" text="Avocado" />
      <outline _complete="true" text="Quiche" />
      <outline _complete="true" text="Scotch egg etc" />
      <outline text="Snack cheese" />
      <outline text="Coke zero" />
      <outline text="Pasta" />
      <outline text="Bread" />
    </outline>
    <outline text="Car">
      <outline text="Timing (cam) belt replacement, £418 including water pump" _note="Monza Sport, Bridge Garage, London Road, Ashington, RH20 3DD" />
      <outline _complete="true" text="Tue, Mar 24, 2020 Car service AM" _note="Bridge Garage, London Road, Ashington, rh203dd">
        <outline text="10:30" />
        <outline text="9 month service + healthcheck" />
        <outline text="5yr cambelt check" />
      </outline>
      <outline text="Dad's doc" _note="https://docs.google.com/spreadsheets/d/1uAY3kJJKf5qd3okljUJLigAwQKur0SIgTrAmMZ65UpA/edit#gid=954881973" />
    </outline>
    <outline text="Nationwide">
      <outline _complete="true" text="Application ref 70238081" />
      <outline text="Customer service 0800 30 20 10" />
      <outline text="Insurance">
        <outline text="Phone no. 0800 051 0154" />
        <outline text="Policy no. 15829009" />
      </outline>
      <outline text="passnumber = holmes avenue" />
      <outline text="Customer number 6441397300" />
      <outline text="switch reference number FSWI9863730000R185" />
    </outline>
    <outline text="Student loans">
      <outline text="Customer Reference Number: 45780403307" />
      <outline text="https://www.student-finance.service.gov.uk/customer/home/pages#%20" />
    </outline>
    <outline _complete="true" text="General Accident">
      <outline text="Phone 03450308026" />
      <outline text="Policy no 807093156" />
    </outline>
    <outline _complete="true" text="Christmas prezzies">
      <outline _complete="true" text="Kimmy">
        <outline text="Electric toothbrush" />
        <outline text="Flannel shirt" />
        <outline text="Something to help her with fit eating?" />
        <outline text="fancy water bottle?" />
      </outline>
      <outline _complete="true" text="Eira - Uniqlo jacket" />
      <outline text="Nick - booze?" />
      <outline _complete="true" text="Mum and dad" />
      <outline _complete="true" text="Liz" />
      <outline _complete="true" text="Kelvin" />
    </outline>
    <outline _complete="true" text="Prep for Swansea xmas">
      <outline text="Buy Nick booze" />
      <outline text="Shave" />
      <outline text="Pack" />
      <outline text="Wrap kim present, pack all presents" />
      <outline text="Maybe pack wrapping paper and tape for Nicks present" />
    </outline>
    <outline _complete="true" text="Kim owed">
      <outline _complete="true" text="125 initial loan and Ceri/Geraint dinner" />
      <outline _complete="true" text="17.50 petrol" />
      <outline _complete="true" text="28.50 meals" />
      <outline _complete="true" text="25 Amazon voucher" />
      <outline _complete="true" text="Total: 196" />
      <outline _complete="true" text="-10" />
      <outline _complete="true" text="-15" />
      <outline _complete="true" text="12.5" />
      <outline _complete="true" text="Total: 183.50" />
    </outline>
    <outline text="Bits'n'bobs">
      <outline _complete="true" text="Passport application barcode">
        <outline text="3851662098" />
      </outline>
      <outline text="3414" />
    </outline>
    <outline text="Holidays">
      <outline _complete="true" text="Manshausen #manshausen">
        <outline text="Fri 30th - Mon 3rd Dec" />
        <outline text="Have paid 2,775kr (~£260)" />
        <outline _complete="true" text="Still owe 8,325kr (~£780) 10 days before arrival #todo" />
        <outline _complete="true" text="Book car or ferrys #todo" />
        <outline _complete="true" text="Coats? #todo" />
        <outline text="Flight times">
          <outline text="Heathrow -&amp;gt; Oslo" _note="7:05 - 10:15" />
          <outline text="Oslo -&amp;gt; Bodo" _note="12:50 - 14:20" />
          <outline text="Bodo -&amp;gt; Oslo" _note="17:30 - 19:00" />
          <outline text="Oslo -&amp;gt; Heathrow" _note="20:15 - 21:35" />
        </outline>
        <outline text="" />
      </outline>
      <outline _complete="true" text="Greece">
        <outline text="boat trip">
          <outline text="140pp" />
          <outline text="100 paid" />
          <outline text="10% discount" />
          <outline text="remaining = 180/160" />
        </outline>
        <outline _complete="true" text="Todo">
          <outline text="Cut nails" />
        </outline>
        <outline _complete="true" text="Clothes" />
        <outline _complete="true" text="Electricals" />
        <outline _complete="true" text="Toiletries" />
        <outline _complete="true" text="Essentials" />
      </outline>
      <outline _complete="true" text="Bestival">
        <outline text="Pre-leaving">
          <outline _complete="true" text="Shave" />
          <outline _complete="true" text="Charge portable charger" />
          <outline text="Buy belt" />
          <outline text="Buy moustaches" />
          <outline text="Buy fake barbell?" />
          <outline _complete="true" text="Inflatable sofas" />
          <outline _complete="true" text="Compression shorts" />
        </outline>
        <outline text="Clothes">
          <outline _complete="true" text="Pants x 4" />
          <outline _complete="true" text="Socks x 4" />
          <outline _complete="true" text="Shorts x 2" />
          <outline _complete="true" text="T-shirts x 4" />
          <outline _complete="true" text="Vests x 2" />
          <outline _complete="true" text="Nice shirt" />
          <outline _complete="true" text="Uniqlo jacket" />
          <outline _complete="true" text="Leotard" />
          <outline _complete="true" text="Vans" />
          <outline _complete="true" text="Flip-flops" />
          <outline _complete="true" text="Walking boots" />
          <outline _complete="true" text="Sunglasses" />
          <outline _complete="true" text="Towel" />
        </outline>
        <outline text="Toiletries">
          <outline _complete="true" text="Deodorant" />
          <outline _complete="true" text="Baby wipes" />
          <outline _complete="true" text="Suncream" />
          <outline _complete="true" text="Shower gel" />
          <outline _complete="true" text="Hair stuff" />
          <outline _complete="true" text="Toothbrush" />
          <outline _complete="true" text="Toothpaste" />
          <outline _complete="true" text="Antihistamines" />
          <outline _complete="true" text="Nexium" />
        </outline>
        <outline text="Electicals">
          <outline _complete="true" text="Portable charger" />
          <outline _complete="true" text="Phone charger" />
        </outline>
      </outline>
      <outline _complete="true" text="We are electric">
        <outline text="Packing list">
          <outline text="Important">
            <outline _complete="true" text="Shave" />
            <outline _complete="true" text="Cut nails" />
            <outline _complete="true" text="CHARGE power bank" />
            <outline _complete="true" text="Passport" />
            <outline _complete="true" text="Boarding pass" />
            <outline _complete="true" text="Festival ticket" />
            <outline text="Shuttle ticket" />
            <outline _complete="true" text="Tokens ticket" />
            <outline _complete="true" text="Power bank" />
            <outline _complete="true" text="Phone charger" />
            <outline _complete="true" text="Adaptor" />
            <outline _complete="true" text="Earphones" />
            <outline _complete="true" text="Nexium" />
            <outline _complete="true" text="Cetrizine" />
            <outline _complete="true" text="Bumbag thing?" />
            <outline _complete="true" text="Sunglasses" />
          </outline>
          <outline text="Toiletries">
            <outline _complete="true" text="Toilet roll" />
            <outline _complete="true" text="Mini toothpaste" />
            <outline _complete="true" text="Toothbrush" />
            <outline _complete="true" text="Mini shower gel" />
            <outline _complete="true" text="Sun screen" />
            <outline _complete="true" text="Deodorant" />
            <outline _complete="true" text="BABY WIPES" />
          </outline>
          <outline text="Clothes">
            <outline _complete="true" text="Pants x4" />
            <outline _complete="true" text="Socks x3/4" />
            <outline _complete="true" text="Shorts x2" />
            <outline _complete="true" text="T-shirts x4" />
            <outline _complete="true" text="Vests x3" />
            <outline _complete="true" text="Coat?" />
            <outline _complete="true" text="Summer shirt" />
            <outline _complete="true" text="Swimming shorts" />
            <outline _complete="true" text="Travel towel" />
            <outline _complete="true" text="Vans" />
            <outline _complete="true" text="Flip-flops" />
          </outline>
        </outline>
      </outline>
      <outline _complete="true" text="https://www.amoma.com/hotel.php?id=267463&amp;amp;key=201808152018082112050707005000000500001111124169&amp;amp;curid=GBP&amp;amp;langid=1&amp;amp;sbid=06658tpaHty5C_uk_Meta_&amp;amp;referer=06658tpaHty5C_uk&amp;amp;olotrackid=WxlRVAoQIWkAALZOJ6wAAACW&amp;amp;sessionKey=4486aMx2i72KjTS5PTWjrpAYdTRw7yhtlxCzrqd8mWkG7l6qiO&amp;amp;audienceid=&amp;amp;reqsource=2&amp;amp;clickThroughId=833165869" />
      <outline _complete="true" text="Iceland packing list">
        <outline text="Clothes">
          <outline _complete="true" text="3x pants" />
          <outline _complete="true" text="3x socks" />
          <outline _complete="true" text="1x swimmies" />
          <outline _complete="true" text="3x tshirts" />
          <outline _complete="true" text="Flannel shirt" />
          <outline _complete="true" text="Jeans" />
          <outline _complete="true" text="Thermal jumper" />
          <outline text="Down jacket" />
          <outline _complete="true" text="Boots" />
          <outline text="Desert boots" />
        </outline>
        <outline text="Toiletries">
          <outline _complete="true" text="Foot cream" />
          <outline _complete="true" text="Toothbrush" />
          <outline text="Toothpaste" />
          <outline _complete="true" text="Deodorant" />
          <outline _complete="true" text="Aftershave" />
          <outline text="Hair stuff" />
          <outline text="Nexium" />
          <outline _complete="true" text="Savlon" />
        </outline>
        <outline text="Electricals">
          <outline _complete="true" text="Adaptor" />
          <outline _complete="true" text="Phone charger" />
          <outline _complete="true" text="Power bank" />
          <outline text="Earphones" />
        </outline>
        <outline text="Important">
          <outline _complete="true" text="Passport" />
          <outline text="Boarding pass" />
        </outline>
      </outline>
    </outline>
    <outline _complete="true" text="891676" />
    <outline _complete="true" text="Flat">
      <outline text="Washing machine times http://argos.scene7.com/is/content/Argos/4780948_R_D001pdf" />
      <outline text="Dad's heating crib sheet" _note="https://www.evernote.com/shard/s259/sh/3e56201d-2329-466a-b67e-f58c558acaf4/f81f18ede0242933ec46e78bfe6ef7f3">
        <outline text="https://buyhomeeasy.co.uk/he/pdf/Base%20station%20instructions%20V1-0.pdf" />
      </outline>
    </outline>
    <outline text="Barclaycard credit">
      <outline text="£6500 limit" />
      <outline text="0% expiry &lt;time startYear=&quot;2020&quot; startMonth=&quot;11&quot; startDay=&quot;13&quot;&gt;Fri, Nov 13, 2020&lt;/time&gt; " />
    </outline>
    <outline text="Rubiks">
      <outline text="Sub 20 second rubiks cube blog https://medium.com/@maxdeutsch/my-month-long-quest-to-solve-a-rubiks-cube-in-under-20-seconds-2b2204282575" />
    </outline>
    <outline text="Jobs">
      <outline text="Remoters" _note="https://remoters.net/great-companies-remote-work-hiring/">
        <outline text="https://remotehub.io/remote-work-statistics" _note="https://news.ycombinator.com/item?id=21533784" />
        <outline text="CircleCI" />
        <outline text="Hotjar (python - senior data, mid normal)">
          <outline text="https://careers.hotjar.com/o/software-engineer-backend-emea-1" />
        </outline>
        <outline text="Zapier (python - currently not specific role but encourages applying anyway)" />
        <outline text="Fastly - python" />
        <outline text="Hashicorp (golang)" />
        <outline text="?stripe" />
        <outline text="Invisionapp (golang)" />
        <outline text="Gitlab (ruby only)" />
        <outline text="https://remotehub.io/" />
      </outline>
      <outline text="&lt;a href=&quot;http://whoishiring.io&quot;&gt;whoishiring.io&lt;/a&gt;" />
      <outline text="functional works">
        <outline text="&lt;a href=&quot;https://functional.works-hub.com/jobs/&quot;&gt;https://functional.works-hub.com/jobs/&lt;/a&gt;" />
      </outline>
    </outline>
  </outline>
  <outline text="Level up">
    <outline text="Compulsory knowledge">
      <outline text="Data structures">
        <outline text="Linked lists" />
        <outline text="Trees, tries and graphs" />
        <outline text="Stacks and queues" />
        <outline text="Heaps" />
        <outline text="Vectors (/ arrayLists)" />
        <outline text="Hash tables" />
      </outline>
      <outline text="Algorithms">
        <outline text="BFS" />
        <outline text="DFS" />
        <outline text="Binary search">
          <outline text="Iterative and recursive" />
        </outline>
        <outline text="Merge sort" />
        <outline text="Quick sort" />
      </outline>
      <outline text="Concepts">
        <outline text="Bit manipulation" />
        <outline text="Memory (stack vs heap)" />
        <outline text="Recursion" />
        <outline text="Dynamic programming" />
        <outline text="Big O time and space" />
      </outline>
    </outline>
    <outline text="CtCI">
      <outline text="Progress">
        <outline text="Strings and arrays" />
        <outline text="Recursion &amp;lt;= 8.5" />
      </outline>
      <outline text="Revisit">
        <outline text="1.6 String Compression - O(p + k^2), p = length of original string, k = number of diff sequences. In Java you use string builder, how does it work in Python?" />
        <outline text="1.8 Zero matrix" />
        <outline text="8.2 Robots in a Grid" />
        <outline text="8.4 Power set (all subsets of a set)" />
      </outline>
    </outline>
    <outline text="Leetcode re-visit" _note="With date last attempted">
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;23&quot;&gt;Sun, Feb 23, 2020&lt;/time&gt; https://leetcode.com/problems/longest-palindromic-substring/" />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;23&quot;&gt;Sun, Feb 23, 2020&lt;/time&gt; https://leetcode.com/problems/median-of-two-sorted-arrays/ " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;23&quot;&gt;Sun, Feb 23, 2020&lt;/time&gt; https://leetcode.com/problems/single-number-ii/ " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;2&quot; startDay=&quot;23&quot;&gt;Sun, Feb 23, 2020&lt;/time&gt; https://leetcode.com/problems/merge-two-sorted-lists/  " />
      <outline text="&lt;time startYear=&quot;2020&quot; startMonth=&quot;3&quot; startDay=&quot;6&quot;&gt;Fri, Mar 6, 2020&lt;/time&gt; https://leetcode.com/problems/cells-with-odd-values-in-a-matrix/" />
    </outline>
    <outline text="Resources">
      <outline text="Suggested approach from Gayle of CtCI https://qr.ae/pNtJsv">
        <outline text="Recursion intro and first few problems" />
        <outline text="First few problems from each of the data structures and algo's chapters" />
        <outline text="Start tackling harder problems in DS&amp;amp;A chapters" />
        <outline text="Work through rest of recursion problems" />
        <outline text="Moderate and hard problems" />
      </outline>
      <outline text="Leetcode google questions https://leetcode.com/discuss/interview-experience/124626/Google-onsite-interview-questions/" />
      <outline text="https://www.quora.com/How-useful-is-Cracking-the-Coding-Interview-book-while-appearing-for-technical-interviews-of-companies-like-Google-Facebook-Amazon-etc" />
    </outline>
    <outline text="Backlog">
      <outline text="DNS online book" _note="https://www.zytrax.com/books/dns/ch1/index.html#objectives" />
      <outline text="S3 github build triggers" _note="https://medium.com/@sithum/automate-static-website-deployment-from-github-to-s3-using-aws-codepipeline-16acca25ebc1" />
      <outline text="Paper - Ball of mud" />
      <outline text="Paper - Out of the tarpit" />
      <outline text="&lt;a href=&quot;https://segment.com/blog/separating-our-data-and-control-planes-with-ctlstore/&quot;&gt;https://segment.com/blog/separating-our-data-and-control-planes-with-ctlstore/&lt;/a&gt;" />
      <outline text="&lt;a href=&quot;http://boringtechnology.club/&quot;&gt;http://boringtechnology.club/&lt;/a&gt;" />
      <outline text="&lt;a href=&quot;http://iterative.club/&quot;&gt;http://iterative.club/&lt;/a&gt;" />
      <outline text="Read &quot;Designing data-intensive applications&quot;" />
      <outline text="Read learn you a haskell" />
      <outline text="Complete &quot;tour of golang&quot;" />
      <outline text="Haskell">
        <outline text="http://dev.stephendiehl.com/hask/" />
        <outline text="http://learnyouahaskell.com/introduction#about-this-tutorial" />
      </outline>
      <outline text="Text rendering &lt;a href=&quot;https://mrandri19.github.io/2019/07/18/modern-text-rendering-linux-ep1.html&quot;&gt;https://mrandri19.github.io/2019/07/18/modern-text-rendering-linux-ep1.html&lt;/a&gt;" />
    </outline>
  </outline>
  <outline text="&lt;a href=&quot;http://swlock.co.uk&quot;&gt;swlock.co.uk&lt;/a&gt;">
    <outline text="Pipeline" _note="https://eu-west-1.console.aws.amazon.com/codesuite/codepipeline/pipelines/swlock-deploy-pipeline/view?region=eu-west-1" />
    <outline text="root to www - why it won't work" _note="https://webmasters.stackexchange.com/questions/96519/i-have-a-cname-for-www-how-do-i-redirect-root-domain-there">
      <outline text="And again" _note="https://serverfault.com/questions/641266/forward-the-root-domain-to-the-www-subdomain-using-dns-records" />
    </outline>
    <outline text="Configuring two buckets for root and www" _note="https://docs.aws.amazon.com/AmazonS3/latest/dev/website-hosting-custom-domain-walkthrough.html" />
  </outline>
  <outline _complete="true" text="Weekly">
    <outline text="Work">
      <outline _complete="true" text="#wc2019-01-04::work">
        <outline _complete="true" text="sum by(app) (rate(refresh_dynamic_lists_frequency_seconds_sum{app=&quot;lists-refresh-dynamic&quot;}[5m])) / sum by (app) (rate(refresh_dynamic_lists_frequency_seconds_count{app=&quot;lists-refresh-dynamic&quot;}[5m]))">
          <outline text="(sum (rate(initial_update_lists_frequency_seconds_sum[5m])) / sum (rate(initial_update_lists_frequency_seconds_count[5m]))) + (sum (rate(refresh_dynamic_lists_frequency_seconds_sum[5m])) / sum (rate(refresh_dynamic_lists_frequency_seconds_count[5m])))" />
        </outline>
        <outline text="ometria.infrastructure/broadcast-ui-test-env/tectonic/tectonic_1.9.6-tectonic.1/tectonic-installer/darwin/terraform apply -var-file=build/broadcast-ui/terraform.tfvars" />
        <outline text="MERGE lib.segmentation OR move into separate lib" />
        <outline text="Suppression list update issue">
          <outline text="Log">
            <outline text="https://www.scalyr.com/events?filter=account_id%3D1102&amp;amp;teamToken=M%2Ft2aK78HxuNx3YEMIuTQQ--&amp;amp;log=*suppression_list_interface_gearman*&amp;amp;logSource=prod_ecs_cluster%2Fmass_email&amp;amp;startTime=7%20days" />
          </outline>
          <outline text="s3 bucket">
            <outline text="https://s3.console.aws.amazon.com/s3/object/kickbox.ometria.email/1102/suppression/processed/d6187ff5-6d86-4f7b-9938-18e4e9a292cb.b2bd25b2-3556-417d-8fe7-85f70cafcdba.csv?region=eu-west-1&amp;amp;tab=overview" />
          </outline>
          <outline text="admin page">
            <outline text="https://admin.ometria.com/private/mass/suppression?account_id=1102#uploads" />
          </outline>
          <outline text="Lists update deploy">
            <outline text="Existing versions">
              <outline text="lists-update-generate-jobs.yaml 1.9.1" />
              <outline text="lists-update.yaml 1.9.1" />
            </outline>
            <outline text="Update grafana charts" />
            <outline _complete="true" text="Process">
              <outline _complete="true" text="Remove old cron" />
              <outline _complete="true" text="Deploy 2x new workers" />
              <outline _complete="true" text="Deploy 2x new generate job crons" />
              <outline _complete="true" text="Validate new queues are being filled">
                <outline text="shard.initial_update_lists.{shard}" />
                <outline text="shard.refresh_dynamic_lists.{shard}" />
              </outline>
              <outline _complete="true" text="Validate new metrics show on next run">
                <outline text="initial_update_lists_count_total" />
                <outline text="refresh_dynamic_lists_count_total" />
              </outline>
              <outline _complete="true" text="Monitor old beanstalk queues and validate drained">
                <outline text="shard.list_update.{shard}" />
              </outline>
              <outline _complete="true" text="Remove old workers" />
            </outline>
          </outline>
        </outline>
        <outline _complete="true" text="Add note to docs: https://ometria.atlassian.net/wiki/spaces/DZ/pages/52244184/Kubernetes+info">
          <outline text="Regarding applying clusterrolebinding to give permissions" />
          <outline text="Error looks like" _note="Error from server (Forbidden): namespaces is forbidden: User &quot;arun@ometria.com&quot; cannot list namespaces at the cluster scope" />
        </outline>
        <outline text="BUI error handling">
          <outline text="Error types">
            <outline text="handle_campaign_services - decorator returning exc.CampaignError via partial function" />
            <outline text="" />
          </outline>
        </outline>
        <outline text="Broadcast segment last used">
          <outline text="Create mass_campaign.list_ids_used or something" />
          <outline text="Populate column in api.campaigns" />
          <outline text="in api.segments, adapt query to return dt_last_used for each list_id" />
        </outline>
        <outline text="Clean up paused campaign behaviour">
          <outline _complete="true" text="Prevent segmentation tree from mutating" />
          <outline _complete="true" text="Variant (array) fields to prevent" />
          <outline text="Draft PR" _note="https://github.com/Ometria/ometria.api.campaigns/pull/55/files?file-filters%5B%5D=.py&amp;amp;file-filters%5B%5D=No+extension" />
        </outline>
        <outline text="Finalise and deploy improved winner campaign stats PR" />
        <outline text="Move segmentation tree gen into separate lib" />
        <outline text="Bootcamp" />
        <outline text="Post review on glassdoor for Charlotte/People team" _note="https://www.glassdoor.co.uk/Overview/Working-at-Ometria-EI_IE2300129.11,18.htm" />
      </outline>
      <outline _complete="true" text="#wc2019-10-28::work">
        <outline _complete="true" text="Duplicate ID reproduction">
          <outline text="Duplicate campaign and add a new node (in a new child block)" />
        </outline>
        <outline _complete="true" text="100% split node incident">
          <outline text="Commits to cherry pick">
            <outline text="83bdec4dd34b6832c1254b10512be5a0ea085a2c" />
            <outline text="58829ff0a58fd0ec7642c2e85769a9a565d6ffa7" />
          </outline>
        </outline>
        <outline _complete="true" text="Commits to cherry-pick in feature/broadcast-ui-support sync up">
          <outline text="87716d199f2f5a23bfa26f38fcbfabb1c956454c" />
          <outline text="f17e4b5f04f506a4cc0393b3d88e098c3d986d4f" />
          <outline text="2768d398127e9e6011ef8ac09d42de4b04c0db3d" />
        </outline>
        <outline _complete="true" text="#om-script BUI hard switch script" _note="BEGIN;&#10;&#10;UPDATE accounts&#10;SET data = sq.new_data&#10;FROM (&#10;    SELECT (data::jsonb || jsonb_build_object('features', (data::jsonb-&amp;gt;'features' || '[&quot;v2:new_broadcast&quot;]'::jsonb)))::text new_data&#10;         , id&#10;    FROM accounts&#10;    WHERE id != 646&#10;    AND NOT data::jsonb-&amp;gt;'features' ? 'v2:new_broadcast'&#10;) sq&#10;WHERE accounts.id = sq.id;&#10;&#10;UPDATE accounts&#10;SET data = sq.new_data&#10;FROM (&#10;    SELECT (data::jsonb || jsonb_build_object('features', ((data::jsonb-&amp;gt;'features') - 'v2:mass_email')))::text new_data&#10;         , id&#10;    FROM accounts&#10;    WHERE id != 646&#10;    AND data::jsonb-&amp;gt;'features' ? 'v2:mass_email'&#10;) sq&#10;WHERE accounts.id = sq.id;" />
        <outline _complete="true" text="New list creation task">
          <outline text="Where request goes" _note="POST https://app.ometria.com/app/developer_testing/api/customers/lists" />
          <outline text="Payload" _note="{&quot;title&quot;:&quot;sam test endpoint&quot;,&quot;type&quot;:&quot;STATIC&quot;,&quot;description&quot;:&quot;To see where the request goes&quot;}" />
          <outline text="console2 api/controllers/customers/customer-lists-api.php" />
        </outline>
        <outline _complete="true" text="#om-interview Luca Valentini">
          <outline text="Code review">
            <outline text="List id's passed as env vars - how would you scale this?" />
            <outline text="Good README, well laid out and clear" />
            <outline text="No use of `if __name__==&quot;__main__&quot;:` means any time the module is called, it will trigger the main function" />
            <outline text="I assume the print functions are representative of logging in a production system?" />
            <outline text="No validation against input of list ids via env vars - could pass anything and would blow up" />
            <outline text="Missing return -&amp;gt; None type annotation on Import.__init__" />
            <outline text="Ambiguous session naming (session1 and session2)">
              <outline text="If explicit naming, the async sessions could have been attached as class attributes and referenced (rather than passing through many layers of method calls)" />
            </outline>
            <outline text="Consistent use of type hinting (maybe overkill sometimes, but thorough nonetheless)" />
            <outline text="Pagination included" />
            <outline text="Retry logic" />
            <outline text="Acknowledgement of limiting concurrent requests to same endpoint" />
            <outline text="A &quot;chunk&quot; is imported, transformed and forwarded to ometria API in one go" />
            <outline text="State update seems to update dt regardless if only a single chunk from the list was successful" />
            <outline text="Uses async await for purely CPU bound operation (transforming records)" />
          </outline>
        </outline>
        <outline text="Crew variant template change debug">
          <outline text="https://console.cloud.google.com/logs/viewer?project=ometria-kubernetes-support&amp;amp;minLogLevel=0&amp;amp;expandAll=false&amp;amp;timestamp=2019-11-01T16:33:36.986000000Z&amp;amp;customFacets=&amp;amp;limitCustomFacetWidth=true&amp;amp;dateRangeStart=2019-11-01T10:33:58.291Z&amp;amp;dateRangeEnd=2019-11-01T16:33:58.291Z&amp;amp;interval=PT6H&amp;amp;resource=aws_ec2_instance&amp;amp;advancedFilter=jsonPayload.kubernetes.labels.app%3D%22api-campaigns-prototype-v3%22%0A%22Campaign%20updated%22%0AjsonPayload.account_id%3D428%0AjsonPayload.campaign_id%3D1582&amp;amp;scrollTimestamp=2019-11-01T16:33:52.657423466Z" />
          <outline text="Downloads/aws_ec2_instance__logs__2019-11-01T04-33.json" />
          <outline text="Between 13:57:18.657 and 13:57:40.734" />
        </outline>
        <outline text="#om-interview Devin Barry">
          <outline text="Code review">
            <outline text="Strange use of twisted to trigger a job every hour" />
            <outline text="No pagination" />
            <outline text="No retries" />
            <outline text="No queuing/caching mechanism - if push to ometria fails, need to retry from MC" />
            <outline text="dt taken after sending to ometria" />
          </outline>
        </outline>
        <outline text="#om-onboarding Arun">
          <outline text="Suggested tasks">
            <outline text="New segment priority generation refactor" />
            <outline text="Mass email winner campaign streamlining" />
          </outline>
        </outline>
        <outline text="Get list of all segments per client, if used broadcast and when" />
        <outline text="Bootcamp" />
        <outline text="Clean up paused campaign behaviour">
          <outline _complete="true" text="Prevent segmentation tree from mutating" />
          <outline _complete="true" text="Variant (array) fields to prevent" />
          <outline text="Draft PR" _note="https://github.com/Ometria/ometria.api.campaigns/pull/55/files?file-filters%5B%5D=.py&amp;amp;file-filters%5B%5D=No+extension" />
        </outline>
        <outline text="Post review on glassdoor for Charlotte/People team" _note="https://www.glassdoor.co.uk/Overview/Working-at-Ometria-EI_IE2300129.11,18.htm" />
        <outline text="Finalise and deploy improved winner campaign stats PR" />
        <outline text="Move segmentation tree gen into separate lib" />
      </outline>
      <outline _complete="true" text="#wc2019-10-21::work">
        <outline text="Bootcamp" />
        <outline text="Find block_id duplicate affected campaigns">
          <outline text="Query" _note="SELECT mc.account_id&#10;     , mcc.mass_campaign_id&#10;FROM mass_campaign_configuration mcc&#10;JOIN mass_campaign mc ON mc.id = mcc.mass_campaign_id&#10;WHERE segmentation_tree::text ~ '(&quot;childBlock&quot;: {&quot;id&quot;: \d+,).*\1'&#10;AND mc.is_ready_to_send" />
          <outline text="Minified" _note="SELECT mc.account_id , mcc.mass_campaign_id FROM mass_campaign_configuration mcc JOIN mass_campaign mc ON mc.id = mcc.mass_campaign_id WHERE segmentation_tree::text ~ '(&quot;childBlock&quot;: {&quot;id&quot;: \d+,).*\1' AND mc.is_ready_to_send" />
          <outline text="Affected campaigns" _note=" shard      | account_id | mass_campaign_id | dt_scheduled&#10;------------|------------|------------------|------------------------&#10; ecomm_0100 | 501        | 5376             | 2019-10-26 08:00:00+00&#10; ecomm_0100 | 501        | 5380             | 2019-10-25 05:00:00+00&#10; ecomm_0101 | 554        | 9394             | 2019-10-25 02:00:00+00" />
          <outline text="Hotel Chocolat campaign id 104">
            <outline text="segmentation_tree" _note="{&quot;type&quot;: &quot;initial&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 1, &quot;type&quot;: &quot;segmentation&quot;, &quot;items&quot;: [{&quot;id&quot;: 1, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;field&quot;: &quot;order&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;in&quot;, &quot;field&quot;: &quot;product_attribute&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;276562&quot;], &quot;type&quot;: &quot;sub sales category&quot;}]}]}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;Purchased Velv&quot;}, {&quot;id&quot;: 2, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;op&quot;: &quot;before_ago&quot;, &quot;field&quot;: &quot;date_last_order&quot;, &quot;value&quot;: [{&quot;unit&quot;: &quot;day&quot;, &quot;duration&quot;: &quot;7&quot;}]}, {&quot;field&quot;: &quot;order&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;not_in&quot;, &quot;field&quot;: &quot;product_attribute&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;276562&quot;], &quot;type&quot;: &quot;sub sales category&quot;}]}]}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;Purchased Anything  within 7 Days&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 1, &quot;data&quot;: {&quot;winner&quot;: true, &quot;winningDelay&quot;: &quot;2&quot;, &quot;winningMetric&quot;: &quot;click_through_rate&quot;, &quot;winningDelayUnits&quot;: &quot;hours&quot;, &quot;winnerSplitPercent&quot;: 80}, &quot;type&quot;: &quot;winner&quot;, &quot;items&quot;: [{&quot;id&quot;: 1, &quot;data&quot;: {&quot;splitPercent&quot;: 10}, &quot;type&quot;: &quot;winner&quot;, &quot;title&quot;: &quot;PURCHASED-ANY-SLA&quot;}, {&quot;id&quot;: 2, &quot;data&quot;: {&quot;splitPercent&quot;: 10}, &quot;type&quot;: &quot;winner&quot;, &quot;title&quot;: &quot;PURCHASED-ANY-SLB&quot;}]}}, {&quot;id&quot;: 5, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;op&quot;: &quot;gte&quot;, &quot;field&quot;: &quot;n_visits&quot;, &quot;value&quot;: [&quot;1&quot;]}, {&quot;field&quot;: &quot;order&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;not_in&quot;, &quot;field&quot;: &quot;product_attribute&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;276562&quot;], &quot;type&quot;: &quot;sub sales category&quot;}]}]}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;Web Visit&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 1, &quot;data&quot;: {&quot;winner&quot;: true, &quot;winningDelay&quot;: &quot;2&quot;, &quot;winningMetric&quot;: &quot;click_through_rate&quot;, &quot;winningDelayUnits&quot;: &quot;hours&quot;, &quot;winnerSplitPercent&quot;: 80}, &quot;type&quot;: &quot;winner&quot;, &quot;items&quot;: [{&quot;id&quot;: 3, &quot;data&quot;: {&quot;splitPercent&quot;: 10}, &quot;type&quot;: &quot;winner&quot;, &quot;title&quot;: &quot;WEB-VISIT-SLA&quot;}, {&quot;id&quot;: 4, &quot;data&quot;: {&quot;splitPercent&quot;: 10}, &quot;type&quot;: &quot;winner&quot;, &quot;title&quot;: &quot;WEB-VISIT-SLB&quot;}]}}, {&quot;id&quot;: 6, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;op&quot;: &quot;eq&quot;, &quot;field&quot;: &quot;lifecycle_status&quot;, &quot;value&quot;: [&quot;ACTIVE&quot;]}, {&quot;field&quot;: &quot;order&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;not_in&quot;, &quot;field&quot;: &quot;product_attribute&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;276562&quot;], &quot;type&quot;: &quot;sub sales category&quot;}]}]}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;Active&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 2, &quot;data&quot;: {&quot;winner&quot;: true, &quot;winningDelay&quot;: &quot;2&quot;, &quot;winningMetric&quot;: &quot;click_through_rate&quot;, &quot;winningDelayUnits&quot;: &quot;hours&quot;, &quot;winnerSplitPercent&quot;: 80}, &quot;type&quot;: &quot;winner&quot;, &quot;items&quot;: [{&quot;id&quot;: 3, &quot;data&quot;: {&quot;splitPercent&quot;: 10}, &quot;type&quot;: &quot;winner&quot;, &quot;title&quot;: &quot;ACTIVE-SLA&quot;}, {&quot;id&quot;: 4, &quot;data&quot;: {&quot;splitPercent&quot;: 10}, &quot;type&quot;: &quot;winner&quot;, &quot;title&quot;: &quot;ACTIVE-SLB&quot;}]}}, {&quot;id&quot;: 7, &quot;data&quot;: {&quot;group&quot;: &quot;all&quot;, &quot;filters&quot;: [{&quot;op&quot;: &quot;eq&quot;, &quot;field&quot;: &quot;lifecycle_status&quot;, &quot;value&quot;: [&quot;LEAD&quot;]}, {&quot;field&quot;: &quot;order&quot;, &quot;value&quot;: [{&quot;op&quot;: &quot;not_in&quot;, &quot;field&quot;: &quot;product_attribute&quot;, &quot;value&quot;: [{&quot;ids&quot;: [&quot;276562&quot;], &quot;type&quot;: &quot;sub sales category&quot;}]}]}], &quot;query_type&quot;: &quot;and&quot;}, &quot;type&quot;: &quot;segmentation&quot;, &quot;title&quot;: &quot;Lead&quot;, &quot;childBlock&quot;: {&quot;id&quot;: 3, &quot;data&quot;: {&quot;winner&quot;: true, &quot;winningDelay&quot;: &quot;2&quot;, &quot;winningMetric&quot;: &quot;click_through_rate&quot;, &quot;winningDelayUnits&quot;: &quot;hours&quot;, &quot;winnerSplitPercent&quot;: 80}, &quot;type&quot;: &quot;winner&quot;, &quot;items&quot;: [{&quot;id&quot;: 3, &quot;data&quot;: {&quot;splitPercent&quot;: 10}, &quot;type&quot;: &quot;winner&quot;, &quot;title&quot;: &quot;LEAD-SLA&quot;}, {&quot;id&quot;: 4, &quot;data&quot;: {&quot;splitPercent&quot;: 10}, &quot;type&quot;: &quot;winner&quot;, &quot;title&quot;: &quot;LEAD-SLB&quot;}]}}]}}" />
          </outline>
          <outline text="Get all affected campaigns on all shards" _note="cd /server/apps/ometria.master/tools/db/&#10;&#10;php run-on-all-shards.php $'SELECT account_id , mass_campaign_id, dt_created FROM mass_campaign_configuration WHERE segmentation_tree::text ~ \'(&quot;childBlock&quot;: {&quot;id&quot;: \\d+,).*\\1\' and account_id not in (79, 352)'" />
        </outline>
        <outline text="ba&amp;amp;sh ticket">
          <outline text="https://ometria.atlassian.net/secure/RapidBoard.jspa?rapidView=49&amp;amp;projectKey=ES&amp;amp;modal=detail&amp;amp;selectedIssue=ES-506" />
          <outline text="Image requested within app to cache" _note="https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=45x45&amp;amp;mode=pad&amp;amp;url=https%3A%2F%2Fba-sh.com%2Fon%2Fdemandware.static%2F-%2FSites-master-bash%2Fdefault%2Fdw3813dc48%2FallImages%2FH18NEW%2F1H19TIAN_CAMEL_1.jpg">
            <outline text="tossh ImageGenWeb2" />
            <outline text="Decoded url from within cdn call" _note="https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=45x45&amp;amp;mode=pad&amp;amp;url=https://ba-sh.com/on/demandware.static/-/Sites-master-bash/default/dw3813dc48/allImages/H18NEW/1H19TIAN_CAMEL_1.jpg" />
            <outline text="Relevant url param" _note="https://ba-sh.com/on/demandware.static/-/Sites-master-bash/default/dw3813dc48/allImages/H18NEW/1H19TIAN_CAMEL_1.jpg" />
            <outline text="Hashed version" _note="b44c473108e9b711477372db65c7883b" />
            <outline text="When accessing broken cdn link, receive the following in the header" _note="x-ometria-image-error: cache resources exhausted `/imagecache/b/4/b44c473108e9b711477372db65c7883b' @ error/cache.c/OpenPixelCache/4080" />
            <outline text="Errors in /tmp/image-errorreponses.log" _note="cache resources exhausted `/imagecache/b/4/b44c473108e9b711477372db65c7883b' @ error/cache.c/OpenPixelCache/4080        /tmb.php?default_size=45x45&amp;amp;mode=pad&amp;amp;url=https%3A%2F%2Fba-sh.com%2Fon%2Fdemandware.static%2F-%2FSites-master-bash%2Fdefault%2Fdw3813dc48%2FallImages%2FH18NEW%2F1H19TIAN_CAMEL_1.jpg" />
            <outline text="Creating invalidation in cloudfront for" _note="/tmb.php?default_size=45x45&amp;amp;mode=pad&amp;amp;url=https%3A%2F%2Fba-sh.com%2Fon%2Fdemandware.static%2F-%2FSites-master-bash%2Fdefault%2Fdw3813dc48%2FallImages%2FH18NEW%2F1H19TIAN_CAMEL_1.jpg" />
            <outline text="Invalidation DID work, but still returned a broken image, due to `Unable to resize image`" />
          </outline>
        </outline>
        <outline text="Wetsuit Outlet trigger campaign segmentation count issue">
          <outline text="Generated reporting query" _note="SELECT customers.id&#10;/*SELECT count(customers.id)*/&#10;FROM customers&#10;WHERE customers.account_id = 570&#10;AND (&#10;    EXISTS (&#10;        SELECT 1&#10;        FROM customer_email_interaction_rollup&#10;        WHERE customer_email_interaction_rollup.customer_id = customers.id&#10;        AND (&#10;            customer_email_interaction_rollup.tf_campaigns_delivered &amp;amp;&amp;amp; '{479}'&#10;        )&#10;    )&#10;)">
            <outline text="Equivalent" _note="SELECT count(distinct(customer_id))&#10;FROM customer_email_interaction_rollup&#10;WHERE customer_email_interaction_rollup.tf_campaigns_delivered &amp;amp;&amp;amp; '{479}'&#10;AND account_id = 570" />
          </outline>
          <outline text="Equivalent query from (non-rollup) events table" _note="SELECT count(distinct(to_address))&#10;FROM sparkpost_email_events&#10;WHERE account_id = 570&#10;AND trigger_campaign_id = 479&#10;AND event_type='delivery'&#10;">
            <outline text="Grouped by month" _note="SELECT count(distinct(to_address))&#10;     , date_trunc('month', dt_occurred) AS month&#10;FROM sparkpost_email_events&#10;WHERE account_id = 570&#10;AND trigger_campaign_id = 479&#10;AND event_type='delivery'&#10;GROUP BY 2&#10;" />
          </outline>
          <outline text="Count all sends per month based on (incorrect) customer interaction table query" _note="WITH campaigns_unnested AS (&#10;    SELECT customer_id&#10;         , unnest(tf_campaigns_delivered) AS trigger_campaign_id&#10;    FROM customer_email_interaction_rollup&#10;    WHERE account_id = 570&#10;)&#10;SELECT count(distinct(campaigns_unnested.customer_id))&#10;     , date_trunc('month', dt_delivered) AS month&#10;FROM campaigns_unnested&#10;JOIN trigger_campaign_send USING (trigger_campaign_id, customer_id)&#10;WHERE trigger_campaign_id = 479&#10;GROUP BY 2" />
          <outline text="Earliest send recorded in interaction rollup table `2019-06-14 10:35:35+00`" _note="WITH campaigns_unnested AS (&#10;    SELECT customer_id&#10;         , unnest(tf_campaigns_delivered) AS trigger_campaign_id&#10;    FROM customer_email_interaction_rollup&#10;    WHERE account_id = 570&#10;)&#10;SELECT min(dt_delivered)&#10;FROM campaigns_unnested&#10;JOIN trigger_campaign_send USING (trigger_campaign_id, customer_id)&#10;WHERE trigger_campaign_id = 479">
            <outline text="Two days after campaign update `2019-06-12 15:37:51.64219+00`" />
            <outline text="Flurry of changes in mass_email_pipeline occurred a few days later (19th-20th) so are probably unrelated" />
          </outline>
          <outline text="Earliest send (from interaction rollup) for each campaign for given client" _note="WITH campaigns_unnested AS (&#10;    SELECT customer_id&#10;         , unnest(tf_campaigns_delivered) AS trigger_campaign_id&#10;    FROM customer_email_interaction_rollup&#10;    WHERE account_id = 570&#10;)&#10;SELECT min(dt_delivered)&#10;     , trigger_campaign_id&#10;FROM campaigns_unnested&#10;JOIN trigger_campaign_send USING (trigger_campaign_id, customer_id)&#10;/*WHERE trigger_campaign_id = 479*/&#10;GROUP BY 2&#10;ORDER BY 1">
            <outline text="Results" _note="          min           | trigger_campaign_id&#10;------------------------+---------------------&#10; 2018-01-12 20:09:53+00 |                 169&#10; 2018-04-24 19:15:51+00 |                 468&#10; 2018-04-24 23:49:42+00 |                 357&#10; 2018-04-28 09:15:26+00 |                 358&#10; 2018-07-05 23:43:01+00 |                 621&#10; 2018-07-07 07:23:24+00 |                 619&#10; 2018-10-12 09:15:34+00 |                 801&#10; 2019-05-31 13:55:48+00 |                1158&#10; 2019-05-31 14:06:10+00 |                1159&#10; 2019-06-14 10:35:35+00 |                 479&#10; 2019-06-14 23:10:52+00 |                1206&#10; 2019-06-17 10:26:37+00 |                 168&#10; 2019-06-17 11:40:15+00 |                 680&#10; 2019-06-17 15:29:53+00 |                 681&#10; 2019-06-19 13:07:22+00 |                1129&#10; 2019-06-20 11:06:37+00 |                 822&#10; 2019-06-20 11:46:18+00 |                1130&#10; 2019-06-20 12:12:48+00 |                 906&#10; 2019-06-20 13:08:32+00 |                 905&#10; 2019-07-11 10:24:44+00 |                1262&#10; 2019-07-13 23:13:47+00 |                1161&#10; 2019-07-18 05:11:31+00 |                1155&#10; 2019-07-18 14:10:23+00 |                1272&#10; 2019-07-19 05:13:30+00 |                1267&#10; 2019-08-06 16:07:46+00 |                1277&#10; 2019-08-17 07:14:12+00 |                1283" />
          </outline>
        </outline>
        <outline text="Winner campaign batch mode issue">
          <outline _complete="true" text="Marshmallow schema().validation(data) output" _note="{'customer_list_id': ['Not a valid integer.'], 'customer_query': ['Not a valid mapping type.']}" />
          <outline text="PR https://github.com/Ometria/ometria.api.campaigns/pull/61" />
        </outline>
        <outline text="Clean up paused campaign behaviour">
          <outline _complete="true" text="Prevent segmentation tree from mutating" />
          <outline _complete="true" text="Variant (array) fields to prevent" />
          <outline text="Draft PR" _note="https://github.com/Ometria/ometria.api.campaigns/pull/55/files?file-filters%5B%5D=.py&amp;amp;file-filters%5B%5D=No+extension" />
        </outline>
        <outline text="Post review on glassdoor for Charlotte/People team" _note="https://www.glassdoor.co.uk/Overview/Working-at-Ometria-EI_IE2300129.11,18.htm" />
        <outline text="Finalise and deploy improved winner campaign stats PR" />
        <outline text="Move segmentation tree gen into separate lib" />
      </outline>
      <outline _complete="true" text="#wc2019-10-07::work">
        <outline _complete="true" text="THINGS TO DO PRE-LEAVING">
          <outline text="lib.templates">
            <outline text="Create mass_email build" />
            <outline text="Deploy to test cluster" />
            <outline text="Test with a few html templates" />
            <outline text="Deploy" />
          </outline>
          <outline text="paused">
            <outline text="don't duplicate template instances https://github.com/Ometria/ometria.api.campaigns/compare/feature/broadcast-ui-support...fix/use-original-template-ids-on-campaign-duplicate" />
            <outline text="cherry pick preview_template https://github.com/Ometria/ometria.api.campaigns/compare/feature/broadcast-ui-support...improve-campaign-paused-behaviour">
              <outline text="Paused related diff" _note="git diff 70100bfd129dbdc62d1a5c536335183eb69475b3 e02bec5486ea195994ec700f160c236a05169d68" />
              <outline text="Our relevant commits" _note="git diff e02bec5486ea195994ec700f160c236a05169d68 59659b27f0f8720fe28927a0b143d3c1b6bda241" />
              <outline text="Hashes to cherry-pick" _note="5dc0f4865711942e7930c7fc800be0e923abd302&#10;59659b27f0f8720fe28927a0b143d3c1b6bda241" />
            </outline>
            <outline text="Create build for QA and then deploy" />
            <outline text="Tests breaking">
              <outline text="templates.models l1036" />
              <outline text="mass.models l346" />
            </outline>
          </outline>
          <outline text="Write up docs re how to deal with blueprint duplicate block id issue" />
        </outline>
        <outline _complete="true" text="Prep intro to eng talk for new starters">
          <outline text="Intro to engineering">
            <outline text="The team">
              <outline text="ProdEng" />
              <outline text="Eng" />
            </outline>
          </outline>
        </outline>
        <outline _complete="true" text="#om-interview Nikhil Sharma">
          <outline text="Currently in a &quot;devops&quot; role" />
          <outline text="Python application">
            <outline text="Loading and offboarding users" />
            <outline text="Flask" />
            <outline text="Not a high concurrency service" />
          </outline>
          <outline text="High throughput service is written in python" />
          <outline text="Any IO bound challenges in python?">
            <outline text="Yes in Java" />
          </outline>
          <outline text="Asking the basic IO or CPU bound operation in python">
            <outline text="For IO bound I would choose multiprocessing">
              <outline text="Noooo" />
            </outline>
            <outline text="Are you familiar with the GIL in python" />
          </outline>
        </outline>
        <outline text="Clean up paused campaign behaviour">
          <outline _complete="true" text="Prevent segmentation tree from mutating" />
          <outline _complete="true" text="Variant (array) fields to prevent" />
          <outline text="Draft PR" _note="https://github.com/Ometria/ometria.api.campaigns/pull/55/files?file-filters%5B%5D=.py&amp;amp;file-filters%5B%5D=No+extension" />
        </outline>
        <outline text="Post review on glassdoor for Charlotte/People team" _note="https://www.glassdoor.co.uk/Overview/Working-at-Ometria-EI_IE2300129.11,18.htm" />
        <outline text="Finalise and deploy improved winner campaign stats PR" />
        <outline text="Move segmentation tree gen into separate lib" />
      </outline>
      <outline _complete="true" text="#wc2019-09-30::work">
        <outline _complete="true" text="#om-interview Paul Carlton (sn backend)">
          <outline text="Kube solution" />
          <outline text="Partitioning member lists" />
          <outline text="Monitoring activity on each list" />
          <outline text="Mentioned backlog if MC went down" />
          <outline text="Ask about rate limiting?" />
          <outline text="Ask about what to set dt to?" />
        </outline>
        <outline text="Template link parsing">
          <outline text="a_part which breaks">
            <outline text="'&amp;lt;a om:linkname=&quot;this link has only a name&quot; href=&quot;'" />
            <outline text="'&amp;lt;a om:linkid=&quot;-1:2&quot; om:linkname=&quot;this has B@d Ch@rs %$\n                                 don\'t use them 😊&quot; href=&quot;'" />
            <outline text="Inner part that's failing">
              <outline text="'&amp;lt;a  om:linkname=&quot;this has B@d Ch@rs %$\n                                 don\'t use them 😊&quot; href=&quot;'" />
            </outline>
            <outline text="'&amp;lt;a om:linkid=&quot;0:2&quot; om:linkname=&quot;this link has a name&quot; href=&quot;'">
              <outline text="part_start + part_end">
                <outline text="'&amp;lt;a  om:linkname=&quot;this link has a name&quot; href=&quot;'" />
              </outline>
            </outline>
          </outline>
        </outline>
        <outline text="#om-script Over BUI adoption report">
          <outline text="SQL" _note="ON Backend1&#10;&#10;IN CORE&#10;*******&#10;\copy ( SELECT id , title , count(*) FILTER (WHERE data :: jsonb -&amp;gt; 'features' ? 'v2:mass_email') AS is_old_enabled , count(*) FILTER (WHERE data :: jsonb -&amp;gt; 'features' ? 'v2:new_broadcast') AS is_new_enabled , (SELECT count(*) FROM mass_campaign_blueprint mcp WHERE mcp.account_id = accounts.id) AS n_blueprints FROM accounts GROUP BY 1, 2 ) TO '/tmp/sam_accounts.csv' WITH DELIMITER ',' CSV HEADER;&#10;&#10;On all shards&#10;*************&#10;php run-on-all-shards.php &quot;SELECT account_id , MAX(dt_scheduled) FILTER (WHERE mass_campaign_configuration_id IS NOT NULL) AS latest_dt_scheduled_new , MAX(dt_scheduled) FILTER (WHERE mass_campaign_configuration_id IS NULL) AS latest_dt_scheduled_old FROM mass_campaign GROUP BY 1&quot; &amp;gt; /tmp/sam_campaign_status.txt&#10;&#10;Local&#10;cd code/bui_status&#10;scp ec2-user@(ec2-ip Backend1):/tmp/sam_accounts.csv account_status.csv&#10;scp ec2-user@(ec2-ip Backend1):/tmp/sam_campaign_status.txt campaign_status.csv" />
        </outline>
        <outline text="Review Simeon mass_email optimal time send PR" />
        <outline text="Clean up paused campaign behaviour">
          <outline _complete="true" text="Prevent segmentation tree from mutating" />
          <outline _complete="true" text="Variant (array) fields to prevent" />
          <outline text="Draft PR" _note="https://github.com/Ometria/ometria.api.campaigns/pull/55/files?file-filters%5B%5D=.py&amp;amp;file-filters%5B%5D=No+extension" />
        </outline>
        <outline text="Post review on glassdoor for Charlotte/People team" _note="https://www.glassdoor.co.uk/Overview/Working-at-Ometria-EI_IE2300129.11,18.htm" />
        <outline text="Finalise and deploy improved winner campaign stats PR" />
        <outline text="Daily BUI report">
          <outline text="SQL" _note="SELECT date_series::date as day&#10;     , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created&#10;     , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent&#10;FROM  generate_series( date_trunc('day', now() - interval '8 days')&#10;                     , date_trunc('day', now() - interval '1 day')&#10;                     , interval '1 day') date_series&#10;CROSS JOIN mass_campaign&#10;WHERE mass_campaign_configuration_id IS NOT NULL&#10;AND   account_id NOT IN (352, 79)&#10;GROUP BY 1&#10;ORDER BY 1" />
          <outline text="Minified" _note="SELECT date_series::date as day , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent FROM generate_series( date_trunc('day', now() - interval '8 days') , date_trunc('day', now() - interval '1 day') , interval '1 day') date_series CROSS JOIN mass_campaign WHERE mass_campaign_configuration_id IS NOT NULL AND account_id NOT IN (352, 79) GROUP BY 1 ORDER BY 1" />
          <outline text="Query with write to file on Backend1" _note="php /server/apps/ometria.master/tools/db/run-on-all-shards.php &quot;SELECT date_series::date as day , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent FROM generate_series( date_trunc('day', now() - interval '8 days') , date_trunc('day', now() - interval '1 day') , interval '1 day') date_series CROSS JOIN mass_campaign WHERE mass_campaign_configuration_id IS NOT NULL AND account_id NOT IN (352, 79) GROUP BY 1 ORDER BY 1&quot; &amp;gt; sam_temp_campaign_counts.txt" />
          <outline text="SCP to local" _note="scp ec2-user@(ec2-ip Backend1):sam_temp_campaign_counts.txt sam_temp_campaign_counts.txt" />
        </outline>
        <outline text="Change campaign wide filter in segmentation tree to filter for `optin is not false` by default" />
        <outline text="Move segmentation tree gen into separate lib" />
      </outline>
      <outline _complete="true" text="#wc2019-09-23::work">
        <outline text="template_instance duplicate branch" _note="fix/use-original-template-ids-on-campaign-duplicate" />
        <outline text="#om-script Clients on both UI" _note="SELECT id&#10;     , title&#10;/*SELECT count(*)*/&#10;FROM accounts&#10;WHERE data::jsonb-&amp;gt;'features' ? 'v2:mass_email'&#10;AND data::jsonb-&amp;gt;'features' ? 'v2:new_broadcast'&#10;AND is_active&#10;AND is_deleted IS DISTINCT FROM true&#10;AND is_scheduled_for_deletion IS DISTINCT FROM TRUE&#10;AND purpose = 'CLIENT_MAIN'&#10;AND (&#10;    is_integrated&#10;    OR lifecycle_stage IN (&#10;        'PAID',&#10;        'INTEGRATING',&#10;        'INTEGRATED'&#10;    )&#10;)&#10;/*AND title NOT ilike '%staging%'*/&#10;/*AND title NOT ilike '%test%'*/&#10;/*AND title NOT ilike '%old%'*/&#10;/*AND title NOT ilike '%delete%'*/" />
        <outline _complete="true" text="Derek Rose test send 500">
          <outline text="Campaign link" _note="https://app.ometria.com/app/e36af89488287fa6/broadcast-new/10820/templates?state=%7B%22dateCurrent%22%3A%7B%22datePeriod%22%3A%22last28days%22%2C%22dateFrom%22%3A%222019-08-26T16%3A28%3A19.729Z%22%2C%22dateTo%22%3A%222019-09-22T16%3A28%3A19.729Z%22%7D%2C%22dateCompare%22%3A%7B%22datePeriod%22%3A%22prevperiod%22%2C%22dateFrom%22%3A%222019-07-29T16%3A28%3A19.729Z%22%2C%22dateTo%22%3A%222019-08-25T16%3A28%3A19.729Z%22%7D%7D" />
          <outline text="Stacktrace" _note="[api-campaigns-prototype-v3-7445589cfc-kz9d8] {&quot;account_id&quot;: 140, &quot;log_message&quot;: &quot;&amp;lt;class 'TypeError'&amp;gt;&quot;, &quot;request_id&quot;: &quot;20190923add0ba57679f115018e95470d8727edf&quot;, &quot;user_id&quot;: 2766, &quot;name&quot;: &quot;campaigns.db&quot;, &quot;service_version&quot;: &quot;1&quot;}&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8] {&quot;account_id&quot;: 140, &quot;log_message&quot;: &quot;'NoneType' object is not a mapping&quot;, &quot;request_id&quot;: &quot;20190923add0ba57679f115018e95470d8727edf&quot;, &quot;user_id&quot;: 2766, &quot;name&quot;: &quot;campaigns.db&quot;, &quot;service_version&quot;: &quot;1&quot;}&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8] [11] 2019-09-23 16:45:26,989 [ERROR] api:campaigns: Exception on /campaigns/mass/10820/send_test [POST]&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8] Traceback (most recent call last):&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]   File &quot;/usr/local/lib/python3.7/site-packages/flask/app.py&quot;, line 2446, in wsgi_app&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]     response = self.full_dispatch_request()&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]   File &quot;/usr/local/lib/python3.7/site-packages/flask/app.py&quot;, line 1951, in full_dispatch_request&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]     rv = self.handle_user_exception(e)&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]   File &quot;/usr/local/lib/python3.7/site-packages/flask/app.py&quot;, line 1820, in handle_user_exception&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]     reraise(exc_type, exc_value, tb)&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]   File &quot;/usr/local/lib/python3.7/site-packages/flask/_compat.py&quot;, line 39, in reraise&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]     raise value&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]   File &quot;/usr/local/lib/python3.7/site-packages/flask/app.py&quot;, line 1949, in full_dispatch_request&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]     rv = self.dispatch_request()&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]   File &quot;/usr/local/lib/python3.7/site-packages/flask/app.py&quot;, line 1935, in dispatch_request&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]     return self.view_functions[rule.endpoint](**req.view_args)&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]   File &quot;/usr/local/lib/python3.7/site-packages/connexion/decorators/decorator.py&quot;, line 73, in wrapper&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]     response = function(request)&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]   File &quot;/usr/local/lib/python3.7/site-packages/connexion/decorators/uri_parsing.py&quot;, line 117, in wrapper&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]     response = function(request)&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]   File &quot;/usr/local/lib/python3.7/site-packages/connexion/decorators/validation.py&quot;, line 129, in wrapper&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]     response = function(request)&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]   File &quot;/usr/local/lib/python3.7/site-packages/connexion/decorators/validation.py&quot;, line 300, in wrapper&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]     return function(request)&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]   File &quot;/usr/local/lib/python3.7/site-packages/connexion/decorators/decorator.py&quot;, line 44, in wrapper&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]     response = function(request)&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]   File &quot;/usr/local/lib/python3.7/site-packages/connexion/decorators/parameter.py&quot;, line 207, in wrapper&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]     return function(**kwargs)&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]   File &quot;/server/apps/ometria.api.campaigns/campaigns/__init__.py&quot;, line 27, in wrapped&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]     return f(*args, **kwargs)&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]   File &quot;&amp;lt;/usr/local/lib/python3.7/site-packages/decorator.py:decorator-gen-70&amp;gt;&quot;, line 2, in send_test&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]   File &quot;/server/apps/ometria.api.campaigns/campaigns/__init__.py&quot;, line 38, in requires_database&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]     return fn(*args, **kwargs)&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]   File &quot;/server/apps/ometria.api.campaigns/campaigns/mass/api.py&quot;, line 130, in send_test&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]     resp = MassCampaigns(**req_ctx()).send_test(id, body)&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]   File &quot;/server/apps/ometria.api.campaigns/campaigns/mass/models.py&quot;, line 1283, in send_test&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]     sent_by=g.get('user_email')&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]   File &quot;&amp;lt;/usr/local/lib/python3.7/site-packages/decorator.py:decorator-gen-48&amp;gt;&quot;, line 2, in send_campaign_test_email&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]   File &quot;/server/apps/ometria.api.campaigns/campaigns/mass/models.py&quot;, line 47, in handle_services&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]     return fn(*args, **kwargs)&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]   File &quot;/server/apps/ometria.api.campaigns/campaigns/mass/models.py&quot;, line 133, in send_campaign_test_email&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8]     **(variant_delivery.get('url_parameters', {}) or {}),&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8] TypeError: 'NoneType' object is not a mapping" />
          <outline text="Specific part" _note="[api-campaigns-prototype-v3-7445589cfc-kz9d8]     **(variant_delivery.get('url_parameters', {}) or {}),&#10;[api-campaigns-prototype-v3-7445589cfc-kz9d8] TypeError: 'NoneType' object is not a mapping" />
          <outline text="Caused by line 132 in campaigns.mass.models">
            <outline text="`**(campaign.url_parameters or {}).get('parameters', {})`" />
            <outline text="campaign.url_parameters = {&quot;domains&quot;: [&quot;derek-rose.com&quot;], &quot;parameters&quot;: null} " />
            <outline text="Therefore (campaign.url_parameters or {}).get('parameters', {}) = None" />
            <outline text="**(None) etc causes issue in question" />
          </outline>
          <outline text="PR https://github.com/Ometria/ometria.api.campaigns/pull/57" />
        </outline>
        <outline _complete="true" text="Fred Perry test send issue summary">
          <outline text="admin link https://admin.ometria.com/private/mass/campaigns/982:ME:2180" />
          <outline text="Sparkpost events https://ometria.e.sparkpost.com/reports/message-events/details/0023e1f3885d3174b192/643664949434617866" />
          <outline text="Query shard 0019" _note="select * from sparkpost_email_events where account_id = 982 and mass_campaign_id = 2180;" />
          <outline text="App stats" _note="https://app.ometria.com/app/3e1eed93de21eaf2/broadcast-new/2180/stats?state=%7B%22dateCurrent%22%3A%7B%22datePeriod%22%3A%22last28days%22%2C%22dateFrom%22%3A%222019-08-26T16%3A58%3A30.855Z%22%2C%22dateTo%22%3A%222019-09-22T16%3A58%3A30.855Z%22%7D%2C%22dateCompare%22%3A%7B%22datePeriod%22%3A%22prevperiod%22%2C%22dateFrom%22%3A%222019-07-29T16%3A58%3A30.855Z%22%2C%22dateTo%22%3A%222019-08-25T16%3A58%3A30.855Z%22%7D%7D" />
        </outline>
        <outline _complete="true" text="Image service issue">
          <outline text="hashes">
            <outline text="8fbbc47904b4838bc1cb3c5d9fd9716c" />
          </outline>
          <outline text="Ended up invalidating cache in cloudfront for given URLs" />
          <outline text="CDN image request https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?url=https%3A%2F%2Fmanage.fredperry.com%2Fmedia%2Fcatalog%2Fproduct%2FM%2F7%2FM7528_102_1.JPG&amp;amp;default_size=800x800&amp;amp;size=440x660&amp;amp;mode=crop" />
          <outline text="AWS https://console.aws.amazon.com/cloudfront/home?#distribution-settings:E19AD0ET39NHR6" />
          <outline text="Example path" _note="/tmb.php?url=https%3A%2F%2Fmanage.fredperry.com%2Fmedia%2Fcatalog%2Fproduct%2FM%2F7%2FM7528_102_1.JPG&amp;amp;default_size=800x800&amp;amp;size=440x660&amp;amp;mode=crop" />
        </outline>
        <outline text="Campaign n_recipients_targeted discrepency investigation">
          <outline text="Query" _note="WITH cte AS (&#10;    SELECT account_id&#10;         , id&#10;         , dt_scheduled&#10;         , test_type&#10;         , n_recipients_estimated&#10;         , (n_recipients_estimated - n_recipients_suppressed - n_duplicate_emails) AS n_targeted_expected&#10;         , n_recipients_targeted&#10;    FROM mass_campaign&#10;    /*WHERE id = 3446*/&#10;    WHERE n_recipients_estimated &amp;gt; 0&#10;    /*AND account_id = 609*/&#10;    AND is_sent&#10;    AND mass_campaign_configuration_id IS NOT NULL&#10;),&#10;with_expected AS (&#10;    SELECT *&#10;         , n_targeted_expected - n_recipients_targeted AS n_unaccounted&#10;    FROM cte&#10;)&#10;SELECT *&#10;FROM with_expected&#10;WHERE n_unaccounted &amp;gt; 0&#10;ORDER BY dt_scheduled DESC;" />
          <outline text="Query summary counts all accounts" _note="WITH cte AS (&#10;    SELECT account_id&#10;         , id&#10;         , dt_scheduled&#10;         , test_type&#10;         , n_recipients_estimated&#10;         , (n_recipients_estimated - n_recipients_suppressed - n_duplicate_emails) AS n_targeted_expected&#10;         , n_recipients_targeted&#10;         , mass_campaign_configuration_id&#10;    FROM mass_campaign&#10;    /*WHERE id = 3446*/&#10;    WHERE n_recipients_estimated &amp;gt; 0&#10;    /*AND account_id = 609*/&#10;    AND is_sent&#10;    /*AND mass_campaign_configuration_id IS NOT NULL*/&#10;),&#10;with_expected AS (&#10;    SELECT *&#10;         , n_targeted_expected - n_recipients_targeted AS n_unaccounted&#10;    FROM cte&#10;),&#10;with_counts AS (&#10;    SELECT account_id&#10;         , count(*) FILTER (&#10;            WHERE mass_campaign_configuration_id IS NULL&#10;            AND n_unaccounted &amp;gt; 0&#10;           ) AS affected_old_campaigns&#10;         , count(*) FILTER (&#10;            WHERE mass_campaign_configuration_id IS NOT NULL&#10;            AND n_unaccounted &amp;gt; 0&#10;           ) AS affected_new_campaigns&#10;         , count(*) all_campaigns&#10;    FROM with_expected&#10;    /*WHERE n_unaccounted &amp;gt; 0*/&#10;    GROUP BY 1&#10;)&#10;SELECT *&#10;FROM with_counts&#10;WHERE (&#10;    affected_old_campaigns &amp;gt; 0&#10;    OR affected_new_campaigns &amp;gt; 0&#10;);">
            <outline text="Minified" _note="WITH cte AS ( SELECT account_id , id , dt_scheduled , test_type , n_recipients_estimated , (n_recipients_estimated - n_recipients_suppressed - n_duplicate_emails) AS n_targeted_expected , n_recipients_targeted , mass_campaign_configuration_id FROM mass_campaign WHERE n_recipients_estimated &amp;gt; 0 AND is_sent ), with_expected AS ( SELECT * , n_targeted_expected - n_recipients_targeted AS n_unaccounted FROM cte ), with_counts AS ( SELECT account_id , count(*) FILTER ( WHERE mass_campaign_configuration_id IS NULL AND n_unaccounted &amp;gt; 0 ) AS affected_old_campaigns , count(*) FILTER ( WHERE mass_campaign_configuration_id IS NOT NULL AND n_unaccounted &amp;gt; 0 ) AS affected_new_campaigns , count(*) all_campaigns FROM with_expected GROUP BY 1 ) SELECT * FROM with_counts WHERE ( affected_old_campaigns &amp;gt; 0 OR affected_new_campaigns &amp;gt; 0 )" />
          </outline>
        </outline>
        <outline text="Remove f-string from PR and merge lib.segmentation into master" />
        <outline text="Review Simeon mass_email optimal time send PR" />
        <outline text="Clean up paused campaign behaviour">
          <outline _complete="true" text="Prevent segmentation tree from mutating" />
          <outline _complete="true" text="Variant (array) fields to prevent" />
          <outline text="Draft PR" _note="https://github.com/Ometria/ometria.api.campaigns/pull/55/files?file-filters%5B%5D=.py&amp;amp;file-filters%5B%5D=No+extension" />
        </outline>
        <outline text="Post review on glassdoor for Charlotte/People team" _note="https://www.glassdoor.co.uk/Overview/Working-at-Ometria-EI_IE2300129.11,18.htm" />
        <outline text="Finalise and deploy improved winner campaign stats PR" />
        <outline text="Daily BUI report">
          <outline text="SQL" _note="SELECT date_series::date as day&#10;     , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created&#10;     , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent&#10;FROM  generate_series( date_trunc('day', now() - interval '8 days')&#10;                     , date_trunc('day', now() - interval '1 day')&#10;                     , interval '1 day') date_series&#10;CROSS JOIN mass_campaign&#10;WHERE mass_campaign_configuration_id IS NOT NULL&#10;AND   account_id NOT IN (352, 79)&#10;GROUP BY 1&#10;ORDER BY 1" />
          <outline text="Minified" _note="SELECT date_series::date as day , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent FROM generate_series( date_trunc('day', now() - interval '8 days') , date_trunc('day', now() - interval '1 day') , interval '1 day') date_series CROSS JOIN mass_campaign WHERE mass_campaign_configuration_id IS NOT NULL AND account_id NOT IN (352, 79) GROUP BY 1 ORDER BY 1" />
          <outline text="Query with write to file on Backend1" _note="php /server/apps/ometria.master/tools/db/run-on-all-shards.php &quot;SELECT date_series::date as day , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent FROM generate_series( date_trunc('day', now() - interval '8 days') , date_trunc('day', now() - interval '1 day') , interval '1 day') date_series CROSS JOIN mass_campaign WHERE mass_campaign_configuration_id IS NOT NULL AND account_id NOT IN (352, 79) GROUP BY 1 ORDER BY 1&quot; &amp;gt; sam_temp_campaign_counts.txt" />
          <outline text="SCP to local" _note="scp ec2-user@(ec2-ip Backend1):sam_temp_campaign_counts.txt sam_temp_campaign_counts.txt" />
        </outline>
        <outline text="Change campaign wide filter in segmentation tree to filter for `optin is not false` by default" />
        <outline text="Move segmentation tree gen into separate lib" />
      </outline>
      <outline _complete="true" text="#wc2019-09-09::work">
        <outline text="Feature flags">
          <outline text="#om-script Mass feature flag addition script" _note="UPDATE accounts&#10;SET data = sq.new_data&#10;FROM (&#10;    SELECT (data::jsonb || jsonb_build_object('features', (data::jsonb-&amp;gt;'features' || '[&quot;v2:new_broadcast&quot;]'::jsonb)))::text new_data&#10;         , id&#10;    FROM accounts&#10;    WHERE data::jsonb-&amp;gt;'features' ? 'v2:mass_email'&#10;    AND NOT data::jsonb-&amp;gt;'features' ? 'v2:new_broadcast'&#10;    AND is_active&#10;    AND is_deleted IS DISTINCT FROM true&#10;    AND is_scheduled_for_deletion IS DISTINCT FROM TRUE&#10;    AND title NOT ilike '%staging%'&#10;    AND title NOT ilike '%test%'&#10;    AND title NOT ilike '%old%'&#10;    AND title NOT ilike '%delete%'&#10;) sq&#10;WHERE accounts.id = sq.id" />
          <outline text="#om-script Mass feature flag removal script" _note="UPDATE accounts&#10;SET data = sq.new_data&#10;FROM (&#10;    SELECT (data::jsonb || jsonb_build_object('features', ((data::jsonb-&amp;gt;'features') - 'v2:mass_email')))::text new_data&#10;         , id&#10;    FROM accounts&#10;    WHERE id IN (967, 10698, 411, 4171, 380, 728, 971, 984, 576, 578, 509, 511, 512, 12831, 155, 298, 858, 163, 631, 586, 68419, 233, 574, 267, 654, 487, 423, 201, 269, 414, 936, 331, 952, 1081, 1044, 1048, 513, 11232, 860, 949, 950, 953, 775, 1045, 1126, 772, 1047, 622, 122, 850, 170, 842, 835, 205, 222, 896, 873, 1051, 291, 648, 1046, 673, 8072, 189, 1068, 993, 954, 1073, 10852, 1127, 994, 8062, 1049, 1066, 8951)&#10;) sq&#10;WHERE accounts.id = sq.id" />
        </outline>
        <outline text="builds">
          <outline text="quay.io/ometria/ometria.console2:build-7085" />
          <outline text="quay.io/ometria/ometria.console:v1.63" />
        </outline>
        <outline text="mass_campaign generation time investigation">
          <outline text="dt_generation_complete - dt_sending_start" />
          <outline text="Query" _note="WITH gen_times AS (&#10;    SELECT dt_generation_complete - dt_sending_start generation_time&#10;         , id&#10;         , account_id&#10;    FROM mass_campaign&#10;    WHERE mass_campaign_configuration_id IS NOT null&#10;    AND is_sent&#10;    AND dt_scheduled &amp;gt; now() - interval '1 month'&#10;)&#10;SELECT generation_time&#10;     , id&#10;     , account_id&#10;FROM gen_times&#10;ORDER BY generation_time DESC&#10;LIMIT 10" />
          <outline text="Minified" _note="WITH gen_times AS ( SELECT dt_generation_complete - dt_sending_start generation_time , id , account_id FROM mass_campaign WHERE mass_campaign_configuration_id IS NOT null AND is_sent AND dt_scheduled &amp;gt; now() - interval '1 month' ) SELECT generation_time , id , account_id FROM gen_times ORDER BY generation_time DESC LIMIT 10" />
        </outline>
        <outline text="#om-interview Gabriel Alvarez (backend tech task)">
          <outline text="Barebones README, no discussion" />
          <outline text="API key stored in Dockerfile (passed to script as args)" />
          <outline text="Strange use of flat script (no __name__ guard) and single-use functions. I understand that this is a PoC, but a more traditional (low-effort) approach would have made it more readable" />
          <outline text="" />
        </outline>
        <outline _complete="true" text="#om-interview Nicolas Markos (snr backend contractor in person)">
          <outline text="Task analysis">
            <outline text="README/discussion">
              <outline text="Great README, thoughtful and well presented" />
              <outline text="Ackowledged dt_last_run based mechanism, but seemed to have missed standard dt_last_run update" />
              <outline text="Hasn't mentioned storage of local state">
                <outline text="dt_last_run" />
                <outline text="Account config" />
              </outline>
              <outline text="Didn't implement concurrent solution. Touches on it a couple of times (states that it's the best approach) but doesn't use in proof of concept">
                <outline text="Ackowledged super slow latency to API and big lists - seems like the obvious choice" />
              </outline>
              <outline text="Sidenote: seemed to experience abnormally slow latency on calls to mailchimp?" />
              <outline text="Inconsistent in implementation ideas, initiall cronjobs running on kube (?) for each job, later on, cloudwatch triggering jobs via lambda? Why lambda?" />
              <outline text="How would this work: &quot;The full cloud option could have AWS Cloudwatch and AWS Lambda as its main components along with AWS Kinesis to stream data to Ometria API&quot;?" />
            </outline>
            <outline text="Code review">
              <outline text="In MailchimpClient class, strange double use of `get_records`, first to get total amount of records, and then again to retrieve and process records" />
              <outline text="`if last_update == None`" />
              <outline text="IS paginating, page size is defined as envvar" />
              <outline text="No handling of dodgy payloads when building python data from MC response (explicit getitem calls foo['bar']" />
              <outline text="last_update is set after sending jobs to ometria API - large missing window between picking up jobs, processing and updating dt" />
              <outline text="dt is returned in any situation that isn't status code 500, including any other bad requests" />
              <outline text="last_update isn't persisted/passed on to next job anywhere" />
            </outline>
            <outline text="Actual interview">
              <outline text="Seems to be unfamiliar with asyncio and how it could be used with a scheduler" />
              <outline text="Seems unsure with a bunch of details (&quot;not sure&quot;/&quot;not familiar with&quot;/etc)" />
              <outline text="Didn't understand context of issue &quot;don't care what a list is&quot;" />
              <outline text="Struggling to get his head around the dt issue - can't get acknowledgement of the issue">
                <outline text="With prompting eventually got there" />
              </outline>
              <outline text="Views schedulers as components that schedule for a single client&amp;lt;-&amp;gt;list combo" />
              <outline text="(Bruno) What if we used a database?">
                <outline text="Suggests one scheduler cronjob" />
                <outline text="" />
              </outline>
            </outline>
          </outline>
        </outline>
        <outline text="#om-script Find accounts on both old and new bui (on core)" _note="select count(*) from accounts where data::jsonb-&amp;gt;'features' ?&amp;amp; array['v2:new_broadcast', 'v2:mass_email'] and is_active;&#10;&#10;select id, title from accounts where data::jsonb-&amp;gt;'features' ? 'v2:mass_email' and not data::jsonb-&amp;gt;'features' ? 'v2:new_broadcast' and is_active and is_deleted is distinct from true and is_scheduled_for_deletion is distinct from true and title not ilike '%staging%' and title not ilike '%test%' and title not ilike '%old%' and title not ilike '%delete%';" />
        <outline _complete="true" text="#om-interview Victor Grosu">
          <outline text="Hosted in AWS" />
          <outline text="Legacy in heroku" />
          <outline text="Moving from monolith to microservices written in django" />
          <outline text="Lambdas for door locking system">
            <outline text="Lambdas written in python" />
            <outline text="Lambdas like non-relational databases???" />
          </outline>
          <outline text="Worked as a Go engineer">
            <outline text="Project in marketing/advertising industry" />
            <outline text="Event based, kafka, redis" />
          </outline>
          <outline text="Thought process behind splitting">
            <outline text="Load, company growing a lot" />
            <outline text="Adding lots of units" />
          </outline>
          <outline text="Why django?">
            <outline text="Integration with rest framework, faster to build" />
            <outline text="Difference between django and flask" />
            <outline text="Mentioned ORM in django" />
          </outline>
          <outline text="Postgres and dynamodb" />
          <outline text="What is a postgres index">
            <outline text="Can't describe it exactly but can how it works" />
            <outline text="If you have a huge dataset and want to make it faster" />
            <outline text="Didn't use postgres for large data, decided it wasn't the best for their application, not structured" />
            <outline text="Elastisearch/caching" />
            <outline text="Not a good understanding of why indexes are used" />
          </outline>
          <outline text="Concurrent workloads">
            <outline text="Task queues" />
          </outline>
          <outline text="Good time to use asyncio or thread">
            <outline text="Excel that needs to be generated and sent by email" />
            <outline text="Not a good enough" />
          </outline>
        </outline>
        <outline _complete="true" text="Need to figure out why preview_template isn't displaying in http://localhost:8090/app/developer_testing/service/templates/template-instance/8633/versions" />
        <outline _complete="true" text="Broken variant stuff">
          <outline text="variants payload" _note="[{'leaf': {'id': 1, 'data': {'splitPercent': 50}, 'type': 'split', 'title': 'Split 1'}, 'path': [{'data': {'splitPercent': 50}, 'type': 'split', 'title': 'Split 1'}], 'label': 'Split 1', 'blockId': 1, 'delivery': {'schedule_mode': None}, 'template': {}, 'blockItemId': 1, 'recipientsCount': 41}, {'leaf': {'id': 2, 'data': {'splitPercent': 50}, 'type': 'split', 'title': 'Split 2'}, 'path': [{'data': {'splitPercent': 50}, 'type': 'split', 'title': 'Split 2'}], 'label': 'Split 2', 'blockId': 1, 'delivery': {'batch_data': None, 'batch_mode': 'none', 'schedule_mode': 'schedule', 'dt_scheduled_display': '2019-09-09T14:47:00Z'}, 'template': {}, 'blockItemId': 2, 'recipientsCount': 59}]" />
        </outline>
        <outline text="Remove f-string from PR and merge lib.segmentation into master" />
        <outline text="Review Simeon mass_email optimal time send PR" />
        <outline text="Clean up paused campaign behaviour">
          <outline _complete="true" text="Prevent segmentation tree from mutating" />
          <outline _complete="true" text="Variant (array) fields to prevent" />
          <outline text="Draft PR" _note="https://github.com/Ometria/ometria.api.campaigns/pull/55/files?file-filters%5B%5D=.py&amp;amp;file-filters%5B%5D=No+extension" />
        </outline>
        <outline text="Post review on glassdoor for Charlotte/People team" _note="https://www.glassdoor.co.uk/Overview/Working-at-Ometria-EI_IE2300129.11,18.htm" />
        <outline text="Finalise and deploy improved winner campaign stats PR" />
        <outline text="Daily BUI report">
          <outline text="SQL" _note="SELECT date_series::date as day&#10;     , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created&#10;     , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent&#10;FROM  generate_series( date_trunc('day', now() - interval '8 days')&#10;                     , date_trunc('day', now() - interval '1 day')&#10;                     , interval '1 day') date_series&#10;CROSS JOIN mass_campaign&#10;WHERE mass_campaign_configuration_id IS NOT NULL&#10;AND   account_id NOT IN (352, 79)&#10;GROUP BY 1&#10;ORDER BY 1" />
          <outline text="Minified" _note="SELECT date_series::date as day , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent FROM generate_series( date_trunc('day', now() - interval '8 days') , date_trunc('day', now() - interval '1 day') , interval '1 day') date_series CROSS JOIN mass_campaign WHERE mass_campaign_configuration_id IS NOT NULL AND account_id NOT IN (352, 79) GROUP BY 1 ORDER BY 1" />
          <outline text="Query with write to file on Backend1" _note="php /server/apps/ometria.master/tools/db/run-on-all-shards.php &quot;SELECT date_series::date as day , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent FROM generate_series( date_trunc('day', now() - interval '8 days') , date_trunc('day', now() - interval '1 day') , interval '1 day') date_series CROSS JOIN mass_campaign WHERE mass_campaign_configuration_id IS NOT NULL AND account_id NOT IN (352, 79) GROUP BY 1 ORDER BY 1&quot; &amp;gt; sam_temp_campaign_counts.txt" />
          <outline text="SCP to local" _note="scp ec2-user@(ec2-ip Backend1):sam_temp_campaign_counts.txt sam_temp_campaign_counts.txt" />
        </outline>
        <outline text="Change campaign wide filter in segmentation tree to filter for `optin is not false` by default" />
        <outline text="Move segmentation tree gen into separate lib" />
      </outline>
      <outline _complete="true" text="#wc2019-09-02::work">
        <outline text="Merge lib.segmentation into master" />
        <outline text="#om-interview Michal Kostyal (Frontend)">
          <outline text="Overall approach/structure?">
            <outline text="Make it work, then make it efficient and beautiful. If there is scope, test it (or if enough time, write a test first)." />
            <outline text="Laid out a high level skeleton of the UI." />
            <outline text="Considered different options for triggering requests (button against char entry?). Noted performance implications (connection speed etc)." />
            <outline text="Noted libs that provide tables with pagination." />
            <outline text="Separate components (search input, search button, table, pagination)." />
            <outline text="Reasoned that for this problem, local state might be sufficient." />
          </outline>
          <outline text="How to handle state?">
            <outline text="Use of redux store" />
          </outline>
          <outline text="Would you model differently based on if endpoint returns 10/1000 results?">
            <outline text="Yes" />
            <outline text="Performance implications when requesting large numbers">
              <outline text="Size of payload" />
            </outline>
            <outline text="Would then request fewer" />
          </outline>
          <outline text="Would you keep &quot;search&quot; and &quot;page&quot; in your state">
            <outline text="Yes I would also keep some state (centrally, or specific to related components)" />
            <outline text="Reacts to clicks" />
            <outline text="Reasons that he might not have to store page state" />
          </outline>
          <outline text="Do you see interdependencies? Usability/functionality?">
            <outline text="Between search and pagination?">
              <outline text="When searching, want to reset the pagination" />
            </outline>
          </outline>
          <outline text="Mentioned lots of options for seach component, i.e. form and submit or search when typing">
            <outline text="Considerations related to performance?">
              <outline text="If you search from first character, too many requests, however UX might be improved" />
              <outline text="Would apply limit on no. chars before starting search" />
              <outline text="Any way of limiting requests (Rui)?">
                <outline text="Have a delay or event - only trigger it when you click out, or wait 1 second (whichever comes first etc)" />
              </outline>
            </outline>
          </outline>
          <outline text="Thoughts about testing?">
            <outline text="See if anything is rendering" />
            <outline text="See if request is successful/getting response" />
            <outline text="Unit and integration tests" />
            <outline text="If filtering on frontend, more tests there" />
            <outline text="How to test against state?">
              <outline text="Would mock state" />
              <outline text="Would test modification to state" />
              <outline text="By mocking the remote service" />
            </outline>
          </outline>
          <outline text="Questions from candidate prior to test...">
            <outline text="Should it scalable?" />
            <outline text="Will it be plugged into other existing project?">
              <outline text="Specific styles, code patterns etc" />
            </outline>
            <outline text="Target test coverage?" />
            <outline text="Target audience?" />
          </outline>
          <outline text="Seems keen to use react hooks (new feature)">
            <outline text="Seems like an interesting choice to use in the test..." />
          </outline>
          <outline text="Bundling/transpiling considerations?">
            <outline text="Could use netlify" />
          </outline>
        </outline>
        <outline _complete="true" text="Full aiven outage">
          <outline text="Rollback pgbouncer configs to semi target readonly" />
          <outline text="Move campaign processor workers back up to 8 from 2" />
        </outline>
        <outline text="Review Simeon mass_email optimal time send PR" />
        <outline text="Clean up paused campaign behaviour">
          <outline text="Prevent segmentation tree from mutating" />
          <outline text="Variant (array) fields to prevent" />
          <outline text="Draft PR" _note="https://github.com/Ometria/ometria.api.campaigns/pull/55/files?file-filters%5B%5D=.py&amp;amp;file-filters%5B%5D=No+extension" />
        </outline>
        <outline text="Finalise and deploy improved winner campaign stats PR" />
        <outline text="Post review on glassdoor for Charlotte/People team" _note="https://www.glassdoor.co.uk/Overview/Working-at-Ometria-EI_IE2300129.11,18.htm" />
        <outline text="Swop on call for 16th Sept" />
        <outline text="Daily BUI report">
          <outline text="SQL" _note="SELECT date_series::date as day&#10;     , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created&#10;     , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent&#10;FROM  generate_series( date_trunc('day', now() - interval '8 days')&#10;                     , date_trunc('day', now() - interval '1 day')&#10;                     , interval '1 day') date_series&#10;CROSS JOIN mass_campaign&#10;WHERE mass_campaign_configuration_id IS NOT NULL&#10;AND   account_id NOT IN (352, 79)&#10;GROUP BY 1&#10;ORDER BY 1" />
          <outline text="Minified" _note="SELECT date_series::date as day , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent FROM generate_series( date_trunc('day', now() - interval '8 days') , date_trunc('day', now() - interval '1 day') , interval '1 day') date_series CROSS JOIN mass_campaign WHERE mass_campaign_configuration_id IS NOT NULL AND account_id NOT IN (352, 79) GROUP BY 1 ORDER BY 1" />
          <outline text="Query with write to file on Backend1" _note="php /server/apps/ometria.master/tools/db/run-on-all-shards.php &quot;SELECT date_series::date as day , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent FROM generate_series( date_trunc('day', now() - interval '8 days') , date_trunc('day', now() - interval '1 day') , interval '1 day') date_series CROSS JOIN mass_campaign WHERE mass_campaign_configuration_id IS NOT NULL AND account_id NOT IN (352, 79) GROUP BY 1 ORDER BY 1&quot; &amp;gt; sam_temp_campaign_counts.txt" />
          <outline text="SCP to local" _note="scp ec2-user@(ec2-ip Backend1):sam_temp_campaign_counts.txt sam_temp_campaign_counts.txt" />
        </outline>
        <outline text="Change campaign wide filter in segmentation tree to filter for `optin is not false` by default" />
        <outline text="Move segmentation tree gen into separate lib" />
      </outline>
      <outline _complete="true" text="#wc2019-08-26::work">
        <outline _complete="true" text="Deploy">
          <outline text="Mass email">
            <outline text="Current v9.14" />
            <outline text="New v9.15" />
          </outline>
          <outline text="Api.campaigns">
            <outline text="Current v1.3broadcast118" />
            <outline text="New v1.3broadcast119" />
          </outline>
        </outline>
        <outline _complete="true" text="BUI code stats">
          <outline text="api.campaign" _note="Insertions 10625&#10;Deletions 7302" />
          <outline text="mass_email" _note="Insertions 4040&#10;Deletions 1760" />
          <outline text="lib.segmentation" _note="Insertions 2403&#10;Deletions 1015" />
          <outline text="Rough totals" _note="Insertions 17068&#10;Deletions 10077" />
        </outline>
        <outline _complete="true" text="Incident">
          <outline text="Variant ids">
            <outline text="3799, 3800, 3801" />
          </outline>
        </outline>
        <outline text="Post review on glassdoor for Charlotte/People team" _note="https://www.glassdoor.co.uk/Overview/Working-at-Ometria-EI_IE2300129.11,18.htm" />
        <outline text="Clean up paused campaign behaviour">
          <outline text="Draft PR" _note="https://github.com/Ometria/ometria.api.campaigns/pull/55/files?file-filters%5B%5D=.py&amp;amp;file-filters%5B%5D=No+extension" />
        </outline>
        <outline text="Swop on call for 16th Sept" />
        <outline text="Daily BUI report">
          <outline text="SQL" _note="SELECT date_series::date as day&#10;     , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created&#10;     , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent&#10;FROM  generate_series( date_trunc('day', now() - interval '8 days')&#10;                     , date_trunc('day', now() - interval '1 day')&#10;                     , interval '1 day') date_series&#10;CROSS JOIN mass_campaign&#10;WHERE mass_campaign_configuration_id IS NOT NULL&#10;AND   account_id NOT IN (352, 79)&#10;GROUP BY 1&#10;ORDER BY 1" />
          <outline text="Minified" _note="SELECT date_series::date as day , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent FROM generate_series( date_trunc('day', now() - interval '8 days') , date_trunc('day', now() - interval '1 day') , interval '1 day') date_series CROSS JOIN mass_campaign WHERE mass_campaign_configuration_id IS NOT NULL AND account_id NOT IN (352, 79) GROUP BY 1 ORDER BY 1" />
          <outline text="Query with write to file on Backend1" _note="php /server/apps/ometria.master/tools/db/run-on-all-shards.php &quot;SELECT date_series::date as day , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent FROM generate_series( date_trunc('day', now() - interval '8 days') , date_trunc('day', now() - interval '1 day') , interval '1 day') date_series CROSS JOIN mass_campaign WHERE mass_campaign_configuration_id IS NOT NULL AND account_id NOT IN (352, 79) GROUP BY 1 ORDER BY 1&quot; &amp;gt; sam_temp_campaign_counts.txt" />
          <outline text="SCP to local" _note="scp ec2-user@(ec2-ip Backend1):sam_temp_campaign_counts.txt sam_temp_campaign_counts.txt" />
        </outline>
        <outline text="Change campaign wide filter in segmentation tree to filter for `optin is not false` by default" />
        <outline text="Move segmentation tree gen into separate lib" />
      </outline>
      <outline _complete="true" text="#wc2019-08-19::work">
        <outline _complete="true" text="#om-interview Leonardo Castano Diaz">
          <outline text="Background on him">
            <outline text="Current job in automation, cloud computing" />
            <outline text="Dev ops &quot;stuff&quot; and best practices" />
            <outline text="Implementing changes in company which is unaware of all devops best practices" />
            <outline text="25 years working in linux" />
            <outline text="7 years as a developer" />
            <outline text="1-2 years in internet provider, managing network equipment, various hardware" />
            <outline text="Wide range of skills end to end" />
            <outline text="At the moment like the devops idea, putting in place automation to help developers" />
          </outline>
          <outline text="Examples of anything implemented recently?">
            <outline text="In last was working on video streaming on amazon cloud">
              <outline text="Using PHP / mysql" />
            </outline>
            <outline text="Hired to migrate ec2 running php/mysql to kube">
              <outline text="In charge of researching how to do so" />
            </outline>
            <outline text="Did it make it into production?">
              <outline text="Got acquired by other company mid project so was not seen through to completion" />
              <outline text="Hence why he left this company as he wa frustrated" />
            </outline>
          </outline>
          <outline text="Examples of anything down around CI/CD">
            <outline text="Project to give developers BI" />
            <outline text="Built in jenkins" />
            <outline text="Developers built artefact" />
            <outline text="He had to implement support to enable microsoft to build artefacts" />
            <outline text="Used ETL to microsoft sql server" />
            <outline text="Flow" />
            <outline text="Deploy to production env">
              <outline text="Connect to bitbucket" />
              <outline text="Build artefacts" />
              <outline text="Push to test env" />
              <outline text="ETLs and data" />
              <outline text="Manual step to deploy to production" />
            </outline>
          </outline>
          <outline text="To what aspect was your environment using terraform">
            <outline text="When starting in the company, they didn't have codified deploys" />
            <outline text="Implemented infra as code via terraform" />
            <outline text="Spoke about technical stuff here.... (missed it)" />
            <outline text="Project stopped so couldn't finish" />
          </outline>
          <outline text="Testing on terraform?">
            <outline text="*Not really answering the question here" />
            <outline text="Did you test or look at the plan?">
              <outline text="Prefer to use modules" />
              <outline text="Freedom to scale up multiple machines" />
            </outline>
            <outline text="Doesn't sound like he is familiar" />
          </outline>
          <outline text="Experience around SRE based stuff? SLAs? On-call? Etc">
            <outline text="Had SLA. High numbers of SLA" />
            <outline text="Using monitoring tools" />
            <outline text="*Bit vague" />
          </outline>
          <outline text="Do you have operational experience running kube in prod?">
            <outline text="No" />
          </outline>
          <outline text="Experience/opinions on monitoring?">
            <outline text="Mentioned old stuff from 1996?" />
            <outline text="Create customised monitoring scripts in something" />
          </outline>
          <outline text="If you could start a greenfield question, what tech stack?">
            <outline text="Amazon EKS, containers on top of that" />
            <outline text="Orchestration on EKS?" />
            <outline text="Ansible or terraform?" />
            <outline text="Kube, terraform, ansible, linux, dynamic languages" />
            <outline text="Monitoring?">
              <outline text="Kibana" />
              <outline text="What would you use to stream the data into kibana?">
                <outline text="Doesn't know" />
              </outline>
            </outline>
            <outline text="CI?">
              <outline text="Jenkins" />
            </outline>
            <outline text="Redis for caching" />
            <outline text="RDS in amazon fro DBs, mySQL">
              <outline text="Or dynamo db" />
              <outline text="Has experience with postgres and mysql" />
            </outline>
            <outline text="You have logging, what about metrics? Logging stats/502s etc">
              <outline text="Implement *something* in amazon?" />
              <outline text="Do you mean cloudwatch?">
                <outline text="Yeah" />
              </outline>
            </outline>
            <outline text="To ensure HA, would use Amazon LBs" />
          </outline>
          <outline text="Questions for us?">
            <outline text="Question around what his role might look like" />
          </outline>
        </outline>
        <outline _complete="true" text="#om-interview Alexey Khobov">
          <outline text="Minimal AWS experience (used ec2 back in 2008-2012)" />
          <outline text="Questionable kube experience" />
          <outline text="Seems to come from a development background" />
          <outline text="Hasn't used terraform, talked about experience with ansible" />
          <outline text="Has both push and pull based metric mechanisms">
            <outline text="Says that push based systems are much easier to manage - much prefers them" />
          </outline>
        </outline>
        <outline text="Patch campaigns">
          <outline text="https://app.ometria.com/app/e8584a67f9c98641/broadcast-new/1431/segmentation?state={%22dateCurrent%22%3A{%22datePeriod%22%3A%22last28days%22%2C%22dateFrom%22%3A%222019-07-27T16%3A10%3A29.549Z%22%2C%22dateTo%22%3A%222019-08-23T16%3A10%3A29.550Z%22}%2C%22dateCompare%22%3A{%22datePeriod%22%3A%22prevperiod%22%2C%22dateFrom%22%3A%222019-06-29T16%3A10%3A29.549Z%22%2C%22dateTo%22%3A%222019-07-26T16%3A10%3A29.549Z%22}}" />
          <outline text="https://app.ometria.com/app/e8584a67f9c98641/broadcast-new/1436/segmentation?state={%22dateCurrent%22%3A{%22datePeriod%22%3A%22last28days%22%2C%22dateFrom%22%3A%222019-07-27T16%3A10%3A29.549Z%22%2C%22dateTo%22%3A%222019-08-23T16%3A10%3A29.550Z%22}%2C%22dateCompare%22%3A{%22datePeriod%22%3A%22prevperiod%22%2C%22dateFrom%22%3A%222019-06-29T16%3A10%3A29.549Z%22%2C%22dateTo%22%3A%222019-07-26T16%3A10%3A29.549Z%22}}" />
          <outline text="https://app.ometria.com/app/e8584a67f9c98641/broadcast-new/1419/segmentation?state={%22dateCurrent%22%3A{%22datePeriod%22%3A%22last28days%22%2C%22dateFrom%22%3A%222019-07-27T16%3A10%3A29.549Z%22%2C%22dateTo%22%3A%222019-08-23T16%3A10%3A29.550Z%22}%2C%22dateCompare%22%3A{%22datePeriod%22%3A%22prevperiod%22%2C%22dateFrom%22%3A%222019-06-29T16%3A10%3A29.549Z%22%2C%22dateTo%22%3A%222019-07-26T16%3A10%3A29.549Z%22}}" />
        </outline>
        <outline text="mass_email redshift lock debug">
          <outline text="pre proper fix">
            <outline text="query" _note="UPDATE campaigns.mass_352_2349&#10;SET&#10;  is_delivered = func.dt_delivered IS NOT NULL,&#10;  is_opened    = func.dt_opened IS NOT NULL OR func.dt_clicked IS NOT NULL,&#10;  is_clicked   = func.dt_clicked IS NOT NULL,&#10;  dt_delivered = func.dt_delivered,&#10;  dt_opened    = least(func.dt_opened, func.dt_clicked),&#10;  dt_clicked   = func.dt_clicked&#10;FROM redshift_get_email_engagement_for_mass_campaign(352, 2349) func&#10;WHERE func.uuid::UUID IN (&#10;    SELECT uuid&#10;    FROM campaigns.mass_352_2349&#10;    FOR UPDATE SKIP LOCKED&#10;)" />
            <outline text="EXPLAIN output" _note="                                                              QUERY PLAN                                                                                                                                    [0/5327]&#10;---------------------------------------------------------------------------------------------------------------------------------------&#10; Update on mass_352_2349  (cost=268.44..23960.60 rows=1567000 width=277)&#10;   -&amp;gt;  Nested Loop  (cost=268.44..23960.60 rows=1567000 width=277)&#10;         -&amp;gt;  Seq Scan on mass_352_2349  (cost=0.00..166.34 rows=3134 width=130)&#10;         -&amp;gt;  Materialize  (cost=268.44..290.51 rows=500 width=144)&#10;               -&amp;gt;  Hash Semi Join  (cost=268.44..288.01 rows=500 width=144)&#10;                     Hash Cond: ((func.uuid)::uuid = &quot;ANY_subquery&quot;.uuid)&#10;                     -&amp;gt;  Function Scan on redshift_get_email_engagement_for_mass_campaign func  (cost=0.25..10.25 rows=1000 width=136)&#10;                     -&amp;gt;  Hash  (cost=229.02..229.02 rows=3134 width=56)&#10;                           -&amp;gt;  Subquery Scan on &quot;ANY_subquery&quot;  (cost=0.00..229.02 rows=3134 width=56)&#10;                                 -&amp;gt;  LockRows  (cost=0.00..197.68 rows=3134 width=22)&#10;                                       -&amp;gt;  Seq Scan on mass_352_2349 mass_352_2349_1  (cost=0.00..166.34 rows=3134 width=22)&#10;(11 rows)" />
          </outline>
        </outline>
        <outline text="Introduce n_recipients_targeted for front end use">
          <outline text="build v1.3broadcast118beta1 currently live on test env" />
        </outline>
        <outline text="Clean up paused campaign behaviour">
          <outline text="Draft PR" _note="https://github.com/Ometria/ometria.api.campaigns/pull/55/files?file-filters%5B%5D=.py&amp;amp;file-filters%5B%5D=No+extension" />
        </outline>
        <outline text="Campaign sending speed analysis">
          <outline text="Historical batch send times" _note="SELECT *&#10;FROM (&#10;    SELECT batch.account_id&#10;         , batch.dt_scheduled::date date_sent&#10;         /*, mass_campaign_id*/&#10;         , (EXTRACT(EPOCH FROM (batch.dt_sending_complete - batch.dt_sending_start)) / 60)::int AS sending_minutes&#10;         , batch.n_recipients_estimated&#10;    FROM campaigns.mass_campaign_batch batch&#10;    JOIN mass_campaign on mass_campaign.id = batch.mass_campaign_id&#10;    WHERE batch.is_sent&#10;      AND mass_campaign.mass_campaign_configuration_id is NULL&#10;      /*AND batch.dt_scheduled &amp;lt;= now() - interval '4 months'*/&#10;      AND date_part('month', batch.dt_scheduled) = 11&#10;      AND date_part('year', batch.dt_scheduled) = 2018&#10;) sq&#10;ORDER by sq.sending_minutes DESC" />
          <outline text="Shard 0102 Feelunique Nov 2018 old campaigns" _note="SELECT *&#10;FROM (&#10;    SELECT batch.account_id&#10;         , batch.dt_scheduled&#10;         /*, mass_campaign_id*/&#10;         , (EXTRACT(EPOCH FROM (batch.dt_sending_complete - batch.dt_sending_start)) / 60)::int AS sending_minutes&#10;         , batch.n_recipients_estimated&#10;    FROM campaigns.mass_campaign_batch batch&#10;    JOIN mass_campaign on mass_campaign.id = batch.mass_campaign_id&#10;    WHERE batch.is_sent&#10;      AND mass_campaign.mass_campaign_configuration_id is NULL&#10;      /*AND batch.dt_scheduled &amp;lt;= now() - interval '4 months'*/&#10;      AND date_part('month', batch.dt_scheduled) = 11&#10;      AND date_part('year', batch.dt_scheduled) = 2018&#10;) sq&#10;ORDER BY sq.sending_minutes DESC&#10;LIMIT 20" />
        </outline>
        <outline _complete="true" text="Campaign performance reporting fix (contactsTargeted returning for campaign rather than variant)" _note="https://app.ometria.com/app/077b8da48581085e/marketing?state=%7B%22dateCurrent%22%3A%7B%22datePeriod%22%3A%22last28days%22%2C%22dateFrom%22%3A%222019-07-19T15%3A28%3A31.935Z%22%2C%22dateTo%22%3A%222019-08-15T15%3A28%3A31.935Z%22%7D%2C%22dateCompare%22%3A%7B%22datePeriod%22%3A%22prevperiod%22%2C%22dateFrom%22%3A%222019-06-21T15%3A28%3A31.935Z%22%2C%22dateTo%22%3A%222019-07-18T15%3A28%3A31.935Z%22%7D%7D#1">
          <outline text="mass_campaigns_metrics_report" />
          <outline text="Branch fix/campaign-performance-contacts-targetted" />
        </outline>
        <outline _complete="true" text="Add email.variant_identifier to &quot;personalisation&quot; drop down in delivery tab">
          <outline text="Branch add-variant-identifier-to-personalisation-dropdown" />
          <outline text="Matt L has merged into one of his branches" />
        </outline>
        <outline text="Swop on call for 16th Sept" />
        <outline text="Daily BUI report">
          <outline text="SQL" _note="SELECT date_series::date as day&#10;     , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created&#10;     , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent&#10;FROM  generate_series( date_trunc('day', now() - interval '8 days')&#10;                     , date_trunc('day', now() - interval '1 day')&#10;                     , interval '1 day') date_series&#10;CROSS JOIN mass_campaign&#10;WHERE mass_campaign_configuration_id IS NOT NULL&#10;AND   account_id NOT IN (352, 79)&#10;GROUP BY 1&#10;ORDER BY 1" />
          <outline text="Minified" _note="SELECT date_series::date as day , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent FROM generate_series( date_trunc('day', now() - interval '8 days') , date_trunc('day', now() - interval '1 day') , interval '1 day') date_series CROSS JOIN mass_campaign WHERE mass_campaign_configuration_id IS NOT NULL AND account_id NOT IN (352, 79) GROUP BY 1 ORDER BY 1" />
          <outline text="Query with write to file on Backend1" _note="php /server/apps/ometria.master/tools/db/run-on-all-shards.php &quot;SELECT date_series::date as day , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent FROM generate_series( date_trunc('day', now() - interval '8 days') , date_trunc('day', now() - interval '1 day') , interval '1 day') date_series CROSS JOIN mass_campaign WHERE mass_campaign_configuration_id IS NOT NULL AND account_id NOT IN (352, 79) GROUP BY 1 ORDER BY 1&quot; &amp;gt; sam_temp_campaign_counts.txt" />
          <outline text="SCP to local" _note="scp ec2-user@(ec2-ip Backend1):sam_temp_campaign_counts.txt sam_temp_campaign_counts.txt" />
        </outline>
        <outline text="Change campaign wide filter in segmentation tree to filter for `optin is not false` by default" />
        <outline text="Send campaign table late batch incident report to Al" _note="https://docs.google.com/document/d/173ydovu0WvYVfFZIOigGrMzs3iiOAIc539gRytB-XdE/edit#" />
        <outline text="Tests to add (edge cases)">
          <outline text="Suppression filters" />
          <outline text="Suppression list_id" />
          <outline text="Suppression filter and list_id" />
          <outline text="OR filters" />
          <outline text="Incomplete winner test data" />
        </outline>
        <outline text="Move segmentation tree gen into separate lib" />
      </outline>
      <outline _complete="true" text="#wc2019-08-12::work">
        <outline text="Campaign performance reporting fix (contactsTargeted returning for campaign rather than variant)" _note="https://app.ometria.com/app/077b8da48581085e/marketing?state=%7B%22dateCurrent%22%3A%7B%22datePeriod%22%3A%22last28days%22%2C%22dateFrom%22%3A%222019-07-19T15%3A28%3A31.935Z%22%2C%22dateTo%22%3A%222019-08-15T15%3A28%3A31.935Z%22%7D%2C%22dateCompare%22%3A%7B%22datePeriod%22%3A%22prevperiod%22%2C%22dateFrom%22%3A%222019-06-21T15%3A28%3A31.935Z%22%2C%22dateTo%22%3A%222019-07-18T15%3A28%3A31.935Z%22%7D%7D#1">
          <outline text="Branch fix/campaign-performance-contacts-targetted" />
        </outline>
        <outline text="Add email.variant_identifier to &quot;personalisation&quot; drop down in delivery tab">
          <outline text="Branch add-variant-identifier-to-personalisation-dropdown" />
        </outline>
        <outline text="Feed back for interview below" />
        <outline _complete="true" text="#om-interview Garron Kramer">
          <outline text="His questions">
            <outline text="Question around circleci - why we using it?" />
            <outline text="How mature are our pipelines?">
              <outline text="Are they deploying in production?" />
            </outline>
          </outline>
          <outline text="His background?">
            <outline text="Contracting for 10 years, recently changed their policy" />
            <outline text="Mastercard snr devops 3 years, 2 years remote" />
            <outline text="CI/CD drivers, gitlab, atlassian/jenkins, never used circleci." />
          </outline>
          <outline text="How are accounts structured (AWS accounts)">
            <outline text="Historically I found myself using the network, and instances sitting on top." />
            <outline text="Direct connects/VPNs. Networks around VPCs etc" />
            <outline text="More recently, containerisation. At mastercard responsible for EKS cluster for CI/CD work. All runners sat on top of that cluster." />
          </outline>
          <outline text="Once account was provisioned was it in terraform?">
            <outline text="Yes in terraform. Building containers in gitlab, pulling out into docker" />
          </outline>
          <outline text="Mentioned ran infra in EKS, any application work in kube?">
            <outline text="All prod stuff at mastercard was handled by others (respective countries)." />
            <outline text="Ran some PoCs for customers on a limited basis." />
          </outline>
          <outline text="What were the reliability requirements? SLAs?">
            <outline text="Application needed to be HA geographically, but infra was not" />
            <outline text="Was some tolerance, but gitlab infra never went down" />
          </outline>
          <outline text="Working with networking/ec2, anything cool you did/anything impressive?">
            <outline text="Didn't have elastic solution. What was offered wasnt scalable or redundant" />
            <outline text="Produced his own solution to solve this" />
            <outline text="Did you leverage existing tools or from scratch?">
              <outline text="Used ASGs, launch templates. Reused as much as they could" />
              <outline text="Handling dropouts needed to be done manually" />
            </outline>
          </outline>
          <outline text="How comfortable are you with kube?">
            <outline text="Reasonable. Haven't used extensively, but have used quite a bit over the years." />
            <outline text="Confident in his ability to catch up." />
            <outline text="Has used managed and other. Rancher. Tectonic. EKS." />
          </outline>
          <outline text="What have you done/what do you prefer in terms of monitoring?">
            <outline text="Within containerised environments, not much experienced." />
            <outline text="Most experience from historical things" />
            <outline text="Within that context, developing HA, handling failover of monitoring. False negatives etc." />
            <outline text="Admits that he hasn't played with any new container based solutions." />
          </outline>
          <outline text="Do you have monitoring in place for EKS system?">
            <outline text="Launching ELK stack from gitlab. Measuring throughputs and soforth" />
            <outline text="Didn't really monitor to any extent as was low impact/low necessary" />
          </outline>
          <outline text="His final questions">
            <outline text="What would the first 6 months look like?" />
            <outline text="How widely is dev-ops adopted by the rest of the team and company?" />
            <outline text="Questions around tectonic" />
          </outline>
          <outline text="Questions">
            <outline text="In office work?" />
          </outline>
        </outline>
        <outline _complete="true" text="Mass email ecs scaling mitigation">
          <outline text="scalyr filter" _note="https://www.scalyr.com/events?filter=%22Checking%20cluster%20size%20and%20jobs%22%20or%20%22System%20status%20-%22%20or%20%22Too%20soon%20to%20scale%20up,%20no%20immediate%20relevant%20jobs.%22&amp;amp;teamToken=M%2Ft2aK78HxuNx3YEMIuTQQ--&amp;amp;log=*monitoring_worker*&amp;amp;logSource=*prod_ecs_cluster%2Fmass_email*&amp;amp;startTime=10%20min" />
        </outline>
        <outline _complete="true" text="Current versions">
          <outline _complete="true" text="console2-test 6908" />
          <outline text="console2 6942" />
          <outline text="api-campaigns-prototype-v3 v1.3broadcast117" />
        </outline>
        <outline _complete="true" text="critical checkbot">
          <outline text="Fred Perry 982" />
          <outline text="Shard 0019" />
          <outline text="query" _note="select dt_scheduled, dt_sending_start, dt_generation_complete from campaigns.mass_campaign_batch where account_id = 982 and date_trunc('minute', dt_sending_start) = '2019-08-13 17:00:00+00'::timestamp order by dt_sending_start;" />
        </outline>
        <outline _complete="true" text="Fix test send utm parameters" />
        <outline text="Fix db monitoring with new cache layer (for monitoring ecs cluster thing)">
          <outline text="segmentation tree is in same format as segmentation requests when using the pure function in mass.models. Can reuse that to retrieve the segmentation tree and recipients and then use the helper function to transform" />
        </outline>
        <outline text="Swop on call for 16th Sept" />
        <outline text="Daily BUI report">
          <outline text="SQL" _note="SELECT date_series::date as day&#10;     , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created&#10;     , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent&#10;FROM  generate_series( date_trunc('day', now() - interval '8 days')&#10;                     , date_trunc('day', now() - interval '1 day')&#10;                     , interval '1 day') date_series&#10;CROSS JOIN mass_campaign&#10;WHERE mass_campaign_configuration_id IS NOT NULL&#10;AND   account_id NOT IN (352, 79)&#10;GROUP BY 1&#10;ORDER BY 1" />
          <outline text="Minified" _note="SELECT date_series::date as day , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent FROM generate_series( date_trunc('day', now() - interval '8 days') , date_trunc('day', now() - interval '1 day') , interval '1 day') date_series CROSS JOIN mass_campaign WHERE mass_campaign_configuration_id IS NOT NULL AND account_id NOT IN (352, 79) GROUP BY 1 ORDER BY 1" />
          <outline text="Query with write to file on Backend1" _note="php /server/apps/ometria.master/tools/db/run-on-all-shards.php &quot;SELECT date_series::date as day , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent FROM generate_series( date_trunc('day', now() - interval '8 days') , date_trunc('day', now() - interval '1 day') , interval '1 day') date_series CROSS JOIN mass_campaign WHERE mass_campaign_configuration_id IS NOT NULL AND account_id NOT IN (352, 79) GROUP BY 1 ORDER BY 1&quot; &amp;gt; sam_temp_campaign_counts.txt" />
          <outline text="SCP to local" _note="scp ec2-user@(ec2-ip Backend1):sam_temp_campaign_counts.txt sam_temp_campaign_counts.txt" />
        </outline>
        <outline _complete="true" text="New campaign validation">
          <outline text="Query to find campaigns" _note="SELECT mc.id as campaign_id, a.id as account_id, a.title, mc.dt_created, mc.dt_scheduled FROM mass_campaign mc JOIN accounts a ON a.id = mc.account_id WHERE mass_campaign_configuration_id IS NOT NULL AND dt_created &amp;gt;= '2019-07-23 10:00:00'::timestamp AND account_id NOT IN (352, 79) and is_sent">
            <outline text="With segmentation tree" _note="SELECT mc.id as campaign_id, a.id as account_id, a.title, mc.dt_scheduled, mcc.segmentation_tree FROM mass_campaign mc JOIN accounts a ON a.id = mc.account_id JOIN mass_campaign_configuration mcc ON mcc.id = mc.mass_campaign_configuration_id WHERE mass_campaign_configuration_id IS NOT NULL AND mc.dt_created &amp;gt;= '2019-07-23 10:00:00'::timestamp AND mc.account_id NOT IN (352, 79)" />
          </outline>
          <outline text="Example url" _note="https://app.ometria.com/app/077b8da48581085e/broadcast-new/8261/segmentation?state=%7B%22dateCurrent%22%3A%7B%22datePeriod%22%3A%22last28days%22%2C%22dateFrom%22%3A%222019-06-26T09%3A28%3A17.263Z%22%2C%22dateTo%22%3A%222019-07-23T09%3A28%3A17.263Z%22%7D%2C%22dateCompare%22%3A%7B%22datePeriod%22%3A%22prevperiod%22%2C%22dateFrom%22%3A%222019-05-29T09%3A28%3A17.263Z%22%2C%22dateTo%22%3A%222019-06-25T09%3A28%3A17.263Z%22%7D%7D">
            <outline text="Swop out hash and campaign_id" />
          </outline>
          <outline text="Checked sent campaigns" _note=" shard      | campaign_id | account_id | title        | dt_scheduled&#10;------------|-------------|------------|--------------|------------------------&#10; ecomm_0101 | 8255        | 564        | Lovehoney NZ | 2019-07-24 07:30:00+00&#10; ecomm_0101 | 8227        | 564        | Lovehoney NZ | 2019-07-23 19:00:00+00&#10; ecomm_0101 | 8256        | 554        | Lovehoney AU | 2019-07-24 09:00:00+00&#10; ecomm_0101 | 8230        | 554        | Lovehoney AU | 2019-07-23 21:00:00+00&#10; ecomm_0101 | 8229        | 558        | Lovehoney FR | 2019-07-24 05:00:00+00&#10; ecomm_0101 | 8225        | 560        | Lovehoney DE | 2019-07-24 05:00:00+00&#10; ecomm_0101 | 8239        | 556        | Lovehoney EU | 2019-07-24 06:00:00+00" />
          <outline text="Real time query with updated last run dt" _note="SELECT mc.id as campaign_id, a.id as account_id, a.title, mc.dt_created, mc.dt_scheduled FROM mass_campaign mc JOIN accounts a ON a.id = mc.account_id WHERE mass_campaign_configuration_id IS NOT NULL AND dt_created &amp;gt;= '2019-08-07 00:09:00.00000+00'::timestamp AND account_id NOT IN (352, 79) and is_sent ORDER BY a.id, mc.dt_scheduled" />
          <outline text="Last ran at" _note="2019-08-07 00:09:00.00000+00" />
        </outline>
        <outline _complete="true" text="api.campaigns cherry-pick">
          <outline text="All commit difference order by dt desc (newest top)" _note="a6981e7 - done&#10;1af09c3 - done&#10;873d71a - done&#10;5744594 - done&#10;74ed565 - done&#10;243b0d7 - done&#10;38358ba - done&#10;e296b6d - done&#10;6b23e05 - done&#10;1fb8257 - done&#10;d0e0a2d - done&#10;4df88dc - done&#10;7ab450e - done&#10;7ef8004 - done&#10;375ba05 - done&#10;096bb35 - done&#10;3f1cfc8 - done w/ conflict fix&#10;df2ad4a - done w/ conflict fix&#10;5093a1a - done&#10;1de99b5 - done&#10;9f619c4 - done Pipfile* ignored&#10;5849350 - done&#10;ab68c59 - done w/ conflict fix&#10;dd5c88a - done&#10;6ffb76b - done&#10;* All to do with variant.batch_mode when is_master (not relevant)&#10;5da7c61 - ignore&#10;f51e91e - ignore&#10;843b1d2 - ignore" />
          <outline text="NOW MANUALLY MERGED UP TO a6981e7" />
        </outline>
        <outline text="Change campaign wide filter in segmentation tree to filter for `optin is not false` by default" />
        <outline text="Send campaign table late batch incident report to Al" _note="https://docs.google.com/document/d/173ydovu0WvYVfFZIOigGrMzs3iiOAIc539gRytB-XdE/edit#" />
        <outline text="Tests to add (edge cases)">
          <outline text="Suppression filters" />
          <outline text="Suppression list_id" />
          <outline text="Suppression filter and list_id" />
          <outline text="OR filters" />
          <outline text="Incomplete winner test data" />
        </outline>
        <outline text="Communicate to clients (caveats)">
          <outline text="Perfect random splits are now not enforced" />
          <outline text="Nested random splits are not supported" />
        </outline>
        <outline text="Move segmentation tree gen into separate lib" />
      </outline>
      <outline _complete="true" text="#wc2019-08-05::work">
        <outline _complete="true" text="Fix pip and deploy cs report" />
        <outline text="Fix test send utm parameters" />
        <outline text="Look at template rendering in test sends">
          <outline text="Wonderbly campaign (sending or sent by now)" _note="https://app.ometria.com/app/9dfd5051129528b2/broadcast-new/4636/segmentation?state=%7B%22dateCurrent%22%3A%7B%22datePeriod%22%3A%22last28days%22%2C%22dateFrom%22%3A%222019-07-11T09%3A30%3A17.156Z%22%2C%22dateTo%22%3A%222019-08-07T09%3A30%3A17.156Z%22%7D%2C%22dateCompare%22%3A%7B%22datePeriod%22%3A%22prevperiod%22%2C%22dateFrom%22%3A%222019-06-13T09%3A30%3A17.156Z%22%2C%22dateTo%22%3A%222019-07-10T09%3A30%3A17.156Z%22%7D%7D" />
        </outline>
        <outline text="Joseph Joseph broken review tab campaign" _note="https://app.ometria.com/app/0e87ad4172be8354/broadcast-new/new?state=%7B%22dateCurrent%22%3A%7B%22datePeriod%22%3A%22last28days%22%2C%22dateFrom%22%3A%222019-07-11T15%3A15%3A22.492Z%22%2C%22dateTo%22%3A%222019-08-07T15%3A15%3A22.492Z%22%7D%2C%22dateCompare%22%3A%7B%22datePeriod%22%3A%22prevperiod%22%2C%22dateFrom%22%3A%222019-06-13T15%3A15%3A22.492Z%22%2C%22dateTo%22%3A%222019-07-10T15%3A15%3A22.492Z%22%7D%7D" />
        <outline text="Kube suspend command" _note="kubectl patch cronjobs data-ingestion-update-lifecycle-statuses -p '{&quot;spec&quot; : {&quot;suspend&quot; : true }}'">
          <outline text="" />
        </outline>
        <outline text="Investigate empty campaign" _note="https://admin.ometria.com/private/mass/campaigns/505:ME:8467" />
        <outline text="Fix db monitoring with new cache layer (for monitoring ecs cluster thing)" />
        <outline text="campaign duplicate sets duplicate from to new rather than old" />
        <outline text="Swop on call for 16th Sept" />
        <outline text="tunnel randomtools" />
        <outline text="Merge and deploy cs reports PR" _note="https://github.com/Ometria/ometria.cs_insights_reports/pull/4" />
        <outline text="Daily BUI report">
          <outline text="SQL" _note="SELECT date_series::date as day&#10;     , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created&#10;     , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent&#10;FROM  generate_series( date_trunc('day', now() - interval '1 week')&#10;                     , date_trunc('day', now())&#10;                     , interval '1 day') date_series&#10;CROSS JOIN mass_campaign&#10;WHERE mass_campaign_configuration_id IS NOT NULL&#10;AND   account_id NOT IN (352, 79)&#10;GROUP BY 1&#10;ORDER BY 1" />
          <outline text="Minified" _note="SELECT date_series::date as day , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent FROM generate_series( date_trunc('day', now() - interval '1 week') , date_trunc('day', now()) , interval '1 day') date_series CROSS JOIN mass_campaign WHERE mass_campaign_configuration_id IS NOT NULL AND account_id NOT IN (352, 79) GROUP BY 1 ORDER BY 1" />
          <outline text="Query with write to file on Backend1" _note="php /server/apps/ometria.master/tools/db/run-on-all-shards.php &quot;SELECT date_series::date as day , sum(CASE WHEN (dt_created AT TIME ZONE 'Europe/London')::date = date_series::date THEN 1 ELSE 0 END) AS n_campaigns_created , sum(CASE WHEN (dt_scheduled AT TIME ZONE 'Europe/London')::date = date_series::date AND is_sent THEN 1 ELSE 0 END) AS n_campaigns_sent FROM generate_series( date_trunc('day', now() - interval '1 week') , date_trunc('day', now()) , interval '1 day') date_series CROSS JOIN mass_campaign WHERE mass_campaign_configuration_id IS NOT NULL AND account_id NOT IN (352, 79) GROUP BY 1 ORDER BY 1&quot; &amp;gt; sam_temp_campaign_counts.txt" />
          <outline text="SCP to local" _note="scp ec2-user@(ec2-ip Backend1):sam_temp_campaign_counts.txt sam_temp_campaign_counts.txt" />
        </outline>
        <outline text="New campaign validation">
          <outline text="Query to find campaigns" _note="SELECT mc.id as campaign_id, a.id as account_id, a.title, mc.dt_created, mc.dt_scheduled FROM mass_campaign mc JOIN accounts a ON a.id = mc.account_id WHERE mass_campaign_configuration_id IS NOT NULL AND dt_created &amp;gt;= '2019-07-23 10:00:00'::timestamp AND account_id NOT IN (352, 79) and is_sent">
            <outline text="With segmentation tree" _note="SELECT mc.id as campaign_id, a.id as account_id, a.title, mc.dt_scheduled, mcc.segmentation_tree FROM mass_campaign mc JOIN accounts a ON a.id = mc.account_id JOIN mass_campaign_configuration mcc ON mcc.id = mc.mass_campaign_configuration_id WHERE mass_campaign_configuration_id IS NOT NULL AND mc.dt_created &amp;gt;= '2019-07-23 10:00:00'::timestamp AND mc.account_id NOT IN (352, 79)" />
          </outline>
          <outline text="Example url" _note="https://app.ometria.com/app/077b8da48581085e/broadcast-new/8261/segmentation?state=%7B%22dateCurrent%22%3A%7B%22datePeriod%22%3A%22last28days%22%2C%22dateFrom%22%3A%222019-06-26T09%3A28%3A17.263Z%22%2C%22dateTo%22%3A%222019-07-23T09%3A28%3A17.263Z%22%7D%2C%22dateCompare%22%3A%7B%22datePeriod%22%3A%22prevperiod%22%2C%22dateFrom%22%3A%222019-05-29T09%3A28%3A17.263Z%22%2C%22dateTo%22%3A%222019-06-25T09%3A28%3A17.263Z%22%7D%7D">
            <outline text="Swop out hash and campaign_id" />
          </outline>
          <outline text="Checked sent campaigns" _note=" shard      | campaign_id | account_id | title        | dt_scheduled&#10;------------|-------------|------------|--------------|------------------------&#10; ecomm_0101 | 8255        | 564        | Lovehoney NZ | 2019-07-24 07:30:00+00&#10; ecomm_0101 | 8227        | 564        | Lovehoney NZ | 2019-07-23 19:00:00+00&#10; ecomm_0101 | 8256        | 554        | Lovehoney AU | 2019-07-24 09:00:00+00&#10; ecomm_0101 | 8230        | 554        | Lovehoney AU | 2019-07-23 21:00:00+00&#10; ecomm_0101 | 8229        | 558        | Lovehoney FR | 2019-07-24 05:00:00+00&#10; ecomm_0101 | 8225        | 560        | Lovehoney DE | 2019-07-24 05:00:00+00&#10; ecomm_0101 | 8239        | 556        | Lovehoney EU | 2019-07-24 06:00:00+00" />
          <outline text="Real time query with updated last run dt" _note="SELECT mc.id as campaign_id, a.id as account_id, a.title, mc.dt_created, mc.dt_scheduled FROM mass_campaign mc JOIN accounts a ON a.id = mc.account_id WHERE mass_campaign_configuration_id IS NOT NULL AND dt_created &amp;gt;= '2019-08-07 00:09:00.00000+00'::timestamp AND account_id NOT IN (352, 79) and is_sent ORDER BY a.id, mc.dt_scheduled" />
          <outline text="Last ran at" _note="2019-08-07 00:09:00.00000+00" />
        </outline>
        <outline text="api.campaigns cherry-pick">
          <outline text="All commit difference order by dt desc (newest top)" _note="a6981e7 - done&#10;1af09c3 - done&#10;873d71a - done&#10;5744594 - done&#10;74ed565 - done&#10;243b0d7 - done&#10;38358ba - done&#10;e296b6d - done&#10;6b23e05 - done&#10;1fb8257 - done&#10;d0e0a2d - done&#10;4df88dc - done&#10;7ab450e - done&#10;7ef8004 - done&#10;375ba05 - done&#10;096bb35 - done&#10;3f1cfc8 - done w/ conflict fix&#10;df2ad4a - done w/ conflict fix&#10;5093a1a - done&#10;1de99b5 - done&#10;9f619c4 - done Pipfile* ignored&#10;5849350 - done&#10;ab68c59 - done w/ conflict fix&#10;dd5c88a - done&#10;6ffb76b - done&#10;* All to do with variant.batch_mode when is_master (not relevant)&#10;5da7c61 - ignore&#10;f51e91e - ignore&#10;843b1d2 - ignore" />
          <outline text="NOW MANUALLY MERGED UP TO a6981e7" />
          <outline text="UPDATE #2019-12-30">
            <outline text="New commits to cherry pick order by dt desc" _note="adcc9d5 - done&#10;71bf259 - done&#10;dc3eb6b - done&#10;d732805 - not needed, kube manifest update" />
          </outline>
        </outline>
        <outline text="Change campaign wide filter in segmentation tree to filter for `optin is not false` by default" />
        <outline text="Send campaign table late batch incident report to Al" _note="https://docs.google.com/document/d/173ydovu0WvYVfFZIOigGrMzs3iiOAIc539gRytB-XdE/edit#" />
        <outline text="Tests to add (edge cases)">
          <outline text="Suppression filters" />
          <outline text="Suppression list_id" />
          <outline text="Suppression filter and list_id" />
          <outline text="OR filters" />
          <outline text="Incomplete winner test data" />
        </outline>
        <outline text="Communicate to clients (caveats)">
          <outline text="Perfect random splits are now not enforced" />
          <outline text="Nested random splits are not supported" />
        </outline>
        <outline text="Move segmentation tree gen into separate lib" />
        <outline _complete="true" text="ProdEng social" />
      </outline>
      <outline _complete="true" text="#wc2019-07-29::work">
        <outline _complete="true" text="Two winners in single campaign">
          <outline text="Batch processor result query" _note="SELECT&#10;    b.mass_campaign_variant_id variant_id,&#10;    sum(CASE WHEN ct.is_opened THEN 1 ELSE 0 END) counted,&#10;    greatest(sum(CASE WHEN ct.is_delivered THEN 1 ELSE 0 END), 1) total,&#10;    (sum(CASE WHEN ct.is_opened THEN 1 ELSE 0 END)::float) / greatest(sum(CASE WHEN ct.is_delivered THEN 1 ELSE 0 END), 1) score&#10;FROM campaigns.mass_352_2258 ct&#10;JOIN campaigns.mass_campaign_batch b ON b.id = ct.batch_id&#10;WHERE b.account_id = 352&#10;AND b.id != 3267&#10;AND ct.segmentation_block_id = 3&#10;GROUP BY b.mass_campaign_variant_id&#10;ORDER BY 4" />
        </outline>
        <outline _complete="true" text="#om-interview Mezbaur Rahman (devops)">
          <outline text="Very hard to hear!!!" />
          <outline text="His overview">
            <outline text="Gave a fairly generic overview of his company's tech. Couldn't really hear well enough to direct" />
            <outline text="Unfair to look at negatively" />
            <outline text="Jenkins and terraform" />
            <outline text="Monitoring platform" />
          </outline>
          <outline text="Technical questions">
            <outline text="Monitoring">
              <outline text="Regular API">
                <outline text="Is port open?" />
                <outline text="Need status page" />
                <outline text="Status codes" />
                <outline text="Healthcheck" />
                <outline text="Talking about testing with postman, off on a tangent!" />
                <outline text="Bruno pointed out latency, error rates etc">
                  <outline text="In response he's vaguely talking about it" />
                </outline>
              </outline>
            </outline>
            <outline text="Prometheus">
              <outline text="Container has node exporter" />
              <outline text="In container, you expose metrics" />
              <outline text="Hard to hear" />
              <outline text="Mentioned grafana" />
            </outline>
          </outline>
        </outline>
        <outline _complete="true" text="Deploy versioning">
          <outline text="mass_email">
            <outline text="v9.5" />
            <outline text="Deploying 9.5b2" />
            <outline text="Deploy command" _note="python deployment/cloud_setup/deploy.py v9.5b2 -e prod" />
          </outline>
        </outline>
        <outline _complete="true" text="campaign_table migration script">
          <outline _complete="true" text="Original using information_schema.columns" _note="SELECT&#10;    table_name&#10;FROM (&#10;    SELECT&#10;        columns.table_name,&#10;        sum(&#10;            CASE WHEN columns.column_name::text IN ('segmentation_block_id', 'segmentation_block_item_id')&#10;            THEN 1&#10;            ELSE 0&#10;            END&#10;        ) AS has_columns&#10;    FROM (&#10;        SELECT campaigns.tablename&#10;        FROM (&#10;            SELECT&#10;                id mass_campaign_id,&#10;                account_id,&#10;                'mass_' || account_id || '_' || id AS tablename&#10;            FROM mass_campaign&#10;            WHERE is_sent IS DISTINCT FROM true&#10;                AND is_cancelled IS DISTINCT FROM true&#10;        ) AS campaigns&#10;        JOIN pg_tables ON pg_tables.tablename = campaigns.tablename&#10;    ) AS existing_tables&#10;    JOIN information_schema.columns columns ON columns.table_name = existing_tables.tablename&#10;    GROUP BY columns.table_name&#10;) AS column_counts&#10;WHERE has_columns = 0" />
          <outline _complete="true" text="information_schema.columns is not populated with columns for campaign table, hence" _note="SELECT table_name&#10;FROM (&#10;    SELECT columns.table_name&#10;         , sum(CASE WHEN columns.column_name::text IN ('segmentation_block_id', 'segmentation_block_item_id') THEN 1 ELSE 0 END) AS has_columns&#10;    FROM (&#10;        SELECT campaigns.table_name&#10;        FROM (&#10;            SELECT id mass_campaign_id&#10;                 , account_id&#10;                 , 'mass_' || account_id || '_' || id AS table_name&#10;            FROM   mass_campaign&#10;            WHERE  is_sent IS DISTINCT FROM true&#10;            AND    is_cancelled IS DISTINCT FROM true&#10;        ) AS campaigns&#10;        JOIN pg_tables ON pg_tables.tablename = campaigns.table_name&#10;    ) AS existing_tables&#10;    JOIN (&#10;        SELECT   attrelid::regclass::text AS table_name&#10;               , attname AS column_name&#10;        FROM     pg_attribute&#10;        WHERE    attnum &amp;gt; 0&#10;        AND      attrelid::regclass::text like 'campaigns.mass_%'&#10;        AND NOT  attisdropped&#10;        ORDER BY attnum&#10;    ) AS columns ON columns.table_name = 'campaigns.' || existing_tables.table_name&#10;    GROUP BY columns.table_name&#10;) AS column_counts&#10;WHERE has_columns = 0&#10;" />
          <outline _complete="true" text="in function" _note="BEGIN;&#10;&#10;CREATE OR REPLACE FUNCTION update_campaign_table_segmentation_columns()&#10;RETURNS TABLE (&#10;    table_name TEXT&#10;) AS&#10;$body$&#10;BEGIN&#10;    FOR table_name IN&#10;        SELECT column_counts.table_name&#10;        FROM (&#10;            SELECT columns.table_name&#10;                 , sum(CASE WHEN columns.column_name::text IN ('segmentation_block_id',&#10;                                                               'segmentation_block_item_id')&#10;                       THEN 1&#10;                       ELSE 0 END) AS has_columns&#10;            FROM (&#10;                SELECT campaigns.table_name&#10;                FROM (&#10;                    SELECT id mass_campaign_id&#10;                         , account_id&#10;                         , 'mass_' || account_id || '_' || id AS table_name&#10;                    FROM   mass_campaign&#10;                    WHERE  is_sent IS DISTINCT FROM true&#10;                    AND    is_cancelled IS DISTINCT FROM true&#10;                ) AS campaigns&#10;                JOIN pg_tables ON pg_tables.tablename = campaigns.table_name&#10;            ) AS existing_tables&#10;            JOIN (&#10;                SELECT   attrelid::regclass::text AS table_name&#10;                       , attname AS column_name&#10;                FROM     pg_attribute&#10;                ORDER BY attnum&#10;            ) AS columns ON columns.table_name = 'campaigns.' || existing_tables.table_name&#10;            GROUP BY columns.table_name&#10;        ) AS column_counts&#10;        WHERE has_columns = 0&#10;    LOOP&#10;        EXECUTE format($$ALTER TABLE %s&#10;                         ADD COLUMN segmentation_block_id INTEGER,&#10;                         ADD COLUMN segmentation_block_item_id INTEGER$$,&#10;                       table_name);&#10;        RETURN NEXT;&#10;    END LOOP;&#10;END;&#10;$body$ LANGUAGE plpgsql VOLATILE;&#10;&#10;SELECT table_name FROM update_campaign_table_segmentation_columns();&#10;DROP FUNCTION update_campaign_table_segmentation_columns;&#10;&#10;ROLLBACK;&#10;" />
          <outline _complete="true" text="in function on ALL campaign tables" _note="BEGIN;&#10;&#10;CREATE OR REPLACE FUNCTION update_campaign_table_segmentation_columns()&#10;RETURNS TABLE (&#10;    table_name TEXT&#10;) AS&#10;$body$&#10;BEGIN&#10;    FOR table_name IN&#10;        SELECT segmentation_column_counts.table_name&#10;        FROM (&#10;            SELECT columns.table_name&#10;                 , sum(CASE WHEN columns.column_name::text IN ('segmentation_block_id',&#10;                                                               'segmentation_block_item_id')&#10;                       THEN 1&#10;                       ELSE 0 END) AS n_segmentation_column_count&#10;            FROM (&#10;                SELECT campaigns.table_name&#10;                FROM (&#10;                    SELECT id mass_campaign_id&#10;                         , account_id&#10;                         , 'mass_' || account_id || '_' || id AS table_name&#10;                    FROM   mass_campaign&#10;                ) AS campaigns&#10;                JOIN pg_tables ON pg_tables.tablename = campaigns.table_name&#10;            ) AS existing_tables&#10;            JOIN (&#10;                SELECT   attrelid::regclass::text AS table_name&#10;                       , attname AS column_name&#10;                FROM     pg_attribute&#10;                ORDER BY attnum&#10;            ) AS columns ON columns.table_name = 'campaigns.' || existing_tables.table_name&#10;            GROUP BY columns.table_name&#10;        ) AS segmentation_column_counts&#10;        WHERE n_segmentation_column_count = 0&#10;    LOOP&#10;        EXECUTE format($$ALTER TABLE %s&#10;                         ADD COLUMN segmentation_block_id INTEGER,&#10;                         ADD COLUMN segmentation_block_item_id INTEGER$$,&#10;                       table_name);&#10;        RETURN NEXT;&#10;    END LOOP;&#10;END;&#10;$body$ LANGUAGE plpgsql VOLATILE;&#10;&#10;SELECT table_name FROM update_campaign_table_segmentation_columns();&#10;DROP FUNCTION update_≤campaign_table_segmentation_columns;&#10;&#10;ROLLBACK;">
            <outline text="minified version" _note="BEGIN; CREATE OR REPLACE FUNCTION update_campaign_table_segmentation_columns() RETURNS TABLE ( table_name TEXT ) AS $body$ BEGIN FOR table_name IN SELECT segmentation_column_counts.table_name FROM ( SELECT columns.table_name , sum(CASE WHEN columns.column_name::text IN ('segmentation_block_id', 'segmentation_block_item_id') THEN 1 ELSE 0 END) AS n_segmentation_column_count FROM ( SELECT campaigns.table_name FROM ( SELECT id mass_campaign_id , account_id , 'mass_' || account_id || '_' || id AS table_name FROM mass_campaign ) AS campaigns JOIN pg_tables ON pg_tables.tablename = campaigns.table_name ) AS existing_tables JOIN ( SELECT attrelid::regclass::text AS table_name , attname AS column_name FROM pg_attribute ORDER BY attnum ) AS columns ON columns.table_name = 'campaigns.' || existing_tables.table_name GROUP BY columns.table_name ) AS segmentation_column_counts WHERE n_segmentation_column_count = 0 LOOP EXECUTE format($$ALTER TABLE %s ADD COLUMN segmentation_block_id INTEGER, ADD COLUMN segmentation_block_item_id INTEGER$$, table_name); RETURN NEXT; END LOOP; END; $body$ LANGUAGE plpgsql VOLATILE; SELECT table_name FROM update_campaign_table_segmentation_columns(); DROP FUNCTION update_campaign_table_segmentation_columns; ROLLBACK;" />
          </outline>
          <outline text="Now without looking for columns (with ADD COLUMN IF NOT EXISTS)">
            <outline text="query" _note="BEGIN;&#10;&#10;CREATE OR REPLACE FUNCTION update_campaign_table_segmentation_columns()&#10;RETURNS TABLE (&#10;    table_name TEXT&#10;) AS&#10;$body$&#10;BEGIN&#10;    FOR table_name IN&#10;        SELECT 'campaigns.' || campaigns.table_name&#10;        FROM (&#10;            SELECT id mass_campaign_id&#10;                 , account_id&#10;                 , 'mass_' || account_id || '_' || id AS table_name&#10;            FROM   mass_campaign&#10;        ) AS campaigns&#10;        JOIN pg_tables ON pg_tables.tablename = campaigns.table_name&#10;    LOOP&#10;        EXECUTE format($$ALTER TABLE %s&#10;                         ADD COLUMN IF NOT EXISTS segmentation_block_id INTEGER,&#10;                         ADD COLUMN IF NOT EXISTS segmentation_block_item_id INTEGER$$,&#10;                       table_name);&#10;        RETURN NEXT;&#10;    END LOOP;&#10;END;&#10;$body$ LANGUAGE plpgsql VOLATILE;&#10;&#10;SELECT table_name FROM update_campaign_table_segmentation_columns();&#10;DROP FUNCTION update_campaign_table_segmentation_columns;&#10;&#10;ROLLBACK;" />
            <outline text="minified" _note="BEGIN; CREATE OR REPLACE FUNCTION update_campaign_table_segmentation_columns() RETURNS TABLE ( table_name TEXT ) AS $body$ BEGIN FOR table_name IN SELECT 'campaigns.' || campaigns.table_name FROM ( SELECT id mass_campaign_id , account_id , 'mass_' || account_id || '_' || id AS table_name FROM mass_campaign ) AS campaigns JOIN pg_tables ON pg_tables.tablename = campaigns.table_name LOOP EXECUTE format($$ALTER TABLE %s ADD COLUMN IF NOT EXISTS segmentation_block_id INTEGER, ADD COLUMN IF NOT EXISTS segmentation_block_item_id INTEGER$$, table_name); RETURN NEXT; END LOOP; END; $body$ LANGUAGE plpgsql VOLATILE; SELECT table_name FROM update_campaign_table_segmentation_columns(); DROP FUNCTION update_campaign_table_segmentation_columns; ROLLBACK;" />
            <outline _complete="true" text="Escaped for bash" _note="BEGIN; CREATE OR REPLACE FUNCTION update_campaign_table_segmentation_columns() RETURNS TABLE ( table_name TEXT ) AS \$body\$ BEGIN FOR table_name IN SELECT 'campaigns.' || campaigns.table_name FROM ( SELECT id mass_campaign_id , account_id , 'mass_' || account_id || '_' || id AS table_name FROM mass_campaign ) AS campaigns JOIN pg_tables ON pg_tables.tablename = campaigns.table_name LOOP EXECUTE format(\$\$ALTER TABLE %s ADD COLUMN IF NOT EXISTS segmentation_block_id INTEGER, ADD COLUMN IF NOT EXISTS segmentation_block_item_id INTEGER\$\$, table_name); RETURN NEXT; END LOOP; END; \$body\$ LANGUAGE plpgsql VOLATILE; SELECT table_name FROM update_campaign_table_segmentation_columns(); DROP FUNCTION update_campaign_table_segmentation_columns; ROLLBACK;" />
          </outline>
          <outline text="Check tables without" _note="SELECT segmentation_column_counts.table_name&#10;FROM (&#10;    SELECT columns.table_name&#10;         , sum(CASE WHEN columns.column_name::text IN ('segmentation_block_id',&#10;                                                       'segmentation_block_item_id')&#10;               THEN 1&#10;               ELSE 0 END) AS n_segmentation_column_count&#10;    FROM (&#10;        SELECT campaigns.table_name&#10;        FROM (&#10;            SELECT id mass_campaign_id&#10;                 , account_id&#10;                 , 'mass_' || account_id || '_' || id AS table_name&#10;            FROM   mass_campaign&#10;        ) AS campaigns&#10;        JOIN pg_tables ON pg_tables.tablename = campaigns.table_name&#10;    ) AS existing_tables&#10;    JOIN (&#10;        SELECT   attrelid::regclass::text AS table_name&#10;               , attname AS column_name&#10;        FROM     pg_attribute&#10;        ORDER BY attnum&#10;    ) AS columns ON columns.table_name = 'campaigns.' || existing_tables.table_name&#10;    GROUP BY columns.table_name&#10;) AS segmentation_column_counts&#10;WHERE n_segmentation_column_count = 0&#10;">
            <outline text="Minified" _note="SELECT segmentation_column_counts.table_name FROM ( SELECT columns.table_name , sum(CASE WHEN columns.column_name::text IN ('segmentation_block_id', 'segmentation_block_item_id') THEN 1 ELSE 0 END) AS n_segmentation_column_count FROM ( SELECT campaigns.table_name FROM ( SELECT id mass_campaign_id , account_id , 'mass_' || account_id || '_' || id AS table_name FROM mass_campaign ) AS campaigns JOIN pg_tables ON pg_tables.tablename = campaigns.table_name ) AS existing_tables JOIN ( SELECT attrelid::regclass::text AS table_name , attname AS column_name FROM pg_attribute ORDER BY attnum ) AS columns ON columns.table_name = 'campaigns.' || existing_tables.table_name GROUP BY columns.table_name ) AS segmentation_column_counts WHERE n_segmentation_column_count = 0" />
          </outline>
          <outline text="Shell script on Backend1" _note="PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0000 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0001 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0002 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0003 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0004 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0005 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0006 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0007 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0008 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0009 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0010 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0011 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0012 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0013 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0014 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0015 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0016 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0017 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0018 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0019 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0020 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0100 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0101 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0102 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0103 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0104 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0105 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0106 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0107 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0200 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0201 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0202 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0203 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0204 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0300 -f sam_update_campaigns_tables_query.sql" />
          <outline _complete="true" text="Shard 0010">
            <outline text="Prior to running, these do not have new columns" _note="       table_name&#10;-------------------------&#10; campaigns.mass_352_2081&#10; campaigns.mass_352_2082&#10; campaigns.mass_352_2120&#10; campaigns.mass_352_2124" />
            <outline text="These ones do" _note="       table_name&#10;-------------------------&#10; campaigns.mass_352_2252&#10; campaigns.mass_352_2253" />
          </outline>
        </outline>
        <outline _complete="true" text="Previous deploys">
          <outline text="mass_email v9.5" />
          <outline text="api.campaigns v1.3broadcast103" />
        </outline>
        <outline _complete="true" text="Split test with winner summary">
          <outline text="Winner variant will not generate if no recipient rows for those customers were put in the campaign table" />
          <outline text="The campaign &lt;b&gt;will&lt;/b&gt; send if no results came in, but at least one of the test variants had a recipient, and therefore a row in the campaign table" />
        </outline>
        <outline _complete="true" text="Campaign winner (x2) 352:ME:2275">
          <outline text="One of winning variant should be based off 2729" />
          <outline text="Update batch 3325 with winning rows" _note="UPDATE campaigns.mass_352_2275&#10;SET is_opened = true, is_clicked = true, is_delivered = true&#10;WHERE uuid in (&#10;    SELECT uuid&#10;    FROM campaigns.mass_352_2275&#10;    WHERE batch_id = 3325&#10;    LIMIT 5&#10;);" />
          <outline text="Other winning variant should be based off 2728" />
          <outline text="Update batch 3324 with winning rows" _note="UPDATE campaigns.mass_352_2275&#10;SET is_opened = true, is_clicked = true, is_delivered = true&#10;WHERE uuid in (&#10;    SELECT uuid&#10;    FROM campaigns.mass_352_2275&#10;    WHERE batch_id = 3324&#10;    LIMIT 5&#10;);" />
        </outline>
        <outline _complete="true" text="Confirm that Bruno's winner campaign dt bug fix makes it into merge" />
        <outline _complete="true" text="Manual testing of winner campaigns (db and table fudging)">
          <outline text="Override for redshift_get_email_engagement_for_mass_campaign function" _note="CREATE OR REPLACE FUNCTION redshift_get_email_engagement_for_mass_campaign(_account_id INT, _campaign_id INT)&#10;  RETURNS TABLE(uuid         TEXT,&#10;                dt_delivered TIMESTAMP WITH TIME ZONE,&#10;                dt_opened    TIMESTAMP WITH TIME ZONE,&#10;                dt_clicked   TIMESTAMP WITH TIME ZONE)&#10;&#10;AS $$&#10;  SELECT&#10;    md5(random()::text)::text AS uuid,&#10;    CASE WHEN random &amp;lt; 0.8 THEN (now() - interval '60 minutes')::TIMESTAMP AT TIME ZONE 'BST' ELSE null END AS dt_delivered,&#10;    CASE WHEN random &amp;lt; 0.5 THEN (now() - interval '50 minutes')::TIMESTAMP AT TIME ZONE 'BST' ELSE null END AS dt_opened,&#10;    CASE WHEN random &amp;lt; 0.2 THEN (now() - interval '50 minutes')::TIMESTAMP AT TIME ZONE 'BST' ELSE null END AS dt_clicked&#10;  FROM (&#10;    SELECT&#10;        id,&#10;        random() AS random&#10;    FROM mass_campaign_variant&#10;    WHERE mass_campaign_id = _campaign_id&#10;      AND account_id = _account_id&#10;  ) with_random&#10;$$&#10;LANGUAGE SQL" />
          <outline text="Post test pre winner campaign table updates">
            <outline text="Update campaign_table query" _note="UPDATE campaigns.mass_352_2251&#10;SET is_opened = true, is_clicked = true, is_delivered = true&#10;WHERE uuid in (&#10;    SELECT uuid&#10;    FROM campaigns.mass_352_2251&#10;    WHERE batch_id = 3240&#10;    LIMIT 5&#10;);" />
            <outline text="Equivalent query" _note="SELECT&#10;    b.mass_campaign_variant_id AS variant_id,&#10;    count(CASE WHEN ct.is_clicked THEN 1 ELSE 0 END) AS counted,&#10;    greatest(count(CASE WHEN ct.is_delivered THEN 1 ELSE 0 END), 1) AS total,&#10;    count(CASE WHEN ct.is_clicked THEN 1 ELSE 0 END)::FLOAT / greatest(count(CASE WHEN ct.is_delivered THEN 1 ELSE 0 END), 1) AS score&#10;FROM campaigns.mass_campaign_batch b&#10;JOIN campaigns.mass_352_2251 ct ON ct.batch_id = b.id&#10;WHERE b.account_id = 352&#10;AND b.id != 3241&#10;AND b.segmentation_block_id = 1&#10;GROUP BY b.mass_campaign_variant_id&#10;ORDER BY score DESC" />
          </outline>
        </outline>
        <outline _complete="true" text="order id bug investigation">
          <outline _complete="true" text="Confirm mass_email table creation filters out list suppression correctly" />
          <outline _complete="true" text="Validate list filtering was correct">
            <outline text="Query to find campaign run on 0101" _note="SELECT mc.dt_scheduled, segmentation_tree FROM mass_campaign mc JOIN mass_campaign_configuration mcc ON mcc.id = mc.mass_campaign_configuration_id WHERE is_sent AND segmentation_tree::text &amp;lt;&amp;gt; '{&quot;type&quot;: &quot;initial&quot;}'::text ORDER BY 1 DESC limit 1;" />
            <outline text="Campaign id = 8177" />
            <outline text="Account = 554" />
            <outline text="Segmentation tree data" _note="{&#10;    &quot;type&quot;: &quot;initial&quot;,&#10;    &quot;childBlock&quot;: {&#10;        &quot;id&quot;: 2,&#10;        &quot;type&quot;: &quot;segmentation&quot;,&#10;        &quot;items&quot;: [&#10;            {&#10;                &quot;id&quot;: 1,&#10;                &quot;data&quot;: {&#10;                    &quot;group&quot;: &quot;all&quot;,&#10;                    &quot;filters&quot;: [&#10;                        {&#10;                            &quot;op&quot;: &quot;eq&quot;,&#10;                            &quot;field&quot;: &quot;list_id&quot;,&#10;                            &quot;value&quot;: [&#10;                                1192&#10;                            ]&#10;                        },&#10;                        {&#10;                            &quot;op&quot;: &quot;neq&quot;,&#10;                            &quot;field&quot;: &quot;list_id&quot;,&#10;                            &quot;value&quot;: [&#10;                                260&#10;                            ]&#10;                        }&#10;                    ],&#10;                    &quot;query_type&quot;: &quot;and&quot;&#10;                },&#10;                &quot;type&quot;: &quot;segmentation&quot;,&#10;                &quot;title&quot;: &quot;New Engagement (1192)&quot;&#10;            },&#10;            {&#10;                &quot;id&quot;: 2,&#10;                &quot;data&quot;: {&#10;                    &quot;group&quot;: &quot;all&quot;,&#10;                    &quot;filters&quot;: [&#10;                        {&#10;                            &quot;op&quot;: &quot;eq&quot;,&#10;                            &quot;field&quot;: &quot;list_id&quot;,&#10;                            &quot;value&quot;: [&#10;                                260&#10;                            ]&#10;                        }&#10;                    ],&#10;                    &quot;query_type&quot;: &quot;and&quot;&#10;                },&#10;                &quot;type&quot;: &quot;segmentation&quot;,&#10;                &quot;title&quot;: &quot;Old Engagement (260)&quot;&#10;            }&#10;        ]&#10;    }&#10;}" />
            <outline text="Get n campaign recipients" _note="select count(*) from campaigns.mass_554_8177">
              <outline text="Targeted = 66099" />
              <outline text="Sent = 65833" />
            </outline>
            <outline text="There were two nodes">
              <outline text="node 1">
                <outline text="in list_id = 1192" />
                <outline text="not in list_id = 260" />
              </outline>
              <outline text="node 2">
                <outline text="in list_id = 260" />
              </outline>
            </outline>
            <outline text="Find all customers that are in either list" _note="SELECT count(*) FROM lists_customers lc JOIN customers c ON c.id = lc.customer_id WHERE account_id = 554 AND list_id = any(ARRAY[1192, 1192]);">
              <outline text="79743" />
            </outline>
            <outline text="Remove opted out and suppressed" _note="SELECT count(*)&#10;FROM lists_customers lc&#10;JOIN customers c ON c.id = lc.customer_id&#10;WHERE account_id = 554&#10;AND list_id = any(ARRAY[1192, 1192])&#10;AND c.email IS NOT NULL&#10;AND c.is_email_valid IS NOT false&#10;AND c.optin&#10;AND NOT EXISTS (&#10;    SELECT 1&#10;    FROM suppression_list&#10;    WHERE suppression_list.email = c.email&#10;);&#10;">
              <outline text="79489" />
            </outline>
            <outline text="Also those in list 141 OR 1196 and those active in any trigger campaign" _note="SELECT count(c.id)&#10;FROM lists_customers lc&#10;JOIN customers c ON c.id = lc.customer_id&#10;WHERE account_id = 554&#10;AND list_id = any(ARRAY[1192, 1192])&#10;AND list_id != 141&#10;AND list_id != 1196&#10;AND c.email IS NOT NULL&#10;AND c.is_email_valid IS NOT false&#10;AND c.optin&#10;AND NOT EXISTS (&#10;    SELECT 1&#10;    FROM suppression_list&#10;    WHERE suppression_list.email = c.email&#10;)&#10;AND not(&#10;  EXISTS (&#10;    SELECT &#10;      1 &#10;    FROM &#10;      trigger_campaign_customer &#10;    WHERE &#10;      trigger_campaign_customer.customer_id = c.id&#10;      AND trigger_campaign_customer.is_active IS true &#10;      AND trigger_campaign_customer.is_test IS NOT true &#10;      AND trigger_campaign_customer.is_control_group IS NOT true&#10;  )&#10;) &#10;">
              <outline text="72471" />
            </outline>
            <outline text="See if ids from above intersect with original campaign table" _note="WITH cte AS (&#10;    SELECT c.id&#10;    FROM lists_customers lc&#10;    JOIN customers c ON c.id = lc.customer_id&#10;    WHERE account_id = 554&#10;    AND list_id = any(ARRAY[1192, 1192])&#10;    AND list_id != 141&#10;    AND list_id != 1196&#10;    AND c.email IS NOT NULL&#10;    AND c.is_email_valid IS NOT false&#10;    AND c.optin&#10;    AND NOT EXISTS (&#10;        SELECT 1&#10;        FROM suppression_list&#10;        WHERE suppression_list.email = c.email&#10;    )&#10;    AND not(&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          trigger_campaign_customer &#10;        WHERE &#10;          trigger_campaign_customer.customer_id = c.id&#10;          AND trigger_campaign_customer.is_active IS true &#10;          AND trigger_campaign_customer.is_test IS NOT true &#10;          AND trigger_campaign_customer.is_control_group IS NOT true&#10;      )&#10;    ) &#10;)&#10;SELECT count(*)&#10;FROM campaigns.mass_554_8177 ct&#10;JOIN cte ON ct.customer_id = cte.id&#10;">
              <outline text="65917 (out of 66099)" />
              <outline text="Very high consistency" />
            </outline>
          </outline>
          <outline _complete="true" text="Segmentation data which hit events table">
            <outline text="field =">
              <outline text="order" />
              <outline text="visit" />
              <outline text="coupon_code" />
              <outline text="has_used_coupon_code" />
              <outline text="product_price" />
              <outline text="purchased_site" />
              <outline text="visited_site" />
            </outline>
            <outline text="field = product AND op =">
              <outline text="viewed_not_purchased" />
              <outline text="viewed_not_purchased_attribute" />
              <outline text="purchased" />
              <outline text="purchased_attribute" />
            </outline>
          </outline>
          <outline _complete="true" text="Campaign fields to search">
            <outline text="mass_campaign.customer_query" />
            <outline text="mass_campaign_configuration.segmentation_tree" />
            <outline text="NOT customer_suppress_query as handled separately" />
            <outline text="NOT list fields as not affected by bug" />
          </outline>
          <outline _complete="true" text="Query to string match for key fields">
            <outline text="query" _note="SELECT count(*)&#10;FROM mass_campaign mc&#10;JOIN mass_campaign_configuration mcc ON mcc.id = mc.mass_campaign_configuration_id&#10;WHERE (&#10;    customer_query::text ilike any (ARRAY['%order%', '%visit%', '%coupon_code%', '%has_used_coupon_code%', '%has_used_coupon_code%', '%purchased_site%', '%visited_site%'])&#10;    OR segmentation_tree::text ilike any (ARRAY['%order%', '%order%', '%visit%', '%coupon_code%', '%has_used_coupon_code%', '%has_used_coupon_code%', '%purchased_site%', '%visited_site%'])&#10;)&#10;AND mc.is_sent&#10;" />
            <outline text="minified" _note="SELECT count(*) FROM mass_campaign mc JOIN mass_campaign_configuration mcc ON mcc.id = mc.mass_campaign_configuration_id WHERE ( customer_query::text ilike any (ARRAY['%order%', '%visit%', '%coupon_code%', '%has_used_coupon_code%', '%has_used_coupon_code%', '%purchased_site%', '%visited_site%']) OR segmentation_tree::text ilike any (ARRAY['%order%', '%order%', '%visit%', '%coupon_code%', '%has_used_coupon_code%', '%has_used_coupon_code%', '%purchased_site%', '%visited_site%'])) AND mc.is_sent" />
          </outline>
          <outline _complete="true" text="Returns no production campaigns" />
          <outline _complete="true" text="Run for is_ready_to_send OR is_sending">
            <outline text="query" _note="SELECT count(*)&#10;FROM mass_campaign mc&#10;JOIN mass_campaign_configuration mcc ON mcc.id = mc.mass_campaign_configuration_id&#10;WHERE (&#10;    customer_query::text ilike any (ARRAY['%order%', '%visit%', '%coupon_code%', '%has_used_coupon_code%', '%has_used_coupon_code%', '%purchased_site%', '%visited_site%'])&#10;    OR segmentation_tree::text ilike any (ARRAY['%order%', '%order%', '%visit%', '%coupon_code%', '%has_used_coupon_code%', '%has_used_coupon_code%', '%purchased_site%', '%visited_site%'])&#10;)&#10;AND mc.is_ready_to_send&#10;OR mc.is_sending&#10;" />
            <outline text="minified" _note="SELECT count(*) FROM mass_campaign mc JOIN mass_campaign_configuration mcc ON mcc.id = mc.mass_campaign_configuration_id WHERE ( customer_query::text ilike any (ARRAY['%order%', '%visit%', '%coupon_code%', '%has_used_coupon_code%', '%has_used_coupon_code%', '%purchased_site%', '%visited_site%']) OR segmentation_tree::text ilike any (ARRAY['%order%', '%order%', '%visit%', '%coupon_code%', '%has_used_coupon_code%', '%has_used_coupon_code%', '%purchased_site%', '%visited_site%'])) AND mc.is_ready_to_send OR mc.is_sending" />
          </outline>
          <outline _complete="true" text="Returns none" />
          <outline _complete="true" text="Campaigns using orders in customer_suppress_query" _note="[ec2-user@ip-10-0-1-230 db]$ php run-on-all-shards.php &quot;SELECT mc.id, mc.dt_scheduled FROM mass_campaign mc JOIN mass_campaign_configuration mcc ON mcc.id = mc.mass_campaign_configuration_id WHERE is_sent AND customer_suppress_query::text ilike '%order%' ORDER BY dt_scheduled;&quot;&#10; shard      | id   | dt_scheduled&#10;------------|------|------------------------------&#10; ecomm_0101 | 7521 | 2019-06-14 05:00:00+00&#10; ecomm_0101 | 7531 | 2019-06-14 21:00:00+00&#10; ecomm_0101 | 7528 | 2019-06-16 06:00:00+00&#10; ecomm_0101 | 7532 | 2019-06-16 22:00:00+00&#10; ecomm_0101 | 7883 | 2019-07-02 21:00:00+00&#10; ecomm_0101 | 7896 | 2019-07-03 05:00:00+00&#10; ecomm_0101 | 7869 | 2019-07-03 05:00:00+00&#10; ecomm_0101 | 7887 | 2019-07-03 06:00:00+00&#10; ecomm_0101 | 7897 | 2019-07-03 07:30:00+00&#10; ecomm_0101 | 7895 | 2019-07-03 11:00:00+00&#10; ecomm_0101 | 7909 | 2019-07-03 17:00:00+00&#10; ecomm_0101 | 7910 | 2019-07-03 22:00:00+00&#10; ecomm_0101 | 7989 | 2019-07-09 19:00:00+00&#10; ecomm_0101 | 7979 | 2019-07-09 21:00:00+00&#10; ecomm_0101 | 7984 | 2019-07-10 06:00:00+00&#10; ecomm_0101 | 7981 | 2019-07-10 11:00:00+00&#10; ecomm_0101 | 7994 | 2019-07-10 11:00:00+00&#10; ecomm_0101 | 8010 | 2019-07-10 23:00:00+00&#10; ecomm_0101 | 8129 | 2019-07-17 06:00:00+00&#10; ecomm_0101 | 8136 | 2019-07-17 09:25:19.96719+00&#10; ecomm_0101 | 8133 | 2019-07-17 11:00:00+00&#10; ecomm_0101 | 8145 | 2019-07-19 16:00:00+00&#10; ecomm_0101 | 8154 | 2019-07-19 21:00:00+00&#10; ecomm_0101 | 8155 | 2019-07-21 17:00:00+00&#10; ecomm_0101 | 8156 | 2019-07-21 22:00:00+00" />
          <outline text="Campaign test">
            <outline text="Link" _note="https://app.ometria.com/app/68c34c0886c2056e/broadcast-new/8203/segmentation?state=%7B%22dateCurrent%22%3A%7B%22datePeriod%22%3A%22last28days%22%2C%22dateFrom%22%3A%222019-06-24T16%3A00%3A36.069Z%22%2C%22dateTo%22%3A%222019-07-21T16%3A00%3A36.069Z%22%7D%2C%22dateCompare%22%3A%7B%22datePeriod%22%3A%22prevperiod%22%2C%22dateFrom%22%3A%222019-05-27T16%3A00%3A36.069Z%22%2C%22dateTo%22%3A%222019-06-23T16%3A00%3A36.069Z%22%7D%7D" />
            <outline text="Node 1 query" _note="SELECT count(*)&#10;FROM customers&#10;WHERE account_id = 505&#10;AND NOT EXISTS (&#10;    SELECT 1 &#10;    FROM customers_health_dimensions &#10;    WHERE customers_health_dimensions.customer_id = customers.id &#10;    AND customers_health_dimensions.engagement = 0&#10;)&#10;AND email IS NOT NULL &#10;AND is_email_valid IS NOT false &#10;AND optin IS true&#10;AND NOT EXISTS (&#10;    SELECT 1&#10;    FROM lists_customers&#10;    WHERE account_id = 505&#10;    AND lists_customers.customer_id = customers.id&#10;    AND list_id = ANY(ARRAY[68, 1156])&#10;)&#10;AND EXISTS (&#10;    SELECT 1&#10;    FROM lists_customers&#10;    WHERE account_id = 505&#10;    AND lists_customers.customer_id = customers.id&#10;    AND list_id = 1154&#10;)&#10;AND EXISTS (&#10;  SELECT &#10;    1 &#10;  FROM &#10;    events &#10;  WHERE &#10;    events.customer_id = customers.id &#10;    AND events.account_id = 505 &#10;    AND events.event_type = 'order' &#10;    AND (&#10;      events.attribute_ids &amp;amp;&amp;amp; ARRAY[17083, 1106]&#10;    ) IS NOT true &#10;    AND events.order_is_valid = true&#10;)&#10;" />
            <outline text="Node 2 query" _note="SELECT count(*)&#10;FROM customers&#10;WHERE account_id = 505&#10;AND NOT EXISTS (&#10;    SELECT 1 &#10;    FROM customers_health_dimensions &#10;    WHERE customers_health_dimensions.customer_id = customers.id &#10;    AND customers_health_dimensions.engagement = 0&#10;)&#10;AND email IS NOT NULL &#10;AND is_email_valid IS NOT false &#10;AND optin IS true&#10;AND NOT EXISTS (&#10;    SELECT 1&#10;    FROM lists_customers&#10;    WHERE account_id = 505&#10;    AND lists_customers.customer_id = customers.id&#10;    AND list_id = ANY(ARRAY[68, 1156, 1154])&#10;)&#10;AND EXISTS (&#10;    SELECT 1&#10;    FROM lists_customers&#10;    WHERE account_id = 505&#10;    AND lists_customers.customer_id = customers.id&#10;    AND list_id = 177&#10;)&#10;AND EXISTS (&#10;  SELECT &#10;    1 &#10;  FROM &#10;    events &#10;  WHERE &#10;    events.customer_id = customers.id &#10;    AND events.account_id = 505 &#10;    AND events.event_type = 'order' &#10;    AND (&#10;      events.attribute_ids &amp;amp;&amp;amp; ARRAY[17083, 1106]&#10;    ) IS NOT true &#10;    AND events.order_is_valid = true&#10;)&#10;AND gender = 'm'&#10;" />
            <outline text="Node 3 query" _note="SELECT count(*)&#10;FROM customers&#10;WHERE account_id = 505&#10;AND NOT EXISTS (&#10;    SELECT 1 &#10;    FROM customers_health_dimensions &#10;    WHERE customers_health_dimensions.customer_id = customers.id &#10;    AND customers_health_dimensions.engagement = 0&#10;)&#10;AND email IS NOT NULL &#10;AND is_email_valid IS NOT false &#10;AND optin IS true&#10;AND NOT EXISTS (&#10;    SELECT 1&#10;    FROM lists_customers&#10;    WHERE account_id = 505&#10;    AND lists_customers.customer_id = customers.id&#10;    AND list_id = ANY(ARRAY[68, 1156, 1154])&#10;)&#10;AND EXISTS (&#10;    SELECT 1&#10;    FROM lists_customers&#10;    WHERE account_id = 505&#10;    AND lists_customers.customer_id = customers.id&#10;    AND list_id = 177&#10;)&#10;AND EXISTS (&#10;  SELECT &#10;    1 &#10;  FROM &#10;    events &#10;  WHERE &#10;    events.customer_id = customers.id &#10;    AND events.account_id = 505 &#10;    AND events.event_type = 'order' &#10;    AND (&#10;      events.attribute_ids &amp;amp;&amp;amp; ARRAY[17083, 1106]&#10;    ) IS NOT true &#10;    AND events.order_is_valid = true&#10;)&#10;AND gender IS DISTINCT FROM 'm'&#10;AND lifecycle_status = 'LEAD'&#10;" />
            <outline text="Node 4 query" _note="SELECT count(*)&#10;FROM customers&#10;WHERE account_id = 505&#10;AND NOT EXISTS (&#10;    SELECT 1 &#10;    FROM customers_health_dimensions &#10;    WHERE customers_health_dimensions.customer_id = customers.id &#10;    AND customers_health_dimensions.engagement = 0&#10;)&#10;AND email IS NOT NULL &#10;AND is_email_valid IS NOT false &#10;AND optin IS true&#10;AND NOT EXISTS (&#10;    SELECT 1&#10;    FROM lists_customers&#10;    WHERE account_id = 505&#10;    AND lists_customers.customer_id = customers.id&#10;    AND list_id = ANY(ARRAY[68, 1156, 1154])&#10;)&#10;AND EXISTS (&#10;    SELECT 1&#10;    FROM lists_customers&#10;    WHERE account_id = 505&#10;    AND lists_customers.customer_id = customers.id&#10;    AND list_id = 177&#10;)&#10;AND EXISTS (&#10;  SELECT &#10;    1 &#10;  FROM &#10;    events &#10;  WHERE &#10;    events.customer_id = customers.id &#10;    AND events.account_id = 505 &#10;    AND events.event_type = 'order' &#10;    AND (&#10;      events.attribute_ids &amp;amp;&amp;amp; ARRAY[17083, 1106]&#10;    ) IS NOT true &#10;    AND events.order_is_valid = true&#10;)&#10;AND gender IS DISTINCT FROM 'm'&#10;AND lifecycle_status IS DISTINCT FROM 'LEAD'&#10;" />
            <outline text="Node 5 query" _note="SELECT count(*)&#10;FROM customers&#10;WHERE account_id = 505&#10;AND NOT EXISTS (&#10;    SELECT 1 &#10;    FROM customers_health_dimensions &#10;    WHERE customers_health_dimensions.customer_id = customers.id &#10;    AND customers_health_dimensions.engagement = 0&#10;)&#10;AND email IS NOT NULL &#10;AND is_email_valid IS NOT false &#10;AND optin IS true&#10;AND NOT EXISTS (&#10;    SELECT 1&#10;    FROM lists_customers&#10;    WHERE account_id = 505&#10;    AND lists_customers.customer_id = customers.id&#10;    AND list_id = ANY(ARRAY[68, 1156, 1154, 177])&#10;)&#10;AND EXISTS (&#10;    SELECT 1&#10;    FROM lists_customers&#10;    WHERE account_id = 505&#10;    AND lists_customers.customer_id = customers.id&#10;    AND list_id = 1137&#10;)&#10;AND EXISTS (&#10;  SELECT &#10;    1 &#10;  FROM &#10;    events &#10;  WHERE &#10;    events.customer_id = customers.id &#10;    AND events.account_id = 505 &#10;    AND events.event_type = 'order' &#10;    AND (&#10;      events.attribute_ids &amp;amp;&amp;amp; ARRAY[17083, 1106]&#10;    ) IS NOT true &#10;    AND events.order_is_valid = true&#10;)&#10;" />
          </outline>
        </outline>
        <outline _complete="true" text="Homework">
          <outline text="Input dict" _note="{'type': 'initial', 'data': {'customer_list_id': None, 'customer_query': {'and_filters': [{'op': 'eq', 'field': 'exclude_nonengaged', 'value': ['true']}]}, 'customer_suppress_list_id': None, 'customer_suppress_query': {'filters': [{'field': 'list_id', 'op': 'eq', 'value': [68]}, {'field': 'list_id', 'op': 'eq', 'value': [1156]}], 'group': 'all', 'query_type': 'or'}, 'exclude_all_automation': False, 'exclude_unengaged': True}, 'childBlock': {'id': 1, 'items': [{'data': {'filters': [{'field': 'list_id',&#10;'op': 'eq', 'value': [177]}, {'field': 'list_id', 'op': 'neq', 'value': [1154]}, {'field': 'order', 'value': [{'field': 'product_attribute', 'op': 'not_in', 'value': [{'ids': ['17083', '1106'], 'type': 'group'}]}]}], 'group': 'all', 'query_type': 'and'}, 'id': 2, 'title': 'Segment 2', 'type': 'segmentation'}, {'data': {'filters': [{'field': 'list_id', 'op': 'eq', 'value': [1154]}, {'field': 'order', 'value': [{'field': 'product_attribute', 'op': 'not_in', 'value': [{'ids': ['17083', '1106'], 'type': 'group'}]}]}], 'group': 'all', 'query_type': 'and'}, 'id': 4, 'title': 'Segment 4', 'type': 'segmentation'}, {'data': {'filters': [{'field': 'list_id', 'op': 'eq', 'value': [1137]}, {'field': 'list_id', 'op': 'neq', 'value': [177]}, {'field': 'list_id', 'op': 'neq', 'value': [1154]}, {'field': 'order', 'value': [{'field': 'product_attribute', 'op': 'not_in', 'value': [{'ids': ['17083', '1106'], 'type': 'group'}]}]}], 'group': 'all', 'query_type': 'and'}, 'id': 5, 'title': 'Segment 5', 'type': 'segmentation'}], 'type': 'segmentation'}}" />
          <outline text="Resultant SQL" _note="WITH segment_combinations AS (&#10;  SELECT &#10;    customers.id AS id, &#10;    true AS root, &#10;    customers.account_id = : customers.account_id_1 &#10;    AND (&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          lists_customers &#10;        WHERE &#10;          lists_customers.customer_id = customers.id &#10;          AND lists_customers.list_id = any(: any_1)&#10;      )&#10;    ) &#10;    AND not(&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          lists_customers &#10;        WHERE &#10;          lists_customers.customer_id = customers.id &#10;          AND lists_customers.list_id = any(: any_2)&#10;      )&#10;    ) &#10;    AND (&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          events &#10;        WHERE &#10;          events.customer_id = customers.id &#10;          AND events.account_id = : account_id_1 &#10;          AND events.event_type = : event_type_1 &#10;          AND (&#10;            events.attribute_ids &amp;amp;&amp;amp; : attribute_ids_1&#10;          ) IS NOT true &#10;          AND events.order_is_valid = true&#10;      )&#10;    ) AS &quot;1_2&quot;, &#10;    customers.account_id = : customers.account_id_2 &#10;    AND (&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          lists_customers &#10;        WHERE &#10;          lists_customers.customer_id = customers.id &#10;          AND lists_customers.list_id = any(: any_3)&#10;      )&#10;    ) &#10;    AND (&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          events &#10;        WHERE &#10;          events.customer_id = customers.id &#10;          AND events.account_id = : account_id_2 &#10;          AND events.event_type = : event_type_2 &#10;          AND (&#10;            events.attribute_ids &amp;amp;&amp;amp; : attribute_ids_2&#10;          ) IS NOT true &#10;          AND events.order_is_valid = true&#10;      )&#10;    ) AS &quot;1_4&quot;, &#10;    customers.account_id = : customers.account_id_3 &#10;    AND (&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          lists_customers &#10;        WHERE &#10;          lists_customers.customer_id = customers.id &#10;          AND lists_customers.list_id = any(: any_4)&#10;      )&#10;    ) &#10;    AND not(&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          lists_customers &#10;        WHERE &#10;          lists_customers.customer_id = customers.id &#10;          AND lists_customers.list_id = any(: any_5)&#10;      )&#10;    ) &#10;    AND not(&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          lists_customers &#10;        WHERE &#10;          lists_customers.customer_id = customers.id &#10;          AND lists_customers.list_id = any(: any_6)&#10;      )&#10;    ) &#10;    AND (&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          events &#10;        WHERE &#10;          events.customer_id = customers.id &#10;          AND events.account_id = : account_id_3 &#10;          AND events.event_type = : event_type_3 &#10;          AND (&#10;            events.attribute_ids &amp;amp;&amp;amp; : attribute_ids_3&#10;          ) IS NOT true &#10;          AND events.order_is_valid = true&#10;      )&#10;    ) AS &quot;1_5&quot; &#10;  FROM &#10;    customers &#10;  WHERE &#10;    customers.account_id = : customers.account_id_4 &#10;    AND not(&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          customers_health_dimensions &#10;        WHERE &#10;          customers_health_dimensions.customer_id = customers.id &#10;          AND customers_health_dimensions.engagement = : engagement_1&#10;      )&#10;    ) &#10;    AND email IS NOT NULL &#10;    AND is_email_valid IS NOT false &#10;    AND optin IS true &#10;    AND NOT (&#10;      customers.account_id = : customers.account_id_5 &#10;      AND (&#10;        (&#10;          EXISTS (&#10;            SELECT &#10;              1 &#10;            FROM &#10;              lists_customers &#10;            WHERE &#10;              lists_customers.customer_id = customers.id &#10;              AND lists_customers.list_id = any(: any_7)&#10;          )&#10;        ) &#10;        OR (&#10;          EXISTS (&#10;            SELECT &#10;              1 &#10;            FROM &#10;              lists_customers &#10;            WHERE &#10;              lists_customers.customer_id = customers.id &#10;              AND lists_customers.list_id = any(: any_8)&#10;          )&#10;        )&#10;      )&#10;    )&#10;) &#10;SELECT &#10;  CASE WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;1_2&quot; IS true&#10;  ) THEN : param_1 WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;1_2&quot; IS DISTINCT &#10;    FROM &#10;      true &#10;      AND segment_combinations.&quot;1_4&quot; IS true&#10;  ) THEN : param_2 WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;1_2&quot; IS DISTINCT &#10;    FROM &#10;      true &#10;      AND segment_combinations.&quot;1_4&quot; IS DISTINCT &#10;    FROM &#10;      true &#10;      AND segment_combinations.&quot;1_5&quot; IS true&#10;  ) THEN : param_3 END AS node_str, &#10;  segment_combinations.id AS customer_id &#10;FROM &#10;  segment_combinations&#10;			" />
        </outline>
        <outline _complete="true" text="Optimised version of lovehoney campaign">
          <outline text="query" _note="SELECT &#10;  CASE WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;2_1&quot; IS true &#10;    AND segment_combinations.&quot;4_1&quot; IS true&#10;  ) THEN '4_1' WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;2_1&quot; IS true &#10;    AND segment_combinations.&quot;4_1&quot; IS DISTINCT &#10;    FROM &#10;      true &#10;      AND segment_combinations.&quot;4_2&quot; IS true&#10;  ) THEN '4_2' WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;2_1&quot; IS true &#10;    AND segment_combinations.&quot;4_1&quot; IS DISTINCT &#10;    FROM &#10;      true &#10;      AND segment_combinations.&quot;4_2&quot; IS DISTINCT &#10;    FROM &#10;      true &#10;      AND segment_combinations.&quot;4_3&quot; IS true&#10;  ) THEN '4_3' END AS node_str, &#10;  count(segment_combinations.id) AS n_customers &#10;FROM &#10;  (&#10;    SELECT &#10;      customers.id AS id, &#10;      account_id = 505 &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            trigger_campaign_customer &#10;          WHERE &#10;            trigger_campaign_customer.customer_id = id &#10;            AND trigger_campaign_customer.is_active IS true &#10;            AND trigger_campaign_customer.is_test IS NOT true &#10;            AND trigger_campaign_customer.is_control_group IS NOT true&#10;        )&#10;      ) &#10;      AND email IS NOT NULL &#10;      AND is_email_valid IS NOT false &#10;      AND optin IS true &#10;      AND NOT (&#10;        account_id = 505 &#10;        AND (&#10;          (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(ARRAY[68])&#10;            )&#10;          ) &#10;          OR (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(ARRAY[1156])&#10;            )&#10;          ) &#10;          OR (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(ARRAY[177])&#10;            )&#10;          ) &#10;          OR (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(ARRAY[1154])&#10;            )&#10;          )&#10;        )&#10;      ) AS root, &#10;      account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            events &#10;          WHERE &#10;            events.customer_id = id &#10;            AND events.account_id = 505 &#10;            AND events.event_type = 'order' &#10;            AND (&#10;              events.attribute_ids &amp;amp;&amp;amp; ARRAY[17083, &#10;              1106]&#10;            ) IS NOT true &#10;            AND events.order_is_valid = true&#10;        )&#10;      ) AS &quot;2_1&quot;, &#10;      account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(ARRAY[1154])&#10;        )&#10;      ) AS &quot;4_1&quot;, &#10;      account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(ARRAY[177])&#10;        )&#10;      ) AS &quot;4_2&quot;, &#10;      account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(ARRAY[1137])&#10;        )&#10;      ) AS &quot;4_3&quot; &#10;    FROM &#10;      customers&#10;  ) AS segment_combinations &#10;GROUP BY &#10;  node_str&#10;" />
        </outline>
        <outline _complete="true" text="Numbers aren't exactly equal between old and new">
          <outline text="New" _note="https://app.ometria.com/app/68c34c0886c2056e/broadcast-new/7591/segmentation?state=%7B%7D" />
        </outline>
        <outline _complete="true" text="Lovehoney query optimisation experiment">
          <outline text="Campaign" _note="https://app.ometria.com/app/68c34c0886c2056e/broadcast-new/7591/segmentation?state=%7B%7D" />
          <outline text="Original query" _note="SELECT &#10;  CASE WHEN (&#10;    segment_combinations.&quot;root&quot; IS true&#10;  ) THEN 'root' END AS node_str, &#10;  count(segment_combinations.id) AS n_customers &#10;FROM &#10;  (&#10;    SELECT &#10;      customers.id AS id, &#10;      account_id = 505 &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            trigger_campaign_customer &#10;          WHERE &#10;            trigger_campaign_customer.customer_id = id &#10;            AND trigger_campaign_customer.is_active IS true &#10;            AND trigger_campaign_customer.is_test IS NOT true &#10;            AND trigger_campaign_customer.is_control_group IS NOT true&#10;        )&#10;      ) &#10;      AND account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(ARRAY[1137])&#10;        )&#10;      ) &#10;      AND email IS NOT NULL &#10;      AND is_email_valid IS NOT false &#10;      AND optin IS true &#10;      AND NOT (&#10;        account_id = 505 &#10;        AND (&#10;          (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(ARRAY[68])&#10;            )&#10;          ) &#10;          OR (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(ARRAY[1156])&#10;            )&#10;          ) &#10;          OR (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(ARRAY[177])&#10;            )&#10;          ) &#10;          OR (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(ARRAY[1154])&#10;            )&#10;          )&#10;        )&#10;      ) AS root &#10;    FROM &#10;      customers&#10;  ) AS segment_combinations &#10;GROUP BY &#10;  node_str&#10;">
            <outline text="Query planner result" _note="   Group Key: (CASE WHEN (((customers.account_id = 505) AND (NOT $0) AND (customers.account_id = 505) AND (alternatives: SubPlan 2 or hashed SubPlan 3) AND (customers.email IS NOT NULL) AND (customers.is_email_valid IS NOT FALSE) AND (customers.optin IS TRUE) AND ((customers.account_id &amp;lt;&amp;gt; 505) OR ((NOT (alternatives: SubPlan 4 or hashed SubPlan 5)) AND (NOT (alternatives: SubPlan 6 or hashed SubPlan 7)) AND (NOT (alternatives: SubPlan 8 or hashed SubPlan 9)) AND (NOT (alternatives: SubPlan 10 or hashed SubPlan 11))))) IS TRUE) THEN 'root'::text ELSE NULL::text END)&#10;   InitPlan 1 (returns $0)&#10;     -&amp;gt;  Index Scan using idx_trigger_campaign_customer_account_id_campaign_id_is_active on trigger_campaign_customer  (cost=0.56..588109.74 rows=525 width=0) (actual time=3181.185..3181.185 rows=0 loops=1)&#10;           Index Cond: (is_active = true)&#10;           Filter: ((is_active IS TRUE) AND (is_test IS NOT TRUE) AND (is_control_group IS NOT TRUE) AND (customer_id = id))&#10;           Rows Removed by Filter: 140585&#10;   -&amp;gt;  Sort  (cost=86272150.87..86288551.70 rows=6560332 width=36) (actual time=13548.837..14247.724 rows=6568057 loops=1)&#10;         Sort Key: (CASE WHEN (((customers.account_id = 505) AND (NOT $0) AND (customers.account_id = 505) AND (alternatives: SubPlan 2 or hashed SubPlan 3) AND (customers.email IS NOT NULL) AND (customers.is_email_valid IS NOT FALSE) AND (customers.optin IS TRUE) AND ((customers.account_id &amp;lt;&amp;gt; 505) OR ((NOT (alternatives: SubPlan 4 or hashed SubPlan 5)) AND (NOT (alternatives: SubPlan 6 or hashed SubPlan 7)) AND (NOT (alternatives: SubPlan 8 or hashed SubPlan 9)) AND (NOT (alternatives: SubPlan 10 or hashed SubPlan 11))))) IS TRUE) THEN 'root'::text ELSE NULL::text END)&#10;         Sort Method: external merge  Disk: 91176kB&#10;         -&amp;gt;  Seq Scan on customers  (cost=0.00..85426840.21 rows=6560332 width=36) (actual time=0.015..12399.609 rows=6568057 loops=1)&#10;               SubPlan 2&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers  (cost=0.57..2.59 rows=1 width=0) (never executed)&#10;                       Index Cond: ((list_id = ANY ('{1137}'::integer[])) AND (customer_id = customers.id))&#10;                       Heap Fetches: 0&#10;               SubPlan 3&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_1  (cost=0.57..23216.46 rows=994177 width=4) (actual time=0.105..374.005 rows=998367 loops=1)&#10;                       Index Cond: (list_id = ANY ('{1137}'::integer[]))&#10;                       Heap Fetches: 291095&#10;               SubPlan 4&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_2  (cost=0.57..2.59 rows=1 width=0) (never executed)&#10;                       Index Cond: ((list_id = ANY ('{68}'::integer[])) AND (customer_id = customers.id))&#10;                       Heap Fetches: 0&#10;               SubPlan 5&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_3  (cost=0.57..2419.17 rows=99334 width=4) (actual time=0.036..75.940 rows=82001 loops=1)&#10;                       Index Cond: (list_id = ANY ('{68}'::integer[]))&#10;                       Heap Fetches: 21509&#10;               SubPlan 6&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_4  (cost=0.57..2.59 rows=1 width=0) (never executed)&#10;                       Index Cond: ((list_id = ANY ('{1156}'::integer[])) AND (customer_id = customers.id))&#10;                       Heap Fetches: 0&#10;               SubPlan 7&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_5  (cost=0.57..2419.17 rows=99334 width=4) (actual time=0.040..48.178 rows=34425 loops=1)&#10;                       Index Cond: (list_id = ANY ('{1156}'::integer[]))&#10;                       Heap Fetches: 15357&#10;               SubPlan 8&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_6  (cost=0.57..2.59 rows=1 width=0) (never executed)&#10;                       Index Cond: ((list_id = ANY ('{177}'::integer[])) AND (customer_id = customers.id))&#10;                       Heap Fetches: 0&#10;               SubPlan 9&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_7  (cost=0.57..16754.59 rows=709773 width=4) (actual time=0.037..744.307 rows=785369 loops=1)&#10;                       Index Cond: (list_id = ANY ('{177}'::integer[]))&#10;                       Heap Fetches: 335698&#10;               SubPlan 10&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_8  (cost=0.57..2.59 rows=1 width=0) (never executed)&#10;                       Index Cond: ((list_id = ANY ('{1154}'::integer[])) AND (customer_id = customers.id))&#10;                       Heap Fetches: 0&#10;               SubPlan 11&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_9  (cost=0.57..2419.17 rows=99334 width=4) (actual time=0.060..51.891 rows=261053 loops=1)&#10;                       Index Cond: (list_id = ANY ('{1154}'::integer[]))&#10;                       Heap Fetches: 39362&#10; Planning time: 4.930 ms&#10; Execution time: 14979.879 ms" />
          </outline>
          <outline text="Optimised query" _note="SELECT &#10;  CASE WHEN (&#10;    segment_combinations.&quot;root&quot; IS true&#10;  ) THEN 'root' END AS node_str, &#10;  count(segment_combinations.id) AS n_customers &#10;FROM &#10;  (&#10;    SELECT &#10;      customers.id AS id, &#10;      account_id = 505 &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            trigger_campaign_customer &#10;          WHERE &#10;            trigger_campaign_customer.customer_id = id &#10;            AND trigger_campaign_customer.is_active IS true &#10;            AND trigger_campaign_customer.is_test IS NOT true &#10;            AND trigger_campaign_customer.is_control_group IS NOT true&#10;        )&#10;      ) &#10;      AND account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(ARRAY[1137])&#10;        )&#10;      ) &#10;      AND email IS NOT NULL &#10;      AND is_email_valid IS NOT false &#10;      AND optin IS true &#10;      AND NOT (&#10;        account_id = 505 &#10;        AND (&#10;          (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(ARRAY[68, 1156, 177, 1154])&#10;            )&#10;          ) &#10;        )&#10;      ) AS root &#10;    FROM &#10;      customers&#10;  ) AS segment_combinations &#10;GROUP BY &#10;  node_str">
            <outline text="Query planner result" _note=" GroupAggregate  (cost=66395465.68..131637967.42 rows=6560332 width=40) (actual time=12011.041..13375.331 rows=2 loops=1)&#10;   Group Key: (CASE WHEN (((customers.account_id = 505) AND (NOT $0) AND (customers.account_id = 505) AND (alternatives: SubPlan 2 or hashed SubPlan 3) AND (customers.email IS NOT NULL) AND (customers.is_email_valid IS NOT FALSE) AND (customers.optin IS TRUE) AND ((customers.account_id &amp;lt;&amp;gt; 505) OR (NOT (alternatives: SubPlan 4 or hashed SubPlan 5)))) IS TRUE) THEN 'root'::text ELSE NULL::text END)&#10;   InitPlan 1 (returns $0)&#10;     -&amp;gt;  Index Scan using idx_trigger_campaign_customer_account_id_campaign_id_is_active on trigger_campaign_customer  (cost=0.56..588109.74 rows=525 width=0) (actual time=2724.304..2724.304 rows=0 loops=1)&#10;           Index Cond: (is_active = true)&#10;           Filter: ((is_active IS TRUE) AND (is_test IS NOT TRUE) AND (is_control_group IS NOT TRUE) AND (customer_id = id))&#10;           Rows Removed by Filter: 140653&#10;   -&amp;gt;  Sort  (cost=66394344.91..66410745.74 rows=6560332 width=36) (actual time=11971.005..12655.624 rows=6568066 loops=1)&#10;         Sort Key: (CASE WHEN (((customers.account_id = 505) AND (NOT $0) AND (customers.account_id = 505) AND (alternatives: SubPlan 2 or hashed SubPlan 3) AND (customers.email IS NOT NULL) AND (customers.is_email_valid IS NOT FALSE) AND (customers.optin IS TRUE) AND ((customers.account_id &amp;lt;&amp;gt; 505) OR (NOT (alternatives: SubPlan 4 or hashed SubPlan 5)))) IS TRUE) THEN 'root'::text ELSE NULL::text END)&#10;         Sort Method: external merge  Disk: 91176kB&#10;         -&amp;gt;  Seq Scan on customers  (cost=0.00..65549034.25 rows=6560332 width=36) (actual time=0.034..10776.264 rows=6568066 loops=1)&#10;               SubPlan 2&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers  (cost=0.57..2.59 rows=1 width=0) (never executed)&#10;                       Index Cond: ((list_id = ANY ('{1137}'::integer[])) AND (customer_id = customers.id))&#10;                       Heap Fetches: 0&#10;               SubPlan 3&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_1  (cost=0.57..23216.46 rows=994177 width=4) (actual time=0.086..313.076 rows=998367 loops=1)&#10;                       Index Cond: (list_id = ANY ('{1137}'::integer[]))&#10;                       Heap Fetches: 291095&#10;               SubPlan 4&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_2  (cost=0.57..7.33 rows=1 width=0) (never executed)&#10;                       Index Cond: ((list_id = ANY ('{68,1156,177,1154}'::integer[])) AND (customer_id = customers.id))&#10;                       Heap Fetches: 0&#10;               SubPlan 5&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_3  (cost=0.57..23519.05 rows=1007776 width=4) (actual time=2.584..688.297 rows=1162848 loops=1)&#10;                       Index Cond: (list_id = ANY ('{68,1156,177,1154}'::integer[]))&#10;                       Heap Fetches: 411929&#10; Planning time: 4.365 ms&#10; Execution time: 13403.108 ms" />
          </outline>
          <outline text="Query using customers_lists" _note="SELECT &#10;  CASE WHEN (&#10;    segment_combinations.&quot;root&quot; IS true&#10;  ) THEN 'root' END AS node_str, &#10;  count(segment_combinations.id) AS n_customers &#10;FROM &#10;  (&#10;    SELECT &#10;      customers.id AS id, &#10;      account_id = 505 &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            trigger_campaign_customer &#10;          WHERE &#10;            trigger_campaign_customer.customer_id = id &#10;            AND trigger_campaign_customer.is_active IS true &#10;            AND trigger_campaign_customer.is_test IS NOT true &#10;            AND trigger_campaign_customer.is_control_group IS NOT true&#10;        )&#10;      ) &#10;      AND account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            customers_lists &#10;          WHERE &#10;            customers_lists.customer_id = id &#10;            AND customers_lists.list_ids @&amp;gt; ARRAY[1137]&#10;        )&#10;      ) &#10;      AND email IS NOT NULL &#10;      AND is_email_valid IS NOT false &#10;      AND optin IS true &#10;      AND NOT (&#10;        account_id = 505 &#10;        AND (&#10;          (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                customers_lists &#10;              WHERE &#10;                customers_lists.customer_id = id &#10;                AND customers_lists.list_ids &amp;amp;&amp;amp; ARRAY[68, 1156, 177, 1154]&#10;            )&#10;          ) &#10;        )&#10;      ) AS root &#10;    FROM &#10;      customers&#10;  ) AS segment_combinations &#10;GROUP BY &#10;  node_str&#10;">
            <outline text="EA result" _note=" GroupAggregate  (cost=33495400.70..65837837.46 rows=6560332 width=40) (actual time=15183.249..16559.576 rows=2 loops=1)&#10;   Group Key: (CASE WHEN (((customers.account_id = 505) AND (NOT $0) AND (customers.account_id = 505) AND (alternatives: SubPlan 2 or hashed SubPlan 3) AND (customers.email IS NOT NULL) AND (customers.is_email_valid IS NOT FALSE) AND (customers.optin IS TRUE) AND ((customers.account_id &amp;lt;&amp;gt; 505) OR (NOT (alternatives: SubPlan 4 or hashed SubPlan 5)))) IS TRUE) THEN 'root'::text ELSE NULL::text END)&#10;   InitPlan 1 (returns $0)&#10;     -&amp;gt;  Index Scan using idx_trigger_campaign_customer_account_id_campaign_id_is_active on trigger_campaign_customer  (cost=0.56..588110.74 rows=525 width=0) (actual time=2968.076..2968.076 rows=0 loops=1)&#10;           Index Cond: (is_active = true)&#10;           Filter: ((is_active IS TRUE) AND (is_test IS NOT TRUE) AND (is_control_group IS NOT TRUE) AND (customer_id = id))&#10;           Rows Removed by Filter: 140569&#10;   -&amp;gt;  Sort  (cost=33494279.93..33510680.76 rows=6560332 width=36) (actual time=15138.377..15845.732 rows=6568102 loops=1)&#10;         Sort Key: (CASE WHEN (((customers.account_id = 505) AND (NOT $0) AND (customers.account_id = 505) AND (alternatives: SubPlan 2 or hashed SubPlan 3) AND (customers.email IS NOT NULL) AND (customers.is_email_valid IS NOT FALSE) AND (customers.optin IS TRUE) AND ((customers.account_id &amp;lt;&amp;gt; 505) OR (NOT (alternatives: SubPlan 4 or hashed SubPlan 5)))) IS TRUE) THEN 'root'::text ELSE NULL::text END)&#10;         Sort Method: external merge  Disk: 91176kB&#10;         -&amp;gt;  Seq Scan on customers  (cost=0.00..32648969.27 rows=6560332 width=36) (actual time=0.012..14013.389 rows=6568102 loops=1)&#10;               SubPlan 2&#10;                 -&amp;gt;  Index Scan using idx_customers_lists_customer_id on customers_lists  (cost=0.43..2.45 rows=1 width=0) (never executed)&#10;                       Index Cond: (customer_id = customers.id)&#10;                       Filter: (list_ids @&amp;gt; '{1137}'::integer[])&#10;               SubPlan 3&#10;                 -&amp;gt;  Bitmap Heap Scan on customers_lists customers_lists_1  (cost=8141.65..382307.21 rows=1001245 width=4) (actual time=247.391..3269.528 rows=998367 loops=1)&#10;                       Recheck Cond: (list_ids @&amp;gt; '{1137}'::integer[])&#10;                       Heap Blocks: exact=221912&#10;                       -&amp;gt;  Bitmap Index Scan on idx_customers_lists_list_ids  (cost=0.00..7891.34 rows=1001245 width=0) (actual time=198.542..198.542 rows=1824683 loops=1)&#10;                             Index Cond: (list_ids @&amp;gt; '{1137}'::integer[])&#10;               SubPlan 4&#10;                 -&amp;gt;  Index Scan using idx_customers_lists_customer_id on customers_lists customers_lists_2  (cost=0.43..2.45 rows=1 width=0) (never executed)&#10;                       Index Cond: (customer_id = customers.id)&#10;                       Filter: (list_ids &amp;amp;&amp;amp; '{68,1156,177,1154}'::integer[])&#10;               SubPlan 5&#10;                 -&amp;gt;  Bitmap Heap Scan on customers_lists customers_lists_3  (cost=9733.42..385226.03 rows=1107409 width=4) (actual time=349.510..1051.185 rows=898898 loops=1)&#10;                       Recheck Cond: (list_ids &amp;amp;&amp;amp; '{68,1156,177,1154}'::integer[])&#10;                       Heap Blocks: exact=204626&#10;                       -&amp;gt;  Bitmap Index Scan on idx_customers_lists_list_ids  (cost=0.00..9456.57 rows=1107409 width=0) (actual time=302.314..302.314 rows=1745815 loops=1)&#10;                             Index Cond: (list_ids &amp;amp;&amp;amp; '{68,1156,177,1154}'::integer[])" />
          </outline>
        </outline>
        <outline _complete="true" text="#om-interview Yattong Wu">
          <outline text="Great communication" />
          <outline text="Kube experience?">
            <outline text="At KPMG, how to improve services?" />
            <outline text="Build a small etc cluster for POCs" />
            <outline text="Not had to maintain a cluster in production" />
            <outline text="Not extensive knowledge but some exposure" />
            <outline text="Would you know what a control plane is?">
              <outline text="Is not sure." />
            </outline>
          </outline>
          <outline text="Monitoring">
            <outline text="API workload, what metrics?">
              <outline text="" />
            </outline>
          </outline>
        </outline>
        <outline text="Change campaign wide filter in segmentation tree to filter for `optin is not false` by default" />
        <outline _complete="true" text="Feelunique numbers discrepency">
          <outline text="Weds campaigns">
            <outline text="Campaign ids">
              <outline text="3453" _note="https://app.ometria.com/app/0522a3e764664dd7/broadcast-new/3453/segmentation?state={%22dateCurrent%22%3A{%22datePeriod%22%3A%22last28days%22%2C%22dateFrom%22%3A%222019-07-04T09%3A05%3A02.886Z%22%2C%22dateTo%22%3A%222019-07-31T09%3A05%3A02.886Z%22}%2C%22dateCompare%22%3A{%22datePeriod%22%3A%22prevperiod%22%2C%22dateFrom%22%3A%222019-06-06T09%3A05%3A02.886Z%22%2C%22dateTo%22%3A%222019-07-03T09%3A05%3A02.886Z%22}}" />
              <outline text="3417" _note="https://app.ometria.com/app/0522a3e764664dd7/broadcast-new/3417/segmentation?state={%22dateCurrent%22%3A{%22datePeriod%22%3A%22last28days%22%2C%22dateFrom%22%3A%222019-07-04T09%3A05%3A02.886Z%22%2C%22dateTo%22%3A%222019-07-31T09%3A05%3A02.886Z%22}%2C%22dateCompare%22%3A{%22datePeriod%22%3A%22prevperiod%22%2C%22dateFrom%22%3A%222019-06-06T09%3A05%3A02.886Z%22%2C%22dateTo%22%3A%222019-07-03T09%3A05%3A02.886Z%22}}" />
            </outline>
            <outline text="List ids">
              <outline text="In suppression box">
                <outline text="1703" />
                <outline text="1705" />
              </outline>
              <outline text="In list choice">
                <outline text="663" />
              </outline>
            </outline>
            <outline text="Query to find real time collisions" _note="WITH normal AS (&#10;    SELECT id&#10;    FROM customers&#10;    WHERE account_id = 515&#10;    AND exists(&#10;        SELECT 1&#10;        FROM lists_customers&#10;        WHERE lists_customers.customer_id = customers.id&#10;        AND list_id = 1703&#10;    )&#10;    AND exists(&#10;        SELECT 1&#10;        FROM lists_customers&#10;        WHERE lists_customers.customer_id = customers.id&#10;        AND list_id = 1705&#10;    )&#10;),&#10;suppressed AS (&#10;    SELECT id&#10;    FROM customers&#10;    WHERE account_id = 515&#10;    AND NOT exists(&#10;        SELECT 1&#10;        FROM lists_customers&#10;        WHERE lists_customers.customer_id = customers.id&#10;        AND list_id = 1703&#10;    )&#10;    AND NOT exists(&#10;        SELECT 1&#10;        FROM lists_customers&#10;        WHERE lists_customers.customer_id = customers.id&#10;        AND list_id = 1705&#10;    )&#10;)&#10;SELECT count(*)&#10;FROM normal&#10;JOIN suppressed ON suppressed.id = normal.id">
              <outline text="Returns near the same number as described in email (lists would have refreshed since campaign running so number differ slightly)" />
            </outline>
            <outline text="anna.searle@feelunique.com">
              <outline text="id 7948509" />
              <outline text="Customer id not in segment 663 (list dropdown segmentation)" _note="ometria_ecomm_0102=&amp;gt; select count(*) from lists_customers where list_id = 663 and customer_id = 7948509;&#10; count&#10;-------&#10;     0&#10;(1 row)" />
              <outline text="However IS in segment 1705" _note="ometria_ecomm_0102=&amp;gt; select count(*) from lists_customers where list_id = 1705 and customer_id = 7948509;&#10; count&#10;-------&#10;     1&#10;(1 row)" />
            </outline>
            <outline text="Therefore">
              <outline text="In suppression (of 1703, 1705) campaign, not in segment (663 - `All Customers`) and therefore not suppressed" />
              <outline text="In NON suppression campaign, IS in segment 1705, hence in campaign" />
            </outline>
          </outline>
          <outline text="Thurs">
            <outline text="3438 - 010819_RITUALS_GWP_FOLLOW_UP_ETPROMO_UK" />
            <outline text="3439 - 010819_HOURGLASS_ETBRAND_UK" />
          </outline>
          <outline _complete="true" text="query to find dts" _note="select dt_scheduled at time zone 'Europe/London' from mass_campaign where id in (3417, 3453);" />
        </outline>
        <outline _complete="true" text="Support">
          <outline _complete="true" text="Feelunique report discrepency">
            <outline text="cs_report">
              <outline text="query" _note="SELECT count(*)&#10;FROM customers_lifecycle_event&#10;WHERE account_id = 515&#10;AND dt_occurred BETWEEN '2019-02-01 00:00:00'::timestamp AND '2019-02-28 23:59:59'::timestamp;">
                <outline text="246064" />
              </outline>
              <outline text="what the query should be" _note="SELECT count(*)&#10;FROM customers_lifecycle_event&#10;WHERE account_id = 515&#10;AND dt_occurred BETWEEN '2019-02-01 00:00:00'::timestamp AND '2019-02-28 23:59:59'::timestamp&#10;AND event = 'BECAME_LEAD'::lifecycle_status_change">
                <outline text="20351" />
              </outline>
            </outline>
            <outline text="reporting">
              <outline text="timeUnit">
                <outline text="auto -&amp;gt; day" />
              </outline>
              <outline text="query" _note="SELECT sum(leads_acquired)&#10;FROM (&#10;    SELECT&#10;        DATE_TRUNC('day', timestamp AT TIME ZONE 'Europe/London') AS timestamp,&#10;        SUM(leads_acquired) AS leads_acquired&#10;    FROM&#10;        cube_customers_lifecycle_events&#10;    WHERE&#10;        account_id=515&#10;        AND timestamp BETWEEN (('2019-02-01 00:00:00')::timestamp AT TIME ZONE 'Europe/London') AND (('2019-02-28 23:59:59')::timestamp AT TIME ZONE 'Europe/London')&#10;    GROUP BY 1&#10;    ORDER BY 1&#10;) sq">
                <outline text="20351" />
              </outline>
            </outline>
            <outline text="cube_customers_lifecycle_events built from events_lifecycle" />
            <outline text="customers_lifecycle_event seems independent" />
          </outline>
        </outline>
        <outline _complete="true" text="Lovehoney list mutual exclusivity example">
          <outline text="query" _note="SELECT count(customer_id)&#10;FROM customers_lists&#10;JOIN customers ON customers.id = customers_lists.customer_id&#10;WHERE cardinality(list_ids &amp;amp; ARRAY[775, 791, 790, 804, 805]) &amp;gt;= 2&#10;AND customers.account_id = 505;">
            <outline text="Outcome 39632" />
          </outline>
          <outline text="New total 669,417" />
          <outline text="Old totals 703,153">
            <outline text="775 - 111,205" />
            <outline text="791 - 232,054" />
            <outline text="790 - 209,595" />
            <outline text="804 - 51,419" />
            <outline text="805 - 98,880" />
          </outline>
        </outline>
        <outline _complete="true" text="Old BUI bug investigation ">
          <outline text="lib.services 0.33" />
          <outline text="Example generation">
            <outline text="Payload" _note="{&quot;query&quot;:{&quot;and_filters&quot;:[{&quot;field&quot;:&quot;exclude_nonengaged&quot;,&quot;op&quot;:&quot;eq&quot;,&quot;value&quot;:[&quot;false&quot;]}],&quot;filters&quot;:[{&quot;field&quot;:&quot;email&quot;,&quot;op&quot;:&quot;contains&quot;,&quot;value&quot;:[&quot;sam bui&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;suppression_list_id&quot;:745,&quot;suppression_query&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;gender&quot;,&quot;op&quot;:&quot;eq&quot;,&quot;value&quot;:[&quot;m&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;}}" />
            <outline text="Generated equivalent query" _note="SELECT count(*)&#10;FROM&#10;(&#10;    SELECT id&#10;    FROM customers&#10;    WHERE account_id = 352&#10;    AND email ilike '%sam+bui%'&#10;    EXCEPT&#10;    SELECT id&#10;    FROM customers&#10;    WHERE account_id = 352&#10;    AND gender = 'm'&#10;    AND EXISTS(&#10;        SELECT lists_customers.customer_id&#10;        FROM lists_customers&#10;        WHERE customers.id = lists_customers.customer_id&#10;        AND lists_customers.list_id = 745&#10;    )&#10;) sq&#10;" />
          </outline>
        </outline>
        <outline text="New campaign validation">
          <outline text="Query to find campaigns" _note="SELECT mc.id as campaign_id, a.id as account_id, a.title, mc.dt_created, mc.dt_scheduled FROM mass_campaign mc JOIN accounts a ON a.id = mc.account_id WHERE mass_campaign_configuration_id IS NOT NULL AND dt_created &amp;gt;= '2019-07-23 10:00:00'::timestamp AND account_id NOT IN (352, 79) and is_sent">
            <outline text="With segmentation tree" _note="SELECT mc.id as campaign_id, a.id as account_id, a.title, mc.dt_scheduled, mcc.segmentation_tree FROM mass_campaign mc JOIN accounts a ON a.id = mc.account_id JOIN mass_campaign_configuration mcc ON mcc.id = mc.mass_campaign_configuration_id WHERE mass_campaign_configuration_id IS NOT NULL AND mc.dt_created &amp;gt;= '2019-07-23 10:00:00'::timestamp AND mc.account_id NOT IN (352, 79)" />
          </outline>
          <outline text="Example url" _note="https://app.ometria.com/app/077b8da48581085e/broadcast-new/8261/segmentation?state=%7B%22dateCurrent%22%3A%7B%22datePeriod%22%3A%22last28days%22%2C%22dateFrom%22%3A%222019-06-26T09%3A28%3A17.263Z%22%2C%22dateTo%22%3A%222019-07-23T09%3A28%3A17.263Z%22%7D%2C%22dateCompare%22%3A%7B%22datePeriod%22%3A%22prevperiod%22%2C%22dateFrom%22%3A%222019-05-29T09%3A28%3A17.263Z%22%2C%22dateTo%22%3A%222019-06-25T09%3A28%3A17.263Z%22%7D%7D">
            <outline text="Swop out hash and campaign_id" />
          </outline>
          <outline text="Checked sent campaigns" _note=" shard      | campaign_id | account_id | title        | dt_scheduled&#10;------------|-------------|------------|--------------|------------------------&#10; ecomm_0101 | 8255        | 564        | Lovehoney NZ | 2019-07-24 07:30:00+00&#10; ecomm_0101 | 8227        | 564        | Lovehoney NZ | 2019-07-23 19:00:00+00&#10; ecomm_0101 | 8256        | 554        | Lovehoney AU | 2019-07-24 09:00:00+00&#10; ecomm_0101 | 8230        | 554        | Lovehoney AU | 2019-07-23 21:00:00+00&#10; ecomm_0101 | 8229        | 558        | Lovehoney FR | 2019-07-24 05:00:00+00&#10; ecomm_0101 | 8225        | 560        | Lovehoney DE | 2019-07-24 05:00:00+00&#10; ecomm_0101 | 8239        | 556        | Lovehoney EU | 2019-07-24 06:00:00+00" />
          <outline text="Real time query with updated last run dt" _note="SELECT mc.id as campaign_id, a.id as account_id, a.title, mc.dt_created, mc.dt_scheduled FROM mass_campaign mc JOIN accounts a ON a.id = mc.account_id WHERE mass_campaign_configuration_id IS NOT NULL AND dt_created &amp;gt;= '2019-07-29 14:39:14.278305+00'::timestamp AND account_id NOT IN (352, 79) and is_sent" />
          <outline text="Last ran at" _note="2019-07-29 14:39:14.278305+00" />
        </outline>
        <outline _complete="true" text="Write a mass_email test which recreates the elinks issue introduced when using a newer version of elinks (python:3.6-slim)">
          <outline text="Working payload" _note="{&quot;id&quot;:677,&quot;template_html&quot;:&quot;&amp;lt;!DOCTYPE HTML PUBLIC \&quot;-//W3C//DTD HTML 4.01 Transitional//EN\&quot; \&quot;http://www.w3.org/TR/html4/loose.dtd\&quot;&amp;gt;\n&amp;lt;html lang=\&quot;en\&quot; xmlns=\&quot;http://www.w3.org/1999/xhtml\&quot; xmlns:v=\&quot;urn:schemas-microsoft-com:vml\&quot; xmlns:o=\&quot;urn:schemas-microsoft-com:office:office\&quot;&amp;gt;\n&amp;lt;head&amp;gt;\n  &amp;lt;meta http-equiv=\&quot;Content-Type\&quot; content=\&quot;text/html; charset=utf-8\&quot;&amp;gt;\n  &amp;lt;!--[if !mso]&amp;gt;&amp;lt;!--&amp;gt;\n  &amp;lt;meta http-equiv=\&quot;X-UA-Compatible\&quot; content=\&quot;IE=edge\&quot;&amp;gt;\n  &amp;lt;!--&amp;lt;![endif]--&amp;gt;\n  &amp;lt;!--[if gte mso 9]&amp;gt;&amp;lt;xml&amp;gt;\n  &amp;lt;o:OfficeDocumentSettings&amp;gt;\n    &amp;lt;o:AllowPNG/&amp;gt;\n    &amp;lt;o:PixelsPerInch&amp;gt;96&amp;lt;/o:PixelsPerInch&amp;gt;\n  &amp;lt;/o:OfficeDocumentSettings&amp;gt;\n  &amp;lt;/xml&amp;gt;&amp;lt;![endif]--&amp;gt;\n  &amp;lt;meta name=\&quot;viewport\&quot; content=\&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\&quot;&amp;gt;\n  &amp;lt;meta name=\&quot;apple-mobile-web-app-capable\&quot; content=\&quot;yes\&quot;&amp;gt;\n  &amp;lt;meta name=\&quot;apple-mobile-web-app-status-bar-style\&quot; content=\&quot;black\&quot;&amp;gt;\n  &amp;lt;meta name=\&quot;format-detection\&quot; content=\&quot;telephone=no\&quot;&amp;gt;\n  &amp;lt;meta name=\&quot;robots\&quot; content=\&quot;noindex, nofollow\&quot;&amp;gt;\n  &amp;lt;meta name=\&quot;x-apple-disable-message-reformatting\&quot;&amp;gt;\n  &amp;lt;link rel=\&quot;stylesheet\&quot; type=\&quot;text/css\&quot; href=\&quot;css/app.css\&quot;&amp;gt;\n\n  &amp;lt;title&amp;gt;Ciate London&amp;lt;/title&amp;gt;\n\n  &amp;lt;style type=\&quot;text/css\&quot;&amp;gt;\n    * {-webkit-text-size-adjust:100%; -ms-text-size-adjust:100%;}\n    html, body {Margin:0 !important; padding:0 !important; width:100% !important; min-width:100% !important; height:100% !important; }\n    #outlook a {padding:0 !important;}\n    img {outline:none !important; text-decoration:none !important; border:0 !important;}\n    a img {border:none !important; }\n    table {border-collapse:collapse; mso-table-lspace:0pt !important; mso-table-rspace:0pt !important; min-width:0 !important;border-spacing:0 !important; padding:0 !important;}\n    table th {border-collapse:collapse; mso-table-lspace:0pt !important; mso-table-rspace:0pt !important;font-size:14px;line-height: 18px;font-weight:normal; box-sizing:border-box;}\n    img{-ms-interpolation-mode:bicubic;}\n    .wrapper {width: 100% !important; table-layout: fixed !important;}\n\n    h1 {font-size: 26px;\n      line-height: 1.3;\n      font-family: 'CenturyGothic-Bold',Helvetica, Arial, sans-serif;\n      margin:0;\n      padding: 0;\n      letter-spacing: 6px;\n      text-transform: uppercase;\n      font-weight:bold;\n      \n    }\n\n    h2 {font-size: 18px;\n      line-height: 1.3;\n      font-family: 'CenturyGothic-Bold',Helvetica, Arial, sans-serif;\n      margin:0;\n      padding: 0;\n      text-transform: uppercase;\n      font-weight:bold;\n      \n    }\n   \n    h3 {font-size: 18px;\n      line-height: 1.3;\n      font-family: 'CenturyGothic',Helvetica, Arial, sans-serif;\n      margin:0;\n      padding: 0;\n      letter-spacing: 6px;\n      text-transform: uppercase;\n      font-weight:normal;\n      \n    }\n\n    h4 {font-size: 14px;\n      line-height: 1.2;\n      font-family: 'CenturyGothic',Helvetica, Arial, sans-serif;\n      margin:0;\n      padding: 0;\n      text-transform: uppercase;\n      font-weight:normal;\n      \n    }\n\n    h5 {font-size: 14px;\n      line-height: 1.2;\n      font-family: 'CenturyGothic-BoldItalic',Helvetica, Arial, sans-serif;\n      \n      margin:0;\n      padding: 0;\n      font-weight:bold;\n      font-style: italic;\n      \n\n    }\n\n    h6 {font-size: 14px;\n      line-height: 1.2;\n      font-family: 'CenturyGothic-Italic',Helvetica, Arial, sans-serif;\n      letter-spacing: 2px;\n      margin:0;\n      padding: 0;\n      font-weight:normal;\n      font-style:italic;\n      \n    }\n\n    p,\n    td,\n    th,\n    a {\n      color: #000001;\n      font-family: 'CenturyGothic',Helvetica, Arial, sans-serif;\n      font-weight: normal;\n      padding: 0;\n      margin: 0;\n      font-size:14px;\n      line-height: 1.3;\n       }\n    \n    p{\n      text-align:left;\n    }\n\n    td &amp;gt; a { font-family: 'CenturyGothic-Bold',Helvetica, Arial, sans-serif; }\n\n      #MessageViewBody a {\n    color: inherit;\n    text-decoration: none;\n    font-size: inherit;\n    font-family: inherit;\n    font-weight: inherit;\n    line-height: inherit;\n\n}\n\n#MessageViewBody, #MessageWebViewDiv{\n    width: 100% !important;\n}\n\n    /*Mobile*/\n    @media only screen and (max-width:639px) {\n      .fl{float:left !important;}\n      .fr{float:right !important;}\n      .fc{float:none !important; margin:0 auto!important;}\n      .wr{display:block !important;}\n      .wf{width:100% !important;max-width:100% !important;}\n      .hide{display:none !important;}\n      .show {\n        display:block !important;\n        margin:0 !important;\n        overflow:visible !important;\n        width:auto !important;\n        max-height:inherit !important;\n        font-size:inherit !important;\n        line-height:inherit !important\n      }\n      a[x-apple-data-detectors] {\n        color:inherit !important;\n        text-decoration:none !important;\n        font-size:inherit !important;\n        font-family:inherit !important;\n        font-weight:inherit !important;\n        line-height:inherit !important;\n      }\n      \n      .centermob {\n        margin:0 auto!important;\n        display:block;\n      }\n      .tc{\n        text-align:center!important;\n      }\n      \n      .w25 { \n        width:25%!important;max-width: 25% !important;height:auto !important;\n      }\n      \n      .w33 { \n        width:33%!important;max-width: 33% !important;height:auto !important;\n      }\n      \n      .w45 { \n        width:45%!important;max-width: 45% !important;height:auto !important;\n      }\n      \n      .w50 { \n        width:50%!important;max-width: 50% !important;height:auto !important;\n      }\n\n      .w70 { \n        width:70%!important;max-width: 70% !important;height:auto !important;\n      }\n      \n      .w90 {\n        width:90%!important;max-width: 90% !important;height:auto !important;\n      }\n      \n      .w95 { \n        width:95%!important;max-width: 95% !important;height:auto !important;\n      }\n      \n      .w98 { \n        width:98%!important;max-width: 98% !important;height:auto !important;\n      }\n\n      .btn_mobile{\n        padding-left:10px!important;\n        padding-right:10px!important;\n        box-sizing:border-box;\n      }\n      \n      .mobile-sidepadding{\n        padding-left:10px!important;\n        padding-right:10px!important;\n        box-sizing:border-box;\n      }\n      \n      .ptop10{\n        padding-top:10px!important;\n      }\n      .plr0{\n        padding-left:0px!important;\n        padding-right:0px!important;\n      }\n      .pbot0{\n        padding-bottom:0px!important;\n      }\n      \n      .pbot10{\n        padding-bottom:10px!important;\n      }\n\n      .small-font {font-size:10px !important;}\n\n      th.small-12 {\n    display: inline-block !important;\n    width: 100% !important;\n  }\n\n u + #body { width:100vw !important; } \n\n    }\n\n    \n\n  &amp;lt;/style&amp;gt;\n\n  \n\n&amp;lt;style&amp;gt;\n\n       @font-face {\n                font-family: 'CenturyGothic';\n                src: url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-115ce501a5.eot\&quot;);\n                src:url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-22f7f9b785.woff\&quot;) format(\&quot;woff\&quot;),\n                url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-5c66d498f5.ttf\&quot;) format(\&quot;truetype\&quot;)\n\n              \n            }\n\n      @font-face {\n                font-family: 'CenturyGothic-Bold';\n                src: url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Bold-a046bbf962.eot\&quot;);\n                src:url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Bold-c7a7298a69.woff\&quot;) format(\&quot;woff\&quot;),\n                url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Bold-e75f01ce02.ttf\&quot;) format(\&quot;truetype\&quot;)\n\n              \n            }\n\n      @font-face {\n                font-family: 'CenturyGothic-BoldItalic';\n                src: url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-BoldItalicC-b774754285.eot\&quot;);\n                src:url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-BoldItalic-896542c017.woff\&quot;) format(\&quot;woff\&quot;),\n                url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-BoldItalic-662044deb6.ttf\&quot;) format(\&quot;truetype\&quot;)\n\n              \n            }\n\n      @font-face {\n                font-family: 'CenturyGothic-Italic';\n                src: url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Italic-ca6d35c1b5.eot\&quot;);\n                src:url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Italic-9289799e44.woff\&quot;) format(\&quot;woff\&quot;),\n                url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Italic-098e8c70c1.ttf\&quot;) format(\&quot;truetype\&quot;)\n\n              \n            }\n&amp;lt;/style&amp;gt; \n&amp;lt;!--[if mso]&amp;gt;\n \n&amp;lt;style&amp;gt;\n    th, td, table, div, th a, td a, a, p {\n      font-family: Helvetica, Arial, sans-serif !important; mso-line-height-rule:exactly;]\n\n    h1, h2 {font-weight:bold !important; mso-line-height-rule:exactly;}\n\n    h6 {font-style:italic !important; mso-line-height-rule:exactly;}\n\n    th &amp;gt; a {font-weight:bold !important;}\n\n    p {\n    display: block;\n    margin-block-start: 0px;\n    margin-block-end: 0px;\n    margin-inline-start: 0px;\n    margin-inline-end: 0px;\n}\n\n    \n&amp;lt;/style&amp;gt;\n \n&amp;lt;![endif]--&amp;gt;\n  \n&amp;lt;/head&amp;gt;\n\n&amp;lt;body id=\&quot;body\&quot; class=\&quot;body\&quot; style=\&quot;Margin:0 auto;padding-bottom:10px;padding-right:0;padding-left:0;min-width:100%;background-color:#ffffff;\&quot;&amp;gt;\n&amp;lt;center class=\&quot;wrapper\&quot; style=\&quot;width:100%;table-layout:fixed;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;\&quot;&amp;gt;\n&amp;lt;table width=\&quot;600\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; bgcolor=\&quot;#ffffff\&quot; style=\&quot;max-width:600px; table-layout: fixed;width:100% !important\&quot;&amp;gt;\n&amp;lt;tbody&amp;gt;\n    &amp;lt;tr align=\&quot;center\&quot;&amp;gt;\n        &amp;lt;th valign=\&quot;top\&quot; align=\&quot;center\&quot; style=\&quot;font-family: 'CenturyGothic',Helvetica, Arial, sans-serif;\&quot;&amp;gt;\n&amp;lt;!-- Emailcontent --&amp;gt;\n\n          &amp;lt;table class=\&quot;w95\&quot; width=\&quot;95%\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; align=\&quot;center\&quot; role=\&quot;presentation\&quot; style=\&quot;width:95%;\&quot;&amp;gt;\n            &amp;lt;tr style=\&quot;text-align: center\&quot;&amp;gt;\n              &amp;lt;td height=\&quot;10\&quot; style=\&quot;font-size: 10px; line-height: 10px; text-align: center\&quot;&amp;gt;&amp;amp;#xA0;&amp;lt;/td&amp;gt;\n            &amp;lt;/tr&amp;gt;\n            &amp;lt;tr align=\&quot;center\&quot;&amp;gt;\n              &amp;lt;th align=\&quot;left\&quot; style=\&quot;font-size: 11px; color:#333333; line-height: 15px; mso-line-height-rule: exactly;\&quot;&amp;gt;\n                {{email.preheader}} &amp;lt;span style=\&quot;display: none; max-height:0px;overflow:hidden;\&quot;&amp;gt;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;lt;/span&amp;gt;\n              &amp;lt;/th&amp;gt;\n              &amp;lt;th align=\&quot;right\&quot; style=\&quot;font-size: 11px; color:#333333; line-height: 15px; mso-line-height-rule:exactly;\&quot;&amp;gt;\n                &amp;lt;a href=\&quot;{{email.archive_url}}\&quot; style=\&quot;font-size: 11px; color:#333333;text-decoration: underline\&quot; om:linkid=\&quot;-1:0\&quot;&amp;gt;View in browser&amp;lt;/a&amp;gt; \n              &amp;lt;/th&amp;gt;\n            &amp;lt;/tr&amp;gt;\n            &amp;lt;tr style=\&quot;text-align: center\&quot;&amp;gt;\n              &amp;lt;td height=\&quot;10\&quot; style=\&quot;font-size: 10px; line-height: 10px; text-align: center\&quot;&amp;gt;&amp;amp;#xA0;&amp;lt;/td&amp;gt;\n            &amp;lt;/tr&amp;gt;\n          &amp;lt;/table&amp;gt; \n\n          &amp;lt;span align=\&quot;center\&quot; style=\&quot;color: #ffffff; display: none !important; font-size: 1px; line-height: 1px; max-height: 0px; max-width: 0px; mso-hide: all !important; opacity: 0; overflow: hidden; visibility: hidden\&quot;&amp;gt; {% set url = 'https://www.ciatelondon.com/' %}&amp;lt;/span&amp;gt;\n\n          &amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n            &amp;lt;tr&amp;gt;\n              &amp;lt;th align=\&quot;center\&quot; style=\&quot;font-size:0; line-height:0;\&quot;&amp;gt;\n                &amp;lt;a href=\&quot;{{url}}\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;logo\&quot; style=\&quot;display:block\&quot; om:vid=\&quot;0\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:1\&quot;&amp;gt;\n                  &amp;lt;img src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/CiateLogo-2a964c6a1c.png\&quot; style=\&quot;display: block; max-width:270px;width:270px;height:auto; margin:0 auto;\&quot; border=\&quot;0\&quot; width=\&quot;270\&quot; height=\&quot;auto\&quot; om:label=\&quot;undefined\&quot;&amp;gt;\n                &amp;lt;/a&amp;gt;\n              &amp;lt;/th&amp;gt;\n            &amp;lt;/tr&amp;gt;\n          &amp;lt;/table&amp;gt;\n\n          &amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n          &amp;lt;tr style=\&quot;text-align: center\&quot;&amp;gt;\n              &amp;lt;td height=\&quot;20\&quot; style=\&quot;font-size: 20px; line-height: 20px; text-align: center\&quot;&amp;gt;&amp;amp;#xA0;&amp;lt;/td&amp;gt;\n            &amp;lt;/tr&amp;gt;\n          &amp;lt;/table&amp;gt; \n\n          &amp;lt;div om:blocks=\&quot;true\&quot;&amp;gt;&amp;lt;table class=\&quot;wf\&quot; om:block=\&quot;Image block\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n  &amp;lt;tr&amp;gt;\n    &amp;lt;th align=\&quot;center\&quot; valign=\&quot;top\&quot;&amp;gt;\n       &amp;lt;table class=\&quot;wf\&quot; cellspacing=\&quot;0\&quot; cellpadding=\&quot;0\&quot; align=\&quot;center\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n        &amp;lt;tr align=\&quot;center\&quot;&amp;gt;\n          &amp;lt;th align=\&quot;center\&quot; style=\&quot;font-size:16px; line-height:16px;\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;{{url}}\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;hero\&quot; style=\&quot;display:block\&quot; om:vid=\&quot;8\&quot; om:linkid=\&quot;0:0\&quot;&amp;gt;\n              &amp;lt;img class=\&quot;wf\&quot; src=\&quot;https://cdn-ometria-com.s3-eu-west-1.amazonaws.com/emails/2d210b975eec006e/3291ee8185f294e6212e47675f91a002.gif\&quot; border=\&quot;0\&quot; width=\&quot;600\&quot; height=\&quot;712\&quot; style=\&quot;display: block; border: 0; max-width:100%; height:auto\&quot;&amp;gt;\n            &amp;lt;/a&amp;gt;\n          &amp;lt;/th&amp;gt;\n        &amp;lt;/tr&amp;gt;\n      &amp;lt;/table&amp;gt;\n    &amp;lt;/th&amp;gt;\n  &amp;lt;/tr&amp;gt;\n&amp;lt;/table&amp;gt;&amp;lt;table class=\&quot;wf\&quot; om:block=\&quot;Image block\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n  &amp;lt;tr&amp;gt;\n    &amp;lt;th align=\&quot;center\&quot; valign=\&quot;top\&quot;&amp;gt;\n       &amp;lt;table class=\&quot;wf\&quot; cellspacing=\&quot;0\&quot; cellpadding=\&quot;0\&quot; align=\&quot;center\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n        &amp;lt;tr align=\&quot;center\&quot;&amp;gt;\n          &amp;lt;th align=\&quot;center\&quot; style=\&quot;font-size:16px; line-height:16px;\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;{{url}}\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;hero\&quot; style=\&quot;display:block\&quot; om:vid=\&quot;9\&quot; om:linkid=\&quot;1:0\&quot;&amp;gt;\n              &amp;lt;img class=\&quot;wf\&quot; src=\&quot;https://dummyimage.com/600x300/eeeeee/000\&quot; border=\&quot;0\&quot; width=\&quot;600\&quot; height=\&quot;auto\&quot; style=\&quot;display: block; border: 0; max-width:100%; height:auto\&quot;&amp;gt;\n            &amp;lt;/a&amp;gt;\n          &amp;lt;/th&amp;gt;\n        &amp;lt;/tr&amp;gt;\n      &amp;lt;/table&amp;gt;\n    &amp;lt;/th&amp;gt;\n  &amp;lt;/tr&amp;gt;\n&amp;lt;/table&amp;gt;&amp;lt;/div&amp;gt;\n\n          &amp;lt;!-- Blocks start --&amp;gt;\n\n&amp;lt;!-- Blocks end --&amp;gt;\n\n&amp;lt;!-- Footer --&amp;gt;\n\n&amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%;\&quot;&amp;gt;\n  &amp;lt;tr&amp;gt;\n    &amp;lt;td height=\&quot;12\&quot; style=\&quot;font-size: 12px; line-height: 12px; mso-line-height-rule: exactly;\&quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/td&amp;gt;\n  &amp;lt;/tr&amp;gt;\n&amp;lt;/table&amp;gt;\n\n&amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;600\&quot; role=\&quot;presentation\&quot; style=\&quot;width:600px;\&quot;&amp;gt;\n  &amp;lt;tr&amp;gt;\n\n    &amp;lt;th align=\&quot;center\&quot;&amp;gt;\n      &amp;lt;table align=\&quot;center\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; width=\&quot;200\&quot; border=\&quot;0\&quot; role=\&quot;presentation\&quot;&amp;gt;\n      &amp;lt;tr align=\&quot;center\&quot;&amp;gt;\n         &amp;lt;th style=\&quot;text-align:center;width:20%;max-width: 20%;height:45px\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;https://www.facebook.com/ciatelondon/\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;social1\&quot; om:vid=\&quot;1\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:2\&quot;&amp;gt;&amp;lt;img class=\&quot;centermob\&quot; src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/facebookicon-black-f01d20283a.png\&quot; alt=\&quot;facebook\&quot; style=\&quot;display: block; border: 0; font-size:16px; line-height:16px;width:20px; height:20px;max-width:20px\&quot; border=\&quot;0\&quot; width=\&quot;20\&quot; height=\&quot;20\&quot; om:label=\&quot;undefined\&quot;&amp;gt;&amp;lt;/a&amp;gt;\n        &amp;lt;/th&amp;gt;\n        &amp;lt;th style=\&quot;text-align:center; width:20%;max-width: 20%;height:45px\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;https://twitter.com/ciatelondon/\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;social2\&quot; om:vid=\&quot;2\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:3\&quot;&amp;gt;&amp;lt;img class=\&quot;centermob\&quot; src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/twittericon-black-592dd3c23d.png\&quot; alt=\&quot;twitter\&quot; style=\&quot;display: block; border: 0; font-size:16px; line-height:16px;width:20px; height:20px;max-width:20px\&quot; border=\&quot;0\&quot; width=\&quot;20\&quot; height=\&quot;20\&quot; om:label=\&quot;undefined\&quot;&amp;gt;&amp;lt;/a&amp;gt;\n        &amp;lt;/th&amp;gt;\n        &amp;lt;th style=\&quot;text-align:center; width:20%;max-width: 20%;height:45px\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;https://uk.pinterest.com/ciatelondon/\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;social3\&quot; om:vid=\&quot;3\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:4\&quot;&amp;gt;&amp;lt;img class=\&quot;centermob\&quot; src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/pinteresticon-black-5c00265b1a.png\&quot; alt=\&quot;pinterest\&quot; style=\&quot;display: block; border: 0; font-size:16px; line-height:16px;width:20px; height:20px;max-width:20px\&quot; border=\&quot;0\&quot; width=\&quot;20\&quot; height=\&quot;20\&quot; om:label=\&quot;undefined\&quot;&amp;gt;&amp;lt;/a&amp;gt;\n        &amp;lt;/th&amp;gt;\n        &amp;lt;th style=\&quot;text-align:center;width:20%;max-width: 20%;height:45px\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;https://www.youtube.com/user/NailsbyCiate/videos\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;social4\&quot; om:vid=\&quot;4\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:5\&quot;&amp;gt;&amp;lt;img class=\&quot;centermob\&quot; src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/youtubeicon-black-5e53e01a2b.png\&quot; alt=\&quot;youtube\&quot; style=\&quot;display: block; border: 0; font-size:16px; line-height:16px;width:20px; height:20px;max-width:20px\&quot; border=\&quot;0\&quot; width=\&quot;20\&quot; height=\&quot;20\&quot; om:label=\&quot;undefined\&quot;&amp;gt;&amp;lt;/a&amp;gt;\n        &amp;lt;/th&amp;gt;\n        &amp;lt;th style=\&quot;text-align:center;width:20%;max-width: 20%;height:45px\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;https://www.instagram.com/ciatelondon/\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;social5\&quot; om:vid=\&quot;5\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:6\&quot;&amp;gt;&amp;lt;img class=\&quot;centermob\&quot; src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/instagramicon-black-2bf0d84ae1.png\&quot; alt=\&quot;instagram\&quot; style=\&quot;display: block; border: 0; font-size:16px; line-height:16px;width:20px; height:20px;max-width:20px\&quot; border=\&quot;0\&quot; width=\&quot;20\&quot; height=\&quot;20\&quot; om:label=\&quot;undefined\&quot;&amp;gt;&amp;lt;/a&amp;gt;\n        &amp;lt;/th&amp;gt;\n      &amp;lt;/tr&amp;gt;\n    &amp;lt;/table&amp;gt;\n\n        \n    &amp;lt;/th&amp;gt;\n  &amp;lt;/tr&amp;gt;\n&amp;lt;/table&amp;gt;\n\n    &amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;  \n      &amp;lt;tr&amp;gt;\n        &amp;lt;td height=\&quot;22\&quot; style=\&quot;font-size: 22px; line-height: 22px; mso-line-height-rule: exactly;\&quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/td&amp;gt;\n      &amp;lt;/tr&amp;gt;\n    &amp;lt;/table&amp;gt;\n\n&amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%;\&quot;&amp;gt;\n    &amp;lt;tr&amp;gt;\n    &amp;lt;th align=\&quot;center\&quot;&amp;gt;\n        &amp;lt;table class=\&quot;w95\&quot; width=\&quot;90%\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; align=\&quot;center\&quot;&amp;gt;\n          &amp;lt;tr om:editable=\&quot;html\&quot; om:id=\&quot;tandc\&quot; om:vid=\&quot;6\&quot;&amp;gt;&amp;lt;th align=\&quot;center\&quot; style=\&quot;font-size: 12px; color:#001; line-height: 22px; mso-line-height-rule: exactly;padding-top:10px;padding-bottom:10px;\&quot;&amp;gt;\n            \n              T&amp;amp;Cs; applies &amp;lt;br&amp;gt;\n            \n            &amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;\n          &amp;lt;tr om:editable=\&quot;html\&quot; om:id=\&quot;footer-copy\&quot; om:vid=\&quot;7\&quot;&amp;gt;&amp;lt;th align=\&quot;center\&quot; style=\&quot;font-size: 12px; color:#001; line-height: 22px; mso-line-height-rule: exactly;padding-top:10px;padding-bottom:10px;font-style: italic\&quot;&amp;gt;\n              We are contacting {{profile.email}} as you subscribed to the Ciaté London newsletter .\n              \n              Want to change how you receive these emails? &amp;lt;br&amp;gt;\n              You can &amp;lt;a href=\&quot;{{prefs}}\&quot; target=\&quot;_blank\&quot; style=\&quot;font-size: 12px; color:#001; line-height: 22px; mso-line-height-rule: exactly;font-style: italic\&quot; om:linkid=\&quot;-1:0\&quot;&amp;gt;update your preferences&amp;lt;/a&amp;gt; or\n              &amp;lt;a href=\&quot;{{unsub}}\&quot; target=\&quot;_blank\&quot; style=\&quot;font-size: 12px; color:#001; line-height: 22px; mso-line-height-rule: exactly;font-style: italic\&quot; om:linkid=\&quot;-1:1\&quot;&amp;gt;unsubscribe from this list&amp;lt;/a&amp;gt;. &amp;lt;br&amp;gt;\n            \n            &amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;\n        &amp;lt;/table&amp;gt;\n      &amp;lt;/th&amp;gt;\n    &amp;lt;/tr&amp;gt;\n&amp;lt;/table&amp;gt;\n    &amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;  \n      &amp;lt;tr&amp;gt;\n        &amp;lt;td height=\&quot;12\&quot; style=\&quot;font-size: 12px; line-height: 12px; mso-line-height-rule: exactly;\&quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/td&amp;gt;\n      &amp;lt;/tr&amp;gt;\n    &amp;lt;/table&amp;gt;\n\n&amp;lt;!-- /Emailcontent --&amp;gt;\n&amp;lt;/th&amp;gt;\n&amp;lt;/tr&amp;gt;\n&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;\n&amp;lt;/center&amp;gt;\n&amp;lt;style type=\&quot;text/css\&quot;&amp;gt;\n#secdiv #new-gmail-hack {display: block !important;}\n#MessageWebViewDiv #new-gmail-hack {display: block !important;} (\nu + #new-gmail-hack {\ndisplay: block !important;\n}\n&amp;lt;/style&amp;gt;\n&amp;lt;section&amp;gt;\n&amp;lt;div id=\&quot;new-gmail-hack\&quot; style=\&quot;white-space: nowrap; font: 15px courier; line-height: 0; display: none;\&quot;&amp;gt;\n&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp;\n&amp;lt;/div&amp;gt;\n&amp;lt;/section&amp;gt;\n\n&amp;lt;/body&amp;gt;\n\n&amp;lt;/html&amp;gt;&quot;,&quot;template_text&quot;:&quot; \n{{email.preheader}}                                                                                                                     [1]View\n‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌‌ ‌ ‌ ‌ ‌‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌‌ ‌ ‌ ‌ ‌‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌‌ ‌ ‌ ‌ ‌‌ ‌ ‌ ‌ ‌      in\n                                                                                                                                        browser\n \n\n                                                {% set url = 'https://www.ciatelondon.com/' %}\n\n                                                                   [2][IMG]\n\n \n\n                                                                   [3][IMG]\n\n                                                                   [4][IMG]\n\n \n\n                                         [5]facebook [6]twitter [7]pinterest [8]youtube [9]instagram\n\n \n\n                                                                T&amp;amp;Cs; applies\n         We are contacting {{profile.email}} as you subscribed to the Ciaté London newsletter . Want to change how you receive these\n                                                                   emails?\n                                    You can [10]update your preferences or [11]unsubscribe from this list.\n\n \n\n                                        \n\nReferences\n\n   Visible links\n   2. {{url}}\n   3. {{url}}\n   4. {{url}}\n   5. https://www.facebook.com/ciatelondon/\n   6. https://twitter.com/ciatelondon/\n   7. https://uk.pinterest.com/ciatelondon/\n   8. https://www.youtube.com/user/NailsbyCiate/videos\n   9. https://www.instagram.com/ciatelondon/\n  10. {{prefs}}\n  11. {{unsub}}\n&quot;,&quot;data&quot;:{&quot;unsub&quot;:&quot;https://console.ometria.com/misc/unsubscribe.html&quot;,&quot;email&quot;:{&quot;campaign_identifier&quot;:&quot;123:ME:456_201907231411&quot;,&quot;campaign_title&quot;:&quot;campaign_title&quot;,&quot;to_email_address&quot;:&quot;example@example.com&quot;,&quot;subject&quot;:&quot;Check out this amazing email&quot;,&quot;archive_url&quot;:&quot;https://www.ometria.com/&quot;,&quot;preheader&quot;:&quot;Preheader goes here&quot;,&quot;account_hash&quot;:&quot;developer_testing&quot;},&quot;profile&quot;:{&quot;firstname&quot;:&quot;Bob&quot;,&quot;middlename&quot;:null,&quot;lastname&quot;:&quot;Jones&quot;,&quot;name&quot;:&quot;Bob Jones&quot;,&quot;email&quot;:&quot;example@example.com&quot;,&quot;gender&quot;:null,&quot;prefix&quot;:null,&quot;suffix&quot;:null,&quot;country&quot;:&quot;GB&quot;,&quot;date_of_birth&quot;:&quot;1980-01-01&quot;,&quot;total_revenue&quot;:0,&quot;marketing_optin&quot;:true,&quot;lifecycle_status&quot;:&quot;ACTIVE&quot;,&quot;number_of_orders&quot;:0,&quot;number_of_attempted_orders&quot;:0,&quot;number_of_visits&quot;:0,&quot;average_order_value&quot;:0,&quot;number_of_items_purchased&quot;:0,&quot;properties&quot;:{&quot;field_name_1&quot;:&quot;value_1&quot;,&quot;field_name_2&quot;:&quot;value_2&quot;,&quot;field_name_3&quot;:&quot;value_3&quot;},&quot;segment_ids&quot;:[],&quot;last_store&quot;:null,&quot;home_store&quot;:&quot;default&quot;},&quot;products&quot;:[{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£17&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Liquid Lipstick&quot;,&quot;vendor&quot;:&quot;Transforming Glitter Liquid Lipstick&quot;,&quot;tag&quot;:&quot;prodrec&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:17,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Glitter Flip&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=11223934868&quot;,&quot;id&quot;:&quot;11223934868&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FGLF014-Glitter-Flip-Scandal-Product-_-Pack.jpg%3Fv%3D1539767953&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£10&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Complexion&quot;,&quot;vendor&quot;:&quot;Hydrating Primer and Lip Oil Mini Duo&quot;,&quot;tag&quot;:&quot;watermelon&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:10,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Watermelon Burst Hydrating Primer &amp;amp; Lip Oil Duo&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=3577278431318&quot;,&quot;id&quot;:&quot;3577278431318&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FWMD001-Watermelon-Burst-Hydrating-Primer-_-Lip-Oil-Duo-Pack-and-Product.jpg%3Fv%3D1559295064&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£5.60&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Sale&quot;,&quot;vendor&quot;:&quot;2 Piece Mini Glitter Flip Set&quot;,&quot;tag&quot;:&quot;set&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:5.6,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Glitter Flip Duo - Infamous Holo &amp;amp; Candy&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=1389247823972&quot;,&quot;id&quot;:&quot;1389247823972&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FGFD001-Glitter-Flip-Duo-Pack.jpg%3Fv%3D1541612928&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£19.50&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Halloween Edit&quot;,&quot;vendor&quot;:&quot;Intensely volumising mascara&quot;,&quot;tag&quot;:&quot;prodrec&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:19.5,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Wonderwand Mascara&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=8532318215&quot;,&quot;id&quot;:&quot;8532318215&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FWWM001-Wonderwand-Mascara-Pack-and-Product.jpg%3Fv%3D1537268971&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£15&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Eyeliner&quot;,&quot;vendor&quot;:&quot;Gel-Kohl Eyeliner&quot;,&quot;tag&quot;:&quot;wonder&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:15,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Wonderwand Liner&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=8850186183&quot;,&quot;id&quot;:&quot;8850186183&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FWWL001-Wonderwand-Eyeliner-Black-Pack-and-Product-2.jpg%3Fv%3D1488368130&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£22&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Vegan Makeup&quot;,&quot;vendor&quot;:&quot;Metallic Glitter Eyeshadow&quot;,&quot;tag&quot;:&quot;prodrec&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:22,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Marbled Metals&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=3545188139094&quot;,&quot;id&quot;:&quot;3545188139094&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FEMM002-Marbled-Metals-Gilded-Pack-and-Product.jpg%3Fv%3D1560503237&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£28&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Face&quot;,&quot;vendor&quot;:&quot;Radiant Buildable Liquid Foundation&quot;,&quot;tag&quot;:&quot;prodrec&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:28,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Extraordinary Foundation&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=1947544059990&quot;,&quot;id&quot;:&quot;1947544059990&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FFDT-GIF2.gif%3Fv%3D1556262588&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£14.50&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Halloween Edit&quot;,&quot;vendor&quot;:&quot;Eyeshadow Palette&quot;,&quot;tag&quot;:&quot;Pretty Fun &amp;amp; Fearless Palettes&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:14.5,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;FUN Palette&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=6517056007&quot;,&quot;id&quot;:&quot;6517056007&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FESP002---PFF-Palette---Fun-Pack-and-Product-Open.jpg%3Fv%3D1488300653&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£14.50&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Sale&quot;,&quot;vendor&quot;:&quot;Eyeshadow Palette&quot;,&quot;tag&quot;:&quot;smoky&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:14.5,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;PRETTY Palette&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=6516676295&quot;,&quot;id&quot;:&quot;6516676295&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FESP001---PFF-Palettes---Pretty-Pack-and-Product-Open.jpg%3Fv%3D1488300539&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£12&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;GELOLOGY MENTION ME OFFER - DO NOT DELETE&quot;,&quot;vendor&quot;:&quot;Gelology&quot;,&quot;tag&quot;:&quot;prodrec&quot;,&quot;type&quot;:&quot;Nail Polish&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:12,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Gelology Top Coat&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=5973685767&quot;,&quot;id&quot;:&quot;5973685767&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FNT050-Gelology-Top-Coat.jpg%3Fv%3D1460040032&quot;,&quot;@type&quot;:&quot;product&quot;}]},&quot;emails&quot;:[&quot;sam@ometria.com&quot;],&quot;parent_template_instance_id&quot;:1035,&quot;template_instance_id&quot;:1516,&quot;variant_id&quot;:684}" />
          <outline text="Broken payload" _note="{&quot;id&quot;:677,&quot;template_html&quot;:&quot;&amp;lt;!DOCTYPE HTML PUBLIC \&quot;-//W3C//DTD HTML 4.01 Transitional//EN\&quot; \&quot;http://www.w3.org/TR/html4/loose.dtd\&quot;&amp;gt;\n&amp;lt;html lang=\&quot;en\&quot; xmlns=\&quot;http://www.w3.org/1999/xhtml\&quot; xmlns:v=\&quot;urn:schemas-microsoft-com:vml\&quot; xmlns:o=\&quot;urn:schemas-microsoft-com:office:office\&quot;&amp;gt;\n&amp;lt;head&amp;gt;\n  &amp;lt;meta http-equiv=\&quot;Content-Type\&quot; content=\&quot;text/html; charset=utf-8\&quot;&amp;gt;\n  &amp;lt;!--[if !mso]&amp;gt;&amp;lt;!--&amp;gt;\n  &amp;lt;meta http-equiv=\&quot;X-UA-Compatible\&quot; content=\&quot;IE=edge\&quot;&amp;gt;\n  &amp;lt;!--&amp;lt;![endif]--&amp;gt;\n  &amp;lt;!--[if gte mso 9]&amp;gt;&amp;lt;xml&amp;gt;\n  &amp;lt;o:OfficeDocumentSettings&amp;gt;\n    &amp;lt;o:AllowPNG/&amp;gt;\n    &amp;lt;o:PixelsPerInch&amp;gt;96&amp;lt;/o:PixelsPerInch&amp;gt;\n  &amp;lt;/o:OfficeDocumentSettings&amp;gt;\n  &amp;lt;/xml&amp;gt;&amp;lt;![endif]--&amp;gt;\n  &amp;lt;meta name=\&quot;viewport\&quot; content=\&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\&quot;&amp;gt;\n  &amp;lt;meta name=\&quot;apple-mobile-web-app-capable\&quot; content=\&quot;yes\&quot;&amp;gt;\n  &amp;lt;meta name=\&quot;apple-mobile-web-app-status-bar-style\&quot; content=\&quot;black\&quot;&amp;gt;\n  &amp;lt;meta name=\&quot;format-detection\&quot; content=\&quot;telephone=no\&quot;&amp;gt;\n  &amp;lt;meta name=\&quot;robots\&quot; content=\&quot;noindex, nofollow\&quot;&amp;gt;\n  &amp;lt;meta name=\&quot;x-apple-disable-message-reformatting\&quot;&amp;gt;\n  &amp;lt;link rel=\&quot;stylesheet\&quot; type=\&quot;text/css\&quot; href=\&quot;css/app.css\&quot;&amp;gt;\n\n  &amp;lt;title&amp;gt;Ciate London&amp;lt;/title&amp;gt;\n\n  &amp;lt;style type=\&quot;text/css\&quot;&amp;gt;\n    * {-webkit-text-size-adjust:100%; -ms-text-size-adjust:100%;}\n    html, body {Margin:0 !important; padding:0 !important; width:100% !important; min-width:100% !important; height:100% !important; }\n    #outlook a {padding:0 !important;}\n    img {outline:none !important; text-decoration:none !important; border:0 !important;}\n    a img {border:none !important; }\n    table {border-collapse:collapse; mso-table-lspace:0pt !important; mso-table-rspace:0pt !important; min-width:0 !important;border-spacing:0 !important; padding:0 !important;}\n    table th {border-collapse:collapse; mso-table-lspace:0pt !important; mso-table-rspace:0pt !important;font-size:14px;line-height: 18px;font-weight:normal; box-sizing:border-box;}\n    img{-ms-interpolation-mode:bicubic;}\n    .wrapper {width: 100% !important; table-layout: fixed !important;}\n\n    h1 {font-size: 26px;\n      line-height: 1.3;\n      font-family: 'CenturyGothic-Bold',Helvetica, Arial, sans-serif;\n      margin:0;\n      padding: 0;\n      letter-spacing: 6px;\n      text-transform: uppercase;\n      font-weight:bold;\n      \n    }\n\n    h2 {font-size: 18px;\n      line-height: 1.3;\n      font-family: 'CenturyGothic-Bold',Helvetica, Arial, sans-serif;\n      margin:0;\n      padding: 0;\n      text-transform: uppercase;\n      font-weight:bold;\n      \n    }\n   \n    h3 {font-size: 18px;\n      line-height: 1.3;\n      font-family: 'CenturyGothic',Helvetica, Arial, sans-serif;\n      margin:0;\n      padding: 0;\n      letter-spacing: 6px;\n      text-transform: uppercase;\n      font-weight:normal;\n      \n    }\n\n    h4 {font-size: 14px;\n      line-height: 1.2;\n      font-family: 'CenturyGothic',Helvetica, Arial, sans-serif;\n      margin:0;\n      padding: 0;\n      text-transform: uppercase;\n      font-weight:normal;\n      \n    }\n\n    h5 {font-size: 14px;\n      line-height: 1.2;\n      font-family: 'CenturyGothic-BoldItalic',Helvetica, Arial, sans-serif;\n      \n      margin:0;\n      padding: 0;\n      font-weight:bold;\n      font-style: italic;\n      \n\n    }\n\n    h6 {font-size: 14px;\n      line-height: 1.2;\n      font-family: 'CenturyGothic-Italic',Helvetica, Arial, sans-serif;\n      letter-spacing: 2px;\n      margin:0;\n      padding: 0;\n      font-weight:normal;\n      font-style:italic;\n      \n    }\n\n    p,\n    td,\n    th,\n    a {\n      color: #000001;\n      font-family: 'CenturyGothic',Helvetica, Arial, sans-serif;\n      font-weight: normal;\n      padding: 0;\n      margin: 0;\n      font-size:14px;\n      line-height: 1.3;\n       }\n    \n    p{\n      text-align:left;\n    }\n\n    td &amp;gt; a { font-family: 'CenturyGothic-Bold',Helvetica, Arial, sans-serif; }\n\n      #MessageViewBody a {\n    color: inherit;\n    text-decoration: none;\n    font-size: inherit;\n    font-family: inherit;\n    font-weight: inherit;\n    line-height: inherit;\n\n}\n\n#MessageViewBody, #MessageWebViewDiv{\n    width: 100% !important;\n}\n\n    /*Mobile*/\n    @media only screen and (max-width:639px) {\n      .fl{float:left !important;}\n      .fr{float:right !important;}\n      .fc{float:none !important; margin:0 auto!important;}\n      .wr{display:block !important;}\n      .wf{width:100% !important;max-width:100% !important;}\n      .hide{display:none !important;}\n      .show {\n        display:block !important;\n        margin:0 !important;\n        overflow:visible !important;\n        width:auto !important;\n        max-height:inherit !important;\n        font-size:inherit !important;\n        line-height:inherit !important\n      }\n      a[x-apple-data-detectors] {\n        color:inherit !important;\n        text-decoration:none !important;\n        font-size:inherit !important;\n        font-family:inherit !important;\n        font-weight:inherit !important;\n        line-height:inherit !important;\n      }\n      \n      .centermob {\n        margin:0 auto!important;\n        display:block;\n      }\n      .tc{\n        text-align:center!important;\n      }\n      \n      .w25 { \n        width:25%!important;max-width: 25% !important;height:auto !important;\n      }\n      \n      .w33 { \n        width:33%!important;max-width: 33% !important;height:auto !important;\n      }\n      \n      .w45 { \n        width:45%!important;max-width: 45% !important;height:auto !important;\n      }\n      \n      .w50 { \n        width:50%!important;max-width: 50% !important;height:auto !important;\n      }\n\n      .w70 { \n        width:70%!important;max-width: 70% !important;height:auto !important;\n      }\n      \n      .w90 {\n        width:90%!important;max-width: 90% !important;height:auto !important;\n      }\n      \n      .w95 { \n        width:95%!important;max-width: 95% !important;height:auto !important;\n      }\n      \n      .w98 { \n        width:98%!important;max-width: 98% !important;height:auto !important;\n      }\n\n      .btn_mobile{\n        padding-left:10px!important;\n        padding-right:10px!important;\n        box-sizing:border-box;\n      }\n      \n      .mobile-sidepadding{\n        padding-left:10px!important;\n        padding-right:10px!important;\n        box-sizing:border-box;\n      }\n      \n      .ptop10{\n        padding-top:10px!important;\n      }\n      .plr0{\n        padding-left:0px!important;\n        padding-right:0px!important;\n      }\n      .pbot0{\n        padding-bottom:0px!important;\n      }\n      \n      .pbot10{\n        padding-bottom:10px!important;\n      }\n\n      .small-font {font-size:10px !important;}\n\n      th.small-12 {\n    display: inline-block !important;\n    width: 100% !important;\n  }\n\n u + #body { width:100vw !important; } \n\n    }\n\n    \n\n  &amp;lt;/style&amp;gt;\n\n  \n\n&amp;lt;style&amp;gt;\n\n       @font-face {\n                font-family: 'CenturyGothic';\n                src: url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-115ce501a5.eot\&quot;);\n                src:url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-22f7f9b785.woff\&quot;) format(\&quot;woff\&quot;),\n                url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-5c66d498f5.ttf\&quot;) format(\&quot;truetype\&quot;)\n\n              \n            }\n\n      @font-face {\n                font-family: 'CenturyGothic-Bold';\n                src: url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Bold-a046bbf962.eot\&quot;);\n                src:url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Bold-c7a7298a69.woff\&quot;) format(\&quot;woff\&quot;),\n                url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Bold-e75f01ce02.ttf\&quot;) format(\&quot;truetype\&quot;)\n\n              \n            }\n\n      @font-face {\n                font-family: 'CenturyGothic-BoldItalic';\n                src: url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-BoldItalicC-b774754285.eot\&quot;);\n                src:url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-BoldItalic-896542c017.woff\&quot;) format(\&quot;woff\&quot;),\n                url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-BoldItalic-662044deb6.ttf\&quot;) format(\&quot;truetype\&quot;)\n\n              \n            }\n\n      @font-face {\n                font-family: 'CenturyGothic-Italic';\n                src: url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Italic-ca6d35c1b5.eot\&quot;);\n                src:url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Italic-9289799e44.woff\&quot;) format(\&quot;woff\&quot;),\n                url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Italic-098e8c70c1.ttf\&quot;) format(\&quot;truetype\&quot;)\n\n              \n            }\n&amp;lt;/style&amp;gt; \n&amp;lt;!--[if mso]&amp;gt;\n \n&amp;lt;style&amp;gt;\n    th, td, table, div, th a, td a, a, p {\n      font-family: Helvetica, Arial, sans-serif !important; mso-line-height-rule:exactly;]\n\n    h1, h2 {font-weight:bold !important; mso-line-height-rule:exactly;}\n\n    h6 {font-style:italic !important; mso-line-height-rule:exactly;}\n\n    th &amp;gt; a {font-weight:bold !important;}\n\n    p {\n    display: block;\n    margin-block-start: 0px;\n    margin-block-end: 0px;\n    margin-inline-start: 0px;\n    margin-inline-end: 0px;\n}\n\n    \n&amp;lt;/style&amp;gt;\n \n&amp;lt;![endif]--&amp;gt;\n  \n&amp;lt;/head&amp;gt;\n\n&amp;lt;body id=\&quot;body\&quot; class=\&quot;body\&quot; style=\&quot;Margin:0 auto;padding-bottom:10px;padding-right:0;padding-left:0;min-width:100%;background-color:#ffffff;\&quot;&amp;gt;\n&amp;lt;center class=\&quot;wrapper\&quot; style=\&quot;width:100%;table-layout:fixed;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;\&quot;&amp;gt;\n&amp;lt;table width=\&quot;600\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; bgcolor=\&quot;#ffffff\&quot; style=\&quot;max-width:600px; table-layout: fixed;width:100% !important\&quot;&amp;gt;\n&amp;lt;tbody&amp;gt;\n    &amp;lt;tr align=\&quot;center\&quot;&amp;gt;\n        &amp;lt;th valign=\&quot;top\&quot; align=\&quot;center\&quot; style=\&quot;font-family: 'CenturyGothic',Helvetica, Arial, sans-serif;\&quot;&amp;gt;\n&amp;lt;!-- Emailcontent --&amp;gt;\n\n          &amp;lt;table class=\&quot;w95\&quot; width=\&quot;95%\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; align=\&quot;center\&quot; role=\&quot;presentation\&quot; style=\&quot;width:95%;\&quot;&amp;gt;\n            &amp;lt;tr style=\&quot;text-align: center\&quot;&amp;gt;\n              &amp;lt;td height=\&quot;10\&quot; style=\&quot;font-size: 10px; line-height: 10px; text-align: center\&quot;&amp;gt;&amp;amp;#xA0;&amp;lt;/td&amp;gt;\n            &amp;lt;/tr&amp;gt;\n            &amp;lt;tr align=\&quot;center\&quot;&amp;gt;\n              &amp;lt;th align=\&quot;left\&quot; style=\&quot;font-size: 11px; color:#333333; line-height: 15px; mso-line-height-rule: exactly;\&quot;&amp;gt;\n                {{email.preheader}} &amp;lt;span style=\&quot;display: none; max-height:0px;overflow:hidden;\&quot;&amp;gt;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;lt;/span&amp;gt;\n              &amp;lt;/th&amp;gt;\n              &amp;lt;th align=\&quot;right\&quot; style=\&quot;font-size: 11px; color:#333333; line-height: 15px; mso-line-height-rule:exactly;\&quot;&amp;gt;\n                &amp;lt;a href=\&quot;{{email.archive_url}}\&quot; style=\&quot;font-size: 11px; color:#333333;text-decoration: underline\&quot; om:linkid=\&quot;-1:0\&quot;&amp;gt;View in browser&amp;lt;/a&amp;gt; \n              &amp;lt;/th&amp;gt;\n            &amp;lt;/tr&amp;gt;\n            &amp;lt;tr style=\&quot;text-align: center\&quot;&amp;gt;\n              &amp;lt;td height=\&quot;10\&quot; style=\&quot;font-size: 10px; line-height: 10px; text-align: center\&quot;&amp;gt;&amp;amp;#xA0;&amp;lt;/td&amp;gt;\n            &amp;lt;/tr&amp;gt;\n          &amp;lt;/table&amp;gt; \n\n          &amp;lt;span align=\&quot;center\&quot; style=\&quot;color: #ffffff; display: none !important; font-size: 1px; line-height: 1px; max-height: 0px; max-width: 0px; mso-hide: all !important; opacity: 0; overflow: hidden; visibility: hidden\&quot;&amp;gt; {% set url = 'https://www.ciatelondon.com/' %}&amp;lt;/span&amp;gt;\n\n          &amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n            &amp;lt;tr&amp;gt;\n              &amp;lt;th align=\&quot;center\&quot; style=\&quot;font-size:0; line-height:0;\&quot;&amp;gt;\n                &amp;lt;a href=\&quot;{{url}}\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;logo\&quot; style=\&quot;display:block\&quot; om:vid=\&quot;0\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:1\&quot;&amp;gt;\n                  &amp;lt;img src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/CiateLogo-2a964c6a1c.png\&quot; style=\&quot;display: block; max-width:270px;width:270px;height:auto; margin:0 auto;\&quot; border=\&quot;0\&quot; width=\&quot;270\&quot; height=\&quot;auto\&quot; om:label=\&quot;undefined\&quot;&amp;gt;\n                &amp;lt;/a&amp;gt;\n              &amp;lt;/th&amp;gt;\n            &amp;lt;/tr&amp;gt;\n          &amp;lt;/table&amp;gt;\n\n          &amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n          &amp;lt;tr style=\&quot;text-align: center\&quot;&amp;gt;\n              &amp;lt;td height=\&quot;20\&quot; style=\&quot;font-size: 20px; line-height: 20px; text-align: center\&quot;&amp;gt;&amp;amp;#xA0;&amp;lt;/td&amp;gt;\n            &amp;lt;/tr&amp;gt;\n          &amp;lt;/table&amp;gt; \n\n          &amp;lt;div om:blocks=\&quot;true\&quot;&amp;gt;&amp;lt;table class=\&quot;wf\&quot; om:block=\&quot;Image block\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n  &amp;lt;tr&amp;gt;\n    &amp;lt;th align=\&quot;center\&quot; valign=\&quot;top\&quot;&amp;gt;\n       &amp;lt;table class=\&quot;wf\&quot; cellspacing=\&quot;0\&quot; cellpadding=\&quot;0\&quot; align=\&quot;center\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n        &amp;lt;tr align=\&quot;center\&quot;&amp;gt;\n          &amp;lt;th align=\&quot;center\&quot; style=\&quot;font-size:16px; line-height:16px;\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;{{url}}\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;hero\&quot; style=\&quot;display:block\&quot; om:vid=\&quot;8\&quot; om:linkid=\&quot;0:0\&quot;&amp;gt;\n              &amp;lt;img class=\&quot;wf\&quot; src=\&quot;https://cdn-ometria-com.s3-eu-west-1.amazonaws.com/emails/2d210b975eec006e/3291ee8185f294e6212e47675f91a002.gif\&quot; border=\&quot;0\&quot; width=\&quot;600\&quot; height=\&quot;712\&quot; style=\&quot;display: block; border: 0; max-width:100%; height:auto\&quot;&amp;gt;\n            &amp;lt;/a&amp;gt;\n          &amp;lt;/th&amp;gt;\n        &amp;lt;/tr&amp;gt;\n      &amp;lt;/table&amp;gt;\n    &amp;lt;/th&amp;gt;\n  &amp;lt;/tr&amp;gt;\n&amp;lt;/table&amp;gt;&amp;lt;table class=\&quot;wf\&quot; om:block=\&quot;Image block\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n  &amp;lt;tr&amp;gt;\n    &amp;lt;th align=\&quot;center\&quot; valign=\&quot;top\&quot;&amp;gt;\n       &amp;lt;table class=\&quot;wf\&quot; cellspacing=\&quot;0\&quot; cellpadding=\&quot;0\&quot; align=\&quot;center\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n        &amp;lt;tr align=\&quot;center\&quot;&amp;gt;\n          &amp;lt;th align=\&quot;center\&quot; style=\&quot;font-size:16px; line-height:16px;\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;{{url}}\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;hero\&quot; style=\&quot;display:block\&quot; om:vid=\&quot;9\&quot; om:linkid=\&quot;1:0\&quot;&amp;gt;\n              &amp;lt;img class=\&quot;wf\&quot; src=\&quot;https://dummyimage.com/600x300/eeeeee/000\&quot; border=\&quot;0\&quot; width=\&quot;600\&quot; height=\&quot;auto\&quot; style=\&quot;display: block; border: 0; max-width:100%; height:auto\&quot;&amp;gt;\n            &amp;lt;/a&amp;gt;\n          &amp;lt;/th&amp;gt;\n        &amp;lt;/tr&amp;gt;\n      &amp;lt;/table&amp;gt;\n    &amp;lt;/th&amp;gt;\n  &amp;lt;/tr&amp;gt;\n&amp;lt;/table&amp;gt;&amp;lt;/div&amp;gt;\n\n          &amp;lt;!-- Blocks start --&amp;gt;\n\n&amp;lt;!-- Blocks end --&amp;gt;\n\n&amp;lt;!-- Footer --&amp;gt;\n\n&amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%;\&quot;&amp;gt;\n  &amp;lt;tr&amp;gt;\n    &amp;lt;td height=\&quot;12\&quot; style=\&quot;font-size: 12px; line-height: 12px; mso-line-height-rule: exactly;\&quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/td&amp;gt;\n  &amp;lt;/tr&amp;gt;\n&amp;lt;/table&amp;gt;\n\n&amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;600\&quot; role=\&quot;presentation\&quot; style=\&quot;width:600px;\&quot;&amp;gt;\n  &amp;lt;tr&amp;gt;\n\n    &amp;lt;th align=\&quot;center\&quot;&amp;gt;\n      &amp;lt;table align=\&quot;center\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; width=\&quot;200\&quot; border=\&quot;0\&quot; role=\&quot;presentation\&quot;&amp;gt;\n      &amp;lt;tr align=\&quot;center\&quot;&amp;gt;\n         &amp;lt;th style=\&quot;text-align:center;width:20%;max-width: 20%;height:45px\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;https://www.facebook.com/ciatelondon/\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;social1\&quot; om:vid=\&quot;1\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:2\&quot;&amp;gt;&amp;lt;img class=\&quot;centermob\&quot; src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/facebookicon-black-f01d20283a.png\&quot; alt=\&quot;facebook\&quot; style=\&quot;display: block; border: 0; font-size:16px; line-height:16px;width:20px; height:20px;max-width:20px\&quot; border=\&quot;0\&quot; width=\&quot;20\&quot; height=\&quot;20\&quot; om:label=\&quot;undefined\&quot;&amp;gt;&amp;lt;/a&amp;gt;\n        &amp;lt;/th&amp;gt;\n        &amp;lt;th style=\&quot;text-align:center; width:20%;max-width: 20%;height:45px\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;https://twitter.com/ciatelondon/\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;social2\&quot; om:vid=\&quot;2\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:3\&quot;&amp;gt;&amp;lt;img class=\&quot;centermob\&quot; src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/twittericon-black-592dd3c23d.png\&quot; alt=\&quot;twitter\&quot; style=\&quot;display: block; border: 0; font-size:16px; line-height:16px;width:20px; height:20px;max-width:20px\&quot; border=\&quot;0\&quot; width=\&quot;20\&quot; height=\&quot;20\&quot; om:label=\&quot;undefined\&quot;&amp;gt;&amp;lt;/a&amp;gt;\n        &amp;lt;/th&amp;gt;\n        &amp;lt;th style=\&quot;text-align:center; width:20%;max-width: 20%;height:45px\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;https://uk.pinterest.com/ciatelondon/\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;social3\&quot; om:vid=\&quot;3\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:4\&quot;&amp;gt;&amp;lt;img class=\&quot;centermob\&quot; src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/pinteresticon-black-5c00265b1a.png\&quot; alt=\&quot;pinterest\&quot; style=\&quot;display: block; border: 0; font-size:16px; line-height:16px;width:20px; height:20px;max-width:20px\&quot; border=\&quot;0\&quot; width=\&quot;20\&quot; height=\&quot;20\&quot; om:label=\&quot;undefined\&quot;&amp;gt;&amp;lt;/a&amp;gt;\n        &amp;lt;/th&amp;gt;\n        &amp;lt;th style=\&quot;text-align:center;width:20%;max-width: 20%;height:45px\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;https://www.youtube.com/user/NailsbyCiate/videos\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;social4\&quot; om:vid=\&quot;4\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:5\&quot;&amp;gt;&amp;lt;img class=\&quot;centermob\&quot; src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/youtubeicon-black-5e53e01a2b.png\&quot; alt=\&quot;youtube\&quot; style=\&quot;display: block; border: 0; font-size:16px; line-height:16px;width:20px; height:20px;max-width:20px\&quot; border=\&quot;0\&quot; width=\&quot;20\&quot; height=\&quot;20\&quot; om:label=\&quot;undefined\&quot;&amp;gt;&amp;lt;/a&amp;gt;\n        &amp;lt;/th&amp;gt;\n        &amp;lt;th style=\&quot;text-align:center;width:20%;max-width: 20%;height:45px\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;https://www.instagram.com/ciatelondon/\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;social5\&quot; om:vid=\&quot;5\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:6\&quot;&amp;gt;&amp;lt;img class=\&quot;centermob\&quot; src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/instagramicon-black-2bf0d84ae1.png\&quot; alt=\&quot;instagram\&quot; style=\&quot;display: block; border: 0; font-size:16px; line-height:16px;width:20px; height:20px;max-width:20px\&quot; border=\&quot;0\&quot; width=\&quot;20\&quot; height=\&quot;20\&quot; om:label=\&quot;undefined\&quot;&amp;gt;&amp;lt;/a&amp;gt;\n        &amp;lt;/th&amp;gt;\n      &amp;lt;/tr&amp;gt;\n    &amp;lt;/table&amp;gt;\n\n        \n    &amp;lt;/th&amp;gt;\n  &amp;lt;/tr&amp;gt;\n&amp;lt;/table&amp;gt;\n\n    &amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;  \n      &amp;lt;tr&amp;gt;\n        &amp;lt;td height=\&quot;22\&quot; style=\&quot;font-size: 22px; line-height: 22px; mso-line-height-rule: exactly;\&quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/td&amp;gt;\n      &amp;lt;/tr&amp;gt;\n    &amp;lt;/table&amp;gt;\n\n&amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%;\&quot;&amp;gt;\n    &amp;lt;tr&amp;gt;\n    &amp;lt;th align=\&quot;center\&quot;&amp;gt;\n        &amp;lt;table class=\&quot;w95\&quot; width=\&quot;90%\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; align=\&quot;center\&quot;&amp;gt;\n          &amp;lt;tr om:editable=\&quot;html\&quot; om:id=\&quot;tandc\&quot; om:vid=\&quot;6\&quot;&amp;gt;&amp;lt;th align=\&quot;center\&quot; style=\&quot;font-size: 12px; color:#001; line-height: 22px; mso-line-height-rule: exactly;padding-top:10px;padding-bottom:10px;\&quot;&amp;gt;\n            \n              T&amp;amp;Cs; applies &amp;lt;br&amp;gt;\n            \n            &amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;\n          &amp;lt;tr om:editable=\&quot;html\&quot; om:id=\&quot;footer-copy\&quot; om:vid=\&quot;7\&quot;&amp;gt;&amp;lt;th align=\&quot;center\&quot; style=\&quot;font-size: 12px; color:#001; line-height: 22px; mso-line-height-rule: exactly;padding-top:10px;padding-bottom:10px;font-style: italic\&quot;&amp;gt;\n              We are contacting {{profile.email}} as you subscribed to the Ciaté London newsletter .\n              \n              Want to change how you receive these emails? &amp;lt;br&amp;gt;\n              You can &amp;lt;a href=\&quot;{{prefs}}\&quot; target=\&quot;_blank\&quot; style=\&quot;font-size: 12px; color:#001; line-height: 22px; mso-line-height-rule: exactly;font-style: italic\&quot; om:linkid=\&quot;-1:0\&quot;&amp;gt;update your preferences&amp;lt;/a&amp;gt; or\n              &amp;lt;a href=\&quot;{{unsub}}\&quot; target=\&quot;_blank\&quot; style=\&quot;font-size: 12px; color:#001; line-height: 22px; mso-line-height-rule: exactly;font-style: italic\&quot; om:linkid=\&quot;-1:1\&quot;&amp;gt;unsubscribe from this list&amp;lt;/a&amp;gt;. &amp;lt;br&amp;gt;\n            \n            &amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;\n        &amp;lt;/table&amp;gt;\n      &amp;lt;/th&amp;gt;\n    &amp;lt;/tr&amp;gt;\n&amp;lt;/table&amp;gt;\n    &amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;  \n      &amp;lt;tr&amp;gt;\n        &amp;lt;td height=\&quot;12\&quot; style=\&quot;font-size: 12px; line-height: 12px; mso-line-height-rule: exactly;\&quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/td&amp;gt;\n      &amp;lt;/tr&amp;gt;\n    &amp;lt;/table&amp;gt;\n\n&amp;lt;!-- /Emailcontent --&amp;gt;\n&amp;lt;/th&amp;gt;\n&amp;lt;/tr&amp;gt;\n&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;\n&amp;lt;/center&amp;gt;\n&amp;lt;style type=\&quot;text/css\&quot;&amp;gt;\n#secdiv #new-gmail-hack {display: block !important;}\n#MessageWebViewDiv #new-gmail-hack {display: block !important;} (\nu + #new-gmail-hack {\ndisplay: block !important;\n}\n&amp;lt;/style&amp;gt;\n&amp;lt;section&amp;gt;\n&amp;lt;div id=\&quot;new-gmail-hack\&quot; style=\&quot;white-space: nowrap; font: 15px courier; line-height: 0; display: none;\&quot;&amp;gt;\n&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp;\n&amp;lt;/div&amp;gt;\n&amp;lt;/section&amp;gt;\n\n&amp;lt;/body&amp;gt;\n\n&amp;lt;/html&amp;gt;&quot;,&quot;template_text&quot;:null,&quot;data&quot;:{&quot;unsub&quot;:&quot;https://console.ometria.com/misc/unsubscribe.html&quot;,&quot;email&quot;:{&quot;campaign_identifier&quot;:&quot;123:ME:456_201907231411&quot;,&quot;campaign_title&quot;:&quot;campaign_title&quot;,&quot;to_email_address&quot;:&quot;example@example.com&quot;,&quot;subject&quot;:&quot;Check out this amazing email&quot;,&quot;archive_url&quot;:&quot;https://www.ometria.com/&quot;,&quot;preheader&quot;:&quot;Preheader goes here&quot;,&quot;account_hash&quot;:&quot;developer_testing&quot;},&quot;profile&quot;:{&quot;firstname&quot;:&quot;Bob&quot;,&quot;middlename&quot;:null,&quot;lastname&quot;:&quot;Jones&quot;,&quot;name&quot;:&quot;Bob Jones&quot;,&quot;email&quot;:&quot;example@example.com&quot;,&quot;gender&quot;:null,&quot;prefix&quot;:null,&quot;suffix&quot;:null,&quot;country&quot;:&quot;GB&quot;,&quot;date_of_birth&quot;:&quot;1980-01-01&quot;,&quot;total_revenue&quot;:0,&quot;marketing_optin&quot;:true,&quot;lifecycle_status&quot;:&quot;ACTIVE&quot;,&quot;number_of_orders&quot;:0,&quot;number_of_attempted_orders&quot;:0,&quot;number_of_visits&quot;:0,&quot;average_order_value&quot;:0,&quot;number_of_items_purchased&quot;:0,&quot;properties&quot;:{&quot;field_name_1&quot;:&quot;value_1&quot;,&quot;field_name_2&quot;:&quot;value_2&quot;,&quot;field_name_3&quot;:&quot;value_3&quot;},&quot;segment_ids&quot;:[],&quot;last_store&quot;:null,&quot;home_store&quot;:&quot;default&quot;},&quot;products&quot;:[{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£17&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Liquid Lipstick&quot;,&quot;vendor&quot;:&quot;Transforming Glitter Liquid Lipstick&quot;,&quot;tag&quot;:&quot;prodrec&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:17,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Glitter Flip&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=11223934868&quot;,&quot;id&quot;:&quot;11223934868&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FGLF014-Glitter-Flip-Scandal-Product-_-Pack.jpg%3Fv%3D1539767953&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£10&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Complexion&quot;,&quot;vendor&quot;:&quot;Hydrating Primer and Lip Oil Mini Duo&quot;,&quot;tag&quot;:&quot;watermelon&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:10,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Watermelon Burst Hydrating Primer &amp;amp; Lip Oil Duo&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=3577278431318&quot;,&quot;id&quot;:&quot;3577278431318&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FWMD001-Watermelon-Burst-Hydrating-Primer-_-Lip-Oil-Duo-Pack-and-Product.jpg%3Fv%3D1559295064&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£5.60&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Sale&quot;,&quot;vendor&quot;:&quot;2 Piece Mini Glitter Flip Set&quot;,&quot;tag&quot;:&quot;set&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:5.6,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Glitter Flip Duo - Infamous Holo &amp;amp; Candy&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=1389247823972&quot;,&quot;id&quot;:&quot;1389247823972&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FGFD001-Glitter-Flip-Duo-Pack.jpg%3Fv%3D1541612928&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£19.50&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Halloween Edit&quot;,&quot;vendor&quot;:&quot;Intensely volumising mascara&quot;,&quot;tag&quot;:&quot;prodrec&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:19.5,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Wonderwand Mascara&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=8532318215&quot;,&quot;id&quot;:&quot;8532318215&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FWWM001-Wonderwand-Mascara-Pack-and-Product.jpg%3Fv%3D1537268971&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£15&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Eyeliner&quot;,&quot;vendor&quot;:&quot;Gel-Kohl Eyeliner&quot;,&quot;tag&quot;:&quot;wonder&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:15,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Wonderwand Liner&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=8850186183&quot;,&quot;id&quot;:&quot;8850186183&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FWWL001-Wonderwand-Eyeliner-Black-Pack-and-Product-2.jpg%3Fv%3D1488368130&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£22&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Vegan Makeup&quot;,&quot;vendor&quot;:&quot;Metallic Glitter Eyeshadow&quot;,&quot;tag&quot;:&quot;prodrec&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:22,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Marbled Metals&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=3545188139094&quot;,&quot;id&quot;:&quot;3545188139094&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FEMM002-Marbled-Metals-Gilded-Pack-and-Product.jpg%3Fv%3D1560503237&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£28&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Face&quot;,&quot;vendor&quot;:&quot;Radiant Buildable Liquid Foundation&quot;,&quot;tag&quot;:&quot;prodrec&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:28,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Extraordinary Foundation&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=1947544059990&quot;,&quot;id&quot;:&quot;1947544059990&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FFDT-GIF2.gif%3Fv%3D1556262588&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£14.50&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Halloween Edit&quot;,&quot;vendor&quot;:&quot;Eyeshadow Palette&quot;,&quot;tag&quot;:&quot;Pretty Fun &amp;amp; Fearless Palettes&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:14.5,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;FUN Palette&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=6517056007&quot;,&quot;id&quot;:&quot;6517056007&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FESP002---PFF-Palette---Fun-Pack-and-Product-Open.jpg%3Fv%3D1488300653&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£14.50&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Sale&quot;,&quot;vendor&quot;:&quot;Eyeshadow Palette&quot;,&quot;tag&quot;:&quot;smoky&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:14.5,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;PRETTY Palette&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=6516676295&quot;,&quot;id&quot;:&quot;6516676295&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FESP001---PFF-Palettes---Pretty-Pack-and-Product-Open.jpg%3Fv%3D1488300539&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£12&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;GELOLOGY MENTION ME OFFER - DO NOT DELETE&quot;,&quot;vendor&quot;:&quot;Gelology&quot;,&quot;tag&quot;:&quot;prodrec&quot;,&quot;type&quot;:&quot;Nail Polish&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:12,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Gelology Top Coat&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=5973685767&quot;,&quot;id&quot;:&quot;5973685767&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FNT050-Gelology-Top-Coat.jpg%3Fv%3D1460040032&quot;,&quot;@type&quot;:&quot;product&quot;}]},&quot;emails&quot;:[&quot;sam@ometria.com&quot;],&quot;parent_template_instance_id&quot;:1035,&quot;template_instance_id&quot;:1525,&quot;variant_id&quot;:684}" />
        </outline>
        <outline text="Send campaign table late batch incident report to Al" _note="https://docs.google.com/document/d/173ydovu0WvYVfFZIOigGrMzs3iiOAIc539gRytB-XdE/edit#" />
        <outline text="Tests to add (edge cases)">
          <outline text="Suppression filters" />
          <outline text="Suppression list_id" />
          <outline text="Suppression filter and list_id" />
          <outline text="OR filters" />
          <outline text="Incomplete winner test data" />
        </outline>
        <outline text="Communicate to clients (caveats)">
          <outline text="Perfect random splits are now not enforced" />
          <outline text="Nested random splits are not supported" />
        </outline>
        <outline _complete="true" text="Confirm function of winner campaigns with additional batch config (i.e. overtime batches)" />
        <outline _complete="true" text="Investigate campaign template_preview (for campaign preview)">
          <outline text="template_preview is not on campaign but is in variants list" />
        </outline>
        <outline text="Move segmentation tree gen into separate lib" />
        <outline text="ProdEng social" />
        <outline _complete="true" text="Lunch and learn presentation">
          <outline _complete="true" text="What it is for">
            <outline text="Why do even need it? (from a developers perspective)" />
            <outline text="Old broadcast UI">
              <outline text="Campaign-wide segmentation" />
              <outline text="Single path through" />
              <outline text="“Variants” subsets of campaign segmentation (split tests)" />
            </outline>
            <outline text="New broadcast UI">
              <outline text="Variant level segmentation, inheriting from the parent" />
              <outline text="Many paths through" />
              <outline text="“Variants” are now “campaigns” in themselves" />
            </outline>
          </outline>
          <outline _complete="true" text="How we build the tree">
            <outline _complete="true" text="Some examples...">
              <outline text="*show example of tree">
                <outline text="No tree" />
                <outline text="Simple tree" />
                <outline text="Complex/devanka tree" />
              </outline>
            </outline>
            <outline _complete="true" text="This is a block, this is a block_item (etc)">
              <outline text="*show block and block_item on UI" />
            </outline>
            <outline _complete="true" text="An example payload...">
              <outline text="*show how these roughly map in the json" />
            </outline>
            <outline _complete="true" text="We receive this payload" />
            <outline _complete="true" text="Transform the &quot;recipients&quot; object into the &quot;initial&quot; node, and pass the dict to the MassCampaignTree">
              <outline text="*show __init__ function that passes dict to initial node and calls recursive function" />
            </outline>
            <outline _complete="true" text="Query data is stored on each node as they're generated" />
            <outline _complete="true" text="We use this data to do one of two things">
              <outline text="Segmentation">
                <outline text="generate a query (using the get_customer_query function) from which we can extract the sqla BinaryExpression type query predicates using the handle `get_table_constraint()` method, and store them on the node.">
                  <outline text="In the form `{column} {operator} {some_value}`">
                    <outline text="`customer.gender = 'm'" />
                  </outline>
                  <outline text="Suppression constraints only apply to &quot;initial&quot; node" />
                  <outline text="These are ultimately wrapped with a `not_(and_(constraint))` and returned within the set of constraints from the node" />
                </outline>
              </outline>
              <outline text="Random">
                <outline text="generate a simple predicate in the form `random {operator} {split_percentage}`" />
                <outline text="I'll come to random shortly..." />
              </outline>
            </outline>
          </outline>
          <outline _complete="true" text="Generating the (single scan*) query">
            <outline _complete="true" text="We traverse the tree, and collect predicates, each labelled with the node identifiers, and store these in a list">
              <outline text="`{column} {operator} {value} AS {block_id}_{block_item_id}`" />
              <outline text="`{column} {operator} {value} AS {sibling_group_id}_{node_id}`" />
              <outline text="`customer.gender = 'm' AS 2_1`" />
              <outline text="*show traversal code line 310" />
            </outline>
            <outline _complete="true" text="Is there a random sibling group / block?">
              <outline text="Then we use an inner subquery with a random" />
              <outline text="Consistency in random() within a row, important for random based case statements">
                <outline text="Hence reference to `random` previously" />
              </outline>
              <outline text="Otherwise we just select from customers" />
            </outline>
            <outline _complete="true" text="We then generate the &quot;main&quot; subquery">
              <outline text="*show generation line 330 (maybe include FROM above)" />
            </outline>
            <outline _complete="true" text="Now to attribute the nodes (get your concentration caps)...">
              <outline text="Each node has a boolean output" />
              <outline text="Walk the path from the leaf to the root, storing (node_identifier, boolean) in a list as we go">
                <outline text="Start at the leaf node / variant (true)" />
                <outline text="Look to older siblings (false)" />
                <outline text="If no older siblings, look to parents (true)" />
                <outline text="Initial is always true, obv" />
              </outline>
              <outline text="Flip it" />
              <outline text="For each item in this list, take the column name (previously generated node_identifier labels) and set to either">
                <outline text="predicate = column.is_(True)" />
                <outline text="predicate = column.is_distinct_from(True)" />
                <outline text="Add each new predicate to a list" />
              </outline>
              <outline text="Now take this list, and generate a case statement with all of the node boolean outputs, from root down">
                <outline text="`case_conditions.append((and_(*conditions), str(path[-1][0])))`" />
                <outline text="The string output is the leaf node of that path" />
              </outline>
              <outline text="This is applied to every customer_id row, et voila!" />
            </outline>
          </outline>
          <outline _complete="true" text="How this is used (UI and mass_email), API for both">
            <outline text="Either group_by node or return all with customer_id" />
          </outline>
          <outline text="Why this is still not optimal 🙈">
            <outline text="Some filters join on other tables">
              <outline text="Customer engagement" />
              <outline text="Automation campaigns" />
              <outline text="Orders" />
              <outline text="Etc..?" />
            </outline>
            <outline text="LISTS (omg lists)">
              <outline text="Opened up early release. One of the first campaigns Lovehoney generated was...">
                <outline text="*insert screenshot" />
              </outline>
              <outline text="*Show example of generated SQL" />
            </outline>
            <outline text="Optimisations?">
              <outline text="Separate segmentation model for lists?" />
              <outline text="Data-warehouse / column based models? Snowflake? Enter Al?" />
            </outline>
            <outline text="Lovehoney SQL">
              <outline text="Campaign" _note="https://app.ometria.com/app/68c34c0886c2056e/broadcast-new/7514/segmentation" />
              <outline text="query" _note="SELECT &#10;  CASE WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;1_2&quot; IS true&#10;  ) THEN '1_2'&#10;  WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;1_2&quot; IS DISTINCT FROM true &#10;    AND segment_combinations.&quot;1_4&quot; IS true&#10;  ) THEN '1_4'&#10;  WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;1_2&quot; IS DISTINCT FROM true &#10;    AND segment_combinations.&quot;1_4&quot; IS DISTINCT FROM true &#10;    AND segment_combinations.&quot;1_5&quot; IS true&#10;  ) THEN '1_5' END AS node_str, &#10;  count(segment_combinations.id) AS n_customers &#10;FROM &#10;  (&#10;    SELECT &#10;      customers.id AS id, &#10;      account_id = 505 &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            customers_health_dimensions &#10;          WHERE &#10;            customers_health_dimensions.customer_id = id &#10;            AND customers_health_dimensions.engagement = : engagement_1&#10;        )&#10;      ) &#10;      AND email IS NOT NULL &#10;      AND is_email_valid IS NOT false &#10;      AND optin IS true &#10;      AND NOT (&#10;        account_id = 505 &#10;        AND (&#10;          (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(: any_1)&#10;            )&#10;          ) &#10;          OR (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(: any_2)&#10;            )&#10;          )&#10;        )&#10;      ) AS root, &#10;      account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(: any_3)&#10;        )&#10;      ) &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(: any_4)&#10;        )&#10;      ) &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            events &#10;          WHERE &#10;            events.customer_id = id &#10;            AND events.account_id = 505 &#10;            AND events.event_type = : event_type_1 &#10;            AND (&#10;              events.attribute_ids &amp;amp;&amp;amp; : attribute_ids_1&#10;            ) IS NOT true &#10;            AND events.order_is_valid = true&#10;        )&#10;      ) AS &quot;1_2&quot;, &#10;      account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(: any_5)&#10;        )&#10;      ) &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            events &#10;          WHERE &#10;            events.customer_id = id &#10;            AND events.account_id = 505 &#10;            AND events.event_type = : event_type_2 &#10;            AND (&#10;              events.attribute_ids &amp;amp;&amp;amp; : attribute_ids_2&#10;            ) IS NOT true &#10;            AND events.order_is_valid = true&#10;        )&#10;      ) AS &quot;1_4&quot;, &#10;      account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(: any_6)&#10;        )&#10;      ) &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(: any_7)&#10;        )&#10;      ) &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(: any_8)&#10;        )&#10;      ) &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            events &#10;          WHERE &#10;            events.customer_id = id &#10;            AND events.account_id = 505 &#10;            AND events.event_type = : event_type_3 &#10;            AND (&#10;              events.attribute_ids &amp;amp;&amp;amp; : attribute_ids_3&#10;            ) IS NOT true &#10;            AND events.order_is_valid = true&#10;        )&#10;      ) AS &quot;1_5&quot; &#10;    FROM &#10;      customers&#10;  ) AS segment_combinations &#10;GROUP BY &#10;  node_str&#10;" />
            </outline>
          </outline>
        </outline>
      </outline>
      <outline _complete="true" text="#wc2019-07-22::work">
        <outline _complete="true" text="Two winners in single campaign">
          <outline text="Batch processor result query" _note="SELECT&#10;    b.mass_campaign_variant_id variant_id,&#10;    sum(CASE WHEN ct.is_opened THEN 1 ELSE 0 END) counted,&#10;    greatest(sum(CASE WHEN ct.is_delivered THEN 1 ELSE 0 END), 1) total,&#10;    (sum(CASE WHEN ct.is_opened THEN 1 ELSE 0 END)::float) / greatest(sum(CASE WHEN ct.is_delivered THEN 1 ELSE 0 END), 1) score&#10;FROM campaigns.mass_352_2258 ct&#10;JOIN campaigns.mass_campaign_batch b ON b.id = ct.batch_id&#10;WHERE b.account_id = 352&#10;AND b.id != 3267&#10;AND ct.segmentation_block_id = 3&#10;GROUP BY b.mass_campaign_variant_id&#10;ORDER BY 4" />
        </outline>
        <outline _complete="true" text="#om-interview Mezbaur Rahman (devops)">
          <outline text="Very hard to hear!!!" />
          <outline text="His overview">
            <outline text="Gave a fairly generic overview of his company's tech. Couldn't really hear well enough to direct" />
            <outline text="Unfair to look at negatively" />
            <outline text="Jenkins and terraform" />
            <outline text="Monitoring platform" />
          </outline>
          <outline text="Technical questions">
            <outline text="Monitoring">
              <outline text="Regular API">
                <outline text="Is port open?" />
                <outline text="Need status page" />
                <outline text="Status codes" />
                <outline text="Healthcheck" />
                <outline text="Talking about testing with postman, off on a tangent!" />
                <outline text="Bruno pointed out latency, error rates etc">
                  <outline text="In response he's vaguely talking about it" />
                </outline>
              </outline>
            </outline>
            <outline text="Prometheus">
              <outline text="Container has node exporter" />
              <outline text="In container, you expose metrics" />
              <outline text="Hard to hear" />
              <outline text="Mentioned grafana" />
            </outline>
          </outline>
        </outline>
        <outline _complete="true" text="Deploy versioning">
          <outline text="mass_email">
            <outline text="v9.5" />
            <outline text="Deploying 9.5b2" />
            <outline text="Deploy command" _note="python deployment/cloud_setup/deploy.py v9.5b2 -e prod" />
          </outline>
        </outline>
        <outline _complete="true" text="campaign_table migration script">
          <outline _complete="true" text="Original using information_schema.columns" _note="SELECT&#10;    table_name&#10;FROM (&#10;    SELECT&#10;        columns.table_name,&#10;        sum(&#10;            CASE WHEN columns.column_name::text IN ('segmentation_block_id', 'segmentation_block_item_id')&#10;            THEN 1&#10;            ELSE 0&#10;            END&#10;        ) AS has_columns&#10;    FROM (&#10;        SELECT campaigns.tablename&#10;        FROM (&#10;            SELECT&#10;                id mass_campaign_id,&#10;                account_id,&#10;                'mass_' || account_id || '_' || id AS tablename&#10;            FROM mass_campaign&#10;            WHERE is_sent IS DISTINCT FROM true&#10;                AND is_cancelled IS DISTINCT FROM true&#10;        ) AS campaigns&#10;        JOIN pg_tables ON pg_tables.tablename = campaigns.tablename&#10;    ) AS existing_tables&#10;    JOIN information_schema.columns columns ON columns.table_name = existing_tables.tablename&#10;    GROUP BY columns.table_name&#10;) AS column_counts&#10;WHERE has_columns = 0" />
          <outline _complete="true" text="information_schema.columns is not populated with columns for campaign table, hence" _note="SELECT table_name&#10;FROM (&#10;    SELECT columns.table_name&#10;         , sum(CASE WHEN columns.column_name::text IN ('segmentation_block_id', 'segmentation_block_item_id') THEN 1 ELSE 0 END) AS has_columns&#10;    FROM (&#10;        SELECT campaigns.table_name&#10;        FROM (&#10;            SELECT id mass_campaign_id&#10;                 , account_id&#10;                 , 'mass_' || account_id || '_' || id AS table_name&#10;            FROM   mass_campaign&#10;            WHERE  is_sent IS DISTINCT FROM true&#10;            AND    is_cancelled IS DISTINCT FROM true&#10;        ) AS campaigns&#10;        JOIN pg_tables ON pg_tables.tablename = campaigns.table_name&#10;    ) AS existing_tables&#10;    JOIN (&#10;        SELECT   attrelid::regclass::text AS table_name&#10;               , attname AS column_name&#10;        FROM     pg_attribute&#10;        WHERE    attnum &amp;gt; 0&#10;        AND      attrelid::regclass::text like 'campaigns.mass_%'&#10;        AND NOT  attisdropped&#10;        ORDER BY attnum&#10;    ) AS columns ON columns.table_name = 'campaigns.' || existing_tables.table_name&#10;    GROUP BY columns.table_name&#10;) AS column_counts&#10;WHERE has_columns = 0&#10;" />
          <outline _complete="true" text="in function" _note="BEGIN;&#10;&#10;CREATE OR REPLACE FUNCTION update_campaign_table_segmentation_columns()&#10;RETURNS TABLE (&#10;    table_name TEXT&#10;) AS&#10;$body$&#10;BEGIN&#10;    FOR table_name IN&#10;        SELECT column_counts.table_name&#10;        FROM (&#10;            SELECT columns.table_name&#10;                 , sum(CASE WHEN columns.column_name::text IN ('segmentation_block_id',&#10;                                                               'segmentation_block_item_id')&#10;                       THEN 1&#10;                       ELSE 0 END) AS has_columns&#10;            FROM (&#10;                SELECT campaigns.table_name&#10;                FROM (&#10;                    SELECT id mass_campaign_id&#10;                         , account_id&#10;                         , 'mass_' || account_id || '_' || id AS table_name&#10;                    FROM   mass_campaign&#10;                    WHERE  is_sent IS DISTINCT FROM true&#10;                    AND    is_cancelled IS DISTINCT FROM true&#10;                ) AS campaigns&#10;                JOIN pg_tables ON pg_tables.tablename = campaigns.table_name&#10;            ) AS existing_tables&#10;            JOIN (&#10;                SELECT   attrelid::regclass::text AS table_name&#10;                       , attname AS column_name&#10;                FROM     pg_attribute&#10;                ORDER BY attnum&#10;            ) AS columns ON columns.table_name = 'campaigns.' || existing_tables.table_name&#10;            GROUP BY columns.table_name&#10;        ) AS column_counts&#10;        WHERE has_columns = 0&#10;    LOOP&#10;        EXECUTE format($$ALTER TABLE %s&#10;                         ADD COLUMN segmentation_block_id INTEGER,&#10;                         ADD COLUMN segmentation_block_item_id INTEGER$$,&#10;                       table_name);&#10;        RETURN NEXT;&#10;    END LOOP;&#10;END;&#10;$body$ LANGUAGE plpgsql VOLATILE;&#10;&#10;SELECT table_name FROM update_campaign_table_segmentation_columns();&#10;DROP FUNCTION update_campaign_table_segmentation_columns;&#10;&#10;ROLLBACK;&#10;" />
          <outline _complete="true" text="in function on ALL campaign tables" _note="BEGIN;&#10;&#10;CREATE OR REPLACE FUNCTION update_campaign_table_segmentation_columns()&#10;RETURNS TABLE (&#10;    table_name TEXT&#10;) AS&#10;$body$&#10;BEGIN&#10;    FOR table_name IN&#10;        SELECT segmentation_column_counts.table_name&#10;        FROM (&#10;            SELECT columns.table_name&#10;                 , sum(CASE WHEN columns.column_name::text IN ('segmentation_block_id',&#10;                                                               'segmentation_block_item_id')&#10;                       THEN 1&#10;                       ELSE 0 END) AS n_segmentation_column_count&#10;            FROM (&#10;                SELECT campaigns.table_name&#10;                FROM (&#10;                    SELECT id mass_campaign_id&#10;                         , account_id&#10;                         , 'mass_' || account_id || '_' || id AS table_name&#10;                    FROM   mass_campaign&#10;                ) AS campaigns&#10;                JOIN pg_tables ON pg_tables.tablename = campaigns.table_name&#10;            ) AS existing_tables&#10;            JOIN (&#10;                SELECT   attrelid::regclass::text AS table_name&#10;                       , attname AS column_name&#10;                FROM     pg_attribute&#10;                ORDER BY attnum&#10;            ) AS columns ON columns.table_name = 'campaigns.' || existing_tables.table_name&#10;            GROUP BY columns.table_name&#10;        ) AS segmentation_column_counts&#10;        WHERE n_segmentation_column_count = 0&#10;    LOOP&#10;        EXECUTE format($$ALTER TABLE %s&#10;                         ADD COLUMN segmentation_block_id INTEGER,&#10;                         ADD COLUMN segmentation_block_item_id INTEGER$$,&#10;                       table_name);&#10;        RETURN NEXT;&#10;    END LOOP;&#10;END;&#10;$body$ LANGUAGE plpgsql VOLATILE;&#10;&#10;SELECT table_name FROM update_campaign_table_segmentation_columns();&#10;DROP FUNCTION update_≤campaign_table_segmentation_columns;&#10;&#10;ROLLBACK;">
            <outline text="minified version" _note="BEGIN; CREATE OR REPLACE FUNCTION update_campaign_table_segmentation_columns() RETURNS TABLE ( table_name TEXT ) AS $body$ BEGIN FOR table_name IN SELECT segmentation_column_counts.table_name FROM ( SELECT columns.table_name , sum(CASE WHEN columns.column_name::text IN ('segmentation_block_id', 'segmentation_block_item_id') THEN 1 ELSE 0 END) AS n_segmentation_column_count FROM ( SELECT campaigns.table_name FROM ( SELECT id mass_campaign_id , account_id , 'mass_' || account_id || '_' || id AS table_name FROM mass_campaign ) AS campaigns JOIN pg_tables ON pg_tables.tablename = campaigns.table_name ) AS existing_tables JOIN ( SELECT attrelid::regclass::text AS table_name , attname AS column_name FROM pg_attribute ORDER BY attnum ) AS columns ON columns.table_name = 'campaigns.' || existing_tables.table_name GROUP BY columns.table_name ) AS segmentation_column_counts WHERE n_segmentation_column_count = 0 LOOP EXECUTE format($$ALTER TABLE %s ADD COLUMN segmentation_block_id INTEGER, ADD COLUMN segmentation_block_item_id INTEGER$$, table_name); RETURN NEXT; END LOOP; END; $body$ LANGUAGE plpgsql VOLATILE; SELECT table_name FROM update_campaign_table_segmentation_columns(); DROP FUNCTION update_campaign_table_segmentation_columns; ROLLBACK;" />
          </outline>
          <outline text="Now without looking for columns (with ADD COLUMN IF NOT EXISTS)">
            <outline text="query" _note="BEGIN;&#10;&#10;CREATE OR REPLACE FUNCTION update_campaign_table_segmentation_columns()&#10;RETURNS TABLE (&#10;    table_name TEXT&#10;) AS&#10;$body$&#10;BEGIN&#10;    FOR table_name IN&#10;        SELECT 'campaigns.' || campaigns.table_name&#10;        FROM (&#10;            SELECT id mass_campaign_id&#10;                 , account_id&#10;                 , 'mass_' || account_id || '_' || id AS table_name&#10;            FROM   mass_campaign&#10;        ) AS campaigns&#10;        JOIN pg_tables ON pg_tables.tablename = campaigns.table_name&#10;    LOOP&#10;        EXECUTE format($$ALTER TABLE %s&#10;                         ADD COLUMN IF NOT EXISTS segmentation_block_id INTEGER,&#10;                         ADD COLUMN IF NOT EXISTS segmentation_block_item_id INTEGER$$,&#10;                       table_name);&#10;        RETURN NEXT;&#10;    END LOOP;&#10;END;&#10;$body$ LANGUAGE plpgsql VOLATILE;&#10;&#10;SELECT table_name FROM update_campaign_table_segmentation_columns();&#10;DROP FUNCTION update_campaign_table_segmentation_columns;&#10;&#10;ROLLBACK;" />
            <outline text="minified" _note="BEGIN; CREATE OR REPLACE FUNCTION update_campaign_table_segmentation_columns() RETURNS TABLE ( table_name TEXT ) AS $body$ BEGIN FOR table_name IN SELECT 'campaigns.' || campaigns.table_name FROM ( SELECT id mass_campaign_id , account_id , 'mass_' || account_id || '_' || id AS table_name FROM mass_campaign ) AS campaigns JOIN pg_tables ON pg_tables.tablename = campaigns.table_name LOOP EXECUTE format($$ALTER TABLE %s ADD COLUMN IF NOT EXISTS segmentation_block_id INTEGER, ADD COLUMN IF NOT EXISTS segmentation_block_item_id INTEGER$$, table_name); RETURN NEXT; END LOOP; END; $body$ LANGUAGE plpgsql VOLATILE; SELECT table_name FROM update_campaign_table_segmentation_columns(); DROP FUNCTION update_campaign_table_segmentation_columns; ROLLBACK;" />
            <outline _complete="true" text="Escaped for bash" _note="BEGIN; CREATE OR REPLACE FUNCTION update_campaign_table_segmentation_columns() RETURNS TABLE ( table_name TEXT ) AS \$body\$ BEGIN FOR table_name IN SELECT 'campaigns.' || campaigns.table_name FROM ( SELECT id mass_campaign_id , account_id , 'mass_' || account_id || '_' || id AS table_name FROM mass_campaign ) AS campaigns JOIN pg_tables ON pg_tables.tablename = campaigns.table_name LOOP EXECUTE format(\$\$ALTER TABLE %s ADD COLUMN IF NOT EXISTS segmentation_block_id INTEGER, ADD COLUMN IF NOT EXISTS segmentation_block_item_id INTEGER\$\$, table_name); RETURN NEXT; END LOOP; END; \$body\$ LANGUAGE plpgsql VOLATILE; SELECT table_name FROM update_campaign_table_segmentation_columns(); DROP FUNCTION update_campaign_table_segmentation_columns; ROLLBACK;" />
          </outline>
          <outline text="Check tables without" _note="SELECT segmentation_column_counts.table_name&#10;FROM (&#10;    SELECT columns.table_name&#10;         , sum(CASE WHEN columns.column_name::text IN ('segmentation_block_id',&#10;                                                       'segmentation_block_item_id')&#10;               THEN 1&#10;               ELSE 0 END) AS n_segmentation_column_count&#10;    FROM (&#10;        SELECT campaigns.table_name&#10;        FROM (&#10;            SELECT id mass_campaign_id&#10;                 , account_id&#10;                 , 'mass_' || account_id || '_' || id AS table_name&#10;            FROM   mass_campaign&#10;        ) AS campaigns&#10;        JOIN pg_tables ON pg_tables.tablename = campaigns.table_name&#10;    ) AS existing_tables&#10;    JOIN (&#10;        SELECT   attrelid::regclass::text AS table_name&#10;               , attname AS column_name&#10;        FROM     pg_attribute&#10;        ORDER BY attnum&#10;    ) AS columns ON columns.table_name = 'campaigns.' || existing_tables.table_name&#10;    GROUP BY columns.table_name&#10;) AS segmentation_column_counts&#10;WHERE n_segmentation_column_count = 0&#10;">
            <outline text="Minified" _note="SELECT segmentation_column_counts.table_name FROM ( SELECT columns.table_name , sum(CASE WHEN columns.column_name::text IN ('segmentation_block_id', 'segmentation_block_item_id') THEN 1 ELSE 0 END) AS n_segmentation_column_count FROM ( SELECT campaigns.table_name FROM ( SELECT id mass_campaign_id , account_id , 'mass_' || account_id || '_' || id AS table_name FROM mass_campaign ) AS campaigns JOIN pg_tables ON pg_tables.tablename = campaigns.table_name ) AS existing_tables JOIN ( SELECT attrelid::regclass::text AS table_name , attname AS column_name FROM pg_attribute ORDER BY attnum ) AS columns ON columns.table_name = 'campaigns.' || existing_tables.table_name GROUP BY columns.table_name ) AS segmentation_column_counts WHERE n_segmentation_column_count = 0" />
          </outline>
          <outline text="Shell script on Backend1" _note="PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0000 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0001 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0002 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0003 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0004 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0005 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0006 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0007 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0008 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0009 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0010 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0011 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0012 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0013 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0014 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0015 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0016 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0017 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0018 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0019 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0020 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0100 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0101 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0102 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0103 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0104 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0105 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0106 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0107 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0200 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0201 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0202 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0203 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0204 -f sam_update_campaigns_tables_query.sql&#10;PGPASSWORD=DkuKz2vkgm7ZWBrc psql -U ometria_campaigns -h pgbouncer.ometria.network ometria_ecomm_0300 -f sam_update_campaigns_tables_query.sql" />
          <outline _complete="true" text="Shard 0010">
            <outline text="Prior to running, these do not have new columns" _note="       table_name&#10;-------------------------&#10; campaigns.mass_352_2081&#10; campaigns.mass_352_2082&#10; campaigns.mass_352_2120&#10; campaigns.mass_352_2124" />
            <outline text="These ones do" _note="       table_name&#10;-------------------------&#10; campaigns.mass_352_2252&#10; campaigns.mass_352_2253" />
          </outline>
        </outline>
        <outline _complete="true" text="Previous deploys">
          <outline text="mass_email v9.5" />
          <outline text="api.campaigns v1.3broadcast103" />
        </outline>
        <outline _complete="true" text="Split test with winner summary">
          <outline text="Winner variant will not generate if no recipient rows for those customers were put in the campaign table" />
          <outline text="The campaign &lt;b&gt;will&lt;/b&gt; send if no results came in, but at least one of the test variants had a recipient, and therefore a row in the campaign table" />
        </outline>
        <outline _complete="true" text="Campaign winner (x2) 352:ME:2275">
          <outline text="One of winning variant should be based off 2729" />
          <outline text="Update batch 3325 with winning rows" _note="UPDATE campaigns.mass_352_2275&#10;SET is_opened = true, is_clicked = true, is_delivered = true&#10;WHERE uuid in (&#10;    SELECT uuid&#10;    FROM campaigns.mass_352_2275&#10;    WHERE batch_id = 3325&#10;    LIMIT 5&#10;);" />
          <outline text="Other winning variant should be based off 2728" />
          <outline text="Update batch 3324 with winning rows" _note="UPDATE campaigns.mass_352_2275&#10;SET is_opened = true, is_clicked = true, is_delivered = true&#10;WHERE uuid in (&#10;    SELECT uuid&#10;    FROM campaigns.mass_352_2275&#10;    WHERE batch_id = 3324&#10;    LIMIT 5&#10;);" />
        </outline>
        <outline _complete="true" text="Confirm that Bruno's winner campaign dt bug fix makes it into merge" />
        <outline _complete="true" text="Manual testing of winner campaigns (db and table fudging)">
          <outline text="Override for redshift_get_email_engagement_for_mass_campaign function" _note="CREATE OR REPLACE FUNCTION redshift_get_email_engagement_for_mass_campaign(_account_id INT, _campaign_id INT)&#10;  RETURNS TABLE(uuid         TEXT,&#10;                dt_delivered TIMESTAMP WITH TIME ZONE,&#10;                dt_opened    TIMESTAMP WITH TIME ZONE,&#10;                dt_clicked   TIMESTAMP WITH TIME ZONE)&#10;&#10;AS $$&#10;  SELECT&#10;    md5(random()::text)::text AS uuid,&#10;    CASE WHEN random &amp;lt; 0.8 THEN (now() - interval '60 minutes')::TIMESTAMP AT TIME ZONE 'BST' ELSE null END AS dt_delivered,&#10;    CASE WHEN random &amp;lt; 0.5 THEN (now() - interval '50 minutes')::TIMESTAMP AT TIME ZONE 'BST' ELSE null END AS dt_opened,&#10;    CASE WHEN random &amp;lt; 0.2 THEN (now() - interval '50 minutes')::TIMESTAMP AT TIME ZONE 'BST' ELSE null END AS dt_clicked&#10;  FROM (&#10;    SELECT&#10;        id,&#10;        random() AS random&#10;    FROM mass_campaign_variant&#10;    WHERE mass_campaign_id = _campaign_id&#10;      AND account_id = _account_id&#10;  ) with_random&#10;$$&#10;LANGUAGE SQL" />
          <outline text="Post test pre winner campaign table updates">
            <outline text="Update campaign_table query" _note="UPDATE campaigns.mass_352_2251&#10;SET is_opened = true, is_clicked = true, is_delivered = true&#10;WHERE uuid in (&#10;    SELECT uuid&#10;    FROM campaigns.mass_352_2251&#10;    WHERE batch_id = 3240&#10;    LIMIT 5&#10;);" />
            <outline text="Equivalent query" _note="SELECT&#10;    b.mass_campaign_variant_id AS variant_id,&#10;    count(CASE WHEN ct.is_clicked THEN 1 ELSE 0 END) AS counted,&#10;    greatest(count(CASE WHEN ct.is_delivered THEN 1 ELSE 0 END), 1) AS total,&#10;    count(CASE WHEN ct.is_clicked THEN 1 ELSE 0 END)::FLOAT / greatest(count(CASE WHEN ct.is_delivered THEN 1 ELSE 0 END), 1) AS score&#10;FROM campaigns.mass_campaign_batch b&#10;JOIN campaigns.mass_352_2251 ct ON ct.batch_id = b.id&#10;WHERE b.account_id = 352&#10;AND b.id != 3241&#10;AND b.segmentation_block_id = 1&#10;GROUP BY b.mass_campaign_variant_id&#10;ORDER BY score DESC" />
          </outline>
        </outline>
        <outline _complete="true" text="order id bug investigation">
          <outline _complete="true" text="Confirm mass_email table creation filters out list suppression correctly" />
          <outline _complete="true" text="Validate list filtering was correct">
            <outline text="Query to find campaign run on 0101" _note="SELECT mc.dt_scheduled, segmentation_tree FROM mass_campaign mc JOIN mass_campaign_configuration mcc ON mcc.id = mc.mass_campaign_configuration_id WHERE is_sent AND segmentation_tree::text &amp;lt;&amp;gt; '{&quot;type&quot;: &quot;initial&quot;}'::text ORDER BY 1 DESC limit 1;" />
            <outline text="Campaign id = 8177" />
            <outline text="Account = 554" />
            <outline text="Segmentation tree data" _note="{&#10;    &quot;type&quot;: &quot;initial&quot;,&#10;    &quot;childBlock&quot;: {&#10;        &quot;id&quot;: 2,&#10;        &quot;type&quot;: &quot;segmentation&quot;,&#10;        &quot;items&quot;: [&#10;            {&#10;                &quot;id&quot;: 1,&#10;                &quot;data&quot;: {&#10;                    &quot;group&quot;: &quot;all&quot;,&#10;                    &quot;filters&quot;: [&#10;                        {&#10;                            &quot;op&quot;: &quot;eq&quot;,&#10;                            &quot;field&quot;: &quot;list_id&quot;,&#10;                            &quot;value&quot;: [&#10;                                1192&#10;                            ]&#10;                        },&#10;                        {&#10;                            &quot;op&quot;: &quot;neq&quot;,&#10;                            &quot;field&quot;: &quot;list_id&quot;,&#10;                            &quot;value&quot;: [&#10;                                260&#10;                            ]&#10;                        }&#10;                    ],&#10;                    &quot;query_type&quot;: &quot;and&quot;&#10;                },&#10;                &quot;type&quot;: &quot;segmentation&quot;,&#10;                &quot;title&quot;: &quot;New Engagement (1192)&quot;&#10;            },&#10;            {&#10;                &quot;id&quot;: 2,&#10;                &quot;data&quot;: {&#10;                    &quot;group&quot;: &quot;all&quot;,&#10;                    &quot;filters&quot;: [&#10;                        {&#10;                            &quot;op&quot;: &quot;eq&quot;,&#10;                            &quot;field&quot;: &quot;list_id&quot;,&#10;                            &quot;value&quot;: [&#10;                                260&#10;                            ]&#10;                        }&#10;                    ],&#10;                    &quot;query_type&quot;: &quot;and&quot;&#10;                },&#10;                &quot;type&quot;: &quot;segmentation&quot;,&#10;                &quot;title&quot;: &quot;Old Engagement (260)&quot;&#10;            }&#10;        ]&#10;    }&#10;}" />
            <outline text="Get n campaign recipients" _note="select count(*) from campaigns.mass_554_8177">
              <outline text="Targeted = 66099" />
              <outline text="Sent = 65833" />
            </outline>
            <outline text="There were two nodes">
              <outline text="node 1">
                <outline text="in list_id = 1192" />
                <outline text="not in list_id = 260" />
              </outline>
              <outline text="node 2">
                <outline text="in list_id = 260" />
              </outline>
            </outline>
            <outline text="Find all customers that are in either list" _note="SELECT count(*) FROM lists_customers lc JOIN customers c ON c.id = lc.customer_id WHERE account_id = 554 AND list_id = any(ARRAY[1192, 1192]);">
              <outline text="79743" />
            </outline>
            <outline text="Remove opted out and suppressed" _note="SELECT count(*)&#10;FROM lists_customers lc&#10;JOIN customers c ON c.id = lc.customer_id&#10;WHERE account_id = 554&#10;AND list_id = any(ARRAY[1192, 1192])&#10;AND c.email IS NOT NULL&#10;AND c.is_email_valid IS NOT false&#10;AND c.optin&#10;AND NOT EXISTS (&#10;    SELECT 1&#10;    FROM suppression_list&#10;    WHERE suppression_list.email = c.email&#10;);&#10;">
              <outline text="79489" />
            </outline>
            <outline text="Also those in list 141 OR 1196 and those active in any trigger campaign" _note="SELECT count(c.id)&#10;FROM lists_customers lc&#10;JOIN customers c ON c.id = lc.customer_id&#10;WHERE account_id = 554&#10;AND list_id = any(ARRAY[1192, 1192])&#10;AND list_id != 141&#10;AND list_id != 1196&#10;AND c.email IS NOT NULL&#10;AND c.is_email_valid IS NOT false&#10;AND c.optin&#10;AND NOT EXISTS (&#10;    SELECT 1&#10;    FROM suppression_list&#10;    WHERE suppression_list.email = c.email&#10;)&#10;AND not(&#10;  EXISTS (&#10;    SELECT &#10;      1 &#10;    FROM &#10;      trigger_campaign_customer &#10;    WHERE &#10;      trigger_campaign_customer.customer_id = c.id&#10;      AND trigger_campaign_customer.is_active IS true &#10;      AND trigger_campaign_customer.is_test IS NOT true &#10;      AND trigger_campaign_customer.is_control_group IS NOT true&#10;  )&#10;) &#10;">
              <outline text="72471" />
            </outline>
            <outline text="See if ids from above intersect with original campaign table" _note="WITH cte AS (&#10;    SELECT c.id&#10;    FROM lists_customers lc&#10;    JOIN customers c ON c.id = lc.customer_id&#10;    WHERE account_id = 554&#10;    AND list_id = any(ARRAY[1192, 1192])&#10;    AND list_id != 141&#10;    AND list_id != 1196&#10;    AND c.email IS NOT NULL&#10;    AND c.is_email_valid IS NOT false&#10;    AND c.optin&#10;    AND NOT EXISTS (&#10;        SELECT 1&#10;        FROM suppression_list&#10;        WHERE suppression_list.email = c.email&#10;    )&#10;    AND not(&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          trigger_campaign_customer &#10;        WHERE &#10;          trigger_campaign_customer.customer_id = c.id&#10;          AND trigger_campaign_customer.is_active IS true &#10;          AND trigger_campaign_customer.is_test IS NOT true &#10;          AND trigger_campaign_customer.is_control_group IS NOT true&#10;      )&#10;    ) &#10;)&#10;SELECT count(*)&#10;FROM campaigns.mass_554_8177 ct&#10;JOIN cte ON ct.customer_id = cte.id&#10;">
              <outline text="65917 (out of 66099)" />
              <outline text="Very high consistency" />
            </outline>
          </outline>
          <outline _complete="true" text="Segmentation data which hit events table">
            <outline text="field =">
              <outline text="order" />
              <outline text="visit" />
              <outline text="coupon_code" />
              <outline text="has_used_coupon_code" />
              <outline text="product_price" />
              <outline text="purchased_site" />
              <outline text="visited_site" />
            </outline>
            <outline text="field = product AND op =">
              <outline text="viewed_not_purchased" />
              <outline text="viewed_not_purchased_attribute" />
              <outline text="purchased" />
              <outline text="purchased_attribute" />
            </outline>
          </outline>
          <outline _complete="true" text="Campaign fields to search">
            <outline text="mass_campaign.customer_query" />
            <outline text="mass_campaign_configuration.segmentation_tree" />
            <outline text="NOT customer_suppress_query as handled separately" />
            <outline text="NOT list fields as not affected by bug" />
          </outline>
          <outline _complete="true" text="Query to string match for key fields">
            <outline text="query" _note="SELECT count(*)&#10;FROM mass_campaign mc&#10;JOIN mass_campaign_configuration mcc ON mcc.id = mc.mass_campaign_configuration_id&#10;WHERE (&#10;    customer_query::text ilike any (ARRAY['%order%', '%visit%', '%coupon_code%', '%has_used_coupon_code%', '%has_used_coupon_code%', '%purchased_site%', '%visited_site%'])&#10;    OR segmentation_tree::text ilike any (ARRAY['%order%', '%order%', '%visit%', '%coupon_code%', '%has_used_coupon_code%', '%has_used_coupon_code%', '%purchased_site%', '%visited_site%'])&#10;)&#10;AND mc.is_sent&#10;" />
            <outline text="minified" _note="SELECT count(*) FROM mass_campaign mc JOIN mass_campaign_configuration mcc ON mcc.id = mc.mass_campaign_configuration_id WHERE ( customer_query::text ilike any (ARRAY['%order%', '%visit%', '%coupon_code%', '%has_used_coupon_code%', '%has_used_coupon_code%', '%purchased_site%', '%visited_site%']) OR segmentation_tree::text ilike any (ARRAY['%order%', '%order%', '%visit%', '%coupon_code%', '%has_used_coupon_code%', '%has_used_coupon_code%', '%purchased_site%', '%visited_site%'])) AND mc.is_sent" />
          </outline>
          <outline _complete="true" text="Returns no production campaigns" />
          <outline _complete="true" text="Run for is_ready_to_send OR is_sending">
            <outline text="query" _note="SELECT count(*)&#10;FROM mass_campaign mc&#10;JOIN mass_campaign_configuration mcc ON mcc.id = mc.mass_campaign_configuration_id&#10;WHERE (&#10;    customer_query::text ilike any (ARRAY['%order%', '%visit%', '%coupon_code%', '%has_used_coupon_code%', '%has_used_coupon_code%', '%purchased_site%', '%visited_site%'])&#10;    OR segmentation_tree::text ilike any (ARRAY['%order%', '%order%', '%visit%', '%coupon_code%', '%has_used_coupon_code%', '%has_used_coupon_code%', '%purchased_site%', '%visited_site%'])&#10;)&#10;AND mc.is_ready_to_send&#10;OR mc.is_sending&#10;" />
            <outline text="minified" _note="SELECT count(*) FROM mass_campaign mc JOIN mass_campaign_configuration mcc ON mcc.id = mc.mass_campaign_configuration_id WHERE ( customer_query::text ilike any (ARRAY['%order%', '%visit%', '%coupon_code%', '%has_used_coupon_code%', '%has_used_coupon_code%', '%purchased_site%', '%visited_site%']) OR segmentation_tree::text ilike any (ARRAY['%order%', '%order%', '%visit%', '%coupon_code%', '%has_used_coupon_code%', '%has_used_coupon_code%', '%purchased_site%', '%visited_site%'])) AND mc.is_ready_to_send OR mc.is_sending" />
          </outline>
          <outline _complete="true" text="Returns none" />
          <outline _complete="true" text="Campaigns using orders in customer_suppress_query" _note="[ec2-user@ip-10-0-1-230 db]$ php run-on-all-shards.php &quot;SELECT mc.id, mc.dt_scheduled FROM mass_campaign mc JOIN mass_campaign_configuration mcc ON mcc.id = mc.mass_campaign_configuration_id WHERE is_sent AND customer_suppress_query::text ilike '%order%' ORDER BY dt_scheduled;&quot;&#10; shard      | id   | dt_scheduled&#10;------------|------|------------------------------&#10; ecomm_0101 | 7521 | 2019-06-14 05:00:00+00&#10; ecomm_0101 | 7531 | 2019-06-14 21:00:00+00&#10; ecomm_0101 | 7528 | 2019-06-16 06:00:00+00&#10; ecomm_0101 | 7532 | 2019-06-16 22:00:00+00&#10; ecomm_0101 | 7883 | 2019-07-02 21:00:00+00&#10; ecomm_0101 | 7896 | 2019-07-03 05:00:00+00&#10; ecomm_0101 | 7869 | 2019-07-03 05:00:00+00&#10; ecomm_0101 | 7887 | 2019-07-03 06:00:00+00&#10; ecomm_0101 | 7897 | 2019-07-03 07:30:00+00&#10; ecomm_0101 | 7895 | 2019-07-03 11:00:00+00&#10; ecomm_0101 | 7909 | 2019-07-03 17:00:00+00&#10; ecomm_0101 | 7910 | 2019-07-03 22:00:00+00&#10; ecomm_0101 | 7989 | 2019-07-09 19:00:00+00&#10; ecomm_0101 | 7979 | 2019-07-09 21:00:00+00&#10; ecomm_0101 | 7984 | 2019-07-10 06:00:00+00&#10; ecomm_0101 | 7981 | 2019-07-10 11:00:00+00&#10; ecomm_0101 | 7994 | 2019-07-10 11:00:00+00&#10; ecomm_0101 | 8010 | 2019-07-10 23:00:00+00&#10; ecomm_0101 | 8129 | 2019-07-17 06:00:00+00&#10; ecomm_0101 | 8136 | 2019-07-17 09:25:19.96719+00&#10; ecomm_0101 | 8133 | 2019-07-17 11:00:00+00&#10; ecomm_0101 | 8145 | 2019-07-19 16:00:00+00&#10; ecomm_0101 | 8154 | 2019-07-19 21:00:00+00&#10; ecomm_0101 | 8155 | 2019-07-21 17:00:00+00&#10; ecomm_0101 | 8156 | 2019-07-21 22:00:00+00" />
          <outline text="Campaign test">
            <outline text="Link" _note="https://app.ometria.com/app/68c34c0886c2056e/broadcast-new/8203/segmentation?state=%7B%22dateCurrent%22%3A%7B%22datePeriod%22%3A%22last28days%22%2C%22dateFrom%22%3A%222019-06-24T16%3A00%3A36.069Z%22%2C%22dateTo%22%3A%222019-07-21T16%3A00%3A36.069Z%22%7D%2C%22dateCompare%22%3A%7B%22datePeriod%22%3A%22prevperiod%22%2C%22dateFrom%22%3A%222019-05-27T16%3A00%3A36.069Z%22%2C%22dateTo%22%3A%222019-06-23T16%3A00%3A36.069Z%22%7D%7D" />
            <outline text="Node 1 query" _note="SELECT count(*)&#10;FROM customers&#10;WHERE account_id = 505&#10;AND NOT EXISTS (&#10;    SELECT 1 &#10;    FROM customers_health_dimensions &#10;    WHERE customers_health_dimensions.customer_id = customers.id &#10;    AND customers_health_dimensions.engagement = 0&#10;)&#10;AND email IS NOT NULL &#10;AND is_email_valid IS NOT false &#10;AND optin IS true&#10;AND NOT EXISTS (&#10;    SELECT 1&#10;    FROM lists_customers&#10;    WHERE account_id = 505&#10;    AND lists_customers.customer_id = customers.id&#10;    AND list_id = ANY(ARRAY[68, 1156])&#10;)&#10;AND EXISTS (&#10;    SELECT 1&#10;    FROM lists_customers&#10;    WHERE account_id = 505&#10;    AND lists_customers.customer_id = customers.id&#10;    AND list_id = 1154&#10;)&#10;AND EXISTS (&#10;  SELECT &#10;    1 &#10;  FROM &#10;    events &#10;  WHERE &#10;    events.customer_id = customers.id &#10;    AND events.account_id = 505 &#10;    AND events.event_type = 'order' &#10;    AND (&#10;      events.attribute_ids &amp;amp;&amp;amp; ARRAY[17083, 1106]&#10;    ) IS NOT true &#10;    AND events.order_is_valid = true&#10;)&#10;" />
            <outline text="Node 2 query" _note="SELECT count(*)&#10;FROM customers&#10;WHERE account_id = 505&#10;AND NOT EXISTS (&#10;    SELECT 1 &#10;    FROM customers_health_dimensions &#10;    WHERE customers_health_dimensions.customer_id = customers.id &#10;    AND customers_health_dimensions.engagement = 0&#10;)&#10;AND email IS NOT NULL &#10;AND is_email_valid IS NOT false &#10;AND optin IS true&#10;AND NOT EXISTS (&#10;    SELECT 1&#10;    FROM lists_customers&#10;    WHERE account_id = 505&#10;    AND lists_customers.customer_id = customers.id&#10;    AND list_id = ANY(ARRAY[68, 1156, 1154])&#10;)&#10;AND EXISTS (&#10;    SELECT 1&#10;    FROM lists_customers&#10;    WHERE account_id = 505&#10;    AND lists_customers.customer_id = customers.id&#10;    AND list_id = 177&#10;)&#10;AND EXISTS (&#10;  SELECT &#10;    1 &#10;  FROM &#10;    events &#10;  WHERE &#10;    events.customer_id = customers.id &#10;    AND events.account_id = 505 &#10;    AND events.event_type = 'order' &#10;    AND (&#10;      events.attribute_ids &amp;amp;&amp;amp; ARRAY[17083, 1106]&#10;    ) IS NOT true &#10;    AND events.order_is_valid = true&#10;)&#10;AND gender = 'm'&#10;" />
            <outline text="Node 3 query" _note="SELECT count(*)&#10;FROM customers&#10;WHERE account_id = 505&#10;AND NOT EXISTS (&#10;    SELECT 1 &#10;    FROM customers_health_dimensions &#10;    WHERE customers_health_dimensions.customer_id = customers.id &#10;    AND customers_health_dimensions.engagement = 0&#10;)&#10;AND email IS NOT NULL &#10;AND is_email_valid IS NOT false &#10;AND optin IS true&#10;AND NOT EXISTS (&#10;    SELECT 1&#10;    FROM lists_customers&#10;    WHERE account_id = 505&#10;    AND lists_customers.customer_id = customers.id&#10;    AND list_id = ANY(ARRAY[68, 1156, 1154])&#10;)&#10;AND EXISTS (&#10;    SELECT 1&#10;    FROM lists_customers&#10;    WHERE account_id = 505&#10;    AND lists_customers.customer_id = customers.id&#10;    AND list_id = 177&#10;)&#10;AND EXISTS (&#10;  SELECT &#10;    1 &#10;  FROM &#10;    events &#10;  WHERE &#10;    events.customer_id = customers.id &#10;    AND events.account_id = 505 &#10;    AND events.event_type = 'order' &#10;    AND (&#10;      events.attribute_ids &amp;amp;&amp;amp; ARRAY[17083, 1106]&#10;    ) IS NOT true &#10;    AND events.order_is_valid = true&#10;)&#10;AND gender IS DISTINCT FROM 'm'&#10;AND lifecycle_status = 'LEAD'&#10;" />
            <outline text="Node 4 query" _note="SELECT count(*)&#10;FROM customers&#10;WHERE account_id = 505&#10;AND NOT EXISTS (&#10;    SELECT 1 &#10;    FROM customers_health_dimensions &#10;    WHERE customers_health_dimensions.customer_id = customers.id &#10;    AND customers_health_dimensions.engagement = 0&#10;)&#10;AND email IS NOT NULL &#10;AND is_email_valid IS NOT false &#10;AND optin IS true&#10;AND NOT EXISTS (&#10;    SELECT 1&#10;    FROM lists_customers&#10;    WHERE account_id = 505&#10;    AND lists_customers.customer_id = customers.id&#10;    AND list_id = ANY(ARRAY[68, 1156, 1154])&#10;)&#10;AND EXISTS (&#10;    SELECT 1&#10;    FROM lists_customers&#10;    WHERE account_id = 505&#10;    AND lists_customers.customer_id = customers.id&#10;    AND list_id = 177&#10;)&#10;AND EXISTS (&#10;  SELECT &#10;    1 &#10;  FROM &#10;    events &#10;  WHERE &#10;    events.customer_id = customers.id &#10;    AND events.account_id = 505 &#10;    AND events.event_type = 'order' &#10;    AND (&#10;      events.attribute_ids &amp;amp;&amp;amp; ARRAY[17083, 1106]&#10;    ) IS NOT true &#10;    AND events.order_is_valid = true&#10;)&#10;AND gender IS DISTINCT FROM 'm'&#10;AND lifecycle_status IS DISTINCT FROM 'LEAD'&#10;" />
            <outline text="Node 5 query" _note="SELECT count(*)&#10;FROM customers&#10;WHERE account_id = 505&#10;AND NOT EXISTS (&#10;    SELECT 1 &#10;    FROM customers_health_dimensions &#10;    WHERE customers_health_dimensions.customer_id = customers.id &#10;    AND customers_health_dimensions.engagement = 0&#10;)&#10;AND email IS NOT NULL &#10;AND is_email_valid IS NOT false &#10;AND optin IS true&#10;AND NOT EXISTS (&#10;    SELECT 1&#10;    FROM lists_customers&#10;    WHERE account_id = 505&#10;    AND lists_customers.customer_id = customers.id&#10;    AND list_id = ANY(ARRAY[68, 1156, 1154, 177])&#10;)&#10;AND EXISTS (&#10;    SELECT 1&#10;    FROM lists_customers&#10;    WHERE account_id = 505&#10;    AND lists_customers.customer_id = customers.id&#10;    AND list_id = 1137&#10;)&#10;AND EXISTS (&#10;  SELECT &#10;    1 &#10;  FROM &#10;    events &#10;  WHERE &#10;    events.customer_id = customers.id &#10;    AND events.account_id = 505 &#10;    AND events.event_type = 'order' &#10;    AND (&#10;      events.attribute_ids &amp;amp;&amp;amp; ARRAY[17083, 1106]&#10;    ) IS NOT true &#10;    AND events.order_is_valid = true&#10;)&#10;" />
          </outline>
        </outline>
        <outline _complete="true" text="Homework">
          <outline text="Input dict" _note="{'type': 'initial', 'data': {'customer_list_id': None, 'customer_query': {'and_filters': [{'op': 'eq', 'field': 'exclude_nonengaged', 'value': ['true']}]}, 'customer_suppress_list_id': None, 'customer_suppress_query': {'filters': [{'field': 'list_id', 'op': 'eq', 'value': [68]}, {'field': 'list_id', 'op': 'eq', 'value': [1156]}], 'group': 'all', 'query_type': 'or'}, 'exclude_all_automation': False, 'exclude_unengaged': True}, 'childBlock': {'id': 1, 'items': [{'data': {'filters': [{'field': 'list_id',&#10;'op': 'eq', 'value': [177]}, {'field': 'list_id', 'op': 'neq', 'value': [1154]}, {'field': 'order', 'value': [{'field': 'product_attribute', 'op': 'not_in', 'value': [{'ids': ['17083', '1106'], 'type': 'group'}]}]}], 'group': 'all', 'query_type': 'and'}, 'id': 2, 'title': 'Segment 2', 'type': 'segmentation'}, {'data': {'filters': [{'field': 'list_id', 'op': 'eq', 'value': [1154]}, {'field': 'order', 'value': [{'field': 'product_attribute', 'op': 'not_in', 'value': [{'ids': ['17083', '1106'], 'type': 'group'}]}]}], 'group': 'all', 'query_type': 'and'}, 'id': 4, 'title': 'Segment 4', 'type': 'segmentation'}, {'data': {'filters': [{'field': 'list_id', 'op': 'eq', 'value': [1137]}, {'field': 'list_id', 'op': 'neq', 'value': [177]}, {'field': 'list_id', 'op': 'neq', 'value': [1154]}, {'field': 'order', 'value': [{'field': 'product_attribute', 'op': 'not_in', 'value': [{'ids': ['17083', '1106'], 'type': 'group'}]}]}], 'group': 'all', 'query_type': 'and'}, 'id': 5, 'title': 'Segment 5', 'type': 'segmentation'}], 'type': 'segmentation'}}" />
          <outline text="Resultant SQL" _note="WITH segment_combinations AS (&#10;  SELECT &#10;    customers.id AS id, &#10;    true AS root, &#10;    customers.account_id = : customers.account_id_1 &#10;    AND (&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          lists_customers &#10;        WHERE &#10;          lists_customers.customer_id = customers.id &#10;          AND lists_customers.list_id = any(: any_1)&#10;      )&#10;    ) &#10;    AND not(&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          lists_customers &#10;        WHERE &#10;          lists_customers.customer_id = customers.id &#10;          AND lists_customers.list_id = any(: any_2)&#10;      )&#10;    ) &#10;    AND (&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          events &#10;        WHERE &#10;          events.customer_id = customers.id &#10;          AND events.account_id = : account_id_1 &#10;          AND events.event_type = : event_type_1 &#10;          AND (&#10;            events.attribute_ids &amp;amp;&amp;amp; : attribute_ids_1&#10;          ) IS NOT true &#10;          AND events.order_is_valid = true&#10;      )&#10;    ) AS &quot;1_2&quot;, &#10;    customers.account_id = : customers.account_id_2 &#10;    AND (&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          lists_customers &#10;        WHERE &#10;          lists_customers.customer_id = customers.id &#10;          AND lists_customers.list_id = any(: any_3)&#10;      )&#10;    ) &#10;    AND (&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          events &#10;        WHERE &#10;          events.customer_id = customers.id &#10;          AND events.account_id = : account_id_2 &#10;          AND events.event_type = : event_type_2 &#10;          AND (&#10;            events.attribute_ids &amp;amp;&amp;amp; : attribute_ids_2&#10;          ) IS NOT true &#10;          AND events.order_is_valid = true&#10;      )&#10;    ) AS &quot;1_4&quot;, &#10;    customers.account_id = : customers.account_id_3 &#10;    AND (&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          lists_customers &#10;        WHERE &#10;          lists_customers.customer_id = customers.id &#10;          AND lists_customers.list_id = any(: any_4)&#10;      )&#10;    ) &#10;    AND not(&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          lists_customers &#10;        WHERE &#10;          lists_customers.customer_id = customers.id &#10;          AND lists_customers.list_id = any(: any_5)&#10;      )&#10;    ) &#10;    AND not(&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          lists_customers &#10;        WHERE &#10;          lists_customers.customer_id = customers.id &#10;          AND lists_customers.list_id = any(: any_6)&#10;      )&#10;    ) &#10;    AND (&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          events &#10;        WHERE &#10;          events.customer_id = customers.id &#10;          AND events.account_id = : account_id_3 &#10;          AND events.event_type = : event_type_3 &#10;          AND (&#10;            events.attribute_ids &amp;amp;&amp;amp; : attribute_ids_3&#10;          ) IS NOT true &#10;          AND events.order_is_valid = true&#10;      )&#10;    ) AS &quot;1_5&quot; &#10;  FROM &#10;    customers &#10;  WHERE &#10;    customers.account_id = : customers.account_id_4 &#10;    AND not(&#10;      EXISTS (&#10;        SELECT &#10;          1 &#10;        FROM &#10;          customers_health_dimensions &#10;        WHERE &#10;          customers_health_dimensions.customer_id = customers.id &#10;          AND customers_health_dimensions.engagement = : engagement_1&#10;      )&#10;    ) &#10;    AND email IS NOT NULL &#10;    AND is_email_valid IS NOT false &#10;    AND optin IS true &#10;    AND NOT (&#10;      customers.account_id = : customers.account_id_5 &#10;      AND (&#10;        (&#10;          EXISTS (&#10;            SELECT &#10;              1 &#10;            FROM &#10;              lists_customers &#10;            WHERE &#10;              lists_customers.customer_id = customers.id &#10;              AND lists_customers.list_id = any(: any_7)&#10;          )&#10;        ) &#10;        OR (&#10;          EXISTS (&#10;            SELECT &#10;              1 &#10;            FROM &#10;              lists_customers &#10;            WHERE &#10;              lists_customers.customer_id = customers.id &#10;              AND lists_customers.list_id = any(: any_8)&#10;          )&#10;        )&#10;      )&#10;    )&#10;) &#10;SELECT &#10;  CASE WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;1_2&quot; IS true&#10;  ) THEN : param_1 WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;1_2&quot; IS DISTINCT &#10;    FROM &#10;      true &#10;      AND segment_combinations.&quot;1_4&quot; IS true&#10;  ) THEN : param_2 WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;1_2&quot; IS DISTINCT &#10;    FROM &#10;      true &#10;      AND segment_combinations.&quot;1_4&quot; IS DISTINCT &#10;    FROM &#10;      true &#10;      AND segment_combinations.&quot;1_5&quot; IS true&#10;  ) THEN : param_3 END AS node_str, &#10;  segment_combinations.id AS customer_id &#10;FROM &#10;  segment_combinations&#10;			" />
        </outline>
        <outline _complete="true" text="Optimised version of lovehoney campaign">
          <outline text="query" _note="SELECT &#10;  CASE WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;2_1&quot; IS true &#10;    AND segment_combinations.&quot;4_1&quot; IS true&#10;  ) THEN '4_1' WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;2_1&quot; IS true &#10;    AND segment_combinations.&quot;4_1&quot; IS DISTINCT &#10;    FROM &#10;      true &#10;      AND segment_combinations.&quot;4_2&quot; IS true&#10;  ) THEN '4_2' WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;2_1&quot; IS true &#10;    AND segment_combinations.&quot;4_1&quot; IS DISTINCT &#10;    FROM &#10;      true &#10;      AND segment_combinations.&quot;4_2&quot; IS DISTINCT &#10;    FROM &#10;      true &#10;      AND segment_combinations.&quot;4_3&quot; IS true&#10;  ) THEN '4_3' END AS node_str, &#10;  count(segment_combinations.id) AS n_customers &#10;FROM &#10;  (&#10;    SELECT &#10;      customers.id AS id, &#10;      account_id = 505 &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            trigger_campaign_customer &#10;          WHERE &#10;            trigger_campaign_customer.customer_id = id &#10;            AND trigger_campaign_customer.is_active IS true &#10;            AND trigger_campaign_customer.is_test IS NOT true &#10;            AND trigger_campaign_customer.is_control_group IS NOT true&#10;        )&#10;      ) &#10;      AND email IS NOT NULL &#10;      AND is_email_valid IS NOT false &#10;      AND optin IS true &#10;      AND NOT (&#10;        account_id = 505 &#10;        AND (&#10;          (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(ARRAY[68])&#10;            )&#10;          ) &#10;          OR (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(ARRAY[1156])&#10;            )&#10;          ) &#10;          OR (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(ARRAY[177])&#10;            )&#10;          ) &#10;          OR (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(ARRAY[1154])&#10;            )&#10;          )&#10;        )&#10;      ) AS root, &#10;      account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            events &#10;          WHERE &#10;            events.customer_id = id &#10;            AND events.account_id = 505 &#10;            AND events.event_type = 'order' &#10;            AND (&#10;              events.attribute_ids &amp;amp;&amp;amp; ARRAY[17083, &#10;              1106]&#10;            ) IS NOT true &#10;            AND events.order_is_valid = true&#10;        )&#10;      ) AS &quot;2_1&quot;, &#10;      account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(ARRAY[1154])&#10;        )&#10;      ) AS &quot;4_1&quot;, &#10;      account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(ARRAY[177])&#10;        )&#10;      ) AS &quot;4_2&quot;, &#10;      account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(ARRAY[1137])&#10;        )&#10;      ) AS &quot;4_3&quot; &#10;    FROM &#10;      customers&#10;  ) AS segment_combinations &#10;GROUP BY &#10;  node_str&#10;" />
        </outline>
        <outline _complete="true" text="Numbers aren't exactly equal between old and new">
          <outline text="New" _note="https://app.ometria.com/app/68c34c0886c2056e/broadcast-new/7591/segmentation?state=%7B%7D" />
        </outline>
        <outline _complete="true" text="Lovehoney query optimisation experiment">
          <outline text="Campaign" _note="https://app.ometria.com/app/68c34c0886c2056e/broadcast-new/7591/segmentation?state=%7B%7D" />
          <outline text="Original query" _note="SELECT &#10;  CASE WHEN (&#10;    segment_combinations.&quot;root&quot; IS true&#10;  ) THEN 'root' END AS node_str, &#10;  count(segment_combinations.id) AS n_customers &#10;FROM &#10;  (&#10;    SELECT &#10;      customers.id AS id, &#10;      account_id = 505 &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            trigger_campaign_customer &#10;          WHERE &#10;            trigger_campaign_customer.customer_id = id &#10;            AND trigger_campaign_customer.is_active IS true &#10;            AND trigger_campaign_customer.is_test IS NOT true &#10;            AND trigger_campaign_customer.is_control_group IS NOT true&#10;        )&#10;      ) &#10;      AND account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(ARRAY[1137])&#10;        )&#10;      ) &#10;      AND email IS NOT NULL &#10;      AND is_email_valid IS NOT false &#10;      AND optin IS true &#10;      AND NOT (&#10;        account_id = 505 &#10;        AND (&#10;          (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(ARRAY[68])&#10;            )&#10;          ) &#10;          OR (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(ARRAY[1156])&#10;            )&#10;          ) &#10;          OR (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(ARRAY[177])&#10;            )&#10;          ) &#10;          OR (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(ARRAY[1154])&#10;            )&#10;          )&#10;        )&#10;      ) AS root &#10;    FROM &#10;      customers&#10;  ) AS segment_combinations &#10;GROUP BY &#10;  node_str&#10;">
            <outline text="Query planner result" _note="   Group Key: (CASE WHEN (((customers.account_id = 505) AND (NOT $0) AND (customers.account_id = 505) AND (alternatives: SubPlan 2 or hashed SubPlan 3) AND (customers.email IS NOT NULL) AND (customers.is_email_valid IS NOT FALSE) AND (customers.optin IS TRUE) AND ((customers.account_id &amp;lt;&amp;gt; 505) OR ((NOT (alternatives: SubPlan 4 or hashed SubPlan 5)) AND (NOT (alternatives: SubPlan 6 or hashed SubPlan 7)) AND (NOT (alternatives: SubPlan 8 or hashed SubPlan 9)) AND (NOT (alternatives: SubPlan 10 or hashed SubPlan 11))))) IS TRUE) THEN 'root'::text ELSE NULL::text END)&#10;   InitPlan 1 (returns $0)&#10;     -&amp;gt;  Index Scan using idx_trigger_campaign_customer_account_id_campaign_id_is_active on trigger_campaign_customer  (cost=0.56..588109.74 rows=525 width=0) (actual time=3181.185..3181.185 rows=0 loops=1)&#10;           Index Cond: (is_active = true)&#10;           Filter: ((is_active IS TRUE) AND (is_test IS NOT TRUE) AND (is_control_group IS NOT TRUE) AND (customer_id = id))&#10;           Rows Removed by Filter: 140585&#10;   -&amp;gt;  Sort  (cost=86272150.87..86288551.70 rows=6560332 width=36) (actual time=13548.837..14247.724 rows=6568057 loops=1)&#10;         Sort Key: (CASE WHEN (((customers.account_id = 505) AND (NOT $0) AND (customers.account_id = 505) AND (alternatives: SubPlan 2 or hashed SubPlan 3) AND (customers.email IS NOT NULL) AND (customers.is_email_valid IS NOT FALSE) AND (customers.optin IS TRUE) AND ((customers.account_id &amp;lt;&amp;gt; 505) OR ((NOT (alternatives: SubPlan 4 or hashed SubPlan 5)) AND (NOT (alternatives: SubPlan 6 or hashed SubPlan 7)) AND (NOT (alternatives: SubPlan 8 or hashed SubPlan 9)) AND (NOT (alternatives: SubPlan 10 or hashed SubPlan 11))))) IS TRUE) THEN 'root'::text ELSE NULL::text END)&#10;         Sort Method: external merge  Disk: 91176kB&#10;         -&amp;gt;  Seq Scan on customers  (cost=0.00..85426840.21 rows=6560332 width=36) (actual time=0.015..12399.609 rows=6568057 loops=1)&#10;               SubPlan 2&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers  (cost=0.57..2.59 rows=1 width=0) (never executed)&#10;                       Index Cond: ((list_id = ANY ('{1137}'::integer[])) AND (customer_id = customers.id))&#10;                       Heap Fetches: 0&#10;               SubPlan 3&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_1  (cost=0.57..23216.46 rows=994177 width=4) (actual time=0.105..374.005 rows=998367 loops=1)&#10;                       Index Cond: (list_id = ANY ('{1137}'::integer[]))&#10;                       Heap Fetches: 291095&#10;               SubPlan 4&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_2  (cost=0.57..2.59 rows=1 width=0) (never executed)&#10;                       Index Cond: ((list_id = ANY ('{68}'::integer[])) AND (customer_id = customers.id))&#10;                       Heap Fetches: 0&#10;               SubPlan 5&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_3  (cost=0.57..2419.17 rows=99334 width=4) (actual time=0.036..75.940 rows=82001 loops=1)&#10;                       Index Cond: (list_id = ANY ('{68}'::integer[]))&#10;                       Heap Fetches: 21509&#10;               SubPlan 6&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_4  (cost=0.57..2.59 rows=1 width=0) (never executed)&#10;                       Index Cond: ((list_id = ANY ('{1156}'::integer[])) AND (customer_id = customers.id))&#10;                       Heap Fetches: 0&#10;               SubPlan 7&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_5  (cost=0.57..2419.17 rows=99334 width=4) (actual time=0.040..48.178 rows=34425 loops=1)&#10;                       Index Cond: (list_id = ANY ('{1156}'::integer[]))&#10;                       Heap Fetches: 15357&#10;               SubPlan 8&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_6  (cost=0.57..2.59 rows=1 width=0) (never executed)&#10;                       Index Cond: ((list_id = ANY ('{177}'::integer[])) AND (customer_id = customers.id))&#10;                       Heap Fetches: 0&#10;               SubPlan 9&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_7  (cost=0.57..16754.59 rows=709773 width=4) (actual time=0.037..744.307 rows=785369 loops=1)&#10;                       Index Cond: (list_id = ANY ('{177}'::integer[]))&#10;                       Heap Fetches: 335698&#10;               SubPlan 10&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_8  (cost=0.57..2.59 rows=1 width=0) (never executed)&#10;                       Index Cond: ((list_id = ANY ('{1154}'::integer[])) AND (customer_id = customers.id))&#10;                       Heap Fetches: 0&#10;               SubPlan 11&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_9  (cost=0.57..2419.17 rows=99334 width=4) (actual time=0.060..51.891 rows=261053 loops=1)&#10;                       Index Cond: (list_id = ANY ('{1154}'::integer[]))&#10;                       Heap Fetches: 39362&#10; Planning time: 4.930 ms&#10; Execution time: 14979.879 ms" />
          </outline>
          <outline text="Optimised query" _note="SELECT &#10;  CASE WHEN (&#10;    segment_combinations.&quot;root&quot; IS true&#10;  ) THEN 'root' END AS node_str, &#10;  count(segment_combinations.id) AS n_customers &#10;FROM &#10;  (&#10;    SELECT &#10;      customers.id AS id, &#10;      account_id = 505 &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            trigger_campaign_customer &#10;          WHERE &#10;            trigger_campaign_customer.customer_id = id &#10;            AND trigger_campaign_customer.is_active IS true &#10;            AND trigger_campaign_customer.is_test IS NOT true &#10;            AND trigger_campaign_customer.is_control_group IS NOT true&#10;        )&#10;      ) &#10;      AND account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(ARRAY[1137])&#10;        )&#10;      ) &#10;      AND email IS NOT NULL &#10;      AND is_email_valid IS NOT false &#10;      AND optin IS true &#10;      AND NOT (&#10;        account_id = 505 &#10;        AND (&#10;          (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(ARRAY[68, 1156, 177, 1154])&#10;            )&#10;          ) &#10;        )&#10;      ) AS root &#10;    FROM &#10;      customers&#10;  ) AS segment_combinations &#10;GROUP BY &#10;  node_str">
            <outline text="Query planner result" _note=" GroupAggregate  (cost=66395465.68..131637967.42 rows=6560332 width=40) (actual time=12011.041..13375.331 rows=2 loops=1)&#10;   Group Key: (CASE WHEN (((customers.account_id = 505) AND (NOT $0) AND (customers.account_id = 505) AND (alternatives: SubPlan 2 or hashed SubPlan 3) AND (customers.email IS NOT NULL) AND (customers.is_email_valid IS NOT FALSE) AND (customers.optin IS TRUE) AND ((customers.account_id &amp;lt;&amp;gt; 505) OR (NOT (alternatives: SubPlan 4 or hashed SubPlan 5)))) IS TRUE) THEN 'root'::text ELSE NULL::text END)&#10;   InitPlan 1 (returns $0)&#10;     -&amp;gt;  Index Scan using idx_trigger_campaign_customer_account_id_campaign_id_is_active on trigger_campaign_customer  (cost=0.56..588109.74 rows=525 width=0) (actual time=2724.304..2724.304 rows=0 loops=1)&#10;           Index Cond: (is_active = true)&#10;           Filter: ((is_active IS TRUE) AND (is_test IS NOT TRUE) AND (is_control_group IS NOT TRUE) AND (customer_id = id))&#10;           Rows Removed by Filter: 140653&#10;   -&amp;gt;  Sort  (cost=66394344.91..66410745.74 rows=6560332 width=36) (actual time=11971.005..12655.624 rows=6568066 loops=1)&#10;         Sort Key: (CASE WHEN (((customers.account_id = 505) AND (NOT $0) AND (customers.account_id = 505) AND (alternatives: SubPlan 2 or hashed SubPlan 3) AND (customers.email IS NOT NULL) AND (customers.is_email_valid IS NOT FALSE) AND (customers.optin IS TRUE) AND ((customers.account_id &amp;lt;&amp;gt; 505) OR (NOT (alternatives: SubPlan 4 or hashed SubPlan 5)))) IS TRUE) THEN 'root'::text ELSE NULL::text END)&#10;         Sort Method: external merge  Disk: 91176kB&#10;         -&amp;gt;  Seq Scan on customers  (cost=0.00..65549034.25 rows=6560332 width=36) (actual time=0.034..10776.264 rows=6568066 loops=1)&#10;               SubPlan 2&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers  (cost=0.57..2.59 rows=1 width=0) (never executed)&#10;                       Index Cond: ((list_id = ANY ('{1137}'::integer[])) AND (customer_id = customers.id))&#10;                       Heap Fetches: 0&#10;               SubPlan 3&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_1  (cost=0.57..23216.46 rows=994177 width=4) (actual time=0.086..313.076 rows=998367 loops=1)&#10;                       Index Cond: (list_id = ANY ('{1137}'::integer[]))&#10;                       Heap Fetches: 291095&#10;               SubPlan 4&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_2  (cost=0.57..7.33 rows=1 width=0) (never executed)&#10;                       Index Cond: ((list_id = ANY ('{68,1156,177,1154}'::integer[])) AND (customer_id = customers.id))&#10;                       Heap Fetches: 0&#10;               SubPlan 5&#10;                 -&amp;gt;  Index Only Scan using lists_customers_pkey on lists_customers lists_customers_3  (cost=0.57..23519.05 rows=1007776 width=4) (actual time=2.584..688.297 rows=1162848 loops=1)&#10;                       Index Cond: (list_id = ANY ('{68,1156,177,1154}'::integer[]))&#10;                       Heap Fetches: 411929&#10; Planning time: 4.365 ms&#10; Execution time: 13403.108 ms" />
          </outline>
          <outline text="Query using customers_lists" _note="SELECT &#10;  CASE WHEN (&#10;    segment_combinations.&quot;root&quot; IS true&#10;  ) THEN 'root' END AS node_str, &#10;  count(segment_combinations.id) AS n_customers &#10;FROM &#10;  (&#10;    SELECT &#10;      customers.id AS id, &#10;      account_id = 505 &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            trigger_campaign_customer &#10;          WHERE &#10;            trigger_campaign_customer.customer_id = id &#10;            AND trigger_campaign_customer.is_active IS true &#10;            AND trigger_campaign_customer.is_test IS NOT true &#10;            AND trigger_campaign_customer.is_control_group IS NOT true&#10;        )&#10;      ) &#10;      AND account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            customers_lists &#10;          WHERE &#10;            customers_lists.customer_id = id &#10;            AND customers_lists.list_ids @&amp;gt; ARRAY[1137]&#10;        )&#10;      ) &#10;      AND email IS NOT NULL &#10;      AND is_email_valid IS NOT false &#10;      AND optin IS true &#10;      AND NOT (&#10;        account_id = 505 &#10;        AND (&#10;          (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                customers_lists &#10;              WHERE &#10;                customers_lists.customer_id = id &#10;                AND customers_lists.list_ids &amp;amp;&amp;amp; ARRAY[68, 1156, 177, 1154]&#10;            )&#10;          ) &#10;        )&#10;      ) AS root &#10;    FROM &#10;      customers&#10;  ) AS segment_combinations &#10;GROUP BY &#10;  node_str&#10;">
            <outline text="EA result" _note=" GroupAggregate  (cost=33495400.70..65837837.46 rows=6560332 width=40) (actual time=15183.249..16559.576 rows=2 loops=1)&#10;   Group Key: (CASE WHEN (((customers.account_id = 505) AND (NOT $0) AND (customers.account_id = 505) AND (alternatives: SubPlan 2 or hashed SubPlan 3) AND (customers.email IS NOT NULL) AND (customers.is_email_valid IS NOT FALSE) AND (customers.optin IS TRUE) AND ((customers.account_id &amp;lt;&amp;gt; 505) OR (NOT (alternatives: SubPlan 4 or hashed SubPlan 5)))) IS TRUE) THEN 'root'::text ELSE NULL::text END)&#10;   InitPlan 1 (returns $0)&#10;     -&amp;gt;  Index Scan using idx_trigger_campaign_customer_account_id_campaign_id_is_active on trigger_campaign_customer  (cost=0.56..588110.74 rows=525 width=0) (actual time=2968.076..2968.076 rows=0 loops=1)&#10;           Index Cond: (is_active = true)&#10;           Filter: ((is_active IS TRUE) AND (is_test IS NOT TRUE) AND (is_control_group IS NOT TRUE) AND (customer_id = id))&#10;           Rows Removed by Filter: 140569&#10;   -&amp;gt;  Sort  (cost=33494279.93..33510680.76 rows=6560332 width=36) (actual time=15138.377..15845.732 rows=6568102 loops=1)&#10;         Sort Key: (CASE WHEN (((customers.account_id = 505) AND (NOT $0) AND (customers.account_id = 505) AND (alternatives: SubPlan 2 or hashed SubPlan 3) AND (customers.email IS NOT NULL) AND (customers.is_email_valid IS NOT FALSE) AND (customers.optin IS TRUE) AND ((customers.account_id &amp;lt;&amp;gt; 505) OR (NOT (alternatives: SubPlan 4 or hashed SubPlan 5)))) IS TRUE) THEN 'root'::text ELSE NULL::text END)&#10;         Sort Method: external merge  Disk: 91176kB&#10;         -&amp;gt;  Seq Scan on customers  (cost=0.00..32648969.27 rows=6560332 width=36) (actual time=0.012..14013.389 rows=6568102 loops=1)&#10;               SubPlan 2&#10;                 -&amp;gt;  Index Scan using idx_customers_lists_customer_id on customers_lists  (cost=0.43..2.45 rows=1 width=0) (never executed)&#10;                       Index Cond: (customer_id = customers.id)&#10;                       Filter: (list_ids @&amp;gt; '{1137}'::integer[])&#10;               SubPlan 3&#10;                 -&amp;gt;  Bitmap Heap Scan on customers_lists customers_lists_1  (cost=8141.65..382307.21 rows=1001245 width=4) (actual time=247.391..3269.528 rows=998367 loops=1)&#10;                       Recheck Cond: (list_ids @&amp;gt; '{1137}'::integer[])&#10;                       Heap Blocks: exact=221912&#10;                       -&amp;gt;  Bitmap Index Scan on idx_customers_lists_list_ids  (cost=0.00..7891.34 rows=1001245 width=0) (actual time=198.542..198.542 rows=1824683 loops=1)&#10;                             Index Cond: (list_ids @&amp;gt; '{1137}'::integer[])&#10;               SubPlan 4&#10;                 -&amp;gt;  Index Scan using idx_customers_lists_customer_id on customers_lists customers_lists_2  (cost=0.43..2.45 rows=1 width=0) (never executed)&#10;                       Index Cond: (customer_id = customers.id)&#10;                       Filter: (list_ids &amp;amp;&amp;amp; '{68,1156,177,1154}'::integer[])&#10;               SubPlan 5&#10;                 -&amp;gt;  Bitmap Heap Scan on customers_lists customers_lists_3  (cost=9733.42..385226.03 rows=1107409 width=4) (actual time=349.510..1051.185 rows=898898 loops=1)&#10;                       Recheck Cond: (list_ids &amp;amp;&amp;amp; '{68,1156,177,1154}'::integer[])&#10;                       Heap Blocks: exact=204626&#10;                       -&amp;gt;  Bitmap Index Scan on idx_customers_lists_list_ids  (cost=0.00..9456.57 rows=1107409 width=0) (actual time=302.314..302.314 rows=1745815 loops=1)&#10;                             Index Cond: (list_ids &amp;amp;&amp;amp; '{68,1156,177,1154}'::integer[])" />
          </outline>
        </outline>
        <outline text="New campaign validation">
          <outline text="Query to find campaigns" _note="SELECT mc.id as campaign_id, a.id as account_id, a.title, mc.dt_created, mc.dt_scheduled FROM mass_campaign mc JOIN accounts a ON a.id = mc.account_id WHERE mass_campaign_configuration_id IS NOT NULL AND dt_created &amp;gt;= '2019-07-23 10:00:00'::timestamp AND account_id NOT IN (352, 79) and is_sent">
            <outline text="With segmentation tree" _note="SELECT mc.id as campaign_id, a.id as account_id, a.title, mc.dt_scheduled, mcc.segmentation_tree FROM mass_campaign mc JOIN accounts a ON a.id = mc.account_id JOIN mass_campaign_configuration mcc ON mcc.id = mc.mass_campaign_configuration_id WHERE mass_campaign_configuration_id IS NOT NULL AND mc.dt_created &amp;gt;= '2019-07-23 10:00:00'::timestamp AND mc.account_id NOT IN (352, 79)" />
          </outline>
          <outline text="Example url" _note="https://app.ometria.com/app/077b8da48581085e/broadcast-new/8261/segmentation?state=%7B%22dateCurrent%22%3A%7B%22datePeriod%22%3A%22last28days%22%2C%22dateFrom%22%3A%222019-06-26T09%3A28%3A17.263Z%22%2C%22dateTo%22%3A%222019-07-23T09%3A28%3A17.263Z%22%7D%2C%22dateCompare%22%3A%7B%22datePeriod%22%3A%22prevperiod%22%2C%22dateFrom%22%3A%222019-05-29T09%3A28%3A17.263Z%22%2C%22dateTo%22%3A%222019-06-25T09%3A28%3A17.263Z%22%7D%7D">
            <outline text="Swop out hash and campaign_id" />
          </outline>
          <outline text="Checked sent campaigns" _note=" shard      | campaign_id | account_id | title        | dt_scheduled&#10;------------|-------------|------------|--------------|------------------------&#10; ecomm_0101 | 8255        | 564        | Lovehoney NZ | 2019-07-24 07:30:00+00&#10; ecomm_0101 | 8227        | 564        | Lovehoney NZ | 2019-07-23 19:00:00+00&#10; ecomm_0101 | 8256        | 554        | Lovehoney AU | 2019-07-24 09:00:00+00&#10; ecomm_0101 | 8230        | 554        | Lovehoney AU | 2019-07-23 21:00:00+00&#10; ecomm_0101 | 8229        | 558        | Lovehoney FR | 2019-07-24 05:00:00+00&#10; ecomm_0101 | 8225        | 560        | Lovehoney DE | 2019-07-24 05:00:00+00&#10; ecomm_0101 | 8239        | 556        | Lovehoney EU | 2019-07-24 06:00:00+00" />
          <outline text="Real time query with updated last run dt" _note="SELECT mc.id as campaign_id, a.id as account_id, a.title, mc.dt_created, mc.dt_scheduled FROM mass_campaign mc JOIN accounts a ON a.id = mc.account_id WHERE mass_campaign_configuration_id IS NOT NULL AND dt_created &amp;gt;= '2019-07-29 14:39:14.278305+00'::timestamp AND account_id NOT IN (352, 79) and is_sent" />
          <outline text="Last ran at" _note="2019-07-29 14:39:14.278305+00" />
        </outline>
        <outline text="Write a mass_email test which recreates the elinks issue introduced when using a newer version of elinks (python:3.6-slim)">
          <outline text="Working payload" _note="{&quot;id&quot;:677,&quot;template_html&quot;:&quot;&amp;lt;!DOCTYPE HTML PUBLIC \&quot;-//W3C//DTD HTML 4.01 Transitional//EN\&quot; \&quot;http://www.w3.org/TR/html4/loose.dtd\&quot;&amp;gt;\n&amp;lt;html lang=\&quot;en\&quot; xmlns=\&quot;http://www.w3.org/1999/xhtml\&quot; xmlns:v=\&quot;urn:schemas-microsoft-com:vml\&quot; xmlns:o=\&quot;urn:schemas-microsoft-com:office:office\&quot;&amp;gt;\n&amp;lt;head&amp;gt;\n  &amp;lt;meta http-equiv=\&quot;Content-Type\&quot; content=\&quot;text/html; charset=utf-8\&quot;&amp;gt;\n  &amp;lt;!--[if !mso]&amp;gt;&amp;lt;!--&amp;gt;\n  &amp;lt;meta http-equiv=\&quot;X-UA-Compatible\&quot; content=\&quot;IE=edge\&quot;&amp;gt;\n  &amp;lt;!--&amp;lt;![endif]--&amp;gt;\n  &amp;lt;!--[if gte mso 9]&amp;gt;&amp;lt;xml&amp;gt;\n  &amp;lt;o:OfficeDocumentSettings&amp;gt;\n    &amp;lt;o:AllowPNG/&amp;gt;\n    &amp;lt;o:PixelsPerInch&amp;gt;96&amp;lt;/o:PixelsPerInch&amp;gt;\n  &amp;lt;/o:OfficeDocumentSettings&amp;gt;\n  &amp;lt;/xml&amp;gt;&amp;lt;![endif]--&amp;gt;\n  &amp;lt;meta name=\&quot;viewport\&quot; content=\&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\&quot;&amp;gt;\n  &amp;lt;meta name=\&quot;apple-mobile-web-app-capable\&quot; content=\&quot;yes\&quot;&amp;gt;\n  &amp;lt;meta name=\&quot;apple-mobile-web-app-status-bar-style\&quot; content=\&quot;black\&quot;&amp;gt;\n  &amp;lt;meta name=\&quot;format-detection\&quot; content=\&quot;telephone=no\&quot;&amp;gt;\n  &amp;lt;meta name=\&quot;robots\&quot; content=\&quot;noindex, nofollow\&quot;&amp;gt;\n  &amp;lt;meta name=\&quot;x-apple-disable-message-reformatting\&quot;&amp;gt;\n  &amp;lt;link rel=\&quot;stylesheet\&quot; type=\&quot;text/css\&quot; href=\&quot;css/app.css\&quot;&amp;gt;\n\n  &amp;lt;title&amp;gt;Ciate London&amp;lt;/title&amp;gt;\n\n  &amp;lt;style type=\&quot;text/css\&quot;&amp;gt;\n    * {-webkit-text-size-adjust:100%; -ms-text-size-adjust:100%;}\n    html, body {Margin:0 !important; padding:0 !important; width:100% !important; min-width:100% !important; height:100% !important; }\n    #outlook a {padding:0 !important;}\n    img {outline:none !important; text-decoration:none !important; border:0 !important;}\n    a img {border:none !important; }\n    table {border-collapse:collapse; mso-table-lspace:0pt !important; mso-table-rspace:0pt !important; min-width:0 !important;border-spacing:0 !important; padding:0 !important;}\n    table th {border-collapse:collapse; mso-table-lspace:0pt !important; mso-table-rspace:0pt !important;font-size:14px;line-height: 18px;font-weight:normal; box-sizing:border-box;}\n    img{-ms-interpolation-mode:bicubic;}\n    .wrapper {width: 100% !important; table-layout: fixed !important;}\n\n    h1 {font-size: 26px;\n      line-height: 1.3;\n      font-family: 'CenturyGothic-Bold',Helvetica, Arial, sans-serif;\n      margin:0;\n      padding: 0;\n      letter-spacing: 6px;\n      text-transform: uppercase;\n      font-weight:bold;\n      \n    }\n\n    h2 {font-size: 18px;\n      line-height: 1.3;\n      font-family: 'CenturyGothic-Bold',Helvetica, Arial, sans-serif;\n      margin:0;\n      padding: 0;\n      text-transform: uppercase;\n      font-weight:bold;\n      \n    }\n   \n    h3 {font-size: 18px;\n      line-height: 1.3;\n      font-family: 'CenturyGothic',Helvetica, Arial, sans-serif;\n      margin:0;\n      padding: 0;\n      letter-spacing: 6px;\n      text-transform: uppercase;\n      font-weight:normal;\n      \n    }\n\n    h4 {font-size: 14px;\n      line-height: 1.2;\n      font-family: 'CenturyGothic',Helvetica, Arial, sans-serif;\n      margin:0;\n      padding: 0;\n      text-transform: uppercase;\n      font-weight:normal;\n      \n    }\n\n    h5 {font-size: 14px;\n      line-height: 1.2;\n      font-family: 'CenturyGothic-BoldItalic',Helvetica, Arial, sans-serif;\n      \n      margin:0;\n      padding: 0;\n      font-weight:bold;\n      font-style: italic;\n      \n\n    }\n\n    h6 {font-size: 14px;\n      line-height: 1.2;\n      font-family: 'CenturyGothic-Italic',Helvetica, Arial, sans-serif;\n      letter-spacing: 2px;\n      margin:0;\n      padding: 0;\n      font-weight:normal;\n      font-style:italic;\n      \n    }\n\n    p,\n    td,\n    th,\n    a {\n      color: #000001;\n      font-family: 'CenturyGothic',Helvetica, Arial, sans-serif;\n      font-weight: normal;\n      padding: 0;\n      margin: 0;\n      font-size:14px;\n      line-height: 1.3;\n       }\n    \n    p{\n      text-align:left;\n    }\n\n    td &amp;gt; a { font-family: 'CenturyGothic-Bold',Helvetica, Arial, sans-serif; }\n\n      #MessageViewBody a {\n    color: inherit;\n    text-decoration: none;\n    font-size: inherit;\n    font-family: inherit;\n    font-weight: inherit;\n    line-height: inherit;\n\n}\n\n#MessageViewBody, #MessageWebViewDiv{\n    width: 100% !important;\n}\n\n    /*Mobile*/\n    @media only screen and (max-width:639px) {\n      .fl{float:left !important;}\n      .fr{float:right !important;}\n      .fc{float:none !important; margin:0 auto!important;}\n      .wr{display:block !important;}\n      .wf{width:100% !important;max-width:100% !important;}\n      .hide{display:none !important;}\n      .show {\n        display:block !important;\n        margin:0 !important;\n        overflow:visible !important;\n        width:auto !important;\n        max-height:inherit !important;\n        font-size:inherit !important;\n        line-height:inherit !important\n      }\n      a[x-apple-data-detectors] {\n        color:inherit !important;\n        text-decoration:none !important;\n        font-size:inherit !important;\n        font-family:inherit !important;\n        font-weight:inherit !important;\n        line-height:inherit !important;\n      }\n      \n      .centermob {\n        margin:0 auto!important;\n        display:block;\n      }\n      .tc{\n        text-align:center!important;\n      }\n      \n      .w25 { \n        width:25%!important;max-width: 25% !important;height:auto !important;\n      }\n      \n      .w33 { \n        width:33%!important;max-width: 33% !important;height:auto !important;\n      }\n      \n      .w45 { \n        width:45%!important;max-width: 45% !important;height:auto !important;\n      }\n      \n      .w50 { \n        width:50%!important;max-width: 50% !important;height:auto !important;\n      }\n\n      .w70 { \n        width:70%!important;max-width: 70% !important;height:auto !important;\n      }\n      \n      .w90 {\n        width:90%!important;max-width: 90% !important;height:auto !important;\n      }\n      \n      .w95 { \n        width:95%!important;max-width: 95% !important;height:auto !important;\n      }\n      \n      .w98 { \n        width:98%!important;max-width: 98% !important;height:auto !important;\n      }\n\n      .btn_mobile{\n        padding-left:10px!important;\n        padding-right:10px!important;\n        box-sizing:border-box;\n      }\n      \n      .mobile-sidepadding{\n        padding-left:10px!important;\n        padding-right:10px!important;\n        box-sizing:border-box;\n      }\n      \n      .ptop10{\n        padding-top:10px!important;\n      }\n      .plr0{\n        padding-left:0px!important;\n        padding-right:0px!important;\n      }\n      .pbot0{\n        padding-bottom:0px!important;\n      }\n      \n      .pbot10{\n        padding-bottom:10px!important;\n      }\n\n      .small-font {font-size:10px !important;}\n\n      th.small-12 {\n    display: inline-block !important;\n    width: 100% !important;\n  }\n\n u + #body { width:100vw !important; } \n\n    }\n\n    \n\n  &amp;lt;/style&amp;gt;\n\n  \n\n&amp;lt;style&amp;gt;\n\n       @font-face {\n                font-family: 'CenturyGothic';\n                src: url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-115ce501a5.eot\&quot;);\n                src:url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-22f7f9b785.woff\&quot;) format(\&quot;woff\&quot;),\n                url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-5c66d498f5.ttf\&quot;) format(\&quot;truetype\&quot;)\n\n              \n            }\n\n      @font-face {\n                font-family: 'CenturyGothic-Bold';\n                src: url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Bold-a046bbf962.eot\&quot;);\n                src:url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Bold-c7a7298a69.woff\&quot;) format(\&quot;woff\&quot;),\n                url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Bold-e75f01ce02.ttf\&quot;) format(\&quot;truetype\&quot;)\n\n              \n            }\n\n      @font-face {\n                font-family: 'CenturyGothic-BoldItalic';\n                src: url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-BoldItalicC-b774754285.eot\&quot;);\n                src:url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-BoldItalic-896542c017.woff\&quot;) format(\&quot;woff\&quot;),\n                url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-BoldItalic-662044deb6.ttf\&quot;) format(\&quot;truetype\&quot;)\n\n              \n            }\n\n      @font-face {\n                font-family: 'CenturyGothic-Italic';\n                src: url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Italic-ca6d35c1b5.eot\&quot;);\n                src:url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Italic-9289799e44.woff\&quot;) format(\&quot;woff\&quot;),\n                url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Italic-098e8c70c1.ttf\&quot;) format(\&quot;truetype\&quot;)\n\n              \n            }\n&amp;lt;/style&amp;gt; \n&amp;lt;!--[if mso]&amp;gt;\n \n&amp;lt;style&amp;gt;\n    th, td, table, div, th a, td a, a, p {\n      font-family: Helvetica, Arial, sans-serif !important; mso-line-height-rule:exactly;]\n\n    h1, h2 {font-weight:bold !important; mso-line-height-rule:exactly;}\n\n    h6 {font-style:italic !important; mso-line-height-rule:exactly;}\n\n    th &amp;gt; a {font-weight:bold !important;}\n\n    p {\n    display: block;\n    margin-block-start: 0px;\n    margin-block-end: 0px;\n    margin-inline-start: 0px;\n    margin-inline-end: 0px;\n}\n\n    \n&amp;lt;/style&amp;gt;\n \n&amp;lt;![endif]--&amp;gt;\n  \n&amp;lt;/head&amp;gt;\n\n&amp;lt;body id=\&quot;body\&quot; class=\&quot;body\&quot; style=\&quot;Margin:0 auto;padding-bottom:10px;padding-right:0;padding-left:0;min-width:100%;background-color:#ffffff;\&quot;&amp;gt;\n&amp;lt;center class=\&quot;wrapper\&quot; style=\&quot;width:100%;table-layout:fixed;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;\&quot;&amp;gt;\n&amp;lt;table width=\&quot;600\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; bgcolor=\&quot;#ffffff\&quot; style=\&quot;max-width:600px; table-layout: fixed;width:100% !important\&quot;&amp;gt;\n&amp;lt;tbody&amp;gt;\n    &amp;lt;tr align=\&quot;center\&quot;&amp;gt;\n        &amp;lt;th valign=\&quot;top\&quot; align=\&quot;center\&quot; style=\&quot;font-family: 'CenturyGothic',Helvetica, Arial, sans-serif;\&quot;&amp;gt;\n&amp;lt;!-- Emailcontent --&amp;gt;\n\n          &amp;lt;table class=\&quot;w95\&quot; width=\&quot;95%\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; align=\&quot;center\&quot; role=\&quot;presentation\&quot; style=\&quot;width:95%;\&quot;&amp;gt;\n            &amp;lt;tr style=\&quot;text-align: center\&quot;&amp;gt;\n              &amp;lt;td height=\&quot;10\&quot; style=\&quot;font-size: 10px; line-height: 10px; text-align: center\&quot;&amp;gt;&amp;amp;#xA0;&amp;lt;/td&amp;gt;\n            &amp;lt;/tr&amp;gt;\n            &amp;lt;tr align=\&quot;center\&quot;&amp;gt;\n              &amp;lt;th align=\&quot;left\&quot; style=\&quot;font-size: 11px; color:#333333; line-height: 15px; mso-line-height-rule: exactly;\&quot;&amp;gt;\n                {{email.preheader}} &amp;lt;span style=\&quot;display: none; max-height:0px;overflow:hidden;\&quot;&amp;gt;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;lt;/span&amp;gt;\n              &amp;lt;/th&amp;gt;\n              &amp;lt;th align=\&quot;right\&quot; style=\&quot;font-size: 11px; color:#333333; line-height: 15px; mso-line-height-rule:exactly;\&quot;&amp;gt;\n                &amp;lt;a href=\&quot;{{email.archive_url}}\&quot; style=\&quot;font-size: 11px; color:#333333;text-decoration: underline\&quot; om:linkid=\&quot;-1:0\&quot;&amp;gt;View in browser&amp;lt;/a&amp;gt; \n              &amp;lt;/th&amp;gt;\n            &amp;lt;/tr&amp;gt;\n            &amp;lt;tr style=\&quot;text-align: center\&quot;&amp;gt;\n              &amp;lt;td height=\&quot;10\&quot; style=\&quot;font-size: 10px; line-height: 10px; text-align: center\&quot;&amp;gt;&amp;amp;#xA0;&amp;lt;/td&amp;gt;\n            &amp;lt;/tr&amp;gt;\n          &amp;lt;/table&amp;gt; \n\n          &amp;lt;span align=\&quot;center\&quot; style=\&quot;color: #ffffff; display: none !important; font-size: 1px; line-height: 1px; max-height: 0px; max-width: 0px; mso-hide: all !important; opacity: 0; overflow: hidden; visibility: hidden\&quot;&amp;gt; {% set url = 'https://www.ciatelondon.com/' %}&amp;lt;/span&amp;gt;\n\n          &amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n            &amp;lt;tr&amp;gt;\n              &amp;lt;th align=\&quot;center\&quot; style=\&quot;font-size:0; line-height:0;\&quot;&amp;gt;\n                &amp;lt;a href=\&quot;{{url}}\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;logo\&quot; style=\&quot;display:block\&quot; om:vid=\&quot;0\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:1\&quot;&amp;gt;\n                  &amp;lt;img src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/CiateLogo-2a964c6a1c.png\&quot; style=\&quot;display: block; max-width:270px;width:270px;height:auto; margin:0 auto;\&quot; border=\&quot;0\&quot; width=\&quot;270\&quot; height=\&quot;auto\&quot; om:label=\&quot;undefined\&quot;&amp;gt;\n                &amp;lt;/a&amp;gt;\n              &amp;lt;/th&amp;gt;\n            &amp;lt;/tr&amp;gt;\n          &amp;lt;/table&amp;gt;\n\n          &amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n          &amp;lt;tr style=\&quot;text-align: center\&quot;&amp;gt;\n              &amp;lt;td height=\&quot;20\&quot; style=\&quot;font-size: 20px; line-height: 20px; text-align: center\&quot;&amp;gt;&amp;amp;#xA0;&amp;lt;/td&amp;gt;\n            &amp;lt;/tr&amp;gt;\n          &amp;lt;/table&amp;gt; \n\n          &amp;lt;div om:blocks=\&quot;true\&quot;&amp;gt;&amp;lt;table class=\&quot;wf\&quot; om:block=\&quot;Image block\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n  &amp;lt;tr&amp;gt;\n    &amp;lt;th align=\&quot;center\&quot; valign=\&quot;top\&quot;&amp;gt;\n       &amp;lt;table class=\&quot;wf\&quot; cellspacing=\&quot;0\&quot; cellpadding=\&quot;0\&quot; align=\&quot;center\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n        &amp;lt;tr align=\&quot;center\&quot;&amp;gt;\n          &amp;lt;th align=\&quot;center\&quot; style=\&quot;font-size:16px; line-height:16px;\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;{{url}}\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;hero\&quot; style=\&quot;display:block\&quot; om:vid=\&quot;8\&quot; om:linkid=\&quot;0:0\&quot;&amp;gt;\n              &amp;lt;img class=\&quot;wf\&quot; src=\&quot;https://cdn-ometria-com.s3-eu-west-1.amazonaws.com/emails/2d210b975eec006e/3291ee8185f294e6212e47675f91a002.gif\&quot; border=\&quot;0\&quot; width=\&quot;600\&quot; height=\&quot;712\&quot; style=\&quot;display: block; border: 0; max-width:100%; height:auto\&quot;&amp;gt;\n            &amp;lt;/a&amp;gt;\n          &amp;lt;/th&amp;gt;\n        &amp;lt;/tr&amp;gt;\n      &amp;lt;/table&amp;gt;\n    &amp;lt;/th&amp;gt;\n  &amp;lt;/tr&amp;gt;\n&amp;lt;/table&amp;gt;&amp;lt;table class=\&quot;wf\&quot; om:block=\&quot;Image block\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n  &amp;lt;tr&amp;gt;\n    &amp;lt;th align=\&quot;center\&quot; valign=\&quot;top\&quot;&amp;gt;\n       &amp;lt;table class=\&quot;wf\&quot; cellspacing=\&quot;0\&quot; cellpadding=\&quot;0\&quot; align=\&quot;center\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n        &amp;lt;tr align=\&quot;center\&quot;&amp;gt;\n          &amp;lt;th align=\&quot;center\&quot; style=\&quot;font-size:16px; line-height:16px;\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;{{url}}\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;hero\&quot; style=\&quot;display:block\&quot; om:vid=\&quot;9\&quot; om:linkid=\&quot;1:0\&quot;&amp;gt;\n              &amp;lt;img class=\&quot;wf\&quot; src=\&quot;https://dummyimage.com/600x300/eeeeee/000\&quot; border=\&quot;0\&quot; width=\&quot;600\&quot; height=\&quot;auto\&quot; style=\&quot;display: block; border: 0; max-width:100%; height:auto\&quot;&amp;gt;\n            &amp;lt;/a&amp;gt;\n          &amp;lt;/th&amp;gt;\n        &amp;lt;/tr&amp;gt;\n      &amp;lt;/table&amp;gt;\n    &amp;lt;/th&amp;gt;\n  &amp;lt;/tr&amp;gt;\n&amp;lt;/table&amp;gt;&amp;lt;/div&amp;gt;\n\n          &amp;lt;!-- Blocks start --&amp;gt;\n\n&amp;lt;!-- Blocks end --&amp;gt;\n\n&amp;lt;!-- Footer --&amp;gt;\n\n&amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%;\&quot;&amp;gt;\n  &amp;lt;tr&amp;gt;\n    &amp;lt;td height=\&quot;12\&quot; style=\&quot;font-size: 12px; line-height: 12px; mso-line-height-rule: exactly;\&quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/td&amp;gt;\n  &amp;lt;/tr&amp;gt;\n&amp;lt;/table&amp;gt;\n\n&amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;600\&quot; role=\&quot;presentation\&quot; style=\&quot;width:600px;\&quot;&amp;gt;\n  &amp;lt;tr&amp;gt;\n\n    &amp;lt;th align=\&quot;center\&quot;&amp;gt;\n      &amp;lt;table align=\&quot;center\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; width=\&quot;200\&quot; border=\&quot;0\&quot; role=\&quot;presentation\&quot;&amp;gt;\n      &amp;lt;tr align=\&quot;center\&quot;&amp;gt;\n         &amp;lt;th style=\&quot;text-align:center;width:20%;max-width: 20%;height:45px\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;https://www.facebook.com/ciatelondon/\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;social1\&quot; om:vid=\&quot;1\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:2\&quot;&amp;gt;&amp;lt;img class=\&quot;centermob\&quot; src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/facebookicon-black-f01d20283a.png\&quot; alt=\&quot;facebook\&quot; style=\&quot;display: block; border: 0; font-size:16px; line-height:16px;width:20px; height:20px;max-width:20px\&quot; border=\&quot;0\&quot; width=\&quot;20\&quot; height=\&quot;20\&quot; om:label=\&quot;undefined\&quot;&amp;gt;&amp;lt;/a&amp;gt;\n        &amp;lt;/th&amp;gt;\n        &amp;lt;th style=\&quot;text-align:center; width:20%;max-width: 20%;height:45px\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;https://twitter.com/ciatelondon/\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;social2\&quot; om:vid=\&quot;2\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:3\&quot;&amp;gt;&amp;lt;img class=\&quot;centermob\&quot; src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/twittericon-black-592dd3c23d.png\&quot; alt=\&quot;twitter\&quot; style=\&quot;display: block; border: 0; font-size:16px; line-height:16px;width:20px; height:20px;max-width:20px\&quot; border=\&quot;0\&quot; width=\&quot;20\&quot; height=\&quot;20\&quot; om:label=\&quot;undefined\&quot;&amp;gt;&amp;lt;/a&amp;gt;\n        &amp;lt;/th&amp;gt;\n        &amp;lt;th style=\&quot;text-align:center; width:20%;max-width: 20%;height:45px\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;https://uk.pinterest.com/ciatelondon/\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;social3\&quot; om:vid=\&quot;3\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:4\&quot;&amp;gt;&amp;lt;img class=\&quot;centermob\&quot; src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/pinteresticon-black-5c00265b1a.png\&quot; alt=\&quot;pinterest\&quot; style=\&quot;display: block; border: 0; font-size:16px; line-height:16px;width:20px; height:20px;max-width:20px\&quot; border=\&quot;0\&quot; width=\&quot;20\&quot; height=\&quot;20\&quot; om:label=\&quot;undefined\&quot;&amp;gt;&amp;lt;/a&amp;gt;\n        &amp;lt;/th&amp;gt;\n        &amp;lt;th style=\&quot;text-align:center;width:20%;max-width: 20%;height:45px\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;https://www.youtube.com/user/NailsbyCiate/videos\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;social4\&quot; om:vid=\&quot;4\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:5\&quot;&amp;gt;&amp;lt;img class=\&quot;centermob\&quot; src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/youtubeicon-black-5e53e01a2b.png\&quot; alt=\&quot;youtube\&quot; style=\&quot;display: block; border: 0; font-size:16px; line-height:16px;width:20px; height:20px;max-width:20px\&quot; border=\&quot;0\&quot; width=\&quot;20\&quot; height=\&quot;20\&quot; om:label=\&quot;undefined\&quot;&amp;gt;&amp;lt;/a&amp;gt;\n        &amp;lt;/th&amp;gt;\n        &amp;lt;th style=\&quot;text-align:center;width:20%;max-width: 20%;height:45px\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;https://www.instagram.com/ciatelondon/\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;social5\&quot; om:vid=\&quot;5\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:6\&quot;&amp;gt;&amp;lt;img class=\&quot;centermob\&quot; src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/instagramicon-black-2bf0d84ae1.png\&quot; alt=\&quot;instagram\&quot; style=\&quot;display: block; border: 0; font-size:16px; line-height:16px;width:20px; height:20px;max-width:20px\&quot; border=\&quot;0\&quot; width=\&quot;20\&quot; height=\&quot;20\&quot; om:label=\&quot;undefined\&quot;&amp;gt;&amp;lt;/a&amp;gt;\n        &amp;lt;/th&amp;gt;\n      &amp;lt;/tr&amp;gt;\n    &amp;lt;/table&amp;gt;\n\n        \n    &amp;lt;/th&amp;gt;\n  &amp;lt;/tr&amp;gt;\n&amp;lt;/table&amp;gt;\n\n    &amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;  \n      &amp;lt;tr&amp;gt;\n        &amp;lt;td height=\&quot;22\&quot; style=\&quot;font-size: 22px; line-height: 22px; mso-line-height-rule: exactly;\&quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/td&amp;gt;\n      &amp;lt;/tr&amp;gt;\n    &amp;lt;/table&amp;gt;\n\n&amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%;\&quot;&amp;gt;\n    &amp;lt;tr&amp;gt;\n    &amp;lt;th align=\&quot;center\&quot;&amp;gt;\n        &amp;lt;table class=\&quot;w95\&quot; width=\&quot;90%\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; align=\&quot;center\&quot;&amp;gt;\n          &amp;lt;tr om:editable=\&quot;html\&quot; om:id=\&quot;tandc\&quot; om:vid=\&quot;6\&quot;&amp;gt;&amp;lt;th align=\&quot;center\&quot; style=\&quot;font-size: 12px; color:#001; line-height: 22px; mso-line-height-rule: exactly;padding-top:10px;padding-bottom:10px;\&quot;&amp;gt;\n            \n              T&amp;amp;Cs; applies &amp;lt;br&amp;gt;\n            \n            &amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;\n          &amp;lt;tr om:editable=\&quot;html\&quot; om:id=\&quot;footer-copy\&quot; om:vid=\&quot;7\&quot;&amp;gt;&amp;lt;th align=\&quot;center\&quot; style=\&quot;font-size: 12px; color:#001; line-height: 22px; mso-line-height-rule: exactly;padding-top:10px;padding-bottom:10px;font-style: italic\&quot;&amp;gt;\n              We are contacting {{profile.email}} as you subscribed to the Ciaté London newsletter .\n              \n              Want to change how you receive these emails? &amp;lt;br&amp;gt;\n              You can &amp;lt;a href=\&quot;{{prefs}}\&quot; target=\&quot;_blank\&quot; style=\&quot;font-size: 12px; color:#001; line-height: 22px; mso-line-height-rule: exactly;font-style: italic\&quot; om:linkid=\&quot;-1:0\&quot;&amp;gt;update your preferences&amp;lt;/a&amp;gt; or\n              &amp;lt;a href=\&quot;{{unsub}}\&quot; target=\&quot;_blank\&quot; style=\&quot;font-size: 12px; color:#001; line-height: 22px; mso-line-height-rule: exactly;font-style: italic\&quot; om:linkid=\&quot;-1:1\&quot;&amp;gt;unsubscribe from this list&amp;lt;/a&amp;gt;. &amp;lt;br&amp;gt;\n            \n            &amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;\n        &amp;lt;/table&amp;gt;\n      &amp;lt;/th&amp;gt;\n    &amp;lt;/tr&amp;gt;\n&amp;lt;/table&amp;gt;\n    &amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;  \n      &amp;lt;tr&amp;gt;\n        &amp;lt;td height=\&quot;12\&quot; style=\&quot;font-size: 12px; line-height: 12px; mso-line-height-rule: exactly;\&quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/td&amp;gt;\n      &amp;lt;/tr&amp;gt;\n    &amp;lt;/table&amp;gt;\n\n&amp;lt;!-- /Emailcontent --&amp;gt;\n&amp;lt;/th&amp;gt;\n&amp;lt;/tr&amp;gt;\n&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;\n&amp;lt;/center&amp;gt;\n&amp;lt;style type=\&quot;text/css\&quot;&amp;gt;\n#secdiv #new-gmail-hack {display: block !important;}\n#MessageWebViewDiv #new-gmail-hack {display: block !important;} (\nu + #new-gmail-hack {\ndisplay: block !important;\n}\n&amp;lt;/style&amp;gt;\n&amp;lt;section&amp;gt;\n&amp;lt;div id=\&quot;new-gmail-hack\&quot; style=\&quot;white-space: nowrap; font: 15px courier; line-height: 0; display: none;\&quot;&amp;gt;\n&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp;\n&amp;lt;/div&amp;gt;\n&amp;lt;/section&amp;gt;\n\n&amp;lt;/body&amp;gt;\n\n&amp;lt;/html&amp;gt;&quot;,&quot;template_text&quot;:&quot; \n{{email.preheader}}                                                                                                                     [1]View\n‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌‌ ‌ ‌ ‌ ‌‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌‌ ‌ ‌ ‌ ‌‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌‌ ‌ ‌ ‌ ‌‌ ‌ ‌ ‌ ‌      in\n                                                                                                                                        browser\n \n\n                                                {% set url = 'https://www.ciatelondon.com/' %}\n\n                                                                   [2][IMG]\n\n \n\n                                                                   [3][IMG]\n\n                                                                   [4][IMG]\n\n \n\n                                         [5]facebook [6]twitter [7]pinterest [8]youtube [9]instagram\n\n \n\n                                                                T&amp;amp;Cs; applies\n         We are contacting {{profile.email}} as you subscribed to the Ciaté London newsletter . Want to change how you receive these\n                                                                   emails?\n                                    You can [10]update your preferences or [11]unsubscribe from this list.\n\n \n\n                                        \n\nReferences\n\n   Visible links\n   2. {{url}}\n   3. {{url}}\n   4. {{url}}\n   5. https://www.facebook.com/ciatelondon/\n   6. https://twitter.com/ciatelondon/\n   7. https://uk.pinterest.com/ciatelondon/\n   8. https://www.youtube.com/user/NailsbyCiate/videos\n   9. https://www.instagram.com/ciatelondon/\n  10. {{prefs}}\n  11. {{unsub}}\n&quot;,&quot;data&quot;:{&quot;unsub&quot;:&quot;https://console.ometria.com/misc/unsubscribe.html&quot;,&quot;email&quot;:{&quot;campaign_identifier&quot;:&quot;123:ME:456_201907231411&quot;,&quot;campaign_title&quot;:&quot;campaign_title&quot;,&quot;to_email_address&quot;:&quot;example@example.com&quot;,&quot;subject&quot;:&quot;Check out this amazing email&quot;,&quot;archive_url&quot;:&quot;https://www.ometria.com/&quot;,&quot;preheader&quot;:&quot;Preheader goes here&quot;,&quot;account_hash&quot;:&quot;developer_testing&quot;},&quot;profile&quot;:{&quot;firstname&quot;:&quot;Bob&quot;,&quot;middlename&quot;:null,&quot;lastname&quot;:&quot;Jones&quot;,&quot;name&quot;:&quot;Bob Jones&quot;,&quot;email&quot;:&quot;example@example.com&quot;,&quot;gender&quot;:null,&quot;prefix&quot;:null,&quot;suffix&quot;:null,&quot;country&quot;:&quot;GB&quot;,&quot;date_of_birth&quot;:&quot;1980-01-01&quot;,&quot;total_revenue&quot;:0,&quot;marketing_optin&quot;:true,&quot;lifecycle_status&quot;:&quot;ACTIVE&quot;,&quot;number_of_orders&quot;:0,&quot;number_of_attempted_orders&quot;:0,&quot;number_of_visits&quot;:0,&quot;average_order_value&quot;:0,&quot;number_of_items_purchased&quot;:0,&quot;properties&quot;:{&quot;field_name_1&quot;:&quot;value_1&quot;,&quot;field_name_2&quot;:&quot;value_2&quot;,&quot;field_name_3&quot;:&quot;value_3&quot;},&quot;segment_ids&quot;:[],&quot;last_store&quot;:null,&quot;home_store&quot;:&quot;default&quot;},&quot;products&quot;:[{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£17&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Liquid Lipstick&quot;,&quot;vendor&quot;:&quot;Transforming Glitter Liquid Lipstick&quot;,&quot;tag&quot;:&quot;prodrec&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:17,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Glitter Flip&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=11223934868&quot;,&quot;id&quot;:&quot;11223934868&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FGLF014-Glitter-Flip-Scandal-Product-_-Pack.jpg%3Fv%3D1539767953&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£10&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Complexion&quot;,&quot;vendor&quot;:&quot;Hydrating Primer and Lip Oil Mini Duo&quot;,&quot;tag&quot;:&quot;watermelon&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:10,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Watermelon Burst Hydrating Primer &amp;amp; Lip Oil Duo&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=3577278431318&quot;,&quot;id&quot;:&quot;3577278431318&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FWMD001-Watermelon-Burst-Hydrating-Primer-_-Lip-Oil-Duo-Pack-and-Product.jpg%3Fv%3D1559295064&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£5.60&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Sale&quot;,&quot;vendor&quot;:&quot;2 Piece Mini Glitter Flip Set&quot;,&quot;tag&quot;:&quot;set&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:5.6,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Glitter Flip Duo - Infamous Holo &amp;amp; Candy&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=1389247823972&quot;,&quot;id&quot;:&quot;1389247823972&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FGFD001-Glitter-Flip-Duo-Pack.jpg%3Fv%3D1541612928&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£19.50&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Halloween Edit&quot;,&quot;vendor&quot;:&quot;Intensely volumising mascara&quot;,&quot;tag&quot;:&quot;prodrec&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:19.5,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Wonderwand Mascara&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=8532318215&quot;,&quot;id&quot;:&quot;8532318215&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FWWM001-Wonderwand-Mascara-Pack-and-Product.jpg%3Fv%3D1537268971&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£15&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Eyeliner&quot;,&quot;vendor&quot;:&quot;Gel-Kohl Eyeliner&quot;,&quot;tag&quot;:&quot;wonder&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:15,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Wonderwand Liner&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=8850186183&quot;,&quot;id&quot;:&quot;8850186183&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FWWL001-Wonderwand-Eyeliner-Black-Pack-and-Product-2.jpg%3Fv%3D1488368130&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£22&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Vegan Makeup&quot;,&quot;vendor&quot;:&quot;Metallic Glitter Eyeshadow&quot;,&quot;tag&quot;:&quot;prodrec&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:22,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Marbled Metals&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=3545188139094&quot;,&quot;id&quot;:&quot;3545188139094&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FEMM002-Marbled-Metals-Gilded-Pack-and-Product.jpg%3Fv%3D1560503237&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£28&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Face&quot;,&quot;vendor&quot;:&quot;Radiant Buildable Liquid Foundation&quot;,&quot;tag&quot;:&quot;prodrec&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:28,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Extraordinary Foundation&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=1947544059990&quot;,&quot;id&quot;:&quot;1947544059990&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FFDT-GIF2.gif%3Fv%3D1556262588&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£14.50&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Halloween Edit&quot;,&quot;vendor&quot;:&quot;Eyeshadow Palette&quot;,&quot;tag&quot;:&quot;Pretty Fun &amp;amp; Fearless Palettes&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:14.5,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;FUN Palette&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=6517056007&quot;,&quot;id&quot;:&quot;6517056007&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FESP002---PFF-Palette---Fun-Pack-and-Product-Open.jpg%3Fv%3D1488300653&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£14.50&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Sale&quot;,&quot;vendor&quot;:&quot;Eyeshadow Palette&quot;,&quot;tag&quot;:&quot;smoky&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:14.5,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;PRETTY Palette&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=6516676295&quot;,&quot;id&quot;:&quot;6516676295&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FESP001---PFF-Palettes---Pretty-Pack-and-Product-Open.jpg%3Fv%3D1488300539&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£12&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;GELOLOGY MENTION ME OFFER - DO NOT DELETE&quot;,&quot;vendor&quot;:&quot;Gelology&quot;,&quot;tag&quot;:&quot;prodrec&quot;,&quot;type&quot;:&quot;Nail Polish&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:12,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Gelology Top Coat&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=5973685767&quot;,&quot;id&quot;:&quot;5973685767&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FNT050-Gelology-Top-Coat.jpg%3Fv%3D1460040032&quot;,&quot;@type&quot;:&quot;product&quot;}]},&quot;emails&quot;:[&quot;sam@ometria.com&quot;],&quot;parent_template_instance_id&quot;:1035,&quot;template_instance_id&quot;:1516,&quot;variant_id&quot;:684}" />
          <outline text="Broken payload" _note="{&quot;id&quot;:677,&quot;template_html&quot;:&quot;&amp;lt;!DOCTYPE HTML PUBLIC \&quot;-//W3C//DTD HTML 4.01 Transitional//EN\&quot; \&quot;http://www.w3.org/TR/html4/loose.dtd\&quot;&amp;gt;\n&amp;lt;html lang=\&quot;en\&quot; xmlns=\&quot;http://www.w3.org/1999/xhtml\&quot; xmlns:v=\&quot;urn:schemas-microsoft-com:vml\&quot; xmlns:o=\&quot;urn:schemas-microsoft-com:office:office\&quot;&amp;gt;\n&amp;lt;head&amp;gt;\n  &amp;lt;meta http-equiv=\&quot;Content-Type\&quot; content=\&quot;text/html; charset=utf-8\&quot;&amp;gt;\n  &amp;lt;!--[if !mso]&amp;gt;&amp;lt;!--&amp;gt;\n  &amp;lt;meta http-equiv=\&quot;X-UA-Compatible\&quot; content=\&quot;IE=edge\&quot;&amp;gt;\n  &amp;lt;!--&amp;lt;![endif]--&amp;gt;\n  &amp;lt;!--[if gte mso 9]&amp;gt;&amp;lt;xml&amp;gt;\n  &amp;lt;o:OfficeDocumentSettings&amp;gt;\n    &amp;lt;o:AllowPNG/&amp;gt;\n    &amp;lt;o:PixelsPerInch&amp;gt;96&amp;lt;/o:PixelsPerInch&amp;gt;\n  &amp;lt;/o:OfficeDocumentSettings&amp;gt;\n  &amp;lt;/xml&amp;gt;&amp;lt;![endif]--&amp;gt;\n  &amp;lt;meta name=\&quot;viewport\&quot; content=\&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\&quot;&amp;gt;\n  &amp;lt;meta name=\&quot;apple-mobile-web-app-capable\&quot; content=\&quot;yes\&quot;&amp;gt;\n  &amp;lt;meta name=\&quot;apple-mobile-web-app-status-bar-style\&quot; content=\&quot;black\&quot;&amp;gt;\n  &amp;lt;meta name=\&quot;format-detection\&quot; content=\&quot;telephone=no\&quot;&amp;gt;\n  &amp;lt;meta name=\&quot;robots\&quot; content=\&quot;noindex, nofollow\&quot;&amp;gt;\n  &amp;lt;meta name=\&quot;x-apple-disable-message-reformatting\&quot;&amp;gt;\n  &amp;lt;link rel=\&quot;stylesheet\&quot; type=\&quot;text/css\&quot; href=\&quot;css/app.css\&quot;&amp;gt;\n\n  &amp;lt;title&amp;gt;Ciate London&amp;lt;/title&amp;gt;\n\n  &amp;lt;style type=\&quot;text/css\&quot;&amp;gt;\n    * {-webkit-text-size-adjust:100%; -ms-text-size-adjust:100%;}\n    html, body {Margin:0 !important; padding:0 !important; width:100% !important; min-width:100% !important; height:100% !important; }\n    #outlook a {padding:0 !important;}\n    img {outline:none !important; text-decoration:none !important; border:0 !important;}\n    a img {border:none !important; }\n    table {border-collapse:collapse; mso-table-lspace:0pt !important; mso-table-rspace:0pt !important; min-width:0 !important;border-spacing:0 !important; padding:0 !important;}\n    table th {border-collapse:collapse; mso-table-lspace:0pt !important; mso-table-rspace:0pt !important;font-size:14px;line-height: 18px;font-weight:normal; box-sizing:border-box;}\n    img{-ms-interpolation-mode:bicubic;}\n    .wrapper {width: 100% !important; table-layout: fixed !important;}\n\n    h1 {font-size: 26px;\n      line-height: 1.3;\n      font-family: 'CenturyGothic-Bold',Helvetica, Arial, sans-serif;\n      margin:0;\n      padding: 0;\n      letter-spacing: 6px;\n      text-transform: uppercase;\n      font-weight:bold;\n      \n    }\n\n    h2 {font-size: 18px;\n      line-height: 1.3;\n      font-family: 'CenturyGothic-Bold',Helvetica, Arial, sans-serif;\n      margin:0;\n      padding: 0;\n      text-transform: uppercase;\n      font-weight:bold;\n      \n    }\n   \n    h3 {font-size: 18px;\n      line-height: 1.3;\n      font-family: 'CenturyGothic',Helvetica, Arial, sans-serif;\n      margin:0;\n      padding: 0;\n      letter-spacing: 6px;\n      text-transform: uppercase;\n      font-weight:normal;\n      \n    }\n\n    h4 {font-size: 14px;\n      line-height: 1.2;\n      font-family: 'CenturyGothic',Helvetica, Arial, sans-serif;\n      margin:0;\n      padding: 0;\n      text-transform: uppercase;\n      font-weight:normal;\n      \n    }\n\n    h5 {font-size: 14px;\n      line-height: 1.2;\n      font-family: 'CenturyGothic-BoldItalic',Helvetica, Arial, sans-serif;\n      \n      margin:0;\n      padding: 0;\n      font-weight:bold;\n      font-style: italic;\n      \n\n    }\n\n    h6 {font-size: 14px;\n      line-height: 1.2;\n      font-family: 'CenturyGothic-Italic',Helvetica, Arial, sans-serif;\n      letter-spacing: 2px;\n      margin:0;\n      padding: 0;\n      font-weight:normal;\n      font-style:italic;\n      \n    }\n\n    p,\n    td,\n    th,\n    a {\n      color: #000001;\n      font-family: 'CenturyGothic',Helvetica, Arial, sans-serif;\n      font-weight: normal;\n      padding: 0;\n      margin: 0;\n      font-size:14px;\n      line-height: 1.3;\n       }\n    \n    p{\n      text-align:left;\n    }\n\n    td &amp;gt; a { font-family: 'CenturyGothic-Bold',Helvetica, Arial, sans-serif; }\n\n      #MessageViewBody a {\n    color: inherit;\n    text-decoration: none;\n    font-size: inherit;\n    font-family: inherit;\n    font-weight: inherit;\n    line-height: inherit;\n\n}\n\n#MessageViewBody, #MessageWebViewDiv{\n    width: 100% !important;\n}\n\n    /*Mobile*/\n    @media only screen and (max-width:639px) {\n      .fl{float:left !important;}\n      .fr{float:right !important;}\n      .fc{float:none !important; margin:0 auto!important;}\n      .wr{display:block !important;}\n      .wf{width:100% !important;max-width:100% !important;}\n      .hide{display:none !important;}\n      .show {\n        display:block !important;\n        margin:0 !important;\n        overflow:visible !important;\n        width:auto !important;\n        max-height:inherit !important;\n        font-size:inherit !important;\n        line-height:inherit !important\n      }\n      a[x-apple-data-detectors] {\n        color:inherit !important;\n        text-decoration:none !important;\n        font-size:inherit !important;\n        font-family:inherit !important;\n        font-weight:inherit !important;\n        line-height:inherit !important;\n      }\n      \n      .centermob {\n        margin:0 auto!important;\n        display:block;\n      }\n      .tc{\n        text-align:center!important;\n      }\n      \n      .w25 { \n        width:25%!important;max-width: 25% !important;height:auto !important;\n      }\n      \n      .w33 { \n        width:33%!important;max-width: 33% !important;height:auto !important;\n      }\n      \n      .w45 { \n        width:45%!important;max-width: 45% !important;height:auto !important;\n      }\n      \n      .w50 { \n        width:50%!important;max-width: 50% !important;height:auto !important;\n      }\n\n      .w70 { \n        width:70%!important;max-width: 70% !important;height:auto !important;\n      }\n      \n      .w90 {\n        width:90%!important;max-width: 90% !important;height:auto !important;\n      }\n      \n      .w95 { \n        width:95%!important;max-width: 95% !important;height:auto !important;\n      }\n      \n      .w98 { \n        width:98%!important;max-width: 98% !important;height:auto !important;\n      }\n\n      .btn_mobile{\n        padding-left:10px!important;\n        padding-right:10px!important;\n        box-sizing:border-box;\n      }\n      \n      .mobile-sidepadding{\n        padding-left:10px!important;\n        padding-right:10px!important;\n        box-sizing:border-box;\n      }\n      \n      .ptop10{\n        padding-top:10px!important;\n      }\n      .plr0{\n        padding-left:0px!important;\n        padding-right:0px!important;\n      }\n      .pbot0{\n        padding-bottom:0px!important;\n      }\n      \n      .pbot10{\n        padding-bottom:10px!important;\n      }\n\n      .small-font {font-size:10px !important;}\n\n      th.small-12 {\n    display: inline-block !important;\n    width: 100% !important;\n  }\n\n u + #body { width:100vw !important; } \n\n    }\n\n    \n\n  &amp;lt;/style&amp;gt;\n\n  \n\n&amp;lt;style&amp;gt;\n\n       @font-face {\n                font-family: 'CenturyGothic';\n                src: url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-115ce501a5.eot\&quot;);\n                src:url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-22f7f9b785.woff\&quot;) format(\&quot;woff\&quot;),\n                url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-5c66d498f5.ttf\&quot;) format(\&quot;truetype\&quot;)\n\n              \n            }\n\n      @font-face {\n                font-family: 'CenturyGothic-Bold';\n                src: url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Bold-a046bbf962.eot\&quot;);\n                src:url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Bold-c7a7298a69.woff\&quot;) format(\&quot;woff\&quot;),\n                url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Bold-e75f01ce02.ttf\&quot;) format(\&quot;truetype\&quot;)\n\n              \n            }\n\n      @font-face {\n                font-family: 'CenturyGothic-BoldItalic';\n                src: url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-BoldItalicC-b774754285.eot\&quot;);\n                src:url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-BoldItalic-896542c017.woff\&quot;) format(\&quot;woff\&quot;),\n                url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-BoldItalic-662044deb6.ttf\&quot;) format(\&quot;truetype\&quot;)\n\n              \n            }\n\n      @font-face {\n                font-family: 'CenturyGothic-Italic';\n                src: url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Italic-ca6d35c1b5.eot\&quot;);\n                src:url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Italic-9289799e44.woff\&quot;) format(\&quot;woff\&quot;),\n                url(\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/fonts/CenturyGothic-Italic-098e8c70c1.ttf\&quot;) format(\&quot;truetype\&quot;)\n\n              \n            }\n&amp;lt;/style&amp;gt; \n&amp;lt;!--[if mso]&amp;gt;\n \n&amp;lt;style&amp;gt;\n    th, td, table, div, th a, td a, a, p {\n      font-family: Helvetica, Arial, sans-serif !important; mso-line-height-rule:exactly;]\n\n    h1, h2 {font-weight:bold !important; mso-line-height-rule:exactly;}\n\n    h6 {font-style:italic !important; mso-line-height-rule:exactly;}\n\n    th &amp;gt; a {font-weight:bold !important;}\n\n    p {\n    display: block;\n    margin-block-start: 0px;\n    margin-block-end: 0px;\n    margin-inline-start: 0px;\n    margin-inline-end: 0px;\n}\n\n    \n&amp;lt;/style&amp;gt;\n \n&amp;lt;![endif]--&amp;gt;\n  \n&amp;lt;/head&amp;gt;\n\n&amp;lt;body id=\&quot;body\&quot; class=\&quot;body\&quot; style=\&quot;Margin:0 auto;padding-bottom:10px;padding-right:0;padding-left:0;min-width:100%;background-color:#ffffff;\&quot;&amp;gt;\n&amp;lt;center class=\&quot;wrapper\&quot; style=\&quot;width:100%;table-layout:fixed;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;\&quot;&amp;gt;\n&amp;lt;table width=\&quot;600\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; bgcolor=\&quot;#ffffff\&quot; style=\&quot;max-width:600px; table-layout: fixed;width:100% !important\&quot;&amp;gt;\n&amp;lt;tbody&amp;gt;\n    &amp;lt;tr align=\&quot;center\&quot;&amp;gt;\n        &amp;lt;th valign=\&quot;top\&quot; align=\&quot;center\&quot; style=\&quot;font-family: 'CenturyGothic',Helvetica, Arial, sans-serif;\&quot;&amp;gt;\n&amp;lt;!-- Emailcontent --&amp;gt;\n\n          &amp;lt;table class=\&quot;w95\&quot; width=\&quot;95%\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; align=\&quot;center\&quot; role=\&quot;presentation\&quot; style=\&quot;width:95%;\&quot;&amp;gt;\n            &amp;lt;tr style=\&quot;text-align: center\&quot;&amp;gt;\n              &amp;lt;td height=\&quot;10\&quot; style=\&quot;font-size: 10px; line-height: 10px; text-align: center\&quot;&amp;gt;&amp;amp;#xA0;&amp;lt;/td&amp;gt;\n            &amp;lt;/tr&amp;gt;\n            &amp;lt;tr align=\&quot;center\&quot;&amp;gt;\n              &amp;lt;th align=\&quot;left\&quot; style=\&quot;font-size: 11px; color:#333333; line-height: 15px; mso-line-height-rule: exactly;\&quot;&amp;gt;\n                {{email.preheader}} &amp;lt;span style=\&quot;display: none; max-height:0px;overflow:hidden;\&quot;&amp;gt;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;amp;nbsp;&amp;amp;zwnj;&amp;lt;/span&amp;gt;\n              &amp;lt;/th&amp;gt;\n              &amp;lt;th align=\&quot;right\&quot; style=\&quot;font-size: 11px; color:#333333; line-height: 15px; mso-line-height-rule:exactly;\&quot;&amp;gt;\n                &amp;lt;a href=\&quot;{{email.archive_url}}\&quot; style=\&quot;font-size: 11px; color:#333333;text-decoration: underline\&quot; om:linkid=\&quot;-1:0\&quot;&amp;gt;View in browser&amp;lt;/a&amp;gt; \n              &amp;lt;/th&amp;gt;\n            &amp;lt;/tr&amp;gt;\n            &amp;lt;tr style=\&quot;text-align: center\&quot;&amp;gt;\n              &amp;lt;td height=\&quot;10\&quot; style=\&quot;font-size: 10px; line-height: 10px; text-align: center\&quot;&amp;gt;&amp;amp;#xA0;&amp;lt;/td&amp;gt;\n            &amp;lt;/tr&amp;gt;\n          &amp;lt;/table&amp;gt; \n\n          &amp;lt;span align=\&quot;center\&quot; style=\&quot;color: #ffffff; display: none !important; font-size: 1px; line-height: 1px; max-height: 0px; max-width: 0px; mso-hide: all !important; opacity: 0; overflow: hidden; visibility: hidden\&quot;&amp;gt; {% set url = 'https://www.ciatelondon.com/' %}&amp;lt;/span&amp;gt;\n\n          &amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n            &amp;lt;tr&amp;gt;\n              &amp;lt;th align=\&quot;center\&quot; style=\&quot;font-size:0; line-height:0;\&quot;&amp;gt;\n                &amp;lt;a href=\&quot;{{url}}\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;logo\&quot; style=\&quot;display:block\&quot; om:vid=\&quot;0\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:1\&quot;&amp;gt;\n                  &amp;lt;img src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/CiateLogo-2a964c6a1c.png\&quot; style=\&quot;display: block; max-width:270px;width:270px;height:auto; margin:0 auto;\&quot; border=\&quot;0\&quot; width=\&quot;270\&quot; height=\&quot;auto\&quot; om:label=\&quot;undefined\&quot;&amp;gt;\n                &amp;lt;/a&amp;gt;\n              &amp;lt;/th&amp;gt;\n            &amp;lt;/tr&amp;gt;\n          &amp;lt;/table&amp;gt;\n\n          &amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n          &amp;lt;tr style=\&quot;text-align: center\&quot;&amp;gt;\n              &amp;lt;td height=\&quot;20\&quot; style=\&quot;font-size: 20px; line-height: 20px; text-align: center\&quot;&amp;gt;&amp;amp;#xA0;&amp;lt;/td&amp;gt;\n            &amp;lt;/tr&amp;gt;\n          &amp;lt;/table&amp;gt; \n\n          &amp;lt;div om:blocks=\&quot;true\&quot;&amp;gt;&amp;lt;table class=\&quot;wf\&quot; om:block=\&quot;Image block\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n  &amp;lt;tr&amp;gt;\n    &amp;lt;th align=\&quot;center\&quot; valign=\&quot;top\&quot;&amp;gt;\n       &amp;lt;table class=\&quot;wf\&quot; cellspacing=\&quot;0\&quot; cellpadding=\&quot;0\&quot; align=\&quot;center\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n        &amp;lt;tr align=\&quot;center\&quot;&amp;gt;\n          &amp;lt;th align=\&quot;center\&quot; style=\&quot;font-size:16px; line-height:16px;\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;{{url}}\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;hero\&quot; style=\&quot;display:block\&quot; om:vid=\&quot;8\&quot; om:linkid=\&quot;0:0\&quot;&amp;gt;\n              &amp;lt;img class=\&quot;wf\&quot; src=\&quot;https://cdn-ometria-com.s3-eu-west-1.amazonaws.com/emails/2d210b975eec006e/3291ee8185f294e6212e47675f91a002.gif\&quot; border=\&quot;0\&quot; width=\&quot;600\&quot; height=\&quot;712\&quot; style=\&quot;display: block; border: 0; max-width:100%; height:auto\&quot;&amp;gt;\n            &amp;lt;/a&amp;gt;\n          &amp;lt;/th&amp;gt;\n        &amp;lt;/tr&amp;gt;\n      &amp;lt;/table&amp;gt;\n    &amp;lt;/th&amp;gt;\n  &amp;lt;/tr&amp;gt;\n&amp;lt;/table&amp;gt;&amp;lt;table class=\&quot;wf\&quot; om:block=\&quot;Image block\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n  &amp;lt;tr&amp;gt;\n    &amp;lt;th align=\&quot;center\&quot; valign=\&quot;top\&quot;&amp;gt;\n       &amp;lt;table class=\&quot;wf\&quot; cellspacing=\&quot;0\&quot; cellpadding=\&quot;0\&quot; align=\&quot;center\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; style=\&quot;width:100%\&quot;&amp;gt;\n        &amp;lt;tr align=\&quot;center\&quot;&amp;gt;\n          &amp;lt;th align=\&quot;center\&quot; style=\&quot;font-size:16px; line-height:16px;\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;{{url}}\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;hero\&quot; style=\&quot;display:block\&quot; om:vid=\&quot;9\&quot; om:linkid=\&quot;1:0\&quot;&amp;gt;\n              &amp;lt;img class=\&quot;wf\&quot; src=\&quot;https://dummyimage.com/600x300/eeeeee/000\&quot; border=\&quot;0\&quot; width=\&quot;600\&quot; height=\&quot;auto\&quot; style=\&quot;display: block; border: 0; max-width:100%; height:auto\&quot;&amp;gt;\n            &amp;lt;/a&amp;gt;\n          &amp;lt;/th&amp;gt;\n        &amp;lt;/tr&amp;gt;\n      &amp;lt;/table&amp;gt;\n    &amp;lt;/th&amp;gt;\n  &amp;lt;/tr&amp;gt;\n&amp;lt;/table&amp;gt;&amp;lt;/div&amp;gt;\n\n          &amp;lt;!-- Blocks start --&amp;gt;\n\n&amp;lt;!-- Blocks end --&amp;gt;\n\n&amp;lt;!-- Footer --&amp;gt;\n\n&amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%;\&quot;&amp;gt;\n  &amp;lt;tr&amp;gt;\n    &amp;lt;td height=\&quot;12\&quot; style=\&quot;font-size: 12px; line-height: 12px; mso-line-height-rule: exactly;\&quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/td&amp;gt;\n  &amp;lt;/tr&amp;gt;\n&amp;lt;/table&amp;gt;\n\n&amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;600\&quot; role=\&quot;presentation\&quot; style=\&quot;width:600px;\&quot;&amp;gt;\n  &amp;lt;tr&amp;gt;\n\n    &amp;lt;th align=\&quot;center\&quot;&amp;gt;\n      &amp;lt;table align=\&quot;center\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; width=\&quot;200\&quot; border=\&quot;0\&quot; role=\&quot;presentation\&quot;&amp;gt;\n      &amp;lt;tr align=\&quot;center\&quot;&amp;gt;\n         &amp;lt;th style=\&quot;text-align:center;width:20%;max-width: 20%;height:45px\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;https://www.facebook.com/ciatelondon/\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;social1\&quot; om:vid=\&quot;1\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:2\&quot;&amp;gt;&amp;lt;img class=\&quot;centermob\&quot; src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/facebookicon-black-f01d20283a.png\&quot; alt=\&quot;facebook\&quot; style=\&quot;display: block; border: 0; font-size:16px; line-height:16px;width:20px; height:20px;max-width:20px\&quot; border=\&quot;0\&quot; width=\&quot;20\&quot; height=\&quot;20\&quot; om:label=\&quot;undefined\&quot;&amp;gt;&amp;lt;/a&amp;gt;\n        &amp;lt;/th&amp;gt;\n        &amp;lt;th style=\&quot;text-align:center; width:20%;max-width: 20%;height:45px\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;https://twitter.com/ciatelondon/\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;social2\&quot; om:vid=\&quot;2\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:3\&quot;&amp;gt;&amp;lt;img class=\&quot;centermob\&quot; src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/twittericon-black-592dd3c23d.png\&quot; alt=\&quot;twitter\&quot; style=\&quot;display: block; border: 0; font-size:16px; line-height:16px;width:20px; height:20px;max-width:20px\&quot; border=\&quot;0\&quot; width=\&quot;20\&quot; height=\&quot;20\&quot; om:label=\&quot;undefined\&quot;&amp;gt;&amp;lt;/a&amp;gt;\n        &amp;lt;/th&amp;gt;\n        &amp;lt;th style=\&quot;text-align:center; width:20%;max-width: 20%;height:45px\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;https://uk.pinterest.com/ciatelondon/\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;social3\&quot; om:vid=\&quot;3\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:4\&quot;&amp;gt;&amp;lt;img class=\&quot;centermob\&quot; src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/pinteresticon-black-5c00265b1a.png\&quot; alt=\&quot;pinterest\&quot; style=\&quot;display: block; border: 0; font-size:16px; line-height:16px;width:20px; height:20px;max-width:20px\&quot; border=\&quot;0\&quot; width=\&quot;20\&quot; height=\&quot;20\&quot; om:label=\&quot;undefined\&quot;&amp;gt;&amp;lt;/a&amp;gt;\n        &amp;lt;/th&amp;gt;\n        &amp;lt;th style=\&quot;text-align:center;width:20%;max-width: 20%;height:45px\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;https://www.youtube.com/user/NailsbyCiate/videos\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;social4\&quot; om:vid=\&quot;4\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:5\&quot;&amp;gt;&amp;lt;img class=\&quot;centermob\&quot; src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/youtubeicon-black-5e53e01a2b.png\&quot; alt=\&quot;youtube\&quot; style=\&quot;display: block; border: 0; font-size:16px; line-height:16px;width:20px; height:20px;max-width:20px\&quot; border=\&quot;0\&quot; width=\&quot;20\&quot; height=\&quot;20\&quot; om:label=\&quot;undefined\&quot;&amp;gt;&amp;lt;/a&amp;gt;\n        &amp;lt;/th&amp;gt;\n        &amp;lt;th style=\&quot;text-align:center;width:20%;max-width: 20%;height:45px\&quot;&amp;gt;\n            &amp;lt;a href=\&quot;https://www.instagram.com/ciatelondon/\&quot; target=\&quot;_blank\&quot; om:editable=\&quot;image\&quot; om:id=\&quot;social5\&quot; om:vid=\&quot;5\&quot; om:linkname=\&quot;undefined\&quot; om:label=\&quot;undefined\&quot; om:linkid=\&quot;-1:6\&quot;&amp;gt;&amp;lt;img class=\&quot;centermob\&quot; src=\&quot;https://s3-eu-west-1.amazonaws.com/assets.ometria.email/emails/ciate/assets/img/instagramicon-black-2bf0d84ae1.png\&quot; alt=\&quot;instagram\&quot; style=\&quot;display: block; border: 0; font-size:16px; line-height:16px;width:20px; height:20px;max-width:20px\&quot; border=\&quot;0\&quot; width=\&quot;20\&quot; height=\&quot;20\&quot; om:label=\&quot;undefined\&quot;&amp;gt;&amp;lt;/a&amp;gt;\n        &amp;lt;/th&amp;gt;\n      &amp;lt;/tr&amp;gt;\n    &amp;lt;/table&amp;gt;\n\n        \n    &amp;lt;/th&amp;gt;\n  &amp;lt;/tr&amp;gt;\n&amp;lt;/table&amp;gt;\n\n    &amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;  \n      &amp;lt;tr&amp;gt;\n        &amp;lt;td height=\&quot;22\&quot; style=\&quot;font-size: 22px; line-height: 22px; mso-line-height-rule: exactly;\&quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/td&amp;gt;\n      &amp;lt;/tr&amp;gt;\n    &amp;lt;/table&amp;gt;\n\n&amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%;\&quot;&amp;gt;\n    &amp;lt;tr&amp;gt;\n    &amp;lt;th align=\&quot;center\&quot;&amp;gt;\n        &amp;lt;table class=\&quot;w95\&quot; width=\&quot;90%\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; align=\&quot;center\&quot;&amp;gt;\n          &amp;lt;tr om:editable=\&quot;html\&quot; om:id=\&quot;tandc\&quot; om:vid=\&quot;6\&quot;&amp;gt;&amp;lt;th align=\&quot;center\&quot; style=\&quot;font-size: 12px; color:#001; line-height: 22px; mso-line-height-rule: exactly;padding-top:10px;padding-bottom:10px;\&quot;&amp;gt;\n            \n              T&amp;amp;Cs; applies &amp;lt;br&amp;gt;\n            \n            &amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;\n          &amp;lt;tr om:editable=\&quot;html\&quot; om:id=\&quot;footer-copy\&quot; om:vid=\&quot;7\&quot;&amp;gt;&amp;lt;th align=\&quot;center\&quot; style=\&quot;font-size: 12px; color:#001; line-height: 22px; mso-line-height-rule: exactly;padding-top:10px;padding-bottom:10px;font-style: italic\&quot;&amp;gt;\n              We are contacting {{profile.email}} as you subscribed to the Ciaté London newsletter .\n              \n              Want to change how you receive these emails? &amp;lt;br&amp;gt;\n              You can &amp;lt;a href=\&quot;{{prefs}}\&quot; target=\&quot;_blank\&quot; style=\&quot;font-size: 12px; color:#001; line-height: 22px; mso-line-height-rule: exactly;font-style: italic\&quot; om:linkid=\&quot;-1:0\&quot;&amp;gt;update your preferences&amp;lt;/a&amp;gt; or\n              &amp;lt;a href=\&quot;{{unsub}}\&quot; target=\&quot;_blank\&quot; style=\&quot;font-size: 12px; color:#001; line-height: 22px; mso-line-height-rule: exactly;font-style: italic\&quot; om:linkid=\&quot;-1:1\&quot;&amp;gt;unsubscribe from this list&amp;lt;/a&amp;gt;. &amp;lt;br&amp;gt;\n            \n            &amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;\n        &amp;lt;/table&amp;gt;\n      &amp;lt;/th&amp;gt;\n    &amp;lt;/tr&amp;gt;\n&amp;lt;/table&amp;gt;\n    &amp;lt;table class=\&quot;wf\&quot; cellpadding=\&quot;0\&quot; cellspacing=\&quot;0\&quot; border=\&quot;0\&quot; width=\&quot;100%\&quot; role=\&quot;presentation\&quot; style=\&quot;width:100%\&quot;&amp;gt;  \n      &amp;lt;tr&amp;gt;\n        &amp;lt;td height=\&quot;12\&quot; style=\&quot;font-size: 12px; line-height: 12px; mso-line-height-rule: exactly;\&quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/td&amp;gt;\n      &amp;lt;/tr&amp;gt;\n    &amp;lt;/table&amp;gt;\n\n&amp;lt;!-- /Emailcontent --&amp;gt;\n&amp;lt;/th&amp;gt;\n&amp;lt;/tr&amp;gt;\n&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;\n&amp;lt;/center&amp;gt;\n&amp;lt;style type=\&quot;text/css\&quot;&amp;gt;\n#secdiv #new-gmail-hack {display: block !important;}\n#MessageWebViewDiv #new-gmail-hack {display: block !important;} (\nu + #new-gmail-hack {\ndisplay: block !important;\n}\n&amp;lt;/style&amp;gt;\n&amp;lt;section&amp;gt;\n&amp;lt;div id=\&quot;new-gmail-hack\&quot; style=\&quot;white-space: nowrap; font: 15px courier; line-height: 0; display: none;\&quot;&amp;gt;\n&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp;\n&amp;lt;/div&amp;gt;\n&amp;lt;/section&amp;gt;\n\n&amp;lt;/body&amp;gt;\n\n&amp;lt;/html&amp;gt;&quot;,&quot;template_text&quot;:null,&quot;data&quot;:{&quot;unsub&quot;:&quot;https://console.ometria.com/misc/unsubscribe.html&quot;,&quot;email&quot;:{&quot;campaign_identifier&quot;:&quot;123:ME:456_201907231411&quot;,&quot;campaign_title&quot;:&quot;campaign_title&quot;,&quot;to_email_address&quot;:&quot;example@example.com&quot;,&quot;subject&quot;:&quot;Check out this amazing email&quot;,&quot;archive_url&quot;:&quot;https://www.ometria.com/&quot;,&quot;preheader&quot;:&quot;Preheader goes here&quot;,&quot;account_hash&quot;:&quot;developer_testing&quot;},&quot;profile&quot;:{&quot;firstname&quot;:&quot;Bob&quot;,&quot;middlename&quot;:null,&quot;lastname&quot;:&quot;Jones&quot;,&quot;name&quot;:&quot;Bob Jones&quot;,&quot;email&quot;:&quot;example@example.com&quot;,&quot;gender&quot;:null,&quot;prefix&quot;:null,&quot;suffix&quot;:null,&quot;country&quot;:&quot;GB&quot;,&quot;date_of_birth&quot;:&quot;1980-01-01&quot;,&quot;total_revenue&quot;:0,&quot;marketing_optin&quot;:true,&quot;lifecycle_status&quot;:&quot;ACTIVE&quot;,&quot;number_of_orders&quot;:0,&quot;number_of_attempted_orders&quot;:0,&quot;number_of_visits&quot;:0,&quot;average_order_value&quot;:0,&quot;number_of_items_purchased&quot;:0,&quot;properties&quot;:{&quot;field_name_1&quot;:&quot;value_1&quot;,&quot;field_name_2&quot;:&quot;value_2&quot;,&quot;field_name_3&quot;:&quot;value_3&quot;},&quot;segment_ids&quot;:[],&quot;last_store&quot;:null,&quot;home_store&quot;:&quot;default&quot;},&quot;products&quot;:[{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£17&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Liquid Lipstick&quot;,&quot;vendor&quot;:&quot;Transforming Glitter Liquid Lipstick&quot;,&quot;tag&quot;:&quot;prodrec&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:17,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Glitter Flip&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=11223934868&quot;,&quot;id&quot;:&quot;11223934868&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FGLF014-Glitter-Flip-Scandal-Product-_-Pack.jpg%3Fv%3D1539767953&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£10&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Complexion&quot;,&quot;vendor&quot;:&quot;Hydrating Primer and Lip Oil Mini Duo&quot;,&quot;tag&quot;:&quot;watermelon&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:10,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Watermelon Burst Hydrating Primer &amp;amp; Lip Oil Duo&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=3577278431318&quot;,&quot;id&quot;:&quot;3577278431318&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FWMD001-Watermelon-Burst-Hydrating-Primer-_-Lip-Oil-Duo-Pack-and-Product.jpg%3Fv%3D1559295064&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£5.60&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Sale&quot;,&quot;vendor&quot;:&quot;2 Piece Mini Glitter Flip Set&quot;,&quot;tag&quot;:&quot;set&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:5.6,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Glitter Flip Duo - Infamous Holo &amp;amp; Candy&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=1389247823972&quot;,&quot;id&quot;:&quot;1389247823972&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FGFD001-Glitter-Flip-Duo-Pack.jpg%3Fv%3D1541612928&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£19.50&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Halloween Edit&quot;,&quot;vendor&quot;:&quot;Intensely volumising mascara&quot;,&quot;tag&quot;:&quot;prodrec&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:19.5,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Wonderwand Mascara&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=8532318215&quot;,&quot;id&quot;:&quot;8532318215&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FWWM001-Wonderwand-Mascara-Pack-and-Product.jpg%3Fv%3D1537268971&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£15&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Eyeliner&quot;,&quot;vendor&quot;:&quot;Gel-Kohl Eyeliner&quot;,&quot;tag&quot;:&quot;wonder&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:15,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Wonderwand Liner&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=8850186183&quot;,&quot;id&quot;:&quot;8850186183&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FWWL001-Wonderwand-Eyeliner-Black-Pack-and-Product-2.jpg%3Fv%3D1488368130&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£22&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Vegan Makeup&quot;,&quot;vendor&quot;:&quot;Metallic Glitter Eyeshadow&quot;,&quot;tag&quot;:&quot;prodrec&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:22,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Marbled Metals&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=3545188139094&quot;,&quot;id&quot;:&quot;3545188139094&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FEMM002-Marbled-Metals-Gilded-Pack-and-Product.jpg%3Fv%3D1560503237&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£28&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Face&quot;,&quot;vendor&quot;:&quot;Radiant Buildable Liquid Foundation&quot;,&quot;tag&quot;:&quot;prodrec&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:28,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Extraordinary Foundation&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=1947544059990&quot;,&quot;id&quot;:&quot;1947544059990&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FFDT-GIF2.gif%3Fv%3D1556262588&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£14.50&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Halloween Edit&quot;,&quot;vendor&quot;:&quot;Eyeshadow Palette&quot;,&quot;tag&quot;:&quot;Pretty Fun &amp;amp; Fearless Palettes&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:14.5,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;FUN Palette&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=6517056007&quot;,&quot;id&quot;:&quot;6517056007&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FESP002---PFF-Palette---Fun-Pack-and-Product-Open.jpg%3Fv%3D1488300653&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£14.50&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;Sale&quot;,&quot;vendor&quot;:&quot;Eyeshadow Palette&quot;,&quot;tag&quot;:&quot;smoky&quot;,&quot;type&quot;:&quot;Colour Cosmetics&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:14.5,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;PRETTY Palette&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=6516676295&quot;,&quot;id&quot;:&quot;6516676295&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FESP001---PFF-Palettes---Pretty-Pack-and-Product-Open.jpg%3Fv%3D1488300539&quot;,&quot;@type&quot;:&quot;product&quot;},{&quot;stores&quot;:[&quot;default&quot;],&quot;price&quot;:&quot;£12&quot;,&quot;labels&quot;:{&quot;category&quot;:&quot;GELOLOGY MENTION ME OFFER - DO NOT DELETE&quot;,&quot;vendor&quot;:&quot;Gelology&quot;,&quot;tag&quot;:&quot;prodrec&quot;,&quot;type&quot;:&quot;Nail Polish&quot;},&quot;currency&quot;:&quot;GBP&quot;,&quot;price_raw&quot;:12,&quot;properties&quot;:{},&quot;sku&quot;:&quot;&quot;,&quot;title&quot;:&quot;Gelology Top Coat&quot;,&quot;url&quot;:&quot;https://api.ometria.com/trk/click?acc=2d210b975eec006e&amp;amp;product=5973685767&quot;,&quot;id&quot;:&quot;5973685767&quot;,&quot;image_url&quot;:&quot;https://d1kxx6lk0ihrs.cloudfront.net/tmb.php?default_size=800x800&amp;amp;mode=bestfit&amp;amp;url=https%3A%2F%2Fcdn.shopify.com%2Fs%2Ffiles%2F1%2F1071%2F1422%2Fproducts%2FNT050-Gelology-Top-Coat.jpg%3Fv%3D1460040032&quot;,&quot;@type&quot;:&quot;product&quot;}]},&quot;emails&quot;:[&quot;sam@ometria.com&quot;],&quot;parent_template_instance_id&quot;:1035,&quot;template_instance_id&quot;:1525,&quot;variant_id&quot;:684}" />
        </outline>
        <outline text="Send campaign table late batch incident report to Al" _note="https://docs.google.com/document/d/173ydovu0WvYVfFZIOigGrMzs3iiOAIc539gRytB-XdE/edit#" />
        <outline text="Broken blueprint for account 79">
          <outline text="Find affected campaigns in ecomm" _note="select id from mass_campaign_configuration where account_id = 79 and segmentation_tree::text ilike '%&quot;childBlock&quot;: {&quot;id&quot;: 1%&quot;childBlock&quot;: {&quot;id&quot;: 1%'" />
          <outline text="Blueprints in core" _note="select id from mass_campaign_blueprint where account_id = 79 and segmentation_tree::text ilike '%&quot;childBlock&quot;: {&quot;id&quot;: 1%&quot;childBlock&quot;: {&quot;id&quot;: 1%'" />
        </outline>
        <outline text="Tests to add (edge cases)">
          <outline text="Suppression filters" />
          <outline text="Suppression list_id" />
          <outline text="Suppression filter and list_id" />
          <outline text="OR filters" />
          <outline text="Incomplete winner test data" />
        </outline>
        <outline text="Communicate to clients (caveats)">
          <outline text="Perfect random splits are now not enforced" />
          <outline text="Nested random splits are not supported" />
        </outline>
        <outline _complete="true" text="Confirm function of winner campaigns with additional batch config (i.e. overtime batches)" />
        <outline _complete="true" text="Investigate campaign template_preview (for campaign preview)">
          <outline text="template_preview is not on campaign but is in variants list" />
        </outline>
        <outline text="Move segmentation tree gen into separate lib" />
        <outline text="ProdEng social">
          <outline text="Thurs 8th or 15th August?" />
          <outline text="Location">
            <outline text="Flight club?" />
            <outline text="Bowling down brick lane?" />
            <outline text="Beer pong place?">
              <outline text="Non-alcohol?" />
            </outline>
          </outline>
        </outline>
        <outline _complete="true" text="Lunch and learn presentation">
          <outline _complete="true" text="What it is for">
            <outline text="Why do even need it? (from a developers perspective)" />
            <outline text="Old broadcast UI">
              <outline text="Campaign-wide segmentation" />
              <outline text="Single path through" />
              <outline text="“Variants” subsets of campaign segmentation (split tests)" />
            </outline>
            <outline text="New broadcast UI">
              <outline text="Variant level segmentation, inheriting from the parent" />
              <outline text="Many paths through" />
              <outline text="“Variants” are now “campaigns” in themselves" />
            </outline>
          </outline>
          <outline _complete="true" text="How we build the tree">
            <outline _complete="true" text="Some examples...">
              <outline text="*show example of tree">
                <outline text="No tree" />
                <outline text="Simple tree" />
                <outline text="Complex/devanka tree" />
              </outline>
            </outline>
            <outline _complete="true" text="This is a block, this is a block_item (etc)">
              <outline text="*show block and block_item on UI" />
            </outline>
            <outline _complete="true" text="An example payload...">
              <outline text="*show how these roughly map in the json" />
            </outline>
            <outline _complete="true" text="We receive this payload" />
            <outline _complete="true" text="Transform the &quot;recipients&quot; object into the &quot;initial&quot; node, and pass the dict to the MassCampaignTree">
              <outline text="*show __init__ function that passes dict to initial node and calls recursive function" />
            </outline>
            <outline _complete="true" text="Query data is stored on each node as they're generated" />
            <outline _complete="true" text="We use this data to do one of two things">
              <outline text="Segmentation">
                <outline text="generate a query (using the get_customer_query function) from which we can extract the sqla BinaryExpression type query predicates using the handle `get_table_constraint()` method, and store them on the node.">
                  <outline text="In the form `{column} {operator} {some_value}`">
                    <outline text="`customer.gender = 'm'" />
                  </outline>
                  <outline text="Suppression constraints only apply to &quot;initial&quot; node" />
                  <outline text="These are ultimately wrapped with a `not_(and_(constraint))` and returned within the set of constraints from the node" />
                </outline>
              </outline>
              <outline text="Random">
                <outline text="generate a simple predicate in the form `random {operator} {split_percentage}`" />
                <outline text="I'll come to random shortly..." />
              </outline>
            </outline>
          </outline>
          <outline _complete="true" text="Generating the (single scan*) query">
            <outline _complete="true" text="We traverse the tree, and collect predicates, each labelled with the node identifiers, and store these in a list">
              <outline text="`{column} {operator} {value} AS {block_id}_{block_item_id}`" />
              <outline text="`{column} {operator} {value} AS {sibling_group_id}_{node_id}`" />
              <outline text="`customer.gender = 'm' AS 2_1`" />
              <outline text="*show traversal code line 310" />
            </outline>
            <outline _complete="true" text="Is there a random sibling group / block?">
              <outline text="Then we use an inner subquery with a random" />
              <outline text="Consistency in random() within a row, important for random based case statements">
                <outline text="Hence reference to `random` previously" />
              </outline>
              <outline text="Otherwise we just select from customers" />
            </outline>
            <outline _complete="true" text="We then generate the &quot;main&quot; subquery">
              <outline text="*show generation line 330 (maybe include FROM above)" />
            </outline>
            <outline _complete="true" text="Now to attribute the nodes (get your concentration caps)...">
              <outline text="Each node has a boolean output" />
              <outline text="Walk the path from the leaf to the root, storing (node_identifier, boolean) in a list as we go">
                <outline text="Start at the leaf node / variant (true)" />
                <outline text="Look to older siblings (false)" />
                <outline text="If no older siblings, look to parents (true)" />
                <outline text="Initial is always true, obv" />
              </outline>
              <outline text="Flip it" />
              <outline text="For each item in this list, take the column name (previously generated node_identifier labels) and set to either">
                <outline text="predicate = column.is_(True)" />
                <outline text="predicate = column.is_distinct_from(True)" />
                <outline text="Add each new predicate to a list" />
              </outline>
              <outline text="Now take this list, and generate a case statement with all of the node boolean outputs, from root down">
                <outline text="`case_conditions.append((and_(*conditions), str(path[-1][0])))`" />
                <outline text="The string output is the leaf node of that path" />
              </outline>
              <outline text="This is applied to every customer_id row, et voila!" />
            </outline>
          </outline>
          <outline _complete="true" text="How this is used (UI and mass_email), API for both">
            <outline text="Either group_by node or return all with customer_id" />
          </outline>
          <outline text="Why this is still not optimal 🙈">
            <outline text="Some filters join on other tables">
              <outline text="Customer engagement" />
              <outline text="Automation campaigns" />
              <outline text="Orders" />
              <outline text="Etc..?" />
            </outline>
            <outline text="LISTS (omg lists)">
              <outline text="Opened up early release. One of the first campaigns Lovehoney generated was...">
                <outline text="*insert screenshot" />
              </outline>
              <outline text="*Show example of generated SQL" />
            </outline>
            <outline text="Optimisations?">
              <outline text="Separate segmentation model for lists?" />
              <outline text="Data-warehouse / column based models? Snowflake? Enter Al?" />
            </outline>
            <outline text="Lovehoney SQL">
              <outline text="Campaign" _note="https://app.ometria.com/app/68c34c0886c2056e/broadcast-new/7514/segmentation" />
              <outline text="query" _note="SELECT &#10;  CASE WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;1_2&quot; IS true&#10;  ) THEN '1_2'&#10;  WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;1_2&quot; IS DISTINCT FROM true &#10;    AND segment_combinations.&quot;1_4&quot; IS true&#10;  ) THEN '1_4'&#10;  WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;1_2&quot; IS DISTINCT FROM true &#10;    AND segment_combinations.&quot;1_4&quot; IS DISTINCT FROM true &#10;    AND segment_combinations.&quot;1_5&quot; IS true&#10;  ) THEN '1_5' END AS node_str, &#10;  count(segment_combinations.id) AS n_customers &#10;FROM &#10;  (&#10;    SELECT &#10;      customers.id AS id, &#10;      account_id = 505 &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            customers_health_dimensions &#10;          WHERE &#10;            customers_health_dimensions.customer_id = id &#10;            AND customers_health_dimensions.engagement = : engagement_1&#10;        )&#10;      ) &#10;      AND email IS NOT NULL &#10;      AND is_email_valid IS NOT false &#10;      AND optin IS true &#10;      AND NOT (&#10;        account_id = 505 &#10;        AND (&#10;          (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(: any_1)&#10;            )&#10;          ) &#10;          OR (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(: any_2)&#10;            )&#10;          )&#10;        )&#10;      ) AS root, &#10;      account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(: any_3)&#10;        )&#10;      ) &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(: any_4)&#10;        )&#10;      ) &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            events &#10;          WHERE &#10;            events.customer_id = id &#10;            AND events.account_id = 505 &#10;            AND events.event_type = : event_type_1 &#10;            AND (&#10;              events.attribute_ids &amp;amp;&amp;amp; : attribute_ids_1&#10;            ) IS NOT true &#10;            AND events.order_is_valid = true&#10;        )&#10;      ) AS &quot;1_2&quot;, &#10;      account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(: any_5)&#10;        )&#10;      ) &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            events &#10;          WHERE &#10;            events.customer_id = id &#10;            AND events.account_id = 505 &#10;            AND events.event_type = : event_type_2 &#10;            AND (&#10;              events.attribute_ids &amp;amp;&amp;amp; : attribute_ids_2&#10;            ) IS NOT true &#10;            AND events.order_is_valid = true&#10;        )&#10;      ) AS &quot;1_4&quot;, &#10;      account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(: any_6)&#10;        )&#10;      ) &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(: any_7)&#10;        )&#10;      ) &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(: any_8)&#10;        )&#10;      ) &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            events &#10;          WHERE &#10;            events.customer_id = id &#10;            AND events.account_id = 505 &#10;            AND events.event_type = : event_type_3 &#10;            AND (&#10;              events.attribute_ids &amp;amp;&amp;amp; : attribute_ids_3&#10;            ) IS NOT true &#10;            AND events.order_is_valid = true&#10;        )&#10;      ) AS &quot;1_5&quot; &#10;    FROM &#10;      customers&#10;  ) AS segment_combinations &#10;GROUP BY &#10;  node_str&#10;" />
            </outline>
          </outline>
        </outline>
      </outline>
      <outline _complete="true" text="#wc2019-07-08::work">
        <outline _complete="true" text="Reintroduce removal of opted out customers" />
        <outline _complete="true" text="Reintroduce winner test data validation in API" />
        <outline _complete="true" text="deployments that I killed">
          <outline text="postgresql" />
          <outline text="php-coreservices-gearman-accounts" />
          <outline text="php-coreservices-gearman-accounts-pgbouncer" />
        </outline>
        <outline _complete="true" text="Ongoing BUI usage, investigation payload" _note="SELECT &#10;  mc.id, &#10;  mc.dt_scheduled, &#10;  mc.account_id, &#10;  a.title, &#10;  mcc.variants &#10;FROM &#10;  mass_campaign mc &#10;JOIN accounts a on a.id = mc.account_id &#10;JOIN mass_campaign_configuration mcc on mcc.mass_campaign_id = mc.id &#10;WHERE &#10;  dt_scheduled is not null &#10;  and mass_campaign_configuration_id is not null &#10;  and is_sent &#10;  and dt_scheduled &amp;gt;= '2019-06-17' :: timestamp &#10;  and mcc.variants :: text ilike '%url_parameters%' &#10;ORDER BY &#10;  account_id, &#10;  dt_scheduled&#10;" />
        <outline _complete="true" text="Gareth Evans (VPE candidate)">
          <outline text="Team intros" />
          <outline text="Experience with cassandra (about 10 years ago)">
            <outline text="PHP dev at the time" />
          </outline>
          <outline text="Moved from dedicated engineering company to leading a team of 10-&amp;gt;35 engineers in a larger x00 people non-tech procurement company">
            <outline text="Scaled from &amp;lt;10 -&amp;gt; 35, how was it">
              <outline text="It was fun" />
              <outline text="Communication is hugely important. Responsibilities narrow. Need to make that positive." />
              <outline text="Maintaining automony is important, particularly when scaling." />
              <outline text="As team scales and responsibilities split, management need exposure to what's happening rather than granular knowledge. Important to find a good balance." />
              <outline text="One thing that went badly? Previously had form based pre-release sign off process. Now managed to mostly phase it out. Low risk and frequent deployments." />
            </outline>
          </outline>
          <outline text="Heard we introduced 3 project managers, acknowledged that this may have reduced throughput due to PMs pushing more work through." />
          <outline text="Thoughts on remote work and teams">
            <outline text="Previously shied away from it, would have thought they wouldn't have cared about project, not strong collaborators etc." />
            <outline text="Now, setup of nearshore teams has changed. There will still be bad teams but now nearshore teams are buying in to it a bit more." />
            <outline text="Slightly airy answer." />
            <outline text="Current company is well equipped for remote working. Has many remote employees." />
            <outline text="Seems pro remote, but seems to be stressing that various measures need to be taken (or infrastructure provided)" />
            <outline text="" />
          </outline>
          <outline text="General notes">
            <outline text="Really engaging and friendly" />
          </outline>
          <outline text="Questions to ask">
            <outline text="" />
          </outline>
        </outline>
        <outline _complete="true" text="Updates to full image for redshift dblink (as postgres)" _note="/*From migrations docker/start-db-scripts/0000-fake-dblink.sh*/&#10;CREATE EXTENSION IF NOT EXISTS postgres_fdw;&#10;&#10;DROP USER MAPPING FOR public SERVER redshift_archive;&#10;DROP SERVER IF EXISTS redshift_archive;&#10;&#10;CREATE SERVER redshift_archive FOREIGN DATA WRAPPER postgres_fdw OPTIONS (host 'postgresql-archive.default.svc.cluster.local', dbname 'ometriatest', port '5432');&#10;CREATE USER MAPPING FOR public SERVER redshift_archive OPTIONS (user 'ometria', password 'Q7MkZusr6WgVGxmeT8aAXjJT');&#10;&#10;GRANT USAGE ON FOREIGN SERVER redshift_archive TO ometria;&#10;&#10;&#10;/*New attempt from https://www.postgresql.org/docs/9.2/contrib-dblink-connect.html*/&#10;DROP SERVER IF EXISTS redshift_archive CASCADE;&#10;DROP FOREIGN DATA WRAPPER IF EXISTS postgresql;&#10;&#10;CREATE USER sam_test WITH PASSWORD 'secret';&#10;&#10;CREATE FOREIGN DATA WRAPPER postgresql VALIDATOR postgresql_fdw_validator;&#10;CREATE SERVER redshift_archive FOREIGN DATA WRAPPER postgresql OPTIONS (host 'postgresql-archive.default.svc.cluster.local', dbname 'ometriatest', port '5432');&#10;&#10;CREATE USER MAPPING FOR public SERVER redshift_archive OPTIONS (user 'ometria', password 'secret');&#10;&#10;GRANT USAGE ON FOREIGN SERVER redshift_archive TO ometria;" />
        <outline _complete="true" text="Updates to miminal postgres image">
          <outline text="core.accounts" _note="update accounts set data = '{&quot;start_of_year&quot;:1356912000,&quot;currency&quot;:&quot;EUR&quot;,&quot;country&quot;:&quot;GB&quot;,&quot;lifecycle&quot;:{&quot;at_risk_days&quot;:&quot;182&quot;,&quot;lapsed_days&quot;:&quot;385&quot;},&quot;campaign_settings&quot;:{&quot;email&quot;:{&quot;default_from_address&quot;:&quot;automation@ometria.email&quot;,&quot;default_from_name&quot;:&quot;Automation user&quot;,&quot;default_reply_to_address&quot;:&quot;automation-reply@ometria.email&quot;,&quot;optin_mode&quot;:&quot;loose&quot;,&quot;use_variant_data_in_marketing&quot;:false,&quot;default_url_parameters&quot;:{&quot;utm_medium&quot;:&quot;email&quot;,&quot;utm_source&quot;:&quot;newsletter&quot;,&quot;type&quot;:&quot;automation&quot;,&quot;matt_test&quot;:&quot;track3&quot;}},&quot;mass_email&quot;:{&quot;default_from_address&quot;:&quot;broadcast22@ometria.email&quot;,&quot;default_from_name&quot;:&quot;Broadcast user&quot;,&quot;default_reply_to_address&quot;:&quot;broadcast22@ometria.email&quot;,&quot;optin_mode&quot;:&quot;strict&quot;,&quot;default_url_parameters&quot;:{&quot;type&quot;:&quot;broadcast&quot;,&quot;utm_medium&quot;:&quot;email&quot;,&quot;bx_profile&quot;:&quot;{{profile.hash}}&quot;,&quot;bx_profile2&quot;:&quot;asdasd&quot;,&quot;template_title&quot;:&quot;{{ email.template_title|urlencode }}&quot;,&quot;matt_test&quot;:&quot;hello2&quot;}},&quot;transactional_email&quot;:{&quot;default_from_address&quot;:&quot;mickey-test@ometria.com&quot;,&quot;default_from_name&quot;:&quot;mickey-test&quot;,&quot;default_reply_to_address&quot;:&quot;mickey-test@ometria.com&quot;,&quot;default_url_parameters&quot;:{&quot;template_title&quot;:&quot;{{ email.template_title|urlencode }}&quot;,&quot;om_profile&quot;:&quot;{{ profile.hash }}&quot;,&quot;matt_test&quot;:&quot;hello&quot;}},&quot;limits&quot;:{&quot;max_emails_past_day&quot;:8,&quot;max_emails_past_week&quot;:5}},&quot;forms&quot;:{&quot;email&quot;:{&quot;default_from_address&quot;:null,&quot;default_from_name&quot;:null,&quot;default_subject&quot;:null}},&quot;whitelisted_stores&quot;:null,&quot;week_first_day&quot;:&quot;Monday&quot;,&quot;locale&quot;:&quot;en_GB.UTF-8&quot;,&quot;week_last_day&quot;:&quot;Sunday&quot;,&quot;timezone&quot;:&quot;e8725:Europe\/London&quot;,&quot;features&quot;:[&quot;v2:email_engagement_cohort&quot;,&quot;v2:magento_coupon_expiry&quot;,&quot;v2:taste_profiling&quot;,&quot;v2:new_broadcast&quot;,&quot;v2:new_broadcast_tp&quot;,&quot;v2:connections&quot;,&quot;v2:contact_upload&quot;,&quot;v2:coupon_pools&quot;,&quot;v2:customer_health2&quot;,&quot;v2:filter_email_interactions&quot;,&quot;v2:mass_email&quot;,&quot;v2:realtime&quot;,&quot;v2:segment_evolution&quot;,&quot;v2:send_time_optimisation&quot;,&quot;v2:sms&quot;,&quot;v2:templates&quot;,&quot;v2:tf_template_instance_edit&quot;,&quot;v2:transactional_email&quot;,&quot;v2:transactional_automation_emails&quot;],&quot;formatting&quot;:{&quot;currency&quot;:{&quot;GBP&quot;:{&quot;prefix&quot;:&quot;\u00a3&quot;,&quot;dec_point&quot;:&quot;.&quot;,&quot;decimals&quot;:&quot;AUTO&quot;,&quot;thousands_sep&quot;:&quot;,&quot;},&quot;EUR&quot;:{&quot;prefix&quot;:&quot;\u20ac&quot;,&quot;dec_point&quot;:&quot;.&quot;,&quot;decimals&quot;:&quot;AUTO&quot;,&quot;thousands_sep&quot;:&quot;,&quot;}},&quot;number&quot;:{&quot;default&quot;:{&quot;thousands_sep&quot;:&quot;,&quot;,&quot;dec_point&quot;:&quot;.&quot;,&quot;decimals&quot;:&quot;AUTO&quot;}}}}' where id = 352" />
          <outline text="core.feature_flags" _note="insert into feature_flags (flag, title, type, state) values ('v2:new_broadcast', 'Access to new broadcast UI', 'BETA', 'ENABLED')" />
          <outline text="ecomm.connections" _note="INSERT INTO connections (&#10;    id, account_id, type, data, dt_created, dt_updated, secret, is_trigger_default, state, title, is_active, status&#10;) VALUES (&#10;    6, 352, 'ometria_sparkpost',  '{&quot;api_key&quot;:&amp;lt;API_KEY&amp;gt;, &quot;binding&quot;:{&quot;prod1&quot;:5000, &#10;    &quot;prod2&quot;:5000}, &quot;instance&quot;:&quot;spe-eu&quot;, &quot;subaccount_id&quot;:1, &quot;ip_pool_config&quot;:{&quot;broadcast&quot;:{&#10;    &quot;prod1&quot;:10000}, &quot;automation&quot;:{&quot;prod1&quot;:10000}, &quot;double_optin&quot;:{&quot;prod3&quot;:10000}, &#10;    &quot;transactional&quot;:{&quot;prod4&quot;:10000}}, &quot;return_path_domain&quot;:{&quot;spe.ometria.email&quot;:999, &#10;    &quot;bounces.ometria-email.com&quot;:1}}', '2016-10-14 17:48:00.210422+00', '2016-10-14 17:48:00.210422+00', &#10;    'ac092d14-4426-ab85-f26b-a7f5c76b7c55', 't', '{}'::jsonb, 'Sparkpost Elite Connection', 't', NULL&#10;)" />
          <outline text="ecomm.templates" />
        </outline>
        <outline text="Manual testing of winner campaigns (db and table fudging)">
          <outline text="Override for redshift_get_email_engagement_for_mass_campaign function" _note="CREATE OR REPLACE FUNCTION redshift_get_email_engagement_for_mass_campaign(_account_id INT, _campaign_id INT)&#10;  RETURNS TABLE(uuid         TEXT,&#10;                dt_delivered TIMESTAMP WITH TIME ZONE,&#10;                dt_opened    TIMESTAMP WITH TIME ZONE,&#10;                dt_clicked   TIMESTAMP WITH TIME ZONE)&#10;&#10;AS $$&#10;  SELECT&#10;    md5(random()::text)::text AS uuid,&#10;    CASE WHEN random &amp;lt; 0.8 THEN (now() - interval '60 minutes')::TIMESTAMP AT TIME ZONE 'BST' ELSE null END AS dt_delivered,&#10;    CASE WHEN random &amp;lt; 0.5 THEN (now() - interval '50 minutes')::TIMESTAMP AT TIME ZONE 'BST' ELSE null END AS dt_opened,&#10;    CASE WHEN random &amp;lt; 0.2 THEN (now() - interval '50 minutes')::TIMESTAMP AT TIME ZONE 'BST' ELSE null END AS dt_clicked&#10;  FROM (&#10;    SELECT&#10;        id,&#10;        random() AS random&#10;    FROM mass_campaign_variant&#10;    WHERE mass_campaign_id = _campaign_id&#10;      AND account_id = _account_id&#10;  ) with_random&#10;$$&#10;LANGUAGE SQL" />
          <outline text="Post test pre winner campaign table updates">
            <outline text="Update campaign_table query" _note="UPDATE campaigns.mass_352_2251&#10;SET is_opened = true, is_clicked = true, is_delivered = true&#10;WHERE uuid in (&#10;    SELECT uuid&#10;    FROM campaigns.mass_352_2251&#10;    WHERE batch_id = 3240&#10;    LIMIT 5&#10;);" />
            <outline text="Equivalent query" _note="SELECT&#10;    b.mass_campaign_variant_id AS variant_id,&#10;    count(CASE WHEN ct.is_clicked THEN 1 ELSE 0 END) AS counted,&#10;    greatest(count(CASE WHEN ct.is_delivered THEN 1 ELSE 0 END), 1) AS total,&#10;    count(CASE WHEN ct.is_clicked THEN 1 ELSE 0 END)::FLOAT / greatest(count(CASE WHEN ct.is_delivered THEN 1 ELSE 0 END), 1) AS score&#10;FROM campaigns.mass_campaign_batch b&#10;JOIN campaigns.mass_352_2251 ct ON ct.batch_id = b.id&#10;WHERE b.account_id = 352&#10;AND b.id != 3241&#10;AND b.segmentation_block_id = 1&#10;GROUP BY b.mass_campaign_variant_id&#10;ORDER BY score DESC" />
          </outline>
        </outline>
        <outline text="Tests to add (edge cases)">
          <outline text="Suppression filters" />
          <outline text="Suppression list_id" />
          <outline text="Suppression filter and list_id" />
          <outline text="OR filters" />
          <outline text="Incomplete winner test data" />
        </outline>
        <outline text="Communicate to clients (caveats)">
          <outline text="Perfect random splits are now not enforced" />
          <outline text="Nested random splits are not supported" />
        </outline>
        <outline text="Confirm function of winner campaigns with additional batch config (i.e. overtime batches)" />
        <outline text="Check that winner campaigns in batch_processors are backwards compatible with legacy flows">
          <outline text="Namely the `self._campaign_table.segmentation_block_id == self._batch.segmentation_block_id` comparator" />
        </outline>
        <outline text="Review per-variant url_param support" />
        <outline text="Investigate campaign template_preview (for campaign preview)">
          <outline text="template_preview is not on campaign but is in variants list" />
        </outline>
        <outline _complete="true" text="Sync with Matt L on split test w/ winner API schema" />
        <outline text="Move segmentation tree gen into separate lib" />
        <outline text="ProdEng social">
          <outline text="Thurs 8th or 15th August?" />
          <outline text="Location">
            <outline text="Flight club?" />
            <outline text="Bowling down brick lane?" />
            <outline text="Beer pong place?">
              <outline text="Non-alcohol?" />
            </outline>
          </outline>
        </outline>
        <outline text="Lunch and learn presentation">
          <outline _complete="true" text="What it is for">
            <outline text="Why do even need it? (from a developers perspective)" />
            <outline text="Old broadcast UI">
              <outline text="Campaign-wide segmentation" />
              <outline text="Single path through" />
              <outline text="“Variants” subsets of campaign segmentation (split tests)" />
            </outline>
            <outline text="New broadcast UI">
              <outline text="Variant level segmentation, inheriting from the parent" />
              <outline text="Many paths through" />
              <outline text="“Variants” are now “campaigns” in themselves" />
            </outline>
          </outline>
          <outline _complete="true" text="How we build the tree">
            <outline _complete="true" text="Some examples...">
              <outline text="*show example of tree">
                <outline text="No tree" />
                <outline text="Simple tree" />
                <outline text="Complex/devanka tree" />
              </outline>
            </outline>
            <outline _complete="true" text="This is a block, this is a block_item (etc)">
              <outline text="*show block and block_item on UI" />
            </outline>
            <outline _complete="true" text="An example payload...">
              <outline text="*show how these roughly map in the json" />
            </outline>
            <outline _complete="true" text="We receive this payload" />
            <outline _complete="true" text="Transform the &quot;recipients&quot; object into the &quot;initial&quot; node, and pass the dict to the MassCampaignTree">
              <outline text="*show __init__ function that passes dict to initial node and calls recursive function" />
            </outline>
            <outline _complete="true" text="Query data is stored on each node as they're generated" />
            <outline _complete="true" text="We use this data to do one of two things">
              <outline text="Segmentation">
                <outline text="generate a query (using the get_customer_query function) from which we can extract the sqla BinaryExpression type query predicates using the handle `get_table_constraint()` method, and store them on the node.">
                  <outline text="In the form `{column} {operator} {some_value}`">
                    <outline text="`customer.gender = 'm'" />
                  </outline>
                  <outline text="Suppression constraints only apply to &quot;initial&quot; node" />
                  <outline text="These are ultimately wrapped with a `not_(and_(constraint))` and returned within the set of constraints from the node" />
                </outline>
              </outline>
              <outline text="Random">
                <outline text="generate a simple predicate in the form `random {operator} {split_percentage}`" />
                <outline text="I'll come to random shortly..." />
              </outline>
            </outline>
          </outline>
          <outline _complete="true" text="Generating the (single scan*) query">
            <outline _complete="true" text="We traverse the tree, and collect predicates, each labelled with the node identifiers, and store these in a list">
              <outline text="`{column} {operator} {value} AS {block_id}_{block_item_id}`" />
              <outline text="`{column} {operator} {value} AS {sibling_group_id}_{node_id}`" />
              <outline text="`customer.gender = 'm' AS 2_1`" />
              <outline text="*show traversal code line 310" />
            </outline>
            <outline _complete="true" text="Is there a random sibling group / block?">
              <outline text="Then we use an inner subquery with a random" />
              <outline text="Consistency in random() within a row, important for random based case statements">
                <outline text="Hence reference to `random` previously" />
              </outline>
              <outline text="Otherwise we just select from customers" />
            </outline>
            <outline _complete="true" text="We then generate the &quot;main&quot; subquery">
              <outline text="*show generation line 330 (maybe include FROM above)" />
            </outline>
            <outline _complete="true" text="Now to attribute the nodes (get your concentration caps)...">
              <outline text="Each node has a boolean output" />
              <outline text="Walk the path from the leaf to the root, storing (node_identifier, boolean) in a list as we go">
                <outline text="Start at the leaf node / variant (true)" />
                <outline text="Look to older siblings (false)" />
                <outline text="If no older siblings, look to parents (true)" />
                <outline text="Initial is always true, obv" />
              </outline>
              <outline text="Flip it" />
              <outline text="For each item in this list, take the column name (previously generated node_identifier labels) and set to either">
                <outline text="predicate = column.is_(True)" />
                <outline text="predicate = column.is_distinct_from(True)" />
                <outline text="Add each new predicate to a list" />
              </outline>
              <outline text="Now take this list, and generate a case statement with all of the node boolean outputs, from root down">
                <outline text="`case_conditions.append((and_(*conditions), str(path[-1][0])))`" />
                <outline text="The string output is the leaf node of that path" />
              </outline>
              <outline text="This is applied to every customer_id row, et voila!" />
            </outline>
          </outline>
          <outline _complete="true" text="How this is used (UI and mass_email), API for both">
            <outline text="Either group_by node or return all with customer_id" />
          </outline>
          <outline text="Why this is still not optimal 🙈">
            <outline text="Some filters join on other tables">
              <outline text="Customer engagement" />
              <outline text="Automation campaigns" />
              <outline text="Orders" />
              <outline text="Etc..?" />
            </outline>
            <outline text="LISTS (omg lists)">
              <outline text="Opened up early release. One of the first campaigns Lovehoney generated was...">
                <outline text="*insert screenshot" />
              </outline>
              <outline text="*Show example of generated SQL" />
            </outline>
            <outline text="Optimisations?">
              <outline text="Separate segmentation model for lists?" />
              <outline text="Data-warehouse / column based models? Snowflake? Enter Al?" />
            </outline>
            <outline text="Lovehoney SQL">
              <outline text="Campaign" _note="https://app.ometria.com/app/68c34c0886c2056e/broadcast-new/7514/segmentation" />
              <outline text="query" _note="SELECT &#10;  CASE WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;1_2&quot; IS true&#10;  ) THEN '1_2'&#10;  WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;1_2&quot; IS DISTINCT FROM true &#10;    AND segment_combinations.&quot;1_4&quot; IS true&#10;  ) THEN '1_4'&#10;  WHEN (&#10;    segment_combinations.&quot;root&quot; IS true &#10;    AND segment_combinations.&quot;1_2&quot; IS DISTINCT FROM true &#10;    AND segment_combinations.&quot;1_4&quot; IS DISTINCT FROM true &#10;    AND segment_combinations.&quot;1_5&quot; IS true&#10;  ) THEN '1_5' END AS node_str, &#10;  count(segment_combinations.id) AS n_customers &#10;FROM &#10;  (&#10;    SELECT &#10;      customers.id AS id, &#10;      account_id = 505 &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            customers_health_dimensions &#10;          WHERE &#10;            customers_health_dimensions.customer_id = id &#10;            AND customers_health_dimensions.engagement = : engagement_1&#10;        )&#10;      ) &#10;      AND email IS NOT NULL &#10;      AND is_email_valid IS NOT false &#10;      AND optin IS true &#10;      AND NOT (&#10;        account_id = 505 &#10;        AND (&#10;          (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(: any_1)&#10;            )&#10;          ) &#10;          OR (&#10;            EXISTS (&#10;              SELECT &#10;                1 &#10;              FROM &#10;                lists_customers &#10;              WHERE &#10;                lists_customers.customer_id = id &#10;                AND lists_customers.list_id = any(: any_2)&#10;            )&#10;          )&#10;        )&#10;      ) AS root, &#10;      account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(: any_3)&#10;        )&#10;      ) &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(: any_4)&#10;        )&#10;      ) &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            events &#10;          WHERE &#10;            events.customer_id = id &#10;            AND events.account_id = 505 &#10;            AND events.event_type = : event_type_1 &#10;            AND (&#10;              events.attribute_ids &amp;amp;&amp;amp; : attribute_ids_1&#10;            ) IS NOT true &#10;            AND events.order_is_valid = true&#10;        )&#10;      ) AS &quot;1_2&quot;, &#10;      account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(: any_5)&#10;        )&#10;      ) &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            events &#10;          WHERE &#10;            events.customer_id = id &#10;            AND events.account_id = 505 &#10;            AND events.event_type = : event_type_2 &#10;            AND (&#10;              events.attribute_ids &amp;amp;&amp;amp; : attribute_ids_2&#10;            ) IS NOT true &#10;            AND events.order_is_valid = true&#10;        )&#10;      ) AS &quot;1_4&quot;, &#10;      account_id = 505 &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(: any_6)&#10;        )&#10;      ) &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(: any_7)&#10;        )&#10;      ) &#10;      AND not(&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            lists_customers &#10;          WHERE &#10;            lists_customers.customer_id = id &#10;            AND lists_customers.list_id = any(: any_8)&#10;        )&#10;      ) &#10;      AND (&#10;        EXISTS (&#10;          SELECT &#10;            1 &#10;          FROM &#10;            events &#10;          WHERE &#10;            events.customer_id = id &#10;            AND events.account_id = 505 &#10;            AND events.event_type = : event_type_3 &#10;            AND (&#10;              events.attribute_ids &amp;amp;&amp;amp; : attribute_ids_3&#10;            ) IS NOT true &#10;            AND events.order_is_valid = true&#10;        )&#10;      ) AS &quot;1_5&quot; &#10;    FROM &#10;      customers&#10;  ) AS segment_combinations &#10;GROUP BY &#10;  node_str&#10;" />
            </outline>
          </outline>
        </outline>
        <outline _complete="true" text="Legacy winner campaign dt_scheduled issue" _note="WITH latest_variant_dt_scheduled AS (&#10;    SELECT&#10;        mass_campaign_id,&#10;        max(dt_scheduled) AS latest_variant_dt&#10;    FROM mass_campaign_variant&#10;    GROUP BY 1&#10;)&#10;SELECT&#10;    id,&#10;    mcv.mass_campaign_id AS campaign_id&#10;FROM mass_campaign_variant mcv&#10;JOIN latest_variant_dt_scheduled ldt ON ldt.mass_campaign_id = mcv.mass_campaign_id&#10;WHERE is_winner&#10;AND dt_scheduled &amp;lt; latest_variant_dt" />
      </outline>
      <outline _complete="true" text="#wc2019-07-01::work">
        <outline text="Fourpure" />
        <outline text="Bowling social" />
        <outline text="REFACTOR">
          <outline _complete="true" text="AND/OR issue">
            <outline text="Add support by passing 'and' or 'or' to mapper.get_customer_query()" />
            <outline text="query" _note="SELECT &#10;  count(anon_1.id) AS n_customers &#10;FROM &#10;  (&#10;    SELECT &#10;      anon_2.id AS id &#10;    FROM &#10;      (&#10;        SELECT *&#10;        FROM &#10;          customers &#10;        WHERE &#10;          customers.optin IS true &#10;          AND customers.is_email_valid IS NOT false &#10;          AND customers.email IS NOT NULL&#10;      ) AS anon_3 &#10;      JOIN (&#10;        SELECT &#10;          anon_4.id AS id &#10;        FROM &#10;          (&#10;            SELECT &#10;              customers.id AS id &#10;            FROM &#10;              customers &#10;            WHERE &#10;              customers.account_id = 505 &#10;              AND (&#10;                customers.email = 'victoria@evesleep.co.uk' &#10;                OR customers.email = 'victoria.ross93@gmail.com'&#10;              )&#10;          ) AS anon_5 &#10;          JOIN (&#10;            SELECT &#10;              customers.id AS id &#10;            FROM &#10;              customers &#10;            WHERE &#10;              customers.account_id = 505 &#10;              AND customers.account_id = 505 &#10;              AND customers.email = 'victoria@evesleep.co.uk' &#10;              AND customers.email = 'victoria.ross93@gmail.com' &#10;              AND customers.email = 'victoria@evesleep.co.uk'&#10;          ) AS anon_4 ON anon_5.id = anon_4.id&#10;      ) AS anon_2 ON anon_3.id = anon_2.id&#10;  ) AS anon_1&#10;" />
            <outline text="campaign https://app.ometria.com/app/0e87ad4172be8354/broadcast-new/3037/segmentation" />
          </outline>
          <outline _complete="true" text="Will a single random inclusive GROUP BY be enough for all nodes that require random?">
            <outline text="If so, when random node is present, main subquery should just select from subquery with customers rows AND random() column generation" />
            <outline text="Then remove per BLOCK column with case statement, and add in per BLOCK_ITEM column with individual (if random greater than X and random less than Y...)" />
          </outline>
          <outline _complete="true" text="To avoid coalesce, merge results into null/false sets in memory" />
          <outline _complete="true" text="After initial boolean subquery, add a secondary subquery that annotates each customer row with a node name (possibly via a case statement for each combination using the pre-generated booleans in the node paths)">
            <outline text="Can then join campaign table in mass email on each customer row from above table" />
          </outline>
          <outline _complete="true" text="NOT BOTHERING Maintain only single instance of each unique constraint for initial query, OR just ensure uniqueness by creating set of ordered predicates just prior to query gen">
            <outline text="Will this break the per node result?" />
            <outline text="Is it even necessary?" />
            <outline text="Will still end up with and GROUP BY result" />
          </outline>
          <outline _complete="true" text="Commit message" _note="Remove session dependency from the library&#10;&#10;Removed query execution and node count attribution&#10;from lib (as will now be dealt with externally).&#10;&#10;Therefore removed any database dependency from the&#10;lib. Changed name convention to 'node' and 'sibling&#10;groups' away from block and block_item." />
          <outline text="Base suppression issues">
            <outline text="Empty tree exclusion segmentation" />
          </outline>
          <outline text="Check that winner campaigns in batch_processors are backwards compatible with legacy flows">
            <outline text="Namely the `self._campaign_table.segmentation_block_id == self._batch.segmentation_block_id` comparator" />
          </outline>
          <outline _complete="true" text="Deal with remaining percentage for &quot;invisible&quot; split test w/ winner node" />
          <outline _complete="true" text="Cache _variants_iter()" />
          <outline _complete="true" text="Improve on generation of GROUP BY in final query - at present it's using literal column with a horrible list comprehension" />
        </outline>
        <outline text="Add per-variant url_param support" />
        <outline _complete="true" text="Fix monitoring logging from mass_email" />
        <outline text="Investigate campaign template_preview (for campaign preview)">
          <outline text="template_preview is not on campaign but is in variants list" />
        </outline>
        <outline text="Sync with Matt L on split test w/ winner API schema" />
        <outline text="Move segmentation tree gen into separate lib" />
      </outline>
      <outline _complete="true" text="#wc2019-06-24::work">
        <outline _complete="true" text="AND/OR testing">
          <outline text="Test random split works for younger siblings (I think it should)" />
          <outline text="Ensure random split tree validation still works" />
          <outline text="Test in base " />
          <outline text="Test with base and normal leaf node">
            <outline text="Single layer" />
            <outline text="Random split" />
          </outline>
          <outline text="Test in single layer segmentation" />
        </outline>
        <outline text="Fourpure" />
        <outline text="Bowling social" />
        <outline text="REFACTOR">
          <outline _complete="true" text="AND/OR issue">
            <outline text="Add support by passing 'and' or 'or' to mapper.get_customer_query()" />
            <outline text="query" _note="SELECT &#10;  count(anon_1.id) AS n_customers &#10;FROM &#10;  (&#10;    SELECT &#10;      anon_2.id AS id &#10;    FROM &#10;      (&#10;        SELECT *&#10;        FROM &#10;          customers &#10;        WHERE &#10;          customers.optin IS true &#10;          AND customers.is_email_valid IS NOT false &#10;          AND customers.email IS NOT NULL&#10;      ) AS anon_3 &#10;      JOIN (&#10;        SELECT &#10;          anon_4.id AS id &#10;        FROM &#10;          (&#10;            SELECT &#10;              customers.id AS id &#10;            FROM &#10;              customers &#10;            WHERE &#10;              customers.account_id = 505 &#10;              AND (&#10;                customers.email = 'victoria@evesleep.co.uk' &#10;                OR customers.email = 'victoria.ross93@gmail.com'&#10;              )&#10;          ) AS anon_5 &#10;          JOIN (&#10;            SELECT &#10;              customers.id AS id &#10;            FROM &#10;              customers &#10;            WHERE &#10;              customers.account_id = 505 &#10;              AND customers.account_id = 505 &#10;              AND customers.email = 'victoria@evesleep.co.uk' &#10;              AND customers.email = 'victoria.ross93@gmail.com' &#10;              AND customers.email = 'victoria@evesleep.co.uk'&#10;          ) AS anon_4 ON anon_5.id = anon_4.id&#10;      ) AS anon_2 ON anon_3.id = anon_2.id&#10;  ) AS anon_1&#10;" />
            <outline text="campaign https://app.ometria.com/app/0e87ad4172be8354/broadcast-new/3037/segmentation" />
          </outline>
          <outline text="Will a single random inclusive GROUP BY be enough for all nodes that require random?">
            <outline text="If so, when random node is present, main subquery should just select from subquery with customers rows AND random() column generation" />
            <outline text="Then remove per BLOCK column with case statement, and add in per BLOCK_ITEM column with individual (if random greater than X and random less than Y...)" />
          </outline>
          <outline text="To avoid coalesce, merge results into null/false sets in memory" />
          <outline text="Maintain only single instance of each unique constraint for initial query, OR just ensure uniqueness by creating set of ordered predicates just prior to query gen">
            <outline text="Will this break the per node result?" />
            <outline text="Is it even necessary?" />
            <outline text="Will still end up with and GROUP BY result" />
          </outline>
          <outline text="Deal with remaining percentage for &quot;invisible&quot; split test w/ winner node" />
          <outline text="Cache _variants_iter()" />
          <outline _complete="true" text="Improve on generation of GROUP BY in final query - at present it's using literal column with a horrible list comprehension" />
        </outline>
        <outline text="Add per-variant url_param support" />
        <outline text="Fix monitoring logging from mass_email" />
        <outline text="Investigate campaign template_preview (for campaign preview)">
          <outline text="template_preview is not on campaign but is in variants list" />
        </outline>
        <outline text="Sync with Matt L on split test w/ winner API schema" />
        <outline text="Move segmentation tree gen into separate lib" />
        <outline _complete="true" text="Investigate Al's new funnel query approach" />
        <outline _complete="true" text="#om-interview Mohamed Hamilton">
          <outline text="Not massively keen on ops role. Enjoys it to an extent but would prefer a mixed role." />
          <outline text="What is control plane of kube">
            <outline text="Runs kind of like in namespaces">
              <outline text="Has default namespace" />
              <outline text="Other namespaces (listed some)" />
              <outline text="&quot;Kube is deployed on pods&quot;" />
              <outline text="Containers inside of pods" />
              <outline text="Sidecar proxy ??" />
            </outline>
            <outline text="Bit rusty on control plane is" />
          </outline>
          <outline text="Where state is stored?">
            <outline text="Initially mentioned volumes from confusion" />
            <outline text="We mean cluster state...">
              <outline text="Not sure." />
            </outline>
          </outline>
          <outline text="Familiar with overlay networking? Have you heard of flannel?">
            <outline text="We use EKS." />
            <outline text="Use &quot;linker&quot; something in the service mesh" />
          </outline>
          <outline text="Are you familiar with how logging works?">
            <outline text="Log metrics are scraped and persisted into elasticsearch. Queried using grafana" />
          </outline>
          <outline text="Supposing you have an API service, what would be the standard metrics you'd look for?">
            <outline text="Something I missed" />
            <outline text="CPU consumption" />
            <outline text="Mem consumption" />
            <outline text="Load over differetn tiers of time (1m, 5m, 15m)" />
            <outline text="Request received in bytes (sent and received)" />
            <outline text="Latency of the API" />
            <outline text="All of these get scraped out of the box especially when using prometheus." />
            <outline text="What if workload was a data processing system instead?">
              <outline text="Analysing the queue, n_messages in queue" />
              <outline text="Analysing process time for each piece of data" />
              <outline text="Error rate of the service" />
              <outline text="Can alert of it (I think he said)" />
              <outline text="Up/down service. Alert on." />
            </outline>
            <outline text="Are you familiar with prometheus?">
              <outline text="I set up all monitoring and alerting with prometheus in my company." />
              <outline text="He thinks he's strong in monitoring, less familiar with kubernetes." />
              <outline text="Familiar with above, helm, docker" />
              <outline text="How does prometheus get metrics?">
                <outline text="Has a few components. Listed 4 components" />
              </outline>
              <outline text="Prometheus is a pull service, why do you push?">
                <outline text="Can't remember. Floundering somewhat." />
              </outline>
            </outline>
          </outline>
          <outline text="Questions for us?">
            <outline text="What is dev-ops for you?" />
            <outline text="Do you believe in the dev-ops culture in our company?" />
            <outline text="What made you get into development?" />
          </outline>
          <outline text="Started off as a software developer. Spent the last year working on dev-ops. Really enjoyed it. Understands the gaps in knowledge between the two roles." />
          <outline text="Used python in uni">
            <outline text="&quot;Am quite familar with python&quot;, &quot;Hard to write really good python&quot;" />
          </outline>
          <outline text="Comfortable using terraform">
            <outline text="Yeah quite comfortable" />
            <outline text="Set up many modules, s3 buckets, aws infra. Auth zero accounts." />
          </outline>
        </outline>
      </outline>
      <outline _complete="true" text="#wc2019-06-17::work">
        <outline _complete="true" text="Sent new campaigns">
          <outline text="query result" _note=" shard      | account_id | id    | mass_campaign_configuration_id&#10;------------|------------|-------|--------------------------------&#10; ecomm_0005 | 584        | 3036  | 1&#10; ecomm_0005 | 584        | 3037  | 2&#10; ecomm_0019 | 964        | 105   | 3&#10; ecomm_0019 | 956        | 86    | 1&#10; ecomm_0019 | 956        | 87    | 2&#10; ecomm_0004 | 215        | 3752  | 1&#10; ecomm_0004 | 215        | 3987  | 4&#10; ecomm_0004 | 215        | 3885  | 3&#10; ecomm_0106 | 646        | 1344  | 1&#10; ecomm_0106 | 646        | 1590  | 2&#10; ecomm_0106 | 646        | 1591  | 3&#10; ecomm_0016 | 707        | 3688  | 1&#10; ecomm_0102 | 515        | 1632  | 1&#10; ecomm_0102 | 515        | 1634  | 2&#10; ecomm_0102 | 515        | 1652  | 3&#10; ecomm_0018 | 914        | 2150  | 1&#10; ecomm_0011 | 522        | 15531 | 7&#10; ecomm_0011 | 439        | 13129 | 1&#10; ecomm_0011 | 522        | 15580 | 42&#10; ecomm_0011 | 522        | 15535 | 8&#10; ecomm_0011 | 522        | 15507 | 6&#10; ecomm_0011 | 522        | 15484 | 2&#10; ecomm_0011 | 522        | 15497 | 5&#10; ecomm_0201 | 1005       | 17    | 1&#10; ecomm_0001 | 331        | 4192  | 2&#10; ecomm_0001 | 330        | 4000  | 1&#10; ecomm_0000 | 108        | 7513  | 5&#10; ecomm_0101 | 505        | 7581  | 47&#10; ecomm_0101 | 505        | 6294  | 2&#10; ecomm_0101 | 505        | 6221  | 1&#10; ecomm_0101 | 564        | 7528  | 24&#10; ecomm_0101 | 554        | 7530  | 25&#10; ecomm_0101 | 504        | 7545  | 33&#10; ecomm_0101 | 554        | 7508  | 14&#10; ecomm_0101 | 504        | 7586  | 49&#10; ecomm_0101 | 554        | 7527  | 23&#10; ecomm_0101 | 554        | 7499  | 5&#10; ecomm_0101 | 505        | 7516  | 18&#10; ecomm_0101 | 505        | 7625  | 85&#10; ecomm_0101 | 560        | 7569  | 44&#10; ecomm_0101 | 558        | 7567  | 42&#10; ecomm_0101 | 556        | 7518  | 20&#10; ecomm_0101 | 504        | 7547  | 35&#10; ecomm_0101 | 504        | 7549  | 37&#10; ecomm_0101 | 505        | 7497  | 3&#10; ecomm_0101 | 554        | 7524  | 22&#10; ecomm_0101 | 504        | 7550  | 38&#10; ecomm_0101 | 566        | 7532  | 27&#10; ecomm_0101 | 504        | 7568  | 43&#10; ecomm_0101 | 505        | 7582  | 48&#10; ecomm_0101 | 505        | 7500  | 6&#10; ecomm_0101 | 505        | 7505  | 11&#10; ecomm_0101 | 504        | 7533  | 28&#10; ecomm_0101 | 505        | 7513  | 16&#10; ecomm_0101 | 504        | 7503  | 9&#10; ecomm_0101 | 505        | 7514  | 17&#10; ecomm_0101 | 504        | 7562  | 39&#10; ecomm_0101 | 504        | 7542  | 30&#10; ecomm_0101 | 505        | 7543  | 31&#10; ecomm_0101 | 560        | 7573  | 45&#10; ecomm_0101 | 504        | 7544  | 32&#10; ecomm_0101 | 504        | 7501  | 7&#10; ecomm_0101 | 505        | 7506  | 12&#10; ecomm_0101 | 564        | 7521  | 21&#10; ecomm_0101 | 504        | 7566  | 41&#10; ecomm_0101 | 554        | 7587  | 50&#10; ecomm_0101 | 560        | 7498  | 4&#10; ecomm_0101 | 505        | 7580  | 46&#10; ecomm_0101 | 558        | 7565  | 40&#10; ecomm_0101 | 505        | 7590  | 51&#10; ecomm_0101 | 560        | 7534  | 29&#10; ecomm_0101 | 505        | 7591  | 52&#10; ecomm_0101 | 556        | 7517  | 19&#10; ecomm_0101 | 566        | 7531  | 26&#10; ecomm_0100 | 501        | 3250  | 1&#10; ecomm_0100 | 501        | 3251  | 2&#10; ecomm_0100 | 501        | 3293  | 3" />
        </outline>
        <outline _complete="true" text="Currently deployed">
          <outline text="mass_email v9.2" />
          <outline text="api_campaigns v1.3broadcast99" />
        </outline>
        <outline _complete="true" text="CURRENTLY refactoring segmentation tree" />
        <outline _complete="true" text="Change lib.segmentation to use _ro">
          <outline text="Lovehoney UK">
            <outline text="Big node query" _note="SELECT &#10;  count(anon_1.id) AS n_customers &#10;FROM &#10;  (&#10;    SELECT &#10;      anon_2.id AS id &#10;    FROM &#10;      (&#10;        SELECT *&#10;        FROM &#10;          customers &#10;        WHERE &#10;          customers.optin IS true &#10;          AND customers.is_email_valid IS NOT false &#10;          AND customers.email IS NOT NULL&#10;      ) AS anon_3 &#10;      JOIN (&#10;        SELECT &#10;          anon_4.id AS id &#10;        FROM &#10;          (&#10;            SELECT &#10;              customers.id AS id &#10;            FROM &#10;              customers &#10;            WHERE &#10;              customers.account_id = 505 &#10;              AND not(&#10;                EXISTS (&#10;                  SELECT &#10;                    1 &#10;                  FROM &#10;                    trigger_campaign_customer &#10;                  WHERE &#10;                    trigger_campaign_customer.customer_id = customers.id &#10;                    AND trigger_campaign_customer.is_active IS true &#10;                    AND trigger_campaign_customer.is_test IS NOT true &#10;                    AND trigger_campaign_customer.is_control_group IS NOT true&#10;                )&#10;              )&#10;          ) AS anon_5 &#10;          JOIN (&#10;            SELECT &#10;              customers.id AS id &#10;            FROM &#10;              customers &#10;            WHERE &#10;              customers.account_id = 505 &#10;              AND customers.account_id = 505 &#10;              AND (&#10;                EXISTS (&#10;                  SELECT &#10;                    1 &#10;                  FROM &#10;                    lists_customers &#10;                  WHERE &#10;                    lists_customers.customer_id = customers.id &#10;                    AND lists_customers.list_id = any(177)&#10;                )&#10;              ) &#10;              AND not(&#10;                EXISTS (&#10;                  SELECT &#10;                    1 &#10;                  FROM &#10;                    customer_email_interaction_rollup &#10;                  WHERE &#10;                    customer_email_interaction_rollup.customer_id = customers.id &#10;                    AND (&#10;                      customer_email_interaction_rollup.mass_campaigns_opened &amp;amp;&amp;amp; ARRAY[7478]&#10;                    )&#10;                )&#10;              ) &#10;              AND not(&#10;                EXISTS (&#10;                  SELECT &#10;                    1 &#10;                  FROM &#10;                    lists_customers &#10;                  WHERE &#10;                    lists_customers.customer_id = customers.id &#10;                    AND lists_customers.list_id = any(1154)&#10;                )&#10;              )&#10;          ) AS anon_4 ON anon_5.id = anon_4.id&#10;      ) AS anon_2 ON anon_3.id = anon_2.id &#10;    EXCEPT &#10;    SELECT &#10;      customers.id AS id &#10;    FROM &#10;      customers &#10;    WHERE &#10;      customers.account_id = 505 &#10;      AND (&#10;        (&#10;          EXISTS (&#10;            SELECT &#10;              1 &#10;            FROM &#10;              lists_customers &#10;            WHERE &#10;              lists_customers.customer_id = customers.id &#10;              AND lists_customers.list_id = any(68)&#10;          )&#10;        ) &#10;        OR (&#10;          EXISTS (&#10;            SELECT &#10;              1 &#10;            FROM &#10;              lists_customers &#10;            WHERE &#10;              lists_customers.customer_id = customers.id &#10;              AND lists_customers.list_id = any(1156)&#10;          )&#10;        )&#10;      )&#10;  ) AS anon_1&#10;" />
          </outline>
        </outline>
        <outline _complete="true" text="Prometheus handover">
          <outline text="server-configmap.yaml in infrastructure repo">
            <outline text="Configures what is scraped etc" />
          </outline>
          <outline text="SRE workbook is online for free">
            <outline text="SLO alerting is discussed in depth" />
            <outline text="Burnrates and calcs are retrieved from this book" />
          </outline>
        </outline>
        <outline text="REFACTOR">
          <outline _complete="true" text="AND/OR issue">
            <outline text="Add support by passing 'and' or 'or' to mapper.get_customer_query()" />
            <outline text="query" _note="SELECT &#10;  count(anon_1.id) AS n_customers &#10;FROM &#10;  (&#10;    SELECT &#10;      anon_2.id AS id &#10;    FROM &#10;      (&#10;        SELECT *&#10;        FROM &#10;          customers &#10;        WHERE &#10;          customers.optin IS true &#10;          AND customers.is_email_valid IS NOT false &#10;          AND customers.email IS NOT NULL&#10;      ) AS anon_3 &#10;      JOIN (&#10;        SELECT &#10;          anon_4.id AS id &#10;        FROM &#10;          (&#10;            SELECT &#10;              customers.id AS id &#10;            FROM &#10;              customers &#10;            WHERE &#10;              customers.account_id = 505 &#10;              AND (&#10;                customers.email = 'victoria@evesleep.co.uk' &#10;                OR customers.email = 'victoria.ross93@gmail.com'&#10;              )&#10;          ) AS anon_5 &#10;          JOIN (&#10;            SELECT &#10;              customers.id AS id &#10;            FROM &#10;              customers &#10;            WHERE &#10;              customers.account_id = 505 &#10;              AND customers.account_id = 505 &#10;              AND customers.email = 'victoria@evesleep.co.uk' &#10;              AND customers.email = 'victoria.ross93@gmail.com' &#10;              AND customers.email = 'victoria@evesleep.co.uk'&#10;          ) AS anon_4 ON anon_5.id = anon_4.id&#10;      ) AS anon_2 ON anon_3.id = anon_2.id&#10;  ) AS anon_1&#10;" />
            <outline text="campaign https://app.ometria.com/app/0e87ad4172be8354/broadcast-new/3037/segmentation" />
          </outline>
          <outline text="Deal with remaining percentage for &quot;invisible&quot; split test w/ winner node" />
          <outline text="Consider pulling &quot;customer_set&quot; calcs for split nodes into separate traversal" />
        </outline>
        <outline text="Fix monitoring logging from mass_email" />
        <outline text="Ensure random split tree validation still works" />
        <outline text="Add per-variant url_param support" />
        <outline text="Investigate campaign template_preview (for campaign preview)">
          <outline text="template_preview is not on campaign but is in variants list" />
        </outline>
        <outline text="Sync with Matt L on split test w/ winner API schema" />
        <outline text="Move segmentation tree gen into separate lib" />
        <outline text="Investigate Al's new funnel query approach" />
      </outline>
      <outline _complete="true" text="#wc2019-06-10::work">
        <outline _complete="true" text="Hunter boots long generating batch">
          <outline text="query" _note="EXPLAIN ANALYSE SELECT&#10;    profile,&#10;    job_id,&#10;    customer_id,&#10;    timezone&#10;FROM (&#10;    SELECT&#10;        dv.profile,&#10;        c.uuid AS job_id,&#10;        c.customer_id,&#10;        c.timezone,&#10;        c.batch_id,&#10;        dv.optin&#10;    FROM campaigns.mass_919_203 c&#10;    LEFT JOIN email_profile_data dv ON c.customer_id = dv.customer_id&#10;) AS sq&#10;WHERE batch_id = 645&#10;AND optin IS NOT FALSE&#10;/*AND dv.optin IS TRUE*/&#10;ORDER BY job_id" />
        </outline>
        <outline _complete="true" text="mass_email batch issues">
          <outline _complete="true" text="Fix stats on broken campaign https://admin.ometria.com/private/mass/campaigns/530:ME:1094">
            <outline text="State of mass_campaign prior to update">
              <outline text="mass_campaign" _note="select * from mass_campaign where id = 1094;&#10;&#10;n_recipients_targeted          |                                                                          │~&#10;n_messages_sent                | 709890                                                                   │~&#10;n_messages_error               | -760071" />
              <outline text="mass_campaign_variant" _note="n_recipients_targeted         |                                                                           │~&#10;n_messages_sent               | 709890                                                                    │~&#10;n_messages_error              | -760071" />
              <outline text="campaigns.mass_campaign_batch" _note="n_messages_sent          | 709890                                                                         │~&#10;n_messages_error         | -760071                                                                        │~&#10;n_recipients_suppressed  | 50181                                                                          │~&#10;n_recipients_estimated   | 760071" />
            </outline>
            <outline text="Update query" _note="UPDATE mass_campaign SET n_recipients_targeted = 760071, n_messages_error = 0 WHERE id = 1094 and account_id = 530;&#10;UPDATE mass_campaign_variant SET n_recipients_targeted = 760071, n_messages_error = 0 WHERE mass_campaign_id = 1094 and id = 1554 and account_id = 530;&#10;UPDATE campaigns.mass_campaign_batch SET n_recipients_targeted = 760071, n_messages_error = 0 WHERE mass_campaign_id = 1094 and id = 1169 and account_id = 530;&#10;" />
          </outline>
          <outline text="Add logging to batch_processor to time queries" />
          <outline text="transaction timeout">
            <outline text="Look into session handling refactor" />
            <outline text="and/or increase ometria_campaigns timeout in pgbouncer if poss" />
          </outline>
        </outline>
        <outline text="CURRENTLY refactoring segmentation tree" />
        <outline text="Change lib.segmentation to use _ro">
          <outline text="Lovehoney UK">
            <outline text="Big node query" _note="SELECT &#10;  count(anon_1.id) AS n_customers &#10;FROM &#10;  (&#10;    SELECT &#10;      anon_2.id AS id &#10;    FROM &#10;      (&#10;        SELECT *&#10;        FROM &#10;          customers &#10;        WHERE &#10;          customers.optin IS true &#10;          AND customers.is_email_valid IS NOT false &#10;          AND customers.email IS NOT NULL&#10;      ) AS anon_3 &#10;      JOIN (&#10;        SELECT &#10;          anon_4.id AS id &#10;        FROM &#10;          (&#10;            SELECT &#10;              customers.id AS id &#10;            FROM &#10;              customers &#10;            WHERE &#10;              customers.account_id = 505 &#10;              AND not(&#10;                EXISTS (&#10;                  SELECT &#10;                    1 &#10;                  FROM &#10;                    trigger_campaign_customer &#10;                  WHERE &#10;                    trigger_campaign_customer.customer_id = customers.id &#10;                    AND trigger_campaign_customer.is_active IS true &#10;                    AND trigger_campaign_customer.is_test IS NOT true &#10;                    AND trigger_campaign_customer.is_control_group IS NOT true&#10;                )&#10;              )&#10;          ) AS anon_5 &#10;          JOIN (&#10;            SELECT &#10;              customers.id AS id &#10;            FROM &#10;              customers &#10;            WHERE &#10;              customers.account_id = 505 &#10;              AND customers.account_id = 505 &#10;              AND (&#10;                EXISTS (&#10;                  SELECT &#10;                    1 &#10;                  FROM &#10;                    lists_customers &#10;                  WHERE &#10;                    lists_customers.customer_id = customers.id &#10;                    AND lists_customers.list_id = any(177)&#10;                )&#10;              ) &#10;              AND not(&#10;                EXISTS (&#10;                  SELECT &#10;                    1 &#10;                  FROM &#10;                    customer_email_interaction_rollup &#10;                  WHERE &#10;                    customer_email_interaction_rollup.customer_id = customers.id &#10;                    AND (&#10;                      customer_email_interaction_rollup.mass_campaigns_opened &amp;amp;&amp;amp; ARRAY[7478]&#10;                    )&#10;                )&#10;              ) &#10;              AND not(&#10;                EXISTS (&#10;                  SELECT &#10;                    1 &#10;                  FROM &#10;                    lists_customers &#10;                  WHERE &#10;                    lists_customers.customer_id = customers.id &#10;                    AND lists_customers.list_id = any(1154)&#10;                )&#10;              )&#10;          ) AS anon_4 ON anon_5.id = anon_4.id&#10;      ) AS anon_2 ON anon_3.id = anon_2.id &#10;    EXCEPT &#10;    SELECT &#10;      customers.id AS id &#10;    FROM &#10;      customers &#10;    WHERE &#10;      customers.account_id = 505 &#10;      AND (&#10;        (&#10;          EXISTS (&#10;            SELECT &#10;              1 &#10;            FROM &#10;              lists_customers &#10;            WHERE &#10;              lists_customers.customer_id = customers.id &#10;              AND lists_customers.list_id = any(68)&#10;          )&#10;        ) &#10;        OR (&#10;          EXISTS (&#10;            SELECT &#10;              1 &#10;            FROM &#10;              lists_customers &#10;            WHERE &#10;              lists_customers.customer_id = customers.id &#10;              AND lists_customers.list_id = any(1156)&#10;          )&#10;        )&#10;      )&#10;  ) AS anon_1&#10;" />
          </outline>
        </outline>
        <outline text="AND/OR issue">
          <outline text="Add support by passing 'and' or 'or' to mapper.get_customer_query()" />
          <outline text="query" _note="SELECT &#10;  count(anon_1.id) AS n_customers &#10;FROM &#10;  (&#10;    SELECT &#10;      anon_2.id AS id &#10;    FROM &#10;      (&#10;        SELECT *&#10;        FROM &#10;          customers &#10;        WHERE &#10;          customers.optin IS true &#10;          AND customers.is_email_valid IS NOT false &#10;          AND customers.email IS NOT NULL&#10;      ) AS anon_3 &#10;      JOIN (&#10;        SELECT &#10;          anon_4.id AS id &#10;        FROM &#10;          (&#10;            SELECT &#10;              customers.id AS id &#10;            FROM &#10;              customers &#10;            WHERE &#10;              customers.account_id = 505 &#10;              AND (&#10;                customers.email = 'victoria@evesleep.co.uk' &#10;                OR customers.email = 'victoria.ross93@gmail.com'&#10;              )&#10;          ) AS anon_5 &#10;          JOIN (&#10;            SELECT &#10;              customers.id AS id &#10;            FROM &#10;              customers &#10;            WHERE &#10;              customers.account_id = 505 &#10;              AND customers.account_id = 505 &#10;              AND customers.email = 'victoria@evesleep.co.uk' &#10;              AND customers.email = 'victoria.ross93@gmail.com' &#10;              AND customers.email = 'victoria@evesleep.co.uk'&#10;          ) AS anon_4 ON anon_5.id = anon_4.id&#10;      ) AS anon_2 ON anon_3.id = anon_2.id&#10;  ) AS anon_1&#10;" />
          <outline text="campaign https://app.ometria.com/app/0e87ad4172be8354/broadcast-new/3037/segmentation" />
        </outline>
        <outline _complete="true" text="Review Simeon's PR" />
        <outline text="Fix monitoring logging from mass_email" />
        <outline text="Ensure random split tree validation still works" />
        <outline text="Investigate campaign template_preview (for campaign preview)" />
        <outline text="Sync with Matt L on split test w/ winner API schema" />
        <outline text="Move segmentation tree gen into separate lib" />
        <outline text="Investigate Al's new funnel query approach" />
        <outline _complete="true" text="Simeon api.campaigns review">
          <outline text="settings.routes.condition.query results in..." _note="&quot;settings&quot;: {&#10;    &quot;filters&quot;: [&#10;        {&#10;            &quot;field&quot;: &quot;n_orders&quot;,&#10;            &quot;op&quot;: &quot;gt&quot;,&#10;            &quot;value&quot;: [&#10;                &quot;1&quot;&#10;            ]&#10;        }&#10;    ],&#10;    &quot;group&quot;: &quot;all&quot;,&#10;    &quot;query_type&quot;: &quot;and&quot;&#10;}" />
        </outline>
      </outline>
      <outline _complete="true" text="#wc2019-06-03::work">
        <outline _complete="true" text="Output from explain analyse" _note="ometria_ecomm_0102=&amp;gt; EXPLAIN ANALYSE SELECT&#10;ometria_ecomm_0102-&amp;gt;     profile,&#10;ometria_ecomm_0102-&amp;gt;     job_id,&#10;ometria_ecomm_0102-&amp;gt;     customer_id,&#10;ometria_ecomm_0102-&amp;gt;     timezone&#10;ometria_ecomm_0102-&amp;gt; FROM (&#10;ometria_ecomm_0102(&amp;gt;     SELECT&#10;ometria_ecomm_0102(&amp;gt;         dv.profile,&#10;ometria_ecomm_0102(&amp;gt;         c.uuid AS job_id,&#10;ometria_ecomm_0102(&amp;gt;         c.customer_id,&#10;ometria_ecomm_0102(&amp;gt;         c.timezone,&#10;ometria_ecomm_0102(&amp;gt;         c.batch_id,&#10;ometria_ecomm_0102(&amp;gt;         dv.optin&#10;ometria_ecomm_0102(&amp;gt;     FROM campaigns.mass_515_2509 c&#10;ometria_ecomm_0102(&amp;gt;     LEFT JOIN email_profile_data dv ON c.customer_id = dv.customer_id&#10;ometria_ecomm_0102(&amp;gt; ) AS sq&#10;ometria_ecomm_0102-&amp;gt; WHERE batch_id = 2165&#10;ometria_ecomm_0102-&amp;gt; AND optin IS NOT FALSE&#10;ometria_ecomm_0102-&amp;gt; /*AND dv.optin IS TRUE*/&#10;ometria_ecomm_0102-&amp;gt; ORDER BY job_id&#10;ometria_ecomm_0102-&amp;gt; ;&#10;                                                                                   QUERY PLAN&#10;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#10; Nested Loop Left Join  (cost=0.85..15615350.62 rows=107823 width=66) (actual time=436.122..363103.387 rows=232816 loops=1)&#10;   Filter: (customers.optin IS NOT FALSE)&#10;   Rows Removed by Filter: 15&#10;   -&amp;gt;  Index Scan using mass_515_2509_pkey on mass_515_2509 c  (cost=0.42..18538.19 rows=232786 width=34) (actual time=432.923..881.603 rows=232831 loops=1)&#10;         Filter: (batch_id = 2165)&#10;         Rows Removed by Filter: 99784&#10;   -&amp;gt;  Index Scan using customers_pkey on customers  (cost=0.43..66.99 rows=1 width=37) (actual time=1.553..1.553 rows=1 loops=232831)&#10;         Index Cond: (c.customer_id = id)&#10;         SubPlan 1&#10;           -&amp;gt;  Aggregate  (cost=63.12..63.13 rows=1 width=32) (actual time=1.315..1.315 rows=1 loops=232831)&#10;                 -&amp;gt;  Index Scan using idx_lists_customers_customer_id on lists_customers  (cost=0.57..62.97 rows=62 width=4) (actual time=0.176..1.194 rows=124 loops=232831)&#10;                       Index Cond: (customer_id = customers.id)&#10;         SubPlan 2&#10;           -&amp;gt;  Index Scan using customers_properties_customer_id_idx on customers_properties  (cost=0.43..2.45 rows=1 width=376) (actual time=0.147..0.148 rows=1 loops=232831)&#10;                 Index Cond: (customer_id = customers.id)&#10; Planning time: 2.723 ms&#10; Execution time: 363151.686 ms&#10;(17 rows)" />
      </outline>
      <outline _complete="true" text="#wc2019-05-27::work">
        <outline _complete="true" text="Support">
          <outline _complete="true" text="Rockett st george">
            <outline text="query" _note="UPDATE imports&#10;SET custom_fields = custom_fields::jsonb || '{&quot;customer&quot;: {&quot;marketing_by_phone_field&quot;: {&quot;type&quot;: &quot;str&quot;, &quot;target&quot;: &quot;marketing_by_phone_field&quot;}, &quot;marketing_by_email_field&quot;: {&quot;type&quot;: &quot;str&quot;, &quot;target&quot;: &quot;marketing_by_email_field&quot;}, &quot;marketing_by_post_field&quot;: {&quot;type&quot;: &quot;str&quot;, &quot;target&quot;: &quot;marketing_by_post_field&quot;}}}'&#10;WHERE id = 642&#10;AND account_id = 867" />
            <outline text="custom_fields" _note="{&quot;customer&quot;:{&quot;marketing_by_email&quot;:{&quot;type&quot;:&quot;str&quot;,&quot;target&quot;:&quot;marketing_by_email&quot;},&quot;marketing_by_post&quot;:{&quot;type&quot;:&quot;str&quot;,&quot;target&quot;:&quot;marketing_by_post&quot;},&quot;marketing_by_sms&quot;:{&quot;type&quot;:&quot;str&quot;,&quot;target&quot;:&quot;marketing_by_sms&quot;}}}&#10;&#10;{&quot;customer&quot;: {&quot;marketing_by_sms&quot;: {&quot;type&quot;: &quot;str&quot;, &quot;target&quot;: &quot;marketing_by_sms&quot;}, &quot;marketing_by_post&quot;: {&quot;type&quot;: &quot;str&quot;, &quot;target&quot;: &quot;marketing_by_post&quot;}, &quot;marketing_by_email&quot;: {&quot;type&quot;: &quot;str&quot;, &quot;target&quot;: &quot;marketing_by_email&quot;}, &quot;marketing_by_post_field&quot;: {&quot;type&quot;: &quot;str&quot;, &quot;target&quot;: &quot;marketing_by_post_field&quot;}, &quot;marketing_by_email_field&quot;: {&quot;type&quot;: &quot;str&quot;, &quot;target&quot;: &quot;marketing_by_email_field&quot;}, &quot;marketing_by_phone_field&quot;: {&quot;type&quot;: &quot;str&quot;, &quot;target&quot;: &quot;marketing_by_phone_field&quot;}}}">
              <outline text="" />
            </outline>
          </outline>
          <outline _complete="true" text="importer update">
            <outline text="product" _note="{&quot;else_text&quot;:{&quot;type&quot;:&quot;str&quot;,&quot;target&quot;:&quot;else_text&quot;},&quot;else_saving&quot;:{&quot;type&quot;:&quot;str&quot;,&quot;target&quot;:&quot;else_saving&quot;},&quot;else_price&quot;:{&quot;type&quot;:&quot;dec&quot;,&quot;target&quot;:&quot;else_price&quot;}}&#10;&#10;{&quot;else_text&quot;: {&quot;type&quot;: &quot;str&quot;, &quot;target&quot;: &quot;else_text&quot;}, &quot;else_price&quot;: {&quot;type&quot;: &quot;dec&quot;, &quot;target&quot;: &quot;else_price&quot;}, &quot;else_saving&quot;: {&quot;type&quot;: &quot;str&quot;, &quot;target&quot;: &quot;else_saving&quot;}}" />
            <outline text="customer" _note="{&quot;information_sharing&quot;:{&quot;type&quot;:&quot;str&quot;,&quot;target&quot;:&quot;information_sharing&quot;}}" />
            <outline text="overall" _note="{&quot;product&quot;:{&quot;else_text&quot;:{&quot;type&quot;:&quot;str&quot;,&quot;target&quot;:&quot;else_text&quot;},&quot;else_saving&quot;:{&quot;type&quot;:&quot;str&quot;,&quot;target&quot;:&quot;else_saving&quot;},&quot;else_price&quot;:{&quot;type&quot;:&quot;dec&quot;,&quot;target&quot;:&quot;else_price&quot;}},&quot;customer&quot;:{&quot;information_sharing&quot;:{&quot;type&quot;:&quot;str&quot;,&quot;target&quot;:&quot;information_sharing&quot;}}}" />
          </outline>
          <outline _complete="true" text="data_store issue">
            <outline text="jsonPayload.account_id=60" />
            <outline text="jsonPayload.record_id=245687" />
            <outline text="jsonPayload.record_id=&quot;196213&quot;" />
          </outline>
        </outline>
      </outline>
      <outline _complete="true" text="#wc2019-05-06::work">
        <outline text="terraform plan -var-file=build/broadcast-ui/terraform.tfvars platforms/aws" />
        <outline _complete="true" text="#om-interview James Clark whiteboard">
          <outline text="Expectations of role">
            <outline text="Experience is spread but not specific" />
            <outline text="Wants to be able to gain a lot more experience in python" />
            <outline text="No strict requirements of role">
              <outline text="I wonder if it's worth digging in to this a bit further to ensure he really is happy entering the current format" />
            </outline>
          </outline>
          <outline text="Task">
            <outline text="Brilliant level of preparation. Was very clear in his approach of the task" />
            <outline text="State stores dt, status, member/list id, frequency/delay">
              <outline text="&quot;Opts for SQL or NoSQL&quot;. Quite vague?" />
            </outline>
            <outline text="Aware of timestamp in API" />
            <outline text="Suggests two dt records, when import begins and when processing is completely successful" />
            <outline text="Mentioned timezoning conditions " />
            <outline text="Error handling / alerting">
              <outline text="Mentioned retry logic" />
              <outline text="Takes 3rd party API availability as very important" />
              <outline text="Mentioned threshold (/1h) failure, i.e. import job failed and total dt increasing" />
            </outline>
            <outline text="How to deploy onto infrastructure">
              <outline text="MySQL" />
              <outline text="Crontab picking up config (i.e. frequency) from db" />
              <outline text="Bit unclear of where scheduler might sit?" />
            </outline>
          </outline>
        </outline>
      </outline>
      <outline _complete="true" text="#wc2019-04-29::work">
        <outline text="#kube-workshop Production ready kube">
          <outline text="http://training-user-5.training.weave.works/">
            <outline text="training-user-5" />
            <outline text="b6c419a2" />
          </outline>
          <outline text="PromQL">
            <outline text="Example &quot;notebook&quot; queries">
              <outline text="http_requests_total{_weave_service=&quot;podinfo&quot;}" />
              <outline text="sum(http_requests_total) by (_weave_namespace, _weave_service)">
                <outline text="sum(http_requests_total) by (kubernetes_namespace, _weave_service)" />
              </outline>
            </outline>
          </outline>
          <outline text="Managing node OS updates (e.g.) - https://github.com/weaveworks/kured">
            <outline text="#om-script kubectl drain &amp;lt;node&amp;gt; -&amp;gt; reboot &amp;lt;node&amp;gt; -&amp;gt; kubectl uncordon &amp;lt;node&amp;gt;">
              <outline text="kubectl drain $HOST --ignore-daemonsets" />
            </outline>
          </outline>
          <outline text="kubectl auth can-i get pods" />
          <outline text="https://github.com/weaveworks/flux" />
          <outline text="https://www.runatlantis.io/" />
        </outline>
      </outline>
      <outline _complete="true" text="#wc2019-04-22::work">
        <outline text="Ongoing BUI" />
        <outline text="#kube-workshop Kubernetes in practice">
          <outline text="Slides">
            <outline text="lenart.k8s.school/intermediate.pdf">
              <outline text="username: apr30" />
              <outline text="password: d120" />
            </outline>
          </outline>
          <outline text="Morning &quot;recap&quot; (from beginner session)">
            <outline text="VMs vs containers (whiteboard discussion)">
              <outline text="Containers are not VMs, as VMs run on virtual hardware" />
              <outline text="#todo Look into cgroups and namespaces" />
              <outline text="How do VMs and containers look in memory?">
                <outline text="VMs">
                  <outline text="mysql" />
                  <outline text="lib" />
                  <outline text="some userspace stuff" />
                  <outline text="kernel" />
                  <outline text="virtual hardware" />
                </outline>
                <outline text="Containers">
                  <outline text="mysql" />
                  <outline text="lib" />
                  <outline text="NOTE: if there were more than 1, then the containers can share the lib across all, so big memory benefits">
                    <outline text="Also, additional benefits from things like CPU caching" />
                  </outline>
                </outline>
              </outline>
              <outline text="When you use a variety of base images for different containers (stretch / alpine / debian), you lose all the sharing/caching benefits" />
            </outline>
            <outline text="What happens if one (of many) containers crashes on a single pod?" _note="All containers in a pod share fate">
              <outline text="Either restart that container or restart pod" />
              <outline text="Cannot leave broken container as is" />
            </outline>
            <outline text="What's shared between initContainer and normal container?">
              <outline text="Shares volumes">
                <outline text="Init: pull this and place it in this volume" />
                <outline text="Normal: can use that volume" />
              </outline>
            </outline>
            <outline text="#todo read up on initContainers" />
            <outline text="Services">
              <outline text="Services do not understand HTTP" />
            </outline>
            <outline text="ConfigMaps">
              <outline text="Types">
                <outline text="Files">
                  <outline text="If app reads on startup, need to do rollouts with NEW configmaps, not updating existing (i.e. don't let kube recognise changes by updating a label - rolling backs become very hard and stupid)" />
                  <outline text="Apps that periodically read config (through something like inotify) are also not safe by applying by changing rather than creating a new one" />
                </outline>
                <outline text="Env vars">
                  <outline text="Same as files" />
                </outline>
                <outline text="Command line args">
                  <outline text="Also the same" />
                </outline>
              </outline>
              <outline text="Can use --append-config-hash (or something)" />
            </outline>
          </outline>
          <outline text="Control plane">
            <outline text="Scheduler">
              <outline text="&quot;Pending&quot;: scheduler is waiting to select a node for the pod" />
              <outline text="Always create a service before a deployment, because this is relevant for the scheduler">
                <outline text="Decision of where to place pods/services is only made once, so ensure scheduler knows where the service is before applying deployment/pods" />
                <outline text="Scheduler will try to ensure service and pods are not on the same nodes" />
                <outline text="Only an issue on initial creation, not later apply's" />
              </outline>
              <outline text="Scheduler is not really stateless...">
                <outline text="If you have more than one, only one will be active at any one time">
                  <outline text="Same with controller-manager" />
                </outline>
              </outline>
            </outline>
            <outline text="Controller-manager" _note="Actually does &quot;stuff&quot; - &quot;kubernetes did X or Y&quot;">
              <outline text="" />
            </outline>
          </outline>
          <outline text="Misc">
            <outline text="Internally, kube stores everything as protobufs" />
          </outline>
        </outline>
      </outline>
      <outline _complete="true" text="#wc2019-04-15::work">
        <outline text="Setting up AWS profiles" _note="https://ometria.atlassian.net/wiki/spaces/DZ/pages/78577665/AWS+accounts" />
        <outline _complete="true" text="#om-interview Edmund Martin tech test feedback">
          <outline text="UpdateTask.due sets self.last_run to now() if it's due. What about failure cases?" />
          <outline text="Iterable variable names as single char names. Unclear">
            <outline text="`t` seems to represent the list_id in some cases - i.e. Application.register_tasks() and Application.run()" />
            <outline text="In others, t.mail_list is this string id - in Application.due_task_generator()" />
          </outline>
          <outline text="Pedantic, asyncio.sleep(0.1) is probably overkill (but conceptually fine)" />
        </outline>
        <outline text="Ongoing broadcast work" />
      </outline>
      <outline _complete="true" text="#wc2019-04-08::work">
        <outline _complete="true" text="#om-interview Rebecca Lelew">
          <outline _complete="true" text="Prep">
            <outline text="Backend task">
              <outline text="Don't be put off by the referenced document, we are not following the detailed process, but you should read over it to get context for the pair programming task when you come in to the office! It will be a collaborative task, we'll work through the implementation together but you'll be in the driving seat :) Sections worth reading and understanding are &quot;Overview&quot;, &quot;Requirements&quot; and &quot;API Keys&quot;. All the rest is not relevant here." />
              <outline text="Write a simple single threaded program responsible for retrieving data from the mailchimp API, transforming it, and pushing it on to the internal API. Given the condensed format, we are not expecting a comprehensive solution - rather a simple and clear solution will suffice!" />
              <outline text="Things to consider for the implementation">
                <outline text="Pagination - how might we ask for the data from the API? Why is this important?" />
                <outline text="How might we store configuration for different importers (if we were to extend beyond mailchimp for example)?" />
                <outline text="Error handling - what happens if the process fails? Why might it fail?" />
                <outline text="Code clarity and extensibility" />
              </outline>
              <outline text="Further consideration for discussion - how might we speed up the process?" />
            </outline>
          </outline>
          <outline text="Pair programming">
            <outline text="Created .env, but was unfamiliar with how to import. Although proficient with SO" />
            <outline text="Base URL stored in importer class" />
            <outline text="Straight to virtualenv, great" />
            <outline text="Understood requirement of json header very quickly when res.data was initially empty" />
            <outline text="Suggests try except for accessing dict keys" />
            <outline text="General thoughts?">
              <outline text="Seems to understand the problem well" />
              <outline text="Good at communicating" />
              <outline text="Works quick, debugs quick" />
            </outline>
            <outline text="Questions to ask">
              <outline text="What errors might we hit when getting data from mailchimp?" />
              <outline text="How would you extend for additional importers?" />
            </outline>
          </outline>
        </outline>
        <outline _complete="true" text="Create skeleton task for candidate #todo" />
        <outline _complete="true" text="Create format of pair programming task #todo" />
        <outline text="Ongoing broadcast work" />
        <outline _complete="true" text="#om-interview Artur Maciag">
          <outline text="Suggests a scheduler configured to run every 1h">
            <outline text="Predictively spawns N workers based on historical data" />
          </outline>
          <outline text="Understood API policies, i.e. hinting at rate limiting">
            <outline text="QUESTION: was this example assuming full batch import on each iteration?">
              <outline text="Struggled when pushed about edge cases based around changing records mid-pull">
                <outline text="Suggests that worker would throw exception if record changed, seems to be confused" />
                <outline text="Assumed job to be failed" />
              </outline>
              <outline text="Seems like he hadn't looked at mailchimp docs" />
              <outline text="Struggling to think of dt_last_updated solution??" />
            </outline>
          </outline>
          <outline text="Middleware that deals with diffs">
            <outline text="Suggests non-relational db" />
            <outline text="Suggests some sort of cache layer stored in memory" />
            <outline text="What sort of software would he recommend?">
              <outline text="Maybe mongodb" />
              <outline text="Or faster, some sort of memcache" />
              <outline text="How would you use memcache?">
                <outline text="Some sort of sharding mechanism" />
                <outline text="Will know which importer to use">
                  <outline text="Different memcache instance per importer" />
                </outline>
                <outline text="Would store all data" />
                <outline text="Other considerations?">
                  <outline text="Suggests memory is cheap, Al reasons that it's more expensive that disk" />
                  <outline text="If we want to reduce memory we want to somehow serialize this data" />
                </outline>
                <outline text="Storing record in key/value store, 1 per input record. How do we know that an incoming record is missing?">
                  <outline text="Seems unsure, referring back to pages of import" />
                  <outline text="What key/value structure would we use?">
                    <outline text="Struggling with concept of unique key" />
                    <outline text="Suggests storing page ID as unique key">
                      <outline text="So are we storing full page of data in memcache?">
                        <outline text="Yes" />
                      </outline>
                    </outline>
                  </outline>
                  <outline text="If record removed in page 1 in batches of 100, 101 now disappears from page 2 so suggested algo will say it's gone?">
                    <outline text="Aware of issue eventually but struggling with solution" />
                  </outline>
                </outline>
              </outline>
            </outline>
          </outline>
          <outline text="How to deal with errors (temp or perm)">
            <outline text="How to deal with alerting and monitoring?">
              <outline text="Would start by relating errors to logical layer/component from which it originated" />
              <outline text="Bit woolly/generic on implementation" />
              <outline text="What about workers hitting API? Timeouts etc?">
                <outline text="Suggests retry logic, alert on final failure" />
              </outline>
              <outline text="Healthcheck for third party API" />
              <outline text="What happens if bug in 3rd party API which means it sent back a large amount of memory? Message too big to process, OS error">
                <outline text="Suggests that OOM error will be sent by application exception handling" />
                <outline text="For celery workers, if we're out of mem, worker will exit with error" />
                <outline text="(With some nudging) can be dealt with at infrastructure level, kubernetes can raise this alert" />
              </outline>
            </outline>
          </outline>
          <outline text="What are you looking for in next role?">
            <outline text="Infrastructure" />
            <outline text="Analytics" />
            <outline text="Wants to gain more experience in backend in general (it seems)" />
            <outline text="Particular technologies?">
              <outline text="Kube" />
              <outline text="Scaling" />
              <outline text="Scheduling" />
              <outline text="Streaming/processing" />
              <outline text="Tensorflow" />
              <outline text="Etc" />
              <outline text="Golang" />
            </outline>
            <outline text="What streaming technologies excite you?">
              <outline text="Apache kafka">
                <outline text="Easy API for implementation" />
                <outline text="Efficient compared to rabbitmq" />
              </outline>
            </outline>
          </outline>
        </outline>
      </outline>
      <outline _complete="true" text="#wc2019-04-01::work">
        <outline text="Broadcast UI/mass_email deployment and testing #om-meeting">
          <outline text="Early release starts 23rd April" _note="https://docs.google.com/document/d/1XYsaI9GaPQwdJ5rfrVgNlloM5K_x-4gItbpGi0I9lCA/edit#heading=h.cumlolse07no">
            <outline text="5-6 active users" />
            <outline text="Will require full functionality (this will be in place of the existing system)." />
            <outline text="Give me two productive weeks to implement outstanding and test system" />
          </outline>
          <outline text="Current state of broadcast UI integration">
            <outline text="Two key components have been affected">
              <outline text="Generation of variants in API layer" />
              <outline text="Generation of batches in variant generation and processing step in mass_email" />
            </outline>
            <outline text="Mostly implemented with proof of functionality from basic local tests" />
            <outline text="Outstanding: need to implement split test with winner.">
              <outline text="Might require alterations to variant_processor in backend, or might be able to leverage existing type with minor refactor" />
            </outline>
          </outline>
          <outline text="Testing requirements">
            <outline text="Ability to run full campaign processing flow (changes localised within campaign_processor) with a controlled customer base (knowledge of expected segmentation results) and validate sends to correct recipients" />
            <outline text="Receive emails to validate they're generating properly (?)" />
            <outline text="Nice to haves">
              <outline text="Ability to simulate creation of campaign and generation of variants via API" />
            </outline>
            <outline text="Really nice to haves">
              <outline text="Ability to test full flow with app interacting with test env, i.e. set segmentation, create campaign and schedule" />
            </outline>
          </outline>
          <outline text="Email events will be ingested into prod database (same sparkpost key as prod for account 352)" />
          <outline text="Currently uses al's test db image" />
          <outline text="Performance?">
            <outline text="Hard to do in test environment" />
            <outline text="Will have to be using prod" />
          </outline>
          <outline text="My own cluster can be created solely for broadcast ui tests" />
          <outline text="There is reporting in test cluster available if necessary" />
        </outline>
        <outline text="#support">
          <outline _complete="true" text="Shopify ticket https://ometria.atlassian.net/browse/ES-229">
            <outline text="Previous work for reference of touched files, run this in ometria.console" _note="git show dba1860833eaf3d9114a02e5099be530d775f829" />
            <outline text="Sql written" />
            <outline text="Run for">
              <outline text="496 Ledbury, shard 0011" />
              <outline text="843 Larsson and Jennings, shard 0016" />
            </outline>
            <outline text="Al SQL ran on prod" _note="UPDATE imports&#10;SET data = ((COALESCE(data,'{}')::jsonb) || '{&quot;shopify_use_locations&quot;:true}'::jsonb)::text&#10;WHERE account_id IN (496,843) AND type='Shopify';" />
            <outline _complete="true" text="Implement interface in ometria.console #todo" />
            <outline _complete="true" text="Or in ometria.imports?">
              <outline _complete="true" text="ometria.imports/src/Ometria/Imports/ImportAdaptor/Shopify.php" />
            </outline>
          </outline>
          <outline text="Al will pick up Sofar sounds ticket" _note="https://ometria.atlassian.net/browse/ES-233">
            <outline text="Or might write up solution for me to implement" />
          </outline>
          <outline text="P0 Postgres read replica outage" _note="https://docs.google.com/document/d/1Am7hCGssnPOTI2fZ478DZnPRe0E54CZiYDephWvk2xo/edit#">
            <outline text="Library versioning requires">
              <outline text="lib.services &amp;gt; 1.0" />
              <outline text="sqlalchemy &amp;gt; 1.2" />
            </outline>
            <outline text="Affected services">
              <outline text="Kube">
                <outline text="mass_email_pipeline">
                  <outline text="It retrieves a connection per shard, and uses it to pass a single session which is used in the three separate update functions. It rolls back this &quot;trans&quot; passed from connection.__enter__ in the case of an exception" />
                  <outline text="Update lib.services and sqlalchemy dependency as calls newly updated function get_connections_for_shards()" />
                  <outline text="Consider setting OM_POSTGRES_DISABLE_POOLING to true as appears to be a single cron job running in a single thread" />
                  <outline text="I think it explicitly called `rollback()` in place of raising an exception that would be triggered by the built in rollback within Transaction.__exit__" />
                </outline>
                <outline text="trigger_campaigns">
                  <outline text="Live version on cronjob currently running old version of trigger_campaigns which did not have later image applied (with lib updates)" />
                  <outline text="Also only requires lib updates as uses `db.get_session_for_shard` which enables pre_ping" />
                  <outline text="Probably worth updating to new transaction context manager also" />
                  <outline text="" />
                </outline>
              </outline>
              <outline text="Not kube - Backend1">
                <outline text="Close mongo db sessions and send to ingest (PHP - backend1)">
                  <outline text="ometria.master?" />
                </outline>
              </outline>
            </outline>
          </outline>
          <outline text="Customer engagement redshift">
            <outline text="Query showing dodgy results" _note="{&quot;query&quot;:{&quot;filters&quot;:[{&quot;value&quot;:[&quot;0&quot;],&quot;op&quot;:&quot;eq&quot;,&quot;field&quot;:&quot;engagement&quot;},{&quot;value&quot;:[{&quot;unit&quot;:&quot;day&quot;,&quot;duration&quot;:&quot;180&quot;}],&quot;op&quot;:&quot;after_ago&quot;,&quot;field&quot;:&quot;date_email_last_open&quot;}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;}}" />
            <outline text="Output query" _note="SELECT customers.id&#10;FROM customers&#10;WHERE customers.account_id = 352 AND (EXISTS (SELECT 1&#10;FROM customers_health_dimensions&#10;WHERE customers_health_dimensions.customer_id = customers.id AND customers_health_dimensions.engagement = any(NULL))) AND (EXISTS (SELECT 1&#10;FROM customer_email_interaction_rollup&#10;WHERE customer_email_interaction_rollup.customer_id = customers.id AND customer_email_interaction_rollup.dt_last_opened &amp;gt; '2018-10-06T10:16:31.951456+00:00'))" />
          </outline>
          <outline text="Cs insight report issue">
            <outline text="exception: &quot;time data '2019/01/01 00:00:00' does not match format '%Y-%m-%d %H:%M:%S'&quot;" />
          </outline>
          <outline _complete="true" text="Abandon basket ticket" _note="https://ometria.atlassian.net/browse/ES-237">
            <outline text="Background">
              <outline text="js events sent to server in `tracker`">
                <outline text="trk.ometria.com in here" />
                <outline text="writes event to queue (kestrel)" />
              </outline>
              <outline text="tracker_backend" _note="(is old)">
                <outline text="reads events from kestrel" />
                <outline text="aggregates in mongodb" />
              </outline>
              <outline text="ometria.master">
                <outline text="cron job looks in mongodb for sessions for session with no activity &amp;gt; 30 mins" />
                <outline text="get converted into visit record and put on beanstalk queue" />
                <outline text="then get picked up by data_ingestion" />
              </outline>
              <outline text="data_ingestion">
                <outline text="visit_records">
                  <outline text="if has basket data splits it out and call abandon basket pipeline" />
                </outline>
              </outline>
              <outline text="js_tracker_pipline is new">
                <outline text="rolls up tracker and tracker_backend" />
                <outline text="replaces code in tracker and alters tracker_backend to write to and read from pubsub" />
              </outline>
            </outline>
            <outline text="account_id = 417" />
            <outline text="trigger_campaign_id = 47" />
            <outline text="customer_id = 8524745" />
            <outline text="event_id = 127110112" />
            <outline text="version_id = 568" />
            <outline text="trigger_campaign_customer.ids">
              <outline text="3953834" />
              <outline text="2816039" />
            </outline>
            <outline text="Check campaign membership in" _note="ometria_trigger_campaigns.membership.search.find_records_to_act_on()" />
            <outline text="_decide_event_type(group, filters) -&amp;gt; 'basket_abandoned', None" />
            <outline text="_get_query_constraint() -&amp;gt; &quot;store_id&quot;, &quot;eq&quot;, &quot;9&quot;, is_negate=True" />
            <outline text="To recreate EventQuery">
              <outline text="event_query = EventQuery(account_id=417, event_type'basket_abandoned')" />
              <outline text="event_query.where(attr=&quot;store_id&quot;, op=&quot;eq&quot;, value=[&quot;9&quot;], negate=True)" />
              <outline text="Output" _note="SELECT events.id&#10;FROM events&#10;WHERE events.account_id = 417 AND events.event_type = 'basket_abandoned' AND (events.store_id = '9') IS NOT true" />
              <outline text="If adding `AND customer_id = 8524745` to the end, I get the alternative event from Nov 2018" />
            </outline>
            <outline text="Everything seems fine up to and returning from `get_triggered_events()`" />
            <outline text="Confirmed that send was triggered by event.id = 127110112" />
            <outline text="Telltale log link" _note="https://console.cloud.google.com/logs/viewer?project=ometria-kubernetes-support&amp;amp;minLogLevel=0&amp;amp;expandAll=false&amp;amp;timestamp=2019-04-02T13:29:01.790000000Z&amp;amp;customFacets=&amp;amp;limitCustomFacetWidth=true&amp;amp;dateRangeStart=2019-03-25T00:00:00.000Z&amp;amp;interval=CUSTOM&amp;amp;resource=aws_ec2_instance&amp;amp;scrollTimestamp=2019-03-25T10:55:15.000000000Z&amp;amp;advancedFilter=resource.type%3D%22aws_ec2_instance%22%0A%22trigger-campaigns-cronjobs-search%22%0AjsonPayload.account_id%3D417%0AjsonPayload.campaign_id%3D47%0A%22Campaign%20entry,%20wait%20and%20reentry%20settings%22&amp;amp;dateRangeUnbound=forwardInTime&amp;amp;dateRangeEnd=2019-03-25T11:00:00.000Z" />
            <outline text="select * from sparkpost_email_events where replace(uuid::text, '-'::text, ''::text) = 'e5946a9a389a4f379a34bedc1815433c'" />
          </outline>
          <outline _complete="true" text="Same with deletion one" _note="https://ometria.atlassian.net/browse/ES-234" />
        </outline>
        <outline text="Fix broken circle CI tests #todo" />
        <outline text="Review Simeon's PR #todo" _note="https://github.com/Ometria/ometria.lib.segmentation/pull/18" />
        <outline text="Lattice review #todo" />
      </outline>
      <outline _complete="true" text="#wc2019-03-25::work">
        <outline text="Fix broken circle CI tests #todo" />
        <outline text="Review Simeon's PR #todo" _note="https://github.com/Ometria/ometria.lib.segmentation/pull/18" />
        <outline text="Lattice review #todo" />
        <outline text="Moved broadcast UI notes back to project node https://workflowy.com/#/5880c1ce1043">
          <outline text="Mass email flow testing">
            <outline text="Setup">
              <outline text="Run developer environment" />
              <outline text="Update TEMP mass_email dependencies if required" _note="pip install -e git+https://825493dfcfe37655b9bb8fbc574df64eecdb907d@github.com/Ometria/ometria.lib.segmentation.git@c7456f2#egg=ometria_lib_segmentation&#10;pip install -e git+https://825493dfcfe37655b9bb8fbc574df64eecdb907d@github.com/Ometria/ometria.datamodels.git@86864b0#egg=ometria_datamodels" />
              <outline text="Add required rows" _note="insert into connections (account_id, type) values (352, 'ometria_sparkpost');&#10;insert into customers (account_id, email, firstname, lastname, optin, is_email_valid) values (352, 'sam@ometria.com', 'Sam', 'Lock', true, true)" />
              <outline text="Run test_broadcast_send.fish (in mass_email)" />
              <outline text="#todo enable mass_email service/gearman worker that allows validation of campaigns" />
              <outline text="Schedule curl request" _note="curl -s -X POST \&#10;-H &quot;Content-Type: application/json&quot; \&#10;-H &quot;Ometria-Account-Id:352&quot; \&#10;-H &quot;Ometria-User-Id:34&quot; \&#10;-H &quot;Ometria-User-Email:dev@ometria.com&quot; \&#10;-H &quot;Ometria-User-Permissions:view_campaigns,schedule_mass_campaign&quot; \&#10;&quot;http://127.0.0.1:8080/campaigns/mass/1/schedule&quot;" />
            </outline>
            <outline text="In repl" _note="from ometria_mass_email.campaign_processor.variant_processors import process_campaign_variants&#10;from ometria_mass_email.database.sessions import get_database_session&#10;session = get_database_session(352)&#10;from ometria_datamodels.ecomm import MassCampaign&#10;campaign = session.query(MassCampaign).one()&#10;from ometria_mass_email.campaign_processor.backend import generate_campaign_table&#10;campaign_table = generate_campaign_table(session, campaign)&#10;process_campaign_variants(session, campaign_table, campaign)&#10;&#10;session.commit()" />
            <outline text="Printed queries">
              <outline text="from_subquery" _note="SELECT campaigns.mass_352_1.uuid, row_number() OVER (ORDER BY campaigns.mass_352_1.uuid) AS rn, campaigns.mass_352_1.timezone AS tz, campaigns.mass_352_1.optimal_delivery_slot AS slot&#10;FROM campaigns.mass_352_1" />
              <outline text="update_query" _note="UPDATE campaigns.mass_352_1 SET batch_id=CASE WHEN (recipient_subquery.rn &amp;gt;= :recipient_subquery.rn_1 AND recipient_subquery.rn &amp;lt;= :recipient_subquery.rn_2) THEN :param_1 END FROM (SELECT anon_1.id AS id&#10;FROM (SELECT customers.id AS id&#10;FROM customers&#10;WHERE customers.account_id = :account_id_1 AND customers.email = any(:any_1) AND not(EXISTS (SELECT 1&#10;FROM customers_health_dimensions&#10;WHERE customers_health_dimensions.customer_id = customers.id AND customers_health_dimensions.engagement = :engagement_1))) AS anon_2 JOIN (SELECT customers.id AS id&#10;FROM customers&#10;WHERE customers.account_id = :account_id_2 AND customers.account_id = :account_id_3 AND customers.email = any(:any_2) AND customers.firstname = any(:any_3)) AS anon_1 ON anon_2.id = anon_1.id), (SELECT campaigns.mass_352_1.uuid AS uuid, row_number() OVER (ORDER BY campaigns.mass_352_1.uuid) AS rn, campaigns.mass_352_1.timezone AS tz, campaigns.mass_352_1.optimal_delivery_slot AS slot&#10;FROM campaigns.mass_352_1) AS recipient_subquery WHERE campaigns.mass_352_1.customer_id = id AND campaigns.mass_352_1.uuid = recipient_subquery.uuid" />
              <outline text="print(update_query.compile(compile_kwargs={&quot;literal_binds&quot;: True}))" _note="UPDATE campaigns.mass_352_1 SET batch_id=CASE WHEN (recipient_subquery.rn &amp;gt;= 1 AND recipient_subquery.rn &amp;lt;= 1) THEN 1 END FROM (SELECT anon_1.id AS id&#10;FROM (SELECT customers.id AS id&#10;FROM customers&#10;WHERE customers.account_id = 352 AND customers.email = any(NULL) AND not(EXISTS (SELECT 1&#10;FROM customers_health_dimensions&#10;WHERE customers_health_dimensions.customer_id = customers.id AND customers_health_dimensions.engagement = 0))) AS anon_2 JOIN (SELECT customers.id AS id&#10;FROM customers&#10;WHERE customers.account_id = 352 AND customers.account_id = 352 AND customers.email = any(NULL) AND customers.firstname = any(NULL)) AS anon_1 ON anon_2.id = anon_1.id), (SELECT campaigns.mass_352_1.uuid AS uuid, row_number() OVER (ORDER BY campaigns.mass_352_1.uuid) AS rn, campaigns.mass_352_1.timezone AS tz, campaigns.mass_352_1.optimal_delivery_slot AS slot&#10;FROM campaigns.mass_352_1) AS recipient_subquery WHERE campaigns.mass_352_1.customer_id = id AND campaigns.mass_352_1.uuid = recipient_subquery.uuid" />
            </outline>
            <outline text="Running mass_email recently. Run docker-compose-ci.yml">
              <outline text="Expose rabbitmq port in above file" _note="  rabbitmq:&#10;    image: rabbitmq:3.6-management-alpine&#10;    networks:&#10;     - ometriadeveloper_environment_default&#10;    ports:&#10;     - &quot;5672:5672&quot; # daemon API" />
            </outline>
          </outline>
          <outline text="At present mass email will create batches that are not guaranteed to have any recipients in them #todo" />
          <outline text="Ensure new `finalised_query` property can only be called after tree has been completely finished generating #todo" />
          <outline text="Remove `and_filters` row from mass_campaign_configuration and store/retrieve in customer_query as is done presently #todo" />
          <outline text="Use opportunity pre-deployment to change mass_campaign_configuration.data to &quot;segmentation_tree&quot;? #todo" />
          <outline text="Move tests to lib.segmentation lib #todo" />
          <outline text="Migration for new mass_campaign_variant.schedule_mode #todo">
            <outline text="And also for new fields segmentation_block_id, segmentation_block_item_id #todo" />
          </outline>
          <outline text="Can existing split test variant processors be used within the new segmentation processor? #todo">
            <outline text="Possibly yes, but would require adaptions to how the &quot;variants&quot; are queried and passed to the batch generators" />
          </outline>
        </outline>
      </outline>
      <outline _complete="true" text="#wc2019-03-18::work">
        <outline text="At present mass email will create batches that are not guaranteed to have any recipients in them #todo" />
        <outline text="Mass email flow testing">
          <outline text="Setup">
            <outline text="Run developer environment" />
            <outline text="Update TEMP mass_email dependencies if required" _note="pip install -e git+https://825493dfcfe37655b9bb8fbc574df64eecdb907d@github.com/Ometria/ometria.lib.segmentation.git@c7456f2#egg=ometria_lib_segmentation&#10;pip install -e git+https://825493dfcfe37655b9bb8fbc574df64eecdb907d@github.com/Ometria/ometria.datamodels.git@86864b0#egg=ometria_datamodels" />
            <outline text="Add required rows" _note="insert into connections (account_id, type) values (352, 'ometria_sparkpost');&#10;insert into customers (account_id, email, firstname, lastname, optin, is_email_valid) values (352, 'sam@ometria.com', 'Sam', 'Lock', true, true)" />
            <outline text="Run test_broadcast_send.fish (in mass_email)" />
            <outline text="#todo enable mass_email service/gearman worker that allows validation of campaigns" />
            <outline text="Schedule curl request" _note="curl -s -X POST \&#10;-H &quot;Content-Type: application/json&quot; \&#10;-H &quot;Ometria-Account-Id:352&quot; \&#10;-H &quot;Ometria-User-Id:34&quot; \&#10;-H &quot;Ometria-User-Email:dev@ometria.com&quot; \&#10;-H &quot;Ometria-User-Permissions:view_campaigns,schedule_mass_campaign&quot; \&#10;&quot;http://127.0.0.1:8080/campaigns/mass/1/schedule&quot;" />
          </outline>
          <outline text="In repl" _note="from ometria_mass_email.campaign_processor.variant_processors import process_campaign_variants&#10;from ometria_mass_email.database.sessions import get_database_session&#10;session = get_database_session(352)&#10;from ometria_datamodels.ecomm import MassCampaign&#10;campaign = session.query(MassCampaign).one()&#10;from ometria_mass_email.campaign_processor.backend import generate_campaign_table&#10;campaign_table = generate_campaign_table(session, campaign)&#10;process_campaign_variants(session, campaign_table, campaign)&#10;&#10;session.commit()" />
          <outline text="Printed queries">
            <outline text="from_subquery" _note="SELECT campaigns.mass_352_1.uuid, row_number() OVER (ORDER BY campaigns.mass_352_1.uuid) AS rn, campaigns.mass_352_1.timezone AS tz, campaigns.mass_352_1.optimal_delivery_slot AS slot&#10;FROM campaigns.mass_352_1" />
            <outline text="update_query" _note="UPDATE campaigns.mass_352_1 SET batch_id=CASE WHEN (recipient_subquery.rn &amp;gt;= :recipient_subquery.rn_1 AND recipient_subquery.rn &amp;lt;= :recipient_subquery.rn_2) THEN :param_1 END FROM (SELECT anon_1.id AS id&#10;FROM (SELECT customers.id AS id&#10;FROM customers&#10;WHERE customers.account_id = :account_id_1 AND customers.email = any(:any_1) AND not(EXISTS (SELECT 1&#10;FROM customers_health_dimensions&#10;WHERE customers_health_dimensions.customer_id = customers.id AND customers_health_dimensions.engagement = :engagement_1))) AS anon_2 JOIN (SELECT customers.id AS id&#10;FROM customers&#10;WHERE customers.account_id = :account_id_2 AND customers.account_id = :account_id_3 AND customers.email = any(:any_2) AND customers.firstname = any(:any_3)) AS anon_1 ON anon_2.id = anon_1.id), (SELECT campaigns.mass_352_1.uuid AS uuid, row_number() OVER (ORDER BY campaigns.mass_352_1.uuid) AS rn, campaigns.mass_352_1.timezone AS tz, campaigns.mass_352_1.optimal_delivery_slot AS slot&#10;FROM campaigns.mass_352_1) AS recipient_subquery WHERE campaigns.mass_352_1.customer_id = id AND campaigns.mass_352_1.uuid = recipient_subquery.uuid" />
            <outline text="print(update_query.compile(compile_kwargs={&quot;literal_binds&quot;: True}))" _note="UPDATE campaigns.mass_352_1 SET batch_id=CASE WHEN (recipient_subquery.rn &amp;gt;= 1 AND recipient_subquery.rn &amp;lt;= 1) THEN 1 END FROM (SELECT anon_1.id AS id&#10;FROM (SELECT customers.id AS id&#10;FROM customers&#10;WHERE customers.account_id = 352 AND customers.email = any(NULL) AND not(EXISTS (SELECT 1&#10;FROM customers_health_dimensions&#10;WHERE customers_health_dimensions.customer_id = customers.id AND customers_health_dimensions.engagement = 0))) AS anon_2 JOIN (SELECT customers.id AS id&#10;FROM customers&#10;WHERE customers.account_id = 352 AND customers.account_id = 352 AND customers.email = any(NULL) AND customers.firstname = any(NULL)) AS anon_1 ON anon_2.id = anon_1.id), (SELECT campaigns.mass_352_1.uuid AS uuid, row_number() OVER (ORDER BY campaigns.mass_352_1.uuid) AS rn, campaigns.mass_352_1.timezone AS tz, campaigns.mass_352_1.optimal_delivery_slot AS slot&#10;FROM campaigns.mass_352_1) AS recipient_subquery WHERE campaigns.mass_352_1.customer_id = id AND campaigns.mass_352_1.uuid = recipient_subquery.uuid" />
          </outline>
          <outline text="Running mass_email recently. Run docker-compose-ci.yml">
            <outline text="Expose rabbitmq port in above file" _note="  rabbitmq:&#10;    image: rabbitmq:3.6-management-alpine&#10;    networks:&#10;     - ometriadeveloper_environment_default&#10;    ports:&#10;     - &quot;5672:5672&quot; # daemon API" />
          </outline>
        </outline>
        <outline _complete="true" text="Write a function in lib.segmentation that returns leaf node queries. Where the &quot;path&quot; has a random split, and therefore a non-null customer_set, run the query for the leaf node, run the interection method, and then create a query which is `SELECT id FROM customers WHERE id IN ()` #todo" />
        <outline text="Ensure new `finalised_query` property can only be called after tree has been completely finished generating #todo" />
        <outline text="Remove `and_filters` row from mass_campaign_configuration and store/retrieve in customer_query as is done presently #todo" />
        <outline text="Use opportunity pre-deployment to change mass_campaign_configuration.data to &quot;segmentation_tree&quot;? #todo" />
        <outline text="Can existing split test variant processors be used within the new segmentation processor? #todo">
          <outline text="Possibly yes, but would require adaptions to how the &quot;variants&quot; are queried and passed to the batch generators" />
        </outline>
        <outline _complete="true" text="HANDOVER">
          <outline text="Left in a state where I'd started to integrate the lib.segmentation tree logic into mass_email. In particular, I'd started writing a method MassCampaignTree.query_dict() that was going to create a dict with variant_id as the key, and the related leaf-node.query as the value. This would be useful in mass_email as I could iterate over the queries and run them in mass_email to update the campaign_table with knowledge of variant_id (or something similar, if variant_id is not required)." />
          <outline text="I'd just pushed a new build to slot2 -&amp;gt; v1.3broadcast64 which appeared to have solved any regressions in respect to the segmentation UI working correctly." />
        </outline>
        <outline text="Move segmentation tree logic to lib.segmentation">
          <outline text="Move tests to lib.segmentation lib #todo" />
          <outline text="Deploy new lib.segmentation and update import in api.campaigns #todo" />
          <outline text="lib.segmentation now relies on commit-hash dependency install of datamodels #todo" />
        </outline>
        <outline text="Migration for new mass_campaign_variant.schedule_mode #todo">
          <outline text="And also for new fields segmentation_block_id, segmentation_block_item_id #todo" />
        </outline>
        <outline _complete="true" text="Improve on `req_ctx` using `session` key for core session on blueprint requests #todo" />
      </outline>
      <outline _complete="true" text="#wc2019-02-25::work">
        <outline _complete="true" text="Usability review">
          <outline text="Majors">
            <outline text="Box count doesn't apply previous segmentation" />
            <outline text="Missing (email) icons" />
            <outline text="" />
          </outline>
        </outline>
        <outline _complete="true" text="api.campaigns dependencies that needed to be locked in order to run tests">
          <outline text="connexion = &quot;==1.5.2&quot;" />
          <outline text="swagger-spec-validator = &quot;==2.3.1" />
          <outline text="jsonschema = &quot;==2.6.0&quot;" />
        </outline>
        <outline _complete="true" text="Suppression count debug">
          <outline text="`.compile(compile_kwargs={&quot;literal_binds&quot;: True})`" />
          <outline text="Query" _note="res = session.execute(&quot;SELECT customers.id FROM customers WHERE customers.account_id = 352 EXCEPT SELECT customers.id FROM customers WHERE customers.account_id = 352 AND (EXISTS (SELECT lists_customers.list_id, lists_customers.customer_id, lists_customers.dt_added, lists_customers.is_observed, lists_customers._is_fast_indexed FROM lists_customers WHERE lists_customers.list_id = 1 AND lists_customers.customer_id = customers.id))&quot;)&#10;&#10;SELECT customers.id FROM customers WHERE customers.account_id = 352 EXCEPT SELECT customers.id FROM customers WHERE customers.account_id = 352 AND (EXISTS (SELECT lists_customers.list_id, lists_customers.customer_id, lists_customers.dt_added, lists_customers.is_observed, lists_customers._is_fast_indexed FROM lists_customers WHERE lists_customers.list_id = 1 AND lists_customers.customer_id = customers.id))">
            <outline text="" />
          </outline>
        </outline>
        <outline _complete="true" text="Ilam code interview #om-interview">
          <outline text="How to deal with sensitive information?" />
          <outline _complete="true" text="How to deal with exception handling/retry logic?" />
          <outline text="Readily offered offset as a solution" />
          <outline text="Seemed to understand basics of batching" />
          <outline text="Grabbed initial data, then set while loop with offset being incremented" />
          <outline text="Suggested retry logic" />
          <outline text="Prompted about need for intermediate step between retrieval and sending on to internal">
            <outline text="He mentioned multithreading" />
            <outline text="Mentioned rate limiting on mailchimp, nice" />
          </outline>
          <outline text="Confusion between multithreading and multiprocessing">
            <outline text="Confusion of storing state in memory across threads?" />
          </outline>
        </outline>
        <outline _complete="true" text="New datamodels commit hash for installs 847c054" _note="pipenv install -e git+https://825493dfcfe37655b9bb8fbc574df64eecdb907d@github.com/Ometria/ometria.datamodels.git@847c054#egg=ometria_datamodels" />
        <outline _complete="true" text="Resolve lock failure in api.campaigns when resolving above install #todo" _note="currently installed using flag `--skip-lock`" />
        <outline text="Use opportunity pre-deployment to change mass_campaign_configuration.data to &quot;segmentation_tree&quot;? #todo" />
        <outline text="Move segmentation tree logic to lib.segmentation">
          <outline text="Move tests to lib.segmentation lib #todo" />
          <outline text="Deploy new lib.segmentation and update import in api.campaigns #todo" />
          <outline text="lib.segmentation now relies on commit-hash dependency install of datamodels #todo" />
        </outline>
        <outline text="Migration for new mass_campaign_variant.schedule_mode #todo">
          <outline text="And also for new fields segmentation_block_id, segmentation_block_item_id #todo" />
        </outline>
        <outline text="Improve on `req_ctx` using `session` key for core session on blueprint requests #todo" />
      </outline>
      <outline _complete="true" text="#wc2019-02-18::work">
        <outline text="To run send_test #proj-broadcast">
          <outline text="Run developer_environment" />
          <outline text="Run sync_email service in mass_email" />
          <outline text="`update mass_campaign set template_instance_id = 6692, template_instance_revision_id = 7014 where id = 1979;`" />
          <outline text="Comment out archive code in mass_email and `docker build . -t mass_email`" />
        </outline>
        <outline _complete="true" text="lib.segmentation change is no longer relevant, need to remove #todo" />
        <outline _complete="true" text="product_recommendation write-up #todo">
          <outline text="There are numerous uses of the product_recommendation service">
            <outline text="Broadcast campaigns - using image_recs service">
              <outline text="Static cloudfront URLs (historically `slot.php` and `click.php`) are inserted into relevant templates prior to sending" />
              <outline text="When the emails are opened, each resource retrieves from the relevant URL above, with a bunch of relevant url kwargs. Both are routed to the image_recs service, where there are aptly names functions to handle the requests (Slot and Click in http.go)." />
            </outline>
            <outline text="Trigger campaigns - using gearman interface directly in product_recommendations" />
            <outline text="Preview queries (from the UI) - using product_recommendations http API via console2 php" />
            <outline text="Transactional??" />
          </outline>
        </outline>
        <outline text="Improve on `req_ctx` using `session` key for core session on blueprint requests #todo" />
      </outline>
      <outline _complete="true" text="#wc2019-02-11::work">
        <outline _complete="true" text="Wrote update to lib.segmentation, will need deploying #todo" />
        <outline text="lib.segmentation change is no longer relevant, need to remove #todo" />
        <outline _complete="true" text="Large query is not working for non-dev testing accounts of certain size #todo" />
        <outline text="product_recommendation write-up #todo">
          <outline text="There are numerous uses of the product_recommendation service">
            <outline text="Broadcast campaigns - using image_recs service">
              <outline text="Static cloudfront URLs (historically `slot.php` and `click.php`) are inserted into relevant templates prior to sending" />
              <outline text="When the emails are opened, each resource retrieves from the relevant URL above, with a bunch of relevant url kwargs. Both are routed to the image_recs service, where there are aptly names functions to handle the requests (Slot and Click in http.go)." />
            </outline>
            <outline text="Trigger campaigns - using gearman interface directly in product_recommendations" />
            <outline text="Preview queries (from the UI) - using product_recommendations http API via console2 php" />
            <outline text="Transactional??" />
          </outline>
        </outline>
        <outline text="Segmentation API tracing not working on prod #todo">
          <outline text="Does work when opening REPL in pod and running manually." />
        </outline>
        <outline text="Improve on `req_ctx` using `session` key for core session on blueprint requests #todo" />
        <outline text="Non-sprint backlog">
          <outline text="Ensure omitted fields are globally ignored #todo" />
          <outline text="Integration-testing">
            <outline text="Add in tests/integration base dir to cookiecutter repo(s)? #todo" />
          </outline>
          <outline text="Consider Behave BDD talk for L&amp;amp;L sesh?" />
        </outline>
      </outline>
      <outline _complete="true" text="#wc2019-02-04::work">
        <outline text="Large query is not working for non-dev testing accounts of certain size #todo" />
        <outline text="product_recommendation write-up #todo">
          <outline text="There are numerous uses of the product_recommendation service">
            <outline text="Broadcast campaigns - using image_recs service">
              <outline text="Static cloudfront URLs (historically `slot.php` and `click.php`) are inserted into relevant templates prior to sending" />
              <outline text="When the emails are opened, each resource retrieves from the relevant URL above, with a bunch of relevant url kwargs. Both are routed to the image_recs service, where there are aptly names functions to handle the requests (Slot and Click in http.go)." />
            </outline>
            <outline text="Trigger campaigns - using gearman interface directly in product_recommendations" />
            <outline text="Preview queries (from the UI) - using product_recommendations http API via console2 php" />
            <outline text="Transactional??" />
          </outline>
        </outline>
        <outline _complete="true" text="Support">
          <outline text="https://ometria.atlassian.net/browse/ES-130">
            <outline text="Prod recommendation API url" _note="https://app.ometria.com/app/d25316f1565740be/api/product-recommendation-instance/_preview?title=Personalised products - patterns&amp;amp;engine=personalised&amp;amp;fallback_engine=top_products&amp;amp;fallback_period=7&amp;amp;filter_attribute_ids[0][type]=product_type&amp;amp;filter_attribute_ids[0][ids][0]=145350&amp;amp;remove_products_bought=true&amp;amp;email=jacotco@gmail.com&amp;amp;blacklisted_attribute_ids[0][type]=format&amp;amp;blacklisted_attribute_ids[0][ids][0]=145625&amp;amp;blacklisted_attribute_ids[0][ids][1]=154977&amp;amp;blacklisted_attribute_ids[0][ids][2]=155237">
              <outline text="`engine_period` not passed but called/set in php" _note="ometria.console2/api/controllers/product-recommendation-instance-api.php l188" />
              <outline text="Local running">
                <outline text="URL to query locally with prod issue url kwargs" _note="http://console2.ometria/app/developer_testing/api/product-recommendation-instance/_preview?title=Personalised%20products%20-%20patterns&amp;amp;engine=personalised&amp;amp;fallback_engine=top_products&amp;amp;fallback_period=7&amp;amp;filter_attribute_ids[0][type]=product_type&amp;amp;filter_attribute_ids[0][ids][0]=145350&amp;amp;remove_products_bought=true&amp;amp;email=jacotco@gmail.com&amp;amp;blacklisted_attribute_ids[0][type]=format&amp;amp;blacklisted_attribute_ids[0][ids][0]=145625&amp;amp;blacklisted_attribute_ids[0][ids][1]=154977&amp;amp;blacklisted_attribute_ids[0][ids][2]=155237" />
                <outline text="`deserialiseRow()` output" _note="Array ( [account_id] =&amp;gt; 352 [title] =&amp;gt; Personalised products - patterns [data] =&amp;gt; {&quot;engines&quot;:[&quot;personalised&quot;,&quot;top_products&quot;],&quot;personalised_number_days&quot;:null,&quot;top_products_number_days&quot;:&quot;7&quot;,&quot;blacklisted_products&quot;:null,&quot;blacklisted_attribute_ids&quot;:[145625,154977,155237],&quot;attribute_ids&quot;:[145350],&quot;default_store&quot;:null,&quot;lower_bound_price&quot;:null,&quot;upper_bound_price&quot;:null,&quot;remove_products_bought&quot;:&quot;true&quot;,&quot;_version&quot;:2} ) " />
                <outline text="`$qs` pre querystring building" _note="Array ( [engines] =&amp;gt; personalised,top_products [top_products_number_days] =&amp;gt; 7 [blacklisted_attribute_ids] =&amp;gt; 145625,154977,155237 [attribute_ids] =&amp;gt; 145350 [remove_products_bought] =&amp;gt; true [account] =&amp;gt; developer_testing [email] =&amp;gt; jacotco@gmail.com )" />
                <outline text="URL post building" _note="v1/recommendations/?engines=personalised%2Ctop_products&amp;amp;top_products_number_days=7&amp;amp;blacklisted_attribute_ids=145625%2C154977%2C155237&amp;amp;attribute_ids=145350&amp;amp;remove_products_bought=true&amp;amp;account=developer_testing&amp;amp;email=jacotco%40gmail.com" />
                <outline text="URL with correct client account hash" _note="v1/recommendations/?engines=personalised%2Ctop_products&amp;amp;top_products_number_days=7&amp;amp;blacklisted_attribute_ids=145625%2C154977%2C155237&amp;amp;attribute_ids=145350&amp;amp;remove_products_bought=true&amp;amp;account=d25316f1565740be&amp;amp;email=jacotco%40gmail.com" />
              </outline>
              <outline text="To tunnel to prod redis">
                <outline text="`tunnel redis-pr`" _note="Have updated this script to target correct url" />
                <outline text="`redis-cli -p 6479 -n 2`" />
              </outline>
              <outline text="For investigated example">
                <outline text="`get 501:personalised*` returns nothing">
                  <outline text="Because it is actually `501:product_attributes:ts_trained`" />
                </outline>
                <outline text="`get 501:top_products*` returns following keys">
                  <outline text="1) &quot;501:top_products:7:ts_trained&quot;" />
                  <outline text="2) &quot;501:top_products:28:ts_trained&quot;" />
                  <outline text="3) &quot;501:top_products:14:ts_trained&quot;" />
                </outline>
                <outline text="So must be defaulting to those" />
              </outline>
              <outline text="Email send GUID in question `ometria_sparkpost:e5946a9a389a4f379a34bedc1815433c`">
                <outline text="In trigger_campaign_send table" />
              </outline>
              <outline text="Corresponds to trigger_campaign.id = 99" />
              <outline text="customer_id = 4018848" />
              <outline text="Uses trigger_campaign_send.template_instance_id = 7933" />
              <outline text="Corresponds to template_instance.revision_id_published = 14409" />
              <outline text="image_recs service NOT used for trigger_campaigns. Called from send node" />
              <outline text="Log" _note="https://console.cloud.google.com/logs/viewer?project=ometria-kubernetes-support&amp;amp;minLogLevel=0&amp;amp;expandAll=false&amp;amp;timestamp=2019-02-06T16%3A25%3A02.496000000Z&amp;amp;customFacets&amp;amp;limitCustomFacetWidth=true&amp;amp;interval=CUSTOM&amp;amp;resource=aws_ec2_instance&amp;amp;scrollTimestamp=2019-01-21T09%3A47%3A23.000000000Z&amp;amp;advancedFilter=resource.type%3D%22aws_ec2_instance%22%0Aresource.labels.instance_id%3D%22i-0106ea9f95b756145%22%0Aresource.labels.project_id%3D%22ometria-kubernetes-support%22%0Aresource.labels.region%3D%22aws%3Aeu-west-1a%22%0Aresource.labels.aws_account%3D%22558628973821%22%0Atimestamp%3D%222019-01-21T09%3A47%3A23.000000000Z%22%0AinsertId%3D%22dvx0ckg1537ngi%22&amp;amp;dateRangeStart=2019-01-21T09%3A00%3A00.000Z&amp;amp;dateRangeEnd=2019-01-21T10%3A00%3A00.000Z" />
              <outline text="Comparison">
                <outline text="Preview route" _note="request_parameters = {&#10;        &quot;engines&quot;: [&quot;personalised&quot;, &quot;top_products&quot;],&#10;        &quot;top_products_number_days&quot;: 7,&#10;        &quot;blacklisted_attribute_ids&quot;: [145625, 154977, 155237],&#10;        &quot;attribute_ids&quot;: [145350],&#10;        &quot;remove_products_bought&quot;: True,&#10;        &quot;account&quot;: &quot;d25316f1565740be&quot;,&#10;        &quot;email&quot;: &quot;jacotco@gmail.com&quot;&#10;}&#10;valid_parameters = VALIDATION_SCHEMA(request_parameters)&#10;recommendation_result = backend.get_product_recommendations(valid_parameters[&quot;account&quot;], valid_parameters)&#10;recommended_products = recommendation_result[&quot;products&quot;]">
                  <outline text="valid_parameters" _note="valid_parameters_preview = {'account': {u'stores': [{u'name': u'Store #gb', u'id': u'gb'}, {u'name': u'Store #au', u'id': u'au'}], u'settings': {u'week_first_day': u'Monday', u'start_of_year': u'2012-12-31', u'week_last_day': u'Sunday', u'locale': u'en_GB.UTF-8', u'forms': {}, u'currency': u'GBP', u'formatting': {u'currency': {u'EUR': {u'thousands_sep': u',', u'prefix': u'\u20ac', u'decimals': u'AUTO', u'dec_point': u'.'}, u'USD': {u'thousands_sep': u',', u'prefix': u'$', u'decimals': u'AUTO', u'dec_point': u'.'}, u'AUD': {u'thousands_sep': u',', u'prefix': u'AU$ ', u'decimals': u'AUTO', u'dec_point': u'.'}, u'GBP': {u'thousands_sep': u',', u'prefix': u'\xa3', u'decimals': u'AUTO', u'dec_point': u'.'}, u'CAD': {u'thousands_sep': u',', u'prefix': u'CA$ ', u'decimals': u'AUTO', u'dec_point': u'.'}}, u'number': {u'default': {u'thousands_sep': u',', u'dec_point': u'.', u'decimals': u'AUTO'}}}, u'campaign_settings': {u'mass_optin_mode': u'strict', u'optin_mode': u'strict', u'email': {u'use_variant_data_in_marketing': True, u'optin_mode': u'strict', u'default_from_address': u'newsletter@e.loveknitting.com', u'default_from_name': u'LoveKnitting', u'default_url_parameters': {u'om_profile': u'{{ profile.hash }}', u'utm_campaign': u'{{ email.campaign_title }}_AUTOMATION', u'omhide': u'true', u'utm_source': u'Loveknitting', u'utm_content': u'{{ email.segment_title }}_{{ email.split_title }}_{{ email.node_title }}'}, u'default_reply_to_address': u'info+newsletter@loveknitting.com'}, u'limits': {u'automation_maximum_entries': Decimal('7000')}, u'mass_email': {u'default_reply_to_address': u'info+newsletter@loveknitting.com', u'optin_mode': u'strict', u'default_from_address': u'newsletter@e.loveknitting.com', u'default_from_name': u'LoveKnitting', u'default_url_parameters': {u'om_profile': u'{{ profile.hash }}', u'utm_campaign': u'{{ email.campaign_title }}', u'omhide': u'true', u'utm_source': u'Loveknitting', u'utm_content': u'LK_WW'}}}, u'timezone': u'Europe/London', u'lifecycle': {u'at_risk_days': u'182', u'lapsed_days': u'385'}}, u'url': u'https://www.loveknitting.com', u'is_active': True, u'hash': 'd25316f1565740be', u'id': 501}, 'engines': ['personalised', 'top_products'], 'top_products_number_days': 7, u'instance': None, 'remove_products_bought': True, 'attribute_ids': [145350], 'blacklisted_attribute_ids': [145625, 154977, 155237], 'email': 'jacotco@gmail.com', u'store': None}" />
                  <outline text="Returns 10" />
                  <outline text="Keys in valid_parameters" _note="&amp;gt;&amp;gt;&amp;gt; ', '.join(sorted(k for k in valid_parameters.keys()))&#10;u'_version, account, attribute_ids, blacklisted_attribute_ids, engines, remove_products_bought, store, top_products_number_days'" />
                </outline>
                <outline text="Gearman trigger route" _note="https://console.cloud.google.com/logs/viewer?project=ometria-kubernetes-support&amp;amp;minLogLevel=0&amp;amp;expandAll=false&amp;amp;timestamp=2019-02-06T16%3A25%3A02.496000000Z&amp;amp;customFacets&amp;amp;limitCustomFacetWidth=true&amp;amp;interval=CUSTOM&amp;amp;resource=aws_ec2_instance&amp;amp;scrollTimestamp=2019-01-21T09%3A47%3A23.000000000Z&amp;amp;dateRangeStart=2019-01-21T09%3A00%3A00.000Z&amp;amp;dateRangeEnd=2019-01-21T10%3A00%3A00.000Z&amp;amp;advancedFilter=resource.type%3D%22aws_ec2_instance%22%0Aresource.labels.region%3D%22aws%3Aeu-west-1a%22%0Aresource.labels.aws_account%3D%22558628973821%22%0Aresource.labels.instance_id%3D%22i-0106ea9f95b756145%22%0Aresource.labels.project_id%3D%22ometria-kubernetes-support%22%0Atimestamp%3D%222019-01-21T09%3A47%3A23.000000000Z%22%0AinsertId%3D%22dvx0ckg1537ngi%22">
                  <outline text="call_kwargs (retrieved from logs)" _note="&quot;call_kwargs&quot;: {&#10;    &quot;account&quot;: 501,&#10;    &quot;customer_id&quot;: 4018848,&#10;    &quot;instance&quot;: &quot;c94f43a7d213a9e151152dcb7d3c66c9&quot;,&#10;    &quot;limit&quot;: 10,&#10;    &quot;store&quot;: &quot;gb&quot;,&#10;    &quot;their_product_ids&quot;: []&#10;}" />
                  <outline text="valid_parameters" _note="valid_parameters = {'account': {u'stores': [{u'name': u'Store #gb', u'id': u'gb'}, {u'name': u'Store #au', u'id': u'au'}], u'settings': {u'week_first_day': u'Monday', u'start_of_year': u'2012-12-31', u'week_last_day': u'Sunday', u'locale': u'en_GB.UTF-8', u'forms': {}, u'currency': u'GBP', u'formatting': {u'currency': {u'EUR': {u'thousands_sep': u',', u'prefix': u'\u20ac', u'decimals': u'AUTO', u'dec_point': u'.'}, u'USD': {u'thousands_sep': u',', u'prefix': u'$', u'decimals': u'AUTO', u'dec_point': u'.'}, u'AUD': {u'thousands_sep': u',', u'prefix': u'AU$ ', u'decimals': u'AUTO', u'dec_point': u'.'}, u'GBP': {u'thousands_sep': u',', u'prefix': u'\xa3', u'decimals': u'AUTO', u'dec_point': u'.'}, u'CAD': {u'thousands_sep': u',', u'prefix': u'CA$ ', u'decimals': u'AUTO', u'dec_point': u'.'}}, u'number': {u'default': {u'thousands_sep': u',', u'dec_point': u'.', u'decimals': u'AUTO'}}}, u'campaign_settings': {u'mass_optin_mode': u'strict', u'optin_mode': u'strict', u'email': {u'use_variant_data_in_marketing': True, u'optin_mode': u'strict', u'default_from_address': u'newsletter@e.loveknitting.com', u'default_from_name': u'LoveKnitting', u'default_url_parameters': {u'om_profile': u'{{ profile.hash }}', u'utm_campaign': u'{{ email.campaign_title }}_AUTOMATION', u'omhide': u'true', u'utm_source': u'Loveknitting', u'utm_content': u'{{ email.segment_title }}_{{ email.split_title }}_{{ email.node_title }}'}, u'default_reply_to_address': u'info+newsletter@loveknitting.com'}, u'limits': {u'automation_maximum_entries': Decimal('7000')}, u'mass_email': {u'default_reply_to_address': u'info+newsletter@loveknitting.com', u'optin_mode': u'strict', u'default_from_address': u'newsletter@e.loveknitting.com', u'default_from_name': u'LoveKnitting', u'default_url_parameters': {u'om_profile': u'{{ profile.hash }}', u'utm_campaign': u'{{ email.campaign_title }}', u'omhide': u'true', u'utm_source': u'Loveknitting', u'utm_content': u'LK_WW'}}}, u'timezone': u'Europe/London', u'lifecycle': {u'at_risk_days': u'182', u'lapsed_days': u'385'}}, u'url': u'https://www.loveknitting.com', u'is_active': True, u'hash': u'd25316f1565740be', u'id': 501}, 'their_product_ids': [], 'instance': {u'data': {u'engines': [u'personalised', u'top_products'], u'top_products_number_days': Decimal('7'), u'_version': Decimal('2'), u'remove_products_bought': True, u'attribute_ids': [Decimal('145350')], u'blacklisted_attribute_ids': [Decimal('145625'), Decimal('155237'), Decimal('154977')]}, u'account_id': Decimal('501')}, 'limit': 10, 'customer_id': 4018848, 'store': 'gb'}" />
                  <outline text="valid_parameters after instance check/pop" _note="valid_parameters = {'account': {u'stores': [{u'name': u'Store #gb', u'id': u'gb'}, {u'name': u'Store #au', u'id': u'au'}], u'settings': {u'week_first_day': u'Monday', u'start_of_year': u'2012-12-31', u'week_last_day': u'Sunday', u'locale': u'en_GB.UTF-8', u'forms': {}, u'currency': u'GBP', u'formatting': {u'currency': {u'EUR': {u'thousands_sep': u',', u'prefix': u'\u20ac', u'decimals': u'AUTO', u'dec_point': u'.'}, u'USD': {u'thousands_sep': u',', u'prefix': u'$', u'decimals': u'AUTO', u'dec_point': u'.'}, u'AUD': {u'thousands_sep': u',', u'prefix': u'AU$ ', u'decimals': u'AUTO', u'dec_point': u'.'}, u'GBP': {u'thousands_sep': u',', u'prefix': u'\xa3', u'decimals': u'AUTO', u'dec_point': u'.'}, u'CAD': {u'thousands_sep': u',', u'prefix': u'CA$ ', u'decimals': u'AUTO', u'dec_point': u'.'}}, u'number': {u'default': {u'thousands_sep': u',', u'dec_point': u'.', u'decimals': u'AUTO'}}}, u'campaign_settings': {u'mass_optin_mode': u'strict', u'optin_mode': u'strict', u'email': {u'use_variant_data_in_marketing': True, u'optin_mode': u'strict', u'default_from_address': u'newsletter@e.loveknitting.com', u'default_from_name': u'LoveKnitting', u'default_url_parameters': {u'om_profile': u'{{ profile.hash }}', u'utm_campaign': u'{{ email.campaign_title }}_AUTOMATION', u'omhide': u'true', u'utm_source': u'Loveknitting', u'utm_content': u'{{ email.segment_title }}_{{ email.split_title }}_{{ email.node_title }}'}, u'default_reply_to_address': u'info+newsletter@loveknitting.com'}, u'limits': {u'automation_maximum_entries': Decimal('7000')}, u'mass_email': {u'default_reply_to_address': u'info+newsletter@loveknitting.com', u'optin_mode': u'strict', u'default_from_address': u'newsletter@e.loveknitting.com', u'default_from_name': u'LoveKnitting', u'default_url_parameters': {u'om_profile': u'{{ profile.hash }}', u'utm_campaign': u'{{ email.campaign_title }}', u'omhide': u'true', u'utm_source': u'Loveknitting', u'utm_content': u'LK_WW'}}}, u'timezone': u'Europe/London', u'lifecycle': {u'at_risk_days': u'182', u'lapsed_days': u'385'}}, u'url': u'https://www.loveknitting.com', u'is_active': True, u'hash': u'd25316f1565740be', u'id': 501}, 'their_product_ids': [], u'engines': [u'personalised', u'top_products'], u'top_products_number_days': Decimal('7'), u'_version': Decimal('2'), u'remove_products_bought': True, 'limit': 10, u'attribute_ids': [Decimal('145350')], u'blacklisted_attribute_ids': [Decimal('145625'), Decimal('155237'), Decimal('154977')], 'customer_id': 4018848, 'store': 'gb'}" />
                  <outline text="Returns 1" />
                  <outline text="Lets in valid_parameters" _note="&amp;gt;&amp;gt;&amp;gt; ', '.join(sorted(k for k in valid_parameters.keys()))&#10;u'_version, account, attribute_ids, blacklisted_attribute_ids, engines, remove_products_bought, store, top_products_number_days'" />
                </outline>
                <outline text="Comparisons">
                  <outline text="Compare `account` key (probably irrelevant)">
                    <outline text="Preview" _note="{'hash': 'd25316f1565740be',&#10; u'id': 501,&#10; u'is_active': True,&#10; u'settings': {u'campaign_settings': {u'email': {u'default_from_address': u'newsletter@e.loveknitting.com',&#10;                                                 u'default_from_name': u'LoveKnitting',&#10;                                                 u'default_reply_to_address': u'info+newsletter@loveknitting.com',&#10;                                                 u'default_url_parameters': {u'om_profile': u'{{ profile.hash }}',&#10;                                                                             u'omhide': u'true',&#10;                                                                             u'utm_campaign': u'{{ email.campaign_title }}_AUTOMATION',&#10;                                                                             u'utm_content': u'{{ email.segment_title }}_{{ email.split_title }}_{{ email.node_title }}',&#10;                                                                             u'utm_source': u'Loveknitting'},&#10;                                                 u'optin_mode': u'strict',&#10;                                                 u'use_variant_data_in_marketing': True},&#10;                                      u'limits': {u'automation_maximum_entries': Decimal('7000')},&#10;                                      u'mass_email': {u'default_from_address': u'newsletter@e.loveknitting.com',&#10;                                                      u'default_from_name': u'LoveKnitting',&#10;                                                      u'default_reply_to_address': u'info+newsletter@loveknitting.com',&#10;                                                      u'default_url_parameters': {u'om_profile': u'{{ profile.hash }}',&#10;                                                                                  u'omhide': u'true',&#10;                                                                                  u'utm_campaign': u'{{ email.campaign_title }}',&#10;                                                                                  u'utm_content': u'LK_WW',&#10;                                                                                  u'utm_source': u'Loveknitting'},&#10;                                                      u'optin_mode': u'strict'},&#10;                                      u'mass_optin_mode': u'strict',&#10;                                      u'optin_mode': u'strict'},&#10;               u'currency': u'GBP',&#10;               u'formatting': {u'currency': {u'AUD': {u'dec_point': u'.',&#10;                                                      u'decimals': u'AUTO',&#10;                                                      u'prefix': u'AU$ ',&#10;                                                      u'thousands_sep': u','},&#10;                                             u'CAD': {u'dec_point': u'.',&#10;                                                      u'decimals': u'AUTO',&#10;                                                      u'prefix': u'CA$ ',&#10;                                                      u'thousands_sep': u','},&#10;                                             u'EUR': {u'dec_point': u'.',&#10;                                                      u'decimals': u'AUTO',&#10;                                                      u'prefix': u'\u20ac',&#10;                                                      u'thousands_sep': u','},&#10;                                             u'GBP': {u'dec_point': u'.',&#10;                                                      u'decimals': u'AUTO',&#10;                                                      u'prefix': u'\xa3',&#10;                                                      u'thousands_sep': u','},&#10;                                             u'USD': {u'dec_point': u'.',&#10;                                                      u'decimals': u'AUTO',&#10;                                                      u'prefix': u'$',&#10;                                                      u'thousands_sep': u','}},&#10;                               u'number': {u'default': {u'dec_point': u'.',&#10;                                                        u'decimals': u'AUTO',&#10;                                                        u'thousands_sep': u','}}},&#10;               u'forms': {},&#10;               u'lifecycle': {u'at_risk_days': u'182',&#10;                              u'lapsed_days': u'385'},&#10;               u'locale': u'en_GB.UTF-8',&#10;               u'start_of_year': u'2012-12-31',&#10;               u'timezone': u'Europe/London',&#10;               u'week_first_day': u'Monday',&#10;               u'week_last_day': u'Sunday'},&#10; u'stores': [{u'id': u'gb', u'name': u'Store #gb'},&#10;             {u'id': u'au', u'name': u'Store #au'}],&#10; u'url': u'https://www.loveknitting.com'}" />
                    <outline text="Gearman" _note="{u'hash': 'd25316f1565740be',&#10; u'id': 501,&#10; u'is_active': True,&#10; u'settings': {u'campaign_settings': {u'email': {u'default_from_address': u'newsletter@e.loveknitting.com',&#10;                                                 u'default_from_name': u'LoveKnitting',&#10;                                                 u'default_reply_to_address': u'info+newsletter@loveknitting.com',&#10;                                                 u'default_url_parameters': {u'om_profile': u'{{ profile.hash }}',&#10;                                                                             u'omhide': u'true',&#10;                                                                             u'utm_campaign': u'{{ email.campaign_title }}_AUTOMATION',&#10;                                                                             u'utm_content': u'{{ email.segment_title }}_{{ email.split_title }}_{{ email.node_title }}',&#10;                                                                             u'utm_source': u'Loveknitting'},&#10;                                                 u'optin_mode': u'strict',&#10;                                                 u'use_variant_data_in_marketing': True},&#10;                                      u'limits': {u'automation_maximum_entries': Decimal('7000')},&#10;                                      u'mass_email': {u'default_from_address': u'newsletter@e.loveknitting.com',&#10;                                                      u'default_from_name': u'LoveKnitting',&#10;                                                      u'default_reply_to_address': u'info+newsletter@loveknitting.com',&#10;                                                      u'default_url_parameters': {u'om_profile': u'{{ profile.hash }}',&#10;                                                                                  u'omhide': u'true',&#10;                                                                                  u'utm_campaign': u'{{ email.campaign_title }}',&#10;                                                                                  u'utm_content': u'LK_WW',&#10;                                                                                  u'utm_source': u'Loveknitting'},&#10;                                                      u'optin_mode': u'strict'},&#10;                                      u'mass_optin_mode': u'strict',&#10;                                      u'optin_mode': u'strict'},&#10;               u'currency': u'GBP',&#10;               u'formatting': {u'currency': {u'AUD': {u'dec_point': u'.',&#10;                                                      u'decimals': u'AUTO',&#10;                                                      u'prefix': u'AU$ ',&#10;                                                      u'thousands_sep': u','},&#10;                                             u'CAD': {u'dec_point': u'.',&#10;                                                      u'decimals': u'AUTO',&#10;                                                      u'prefix': u'CA$ ',&#10;                                                      u'thousands_sep': u','},&#10;                                             u'EUR': {u'dec_point': u'.',&#10;                                                      u'decimals': u'AUTO',&#10;                                                      u'prefix': u'\u20ac',&#10;                                                      u'thousands_sep': u','},&#10;                                             u'GBP': {u'dec_point': u'.',&#10;                                                      u'decimals': u'AUTO',&#10;                                                      u'prefix': u'\xa3',&#10;                                                      u'thousands_sep': u','},&#10;                                             u'USD': {u'dec_point': u'.',&#10;                                                      u'decimals': u'AUTO',&#10;                                                      u'prefix': u'$',&#10;                                                      u'thousands_sep': u','}},&#10;                               u'number': {u'default': {u'dec_point': u'.',&#10;                                                        u'decimals': u'AUTO',&#10;                                                        u'thousands_sep': u','}}},&#10;               u'forms': {},&#10;               u'lifecycle': {u'at_risk_days': u'182',&#10;                              u'lapsed_days': u'385'},&#10;               u'locale': u'en_GB.UTF-8',&#10;               u'start_of_year': u'2012-12-31',&#10;               u'timezone': u'Europe/London',&#10;               u'week_first_day': u'Monday',&#10;               u'week_last_day': u'Sunday'},&#10; u'stores': [{u'id': u'gb', u'name': u'Store #gb'},&#10;             {u'id': u'au', u'name': u'Store #au'}],&#10; u'url': u'https://www.loveknitting.com'}" />
                    <outline text="Only diff is hash key is not unicode in gearman correct payload" _note="&amp;lt; {'hash': 'd25316f1565740be',&#10;---&#10;&amp;gt; {u'hash': 'd25316f1565740be'," />
                  </outline>
                  <outline text="How to payloads differ?">
                    <outline text="Account info same (aside of encoding)" />
                    <outline text="Preview payload">
                      <outline text="Additional">
                        <outline text="'email' = 'jacotco@gmail.com'" />
                        <outline text="'instance' = None" />
                      </outline>
                      <outline text="Different">
                        <outline text="'store' = None" />
                      </outline>
                    </outline>
                    <outline text="Gearman payload">
                      <outline text="Additional">
                        <outline text="'_version' = Decimal('2')" />
                        <outline text="'customer_id' = 4018848" />
                        <outline text="'limit' = 10" />
                      </outline>
                      <outline text="Different">
                        <outline text="'store' = 'gb'" />
                      </outline>
                    </outline>
                  </outline>
                </outline>
                <outline text="Into `get_product_recommendations`...">
                  <outline text="`remove_products_bought` is present, so profile_id will differ per payload">
                    <outline text="'email'/'customer_id' existence">
                      <outline text="preview call had `email` and therefore sets profile_id via call to dynamodb profile call">
                        <outline text="Calling `get_profile_by_email(valid_parameters_preview[&quot;account&quot;][&quot;id&quot;], valid_parameters_preview[&quot;email&quot;])` returns" _note="{u'profile_id': u'501:4018848', u'#dt_updated': u'2019-01-31T09:04:20.761870+00:00'}" />
                        <outline text="Therefore set recommender_parameters[&quot;profile_id&quot;] = u'501:4018848'" />
                        <outline text="And also sets recommender_parameters[&quot;customer_id&quot;] = u'4018848'" />
                      </outline>
                      <outline text="gearman call has 'customer_id', therefore">
                        <outline text="recommender_parameters[&quot;profile_id&quot;] = '501:4018848'" />
                        <outline text="recommender_parameters[&quot;customers&quot;] already exists as 4018848 (int) #todo types important?" />
                      </outline>
                    </outline>
                    <outline text="Also calls following `get_purchased_and_viewed_product_ids(account[&quot;id&quot;], recommender_parameters.get(&quot;customer_id&quot;))`">
                      <outline text="Preview call has recommender_parameters[&quot;customer_id&quot;] therefore returns" _note="([u'UPID90117', u'UPID96482', u'UPID53823', u'UPID57936', u'UPID58444', u'10149958', u'UPID31191', u'YLI024', u'YLI024', u'UPID60482', u'UPID59140', u'PST428'], {1548235274: [u'UPID58444', u'YBC049_18B'], 1541794451: [u'10149958'], 1523903892: [u'10149958', u'UPID85234'], 1509108874: [u'PST428'], 1540067992: [u'UPID89301', u'UPID82457'], 1540981026: [u'UPID67674'], 1506978085: [u'FDLI1240', u'10113083'], 1548014761: [u'UPID93169', u'10138905', u'FDRW0333', u'FDBR0649', u'FDRW0206', u'UPID48589', u'UPID57936', u'UPID58444'], 1541369009: [u'10149958'], 1548056371: [u'UPID58444'], 1542879114: [u'10149958'], 1508438852: [u'YLI024_200', u'FDLI1240', u'YLI024_204'], 1507120199: [u'FDLI1240'], 1548170445: [u'UPID67674', u'UPID53823', u'DBC049', u'UPID98008'], 1509026904: [u'UPID65134', u'UPID74484', u'10130432'], 1548922585: [u'UPID06280', u'10158102', u'FDBR0308'], 1508953179: [u'FDLI0992'], 1541628518: [u'UPID91554', u'10149958', u'UPID81784', u'UPID62394', u'FDHF0028', u'UPID06214'], 1548235496: [u'UPID87126', u'UPID54421', u'DBC150', u'YST023', u'UPID98064', u'UPID96482', u'UPID90727', u'UPID90117', u'UPID87532', u'UPID87821', u'UPID84493', u'YBG017', u'10155326'], 1509086315: [u'10102897', u'PST428', u'YST040'], 1517083505: [u'YST040_1665'], 1548433395: [u'10141456'], 1548001149: [u'UPID85762', u'UPID65795', u'UPID93169', u'DAT024', u'UPID62156']})">
                        <outline text="purchased_ids" _note="[u'UPID90117', u'UPID96482', u'UPID53823', u'UPID57936', u'UPID58444', u'10149958', u'UPID31191', u'YLI024', u'YLI024', u'UPID60482', u'UPID59140', u'PST428']" />
                        <outline text="viewed_ids" _note="{1548235274: [u'UPID58444', u'YBC049_18B'], 1541794451: [u'10149958'], 1523903892: [u'10149958', u'UPID85234'], 1509108874: [u'PST428'], 1540067992: [u'UPID89301', u'UPID82457'], 1540981026: [u'UPID67674'], 1506978085: [u'FDLI1240', u'10113083'], 1548014761: [u'UPID93169', u'10138905', u'FDRW0333', u'FDBR0649', u'FDRW0206', u'UPID48589', u'UPID57936', u'UPID58444'], 1541369009: [u'10149958'], 1548056371: [u'UPID58444'], 1542879114: [u'10149958'], 1508438852: [u'YLI024_200', u'FDLI1240', u'YLI024_204'], 1507120199: [u'FDLI1240'], 1548170445: [u'UPID67674', u'UPID53823', u'DBC049', u'UPID98008'], 1509026904: [u'UPID65134', u'UPID74484', u'10130432'], 1548922585: [u'UPID06280', u'10158102', u'FDBR0308'], 1508953179: [u'FDLI0992'], 1541628518: [u'UPID91554', u'10149958', u'UPID81784', u'UPID62394', u'FDHF0028', u'UPID06214'], 1548235496: [u'UPID87126', u'UPID54421', u'DBC150', u'YST023', u'UPID98064', u'UPID96482', u'UPID90727', u'UPID90117', u'UPID87532', u'UPID87821', u'UPID84493', u'YBG017', u'10155326'], 1509086315: [u'10102897', u'PST428', u'YST040'], 1517083505: [u'YST040_1665'], 1548433395: [u'10141456'], 1548001149: [u'UPID85762', u'UPID65795', u'UPID93169', u'DAT024', u'UPID62156']}" />
                      </outline>
                      <outline text="Gearman call returns the same due to customer_id being resolved the same" />
                      <outline text="recommender_parameters[&quot;purchased_product_ids&quot;] = purchased_ids" />
                      <outline text="recommender_parameters[&quot;viewed_product_ids&quot;] = viewed_ids" />
                    </outline>
                  </outline>
                  <outline text="recommender_parameters[&quot;limit&quot;] = 10 (default on preview, set on gearman)" />
                  <outline text="recommender = Recommender(account[&quot;id&quot;], recommender_parameters)">
                    <outline text="recommender.fetch_recommendations()">
                      <outline text="self.get_filtered_recommendations(...)" _note="new_ids, is_engine_filtered = self.get_filtered_recommendations(engine_name=current_engine_name, limit=recommendations_left)">
                        <outline text="Retrieves personalised engine instance which sets params and creates redis instance.">
                          <outline text="Personalised engine">
                            <outline text="Also sets customer_id" />
                            <outline text="ALSO sets to alternative key" _note="self.product_attributes_prefix = &quot;{account_id}:product_attributes:&quot;.format(account_id=account_id)">
                              <outline text="engine.fetch_products() (in base class)">
                                <outline text="engine.generate_recommendations() on personalised engine">
                                  <outline text="customer_id existence">
                                    <outline text="gearman call does not, therefore `return [], None`" />
                                    <outline text="preview call has &quot;customer_id&quot; therefore continues">
                                      <outline text="#todo continue investigation into why unwanted results are returned, however for now, customer_id seems important" />
                                    </outline>
                                  </outline>
                                </outline>
                                <outline text="For no customer_id `generated_products, redis_key = [], None`">
                                  <outline text="self.get_model_specific_products_to_exclude(), returns list of purchased_product_ids (i.e. existence of the key implicitly decides whether they're excluded which is bullshit)" _note="self.parameters.get(&quot;purchased_product_ids&quot;, [])" />
                                  <outline text="These are removed from set of generated_products (which is already empty in this case)" />
                                  <outline text="gearman call therefore returns `[], None`" />
                                </outline>
                              </outline>
                            </outline>
                          </outline>
                          <outline text="Top products engine">
                            <outline text="Also sets to alternative key" _note="self.row_ids_prefix += str(self.parameters['top_products_number_days']) + &quot;:&quot;">
                              <outline text="generate_recommendations does not return nothing for no customer_id" />
                              <outline text="Gets list of `attribute_ids`" />
                              <outline text="In this case, `attribute_combination_type` is set to default in recommender validation" _note="AGGREGATION_LEVEL_UNION = 'or'" />
                              <outline text="get_aggregation_of_matrix_rows" _note="get_aggregation_of_matrix_rows(engine.redis_instance, engine.row_ids_prefix, [str(a) for a in [145350]], engine.parameters[&quot;attribute_combination_type&quot;], 'MAX', 10, -1)">
                                <outline text="Returns" _note="([], '501:top_products:7:or:145350:93cf7')" />
                              </outline>
                              <outline text="self.get_model_specific_products_to_exclude() returns nothing, so nothing excluded and returns above" _note="([], '501:top_products:7:or:145350:93cf7'" />
                            </outline>
                            <outline text="Require filtering?">
                              <outline text="require_attribute_filtering = True" />
                              <outline text="require_price_filtering = False" />
                              <outline text="require_bought_products_filtering = True" />
                              <outline text="require_blacklist_products_filtering = False" />
                              <outline text="etc" />
                              <outline text="Basically does require filtering" />
                            </outline>
                            <outline text="Returns `[], True`" />
                          </outline>
                        </outline>
                        <outline text="new_ids, is_engine_filtered = recommender.get_filtered_recommendations('personalised', 15)">
                          <outline text="new_ids" _note="['UPID68602', '10110587', '10117957', '10110277', 'UPID70954', '10149866', 'UPID68053', 'UPID79844', '10118657', 'UPID63226', '10168627', '10110573', 'UPID74553', '10119582', '10118029']" />
                          <outline text="is_engine_filtered = True" />
                        </outline>
                        <outline text="new_ids, is_engine_filtered = recommender.get_filtered_recommendations('top_products', 15)">
                          <outline text="new_ids = []" />
                          <outline text="is_engine_filtered = True" />
                        </outline>
                      </outline>
                    </outline>
                  </outline>
                  <outline text="OBSERVATIONS" />
                  <outline text="QUESTIONS" />
                </outline>
                <outline text="How did &quot;instance&quot; affect gearman send?" />
                <outline text="os.environ" _note="{'GOPATH': '/Users/samuellock/golang', 'VERSIONER_PYTHON_PREFER_32_BIT': 'no', 'OM_POSTGRES_PORT': '5732', 'TERM_PROGRAM_VERSION': '3.2.6', 'LOGNAME': 'samuellock', 'USER': 'samuellock', 'OM_POSTGRES_HOST': 'localhost', 'PATH': '/Users/samuellock/.virtualenvs/product_recommendations/bin:/usr/local/Cellar/libpq/10.5/bin:/Volumes/Work/server/apps/ometria.deployment/bin:/Users/samuellock/.cargo/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/Wireshark.app/Contents/MacOS:/usr/local/Cellar/libpq/10.5/bin:/Volumes/Work/server/apps/ometria.deployment/bin:/Users/samuellock/.cargo/bin:Library/Python/3.7/bin:/usr/local/bin:Library/Python/3.7/bin', 'OM_POSTGRES_PASSWORD': 'yC7LDUzYg3NWYd7j', 'TERM_PROGRAM': 'iTerm.app', 'LANG': 'en_GB.UTF-8', 'TERM': 'screen-256color', 'Apple_PubSub_Socket_Render': '/private/tmp/com.apple.launchd.inn9VO0nt6/Render', 'COLORFGBG': '0;15', 'VERSIONER_PYTHON_VERSION': '2.7', 'SHLVL': '3', 'SECURITYSESSIONID': '186a7', 'XPC_FLAGS': '0x0', 'ITERM_SESSION_ID': 'w0t0p0:631EF8AC-A28E-480F-A5EA-D7FD81A0F792', 'EDITOR': 'vim', 'OM_GEARMAN_HOST': 'localhost', 'HOME': '/Users/samuellock', 'TMUX_PLUGIN_MANAGER_PATH': '/Users/samuellock/.tmux/plugins/', 'TERM_SESSION_ID': 'w0t0p0:631EF8AC-A28E-480F-A5EA-D7FD81A0F792', 'XPC_SERVICE_NAME': '0', 'PYTHONPATH': '/server/apps/ometria.product_recommendations', 'DEV_ENV': 'sam', 'SSH_AUTH_SOCK': '/private/tmp/com.apple.launchd.aJHFQ9w9l6/Listeners', 'OM_POSTGRES_USERNAME': 'ometria_readonly', 'TMUX': '/private/tmp/tmux-501/default,77190,0', 'REDIS_HOST': 'localhost', 'VISUAL': 'vim', 'SHELL': '/usr/local/bin/fish', 'REDIS_PORT': '6479', 'ITERM_PROFILE': 'Light', 'TMPDIR': '/var/folders/0r/3nxh0sgs6v1f5zf6trb3xtlr0000gn/T/', 'VIRTUAL_ENV': '/Users/samuellock/.virtualenvs/product_recommendations', 'PYTHONSTARTUP': '/Users/samuellock/.pythonrc', 'REDIS_DB': '2', '__CF_USER_TEXT_ENCODING': '0x1F5:0x0:0x2', 'PWD': '/Volumes/Work/server/apps/ometria.product_recommendations', 'COLORTERM': 'truecolor', 'OM_GEARMAN_PORT': '8089', 'TMUX_PANE': '%501'}" />
              </outline>
              <outline text="In short, 'store_id' = 'gb' is passed in the gearman payload, and 'store_id' = None is passed in the preview payload. When adding 'gb' in the preview payload, it returns consistent results">
                <outline text="Likewise, removing `store` in the gearman payload returns same 10 results" />
              </outline>
              <outline text="Passing 'default_store' = 'gb' in the preview payload from the UI seems to return the same 1 result" />
              <outline text="Returned product_listing has store = 'au', but when investigating in db, there are two product_listings that are linked to the given product (see children). Perhaps it returns the first of the product_listings?">
                <outline text="product.id = 1267598" />
                <outline text="ometria_ecomm_0100&amp;gt; select * from products_listings where product_id = 1267598" _note=" account_id | product_id | store_id |                                      title                                      |                                                                       image_url                                                                       |                                                    url                                                     | price | special_price | currency |         dt_created         |         dt_updated         | is_active&#10;------------+------------+----------+---------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------+-------+---------------+----------+----------------------------+----------------------------+-----------&#10;        501 |    1267598 | au       | Women V Neck Sweater in Bergere de France Ideal  - 60508-416 - Downloadable PDF | https://isv-loveknitting.freetls.fastly.net/index.php/v1/images/0d9a5e010c434b374614eb5e46857b6c/c8660f08-6524-4190-a3d2-5833b1456699.jpg/0/-/390T390 | https://www.loveknitting.com.au/women-v-neck-sweater-in-bergere-de-france-ideal-60508-416-downloadable-pdf |  5.25 |          0.00 | AUD      | 2018-11-15 10:38:43.602404 | 2018-11-15 10:38:43.602417 | t&#10;        501 |    1267598 | gb       | Women V Neck Sweater in Bergere de France Ideal  - 60508-416 - Downloadable PDF | https://isv-loveknitting.freetls.fastly.net/index.php/v1/images/0d9a5e010c434b374614eb5e46857b6c/c8660f08-6524-4190-a3d2-5833b1456699.jpg/0/-/390T390 | https://www.loveknitting.com/women-v-neck-sweater-in-bergere-de-france-ideal-60508-416-downloadable-pdf    |  3.00 |          0.00 | GBP      | 2018-11-15 10:37:43.308142 | 2018-11-15 10:37:43.308152 | t&#10;" />
              </outline>
            </outline>
          </outline>
        </outline>
        <outline text="Segmentation API tracing not working on prod #todo">
          <outline text="Does work when opening REPL in pod and running manually." />
        </outline>
        <outline text="Improve on `req_ctx` using `session` key for core session on blueprint requests #todo" />
        <outline text="Non-sprint backlog">
          <outline text="Ensure omitted fields are globally ignored #todo" />
          <outline text="Integration-testing">
            <outline text="Add in tests/integration base dir to cookiecutter repo(s)? #todo" />
          </outline>
          <outline text="Consider Behave BDD talk for L&amp;amp;L sesh?" />
        </outline>
      </outline>
      <outline _complete="true" text="#wc2019-01-28::work">
        <outline _complete="true" text="Mastery Review #todo">
          <outline text="General questions (comments)">
            <outline text="Has the past year been good / bad / satisfactory or otherwise for you, in terms of (A) performance and (B) happiness; why?">
              <outline text="Overall good. I think my performance increased over the year with confidence/competency. Happiness is also good aside of the shakey start at the beginning, which is no longer relevant IMO." />
            </outline>
            <outline text="Looking back on the past year what have been your biggest achievements? #todo">
              <outline text="In general, I think my competency/autonomy has improved." />
              <outline text="In-memory segmentation API design/solution (although this requires further optimisations obv)" />
            </outline>
            <outline text="What are the biggest challenges in your role?">
              <outline text="Unfamiliar technologies (not a bad thing)" />
              <outline text="Managing a variety of responsibilities, not just specific to job role" />
            </outline>
            <outline text="What have you found (A) most engaging and (B) least engaging in your role? #todo">
              <outline text="Not sure I understand the question entirely, but..." />
              <outline text="A) Ownership and autonomy around work and processes in general. I.e. " />
            </outline>
            <outline text="What do you like about working at Ometria?">
              <outline text="Autonomy/ownership of work" />
              <outline text="The feeling that input is valued in a variety of contexts, e.g. technical solutions/processes/hiring etc" />
              <outline text="Great team, extending across the whole company" />
              <outline text="Constantly iterating to improve everything" />
            </outline>
            <outline text="What do you dislike about working at Ometria? #todo">
              <outline text="" />
            </outline>
            <outline text="If we solved that issue in 6 months time, what would be different? #todo" />
          </outline>
          <outline text="Mastery questions (1-10 score plus comments)">
            <outline text="Contributes to software development with increased autonomy and ownership." _note="Can define the problem. Needs some help with the solution.&#10;Needs some guidance on the implementation.&#10;Can break down tasks, but need review from others.">
              <outline text="8" />
              <outline text="I think I am able to define a problem and implement a solution in the majority of cases (e.g. broadcast UI backend support). Sometimes may require help on implementation around unfamiliar systems/technology. I think I occasionally ask for review on things I'm less familiar with also." />
            </outline>
            <outline text="More detailed knowledge of product, it’s uses and roadmap. Understands use cases of certain product features in depth." _note="Good understanding of our products including depth of knowledge in one of these.&#10;Includes the main features and the purpose.&#10;Understands our product and platform roadmap in terms of direction and their impact in terms of ROI.">
              <outline text="7" />
              <outline text="I think I have a reasonable view of the product as a whole, although there are aspects I'm certainly unfamiliar with. I think I have good understanding of product features that I am involved with (and the value for the end-user)." />
            </outline>
            <outline text="Communicates clearly with team and other stakeholders to report progress and roadblocks." _note="Communicates effectively regarding progress and blockers.&#10;Provides input into impact analysis for new work.&#10;Attends guilds, technology conferences to improve knowledge and understand benefits to our products and platform.">
              <outline text="6" />
              <outline text="In general I think I communicate well in regards to the above, but at points I might get bogged down in debugging a particularly difficult issue and might not communicate this particularly well to relevant parties (although this is less frequent than it used to be). I don't attend as many technical events as I would like. Regarding impact analysis, this is limited to systems I have knowledge about." />
            </outline>
            <outline text="Mentors and educates peers. Works to increase collaboration within team." _note="Mentors peers and junior developers ensuring they are onboarded successfully and develop accordingly.&#10;Works to explain and educate on design standards, best practices and development/operational processes.">
              <outline text="6" />
              <outline text="I haven't had any specific opportunity to mentor/onboard a new starter so it's hard to answer with any real backing. However I am happy to assist when questions are asked. I would also be very keen to help onboard someone at some point." />
            </outline>
            <outline text="Can implement features seeking guidance when required" _note="Implements small features and bug fixes comfortably with little guidance.&#10;Input into the design of new features.&#10;Seeks advice on non-functional items/tradeoffs with senior members of the team.&#10;Effectively identifies technical debt with help from a senior engineer.">
              <outline text="7" />
              <outline text="In familiar systems, I think I'm capable of getting the vast majority of my tasks done without outside help (although happily accept help/guidance on unfamiliar topics/tech). In other areas, perhaps when working on support, I will frequently seek advice from those better suited to certain tasks." />
            </outline>
            <outline text="Has appreciation the wider system and understands those systems they work on in depth" _note="Understands the architecture of one or more services/applications and their interactions.&#10;Understands design principles and best practices for our products.&#10;Can draw a basic deployment diagram of the systems architecture.&#10;Can draw component and process diagrams of parts of the product they regularly work on.&#10;Working to improve knowledge of our products and component parts.">
              <outline text="8" />
              <outline text="I think I have a good understanding of our internal campaigns API (a lot of my work is within here). And also to areas of the mass email system (specifically tracing paths from gearman entry-points through to the sparkpost API calls)." />
              <outline text="I have reasonable understanding of a number of the other systems I've had some involvement in also." />
              <outline text="Less confident (still) in regards to drawing decent architectural diagram of the entire system, but conceptually will probably get parts of it right." />
            </outline>
            <outline text="Can operate processes autonomously." _note="Understands development and operational processes.&#10;Provide input into the improvement of processes.&#10;Can work comfortably with most processes, but limited guidance needed in some.">
              <outline text="7" />
              <outline text="Feel that I'm confident in development processes. Handle deployments or all systems I frequently work on independently. Input some ideas into potential improvements." />
            </outline>
            <outline text="From the following list of behaviours please choose your two behavioural strengths." _note="RANDOM LIST" />
            <outline text="From the following list of behaviours please choose your two behavioural weaknesses." _note="RANDOM LIST" />
          </outline>
          <outline text="Other general questions (comments)">
            <outline text="What does it mean to you to be an Ometrian?" />
            <outline text="What kind of work or job would you like to be doing in one / two / five years time?" />
            <outline text="What do you consider to be your most important goals and responsibilities in the next year?" />
            <outline text="What can you improve to be able to perform better?" />
            <outline text="What sort of training/ support/ experiences do you need to succeed?" />
            <outline text="How can your manager improve to better help you succeed?" />
            <outline text="What sort of training/experiences would benefit you in the next year?" />
            <outline text="List 3 goals for the next year" />
            <outline text="List 3 goals for the next 3 months" />
          </outline>
        </outline>
        <outline text="Segmentation API stackdriver tracing #todo">
          <outline text="https://console.cloud.google.com/traces/traces?authuser=0&amp;amp;project=ometria-kubernetes-support&amp;amp;q=%5BPOST%5Dhttp:%2F%2F10.3.224.88%2Fcampaigns%2Fmass%2Fsegmentation&amp;amp;start=1537192999528&amp;amp;end=1537193004287&amp;amp;tid=22ca4676f2314ffc82e811bca2a72d2f&amp;amp;maxl=276&amp;amp;minl=49" _note="[POST]http://10.3.224.88/campaigns/mass/segmentation" />
          <outline text="Tracing currently working when running locally" _note="+span:ometria.api.campaigns.segmentation_api" />
          <outline _complete="true" text="Add query to trace span information" />
        </outline>
        <outline text="Segmentation API profiling #todo">
          <outline text="Generate a whole bunch of payloads" />
          <outline _complete="true" text="Simple script to hit endpoint and profile time" />
        </outline>
        <outline text="Improve on `req_ctx` using `session` key for core session on blueprint requests #todo" />
        <outline text="Non-sprint backlog">
          <outline text="Ensure omitted fields are globally ignored #todo" />
          <outline text="Integration-testing">
            <outline text="Add in tests/integration base dir to cookiecutter repo(s)? #todo" />
          </outline>
          <outline text="Consider Behave BDD talk for L&amp;amp;L sesh?" />
        </outline>
      </outline>
      <outline _complete="true" text="#wc2019-01-21::work">
        <outline _complete="true" text="ø`brew upgrade fish`" _note="fish is now at v3 major release" />
        <outline _complete="true" text="Blueprints table is going to be moved to core db #todo">
          <outline _complete="true" text="Migrations for current ecomm tables" />
          <outline _complete="true" text="Adaptions for `api.campaigns`?" />
        </outline>
        <outline _complete="true" text="PR Rui id_filter template/template_instance change #todo" />
        <outline text="Mastery/values self review #todo" />
        <outline text="Take outstanding test tasks off the board #todo" />
        <outline text="Improve on `req_ctx` using `session` key for core session on blueprint requests #todo" />
        <outline text="Deploy `api.campaigns` changes that reflect blueprint move from ecomm to core (plus test updates) #todo" />
        <outline text="Merge and deploy new global blueprint creation dashboard #todo" />
        <outline _complete="true" text="Book skiing time off #todo" _note="8th-17th (8th can be half day PM) " />
        <outline _complete="true" text="Take home algorithms book #todo" />
        <outline _complete="true" text="Write confluence doc detailing integration_testing approach on confluence #todo" />
        <outline _complete="true" text="Add Ometriversity doc to confluence, tidy up and link to sessions spreadsheet #todo" />
        <outline _complete="true" text="Ometri-versity presentation">
          <outline _complete="true" text="Write note to devteam to explain topic and general process etc #todo" />
          <outline _complete="true" text="Presentation frameworks">
            <outline text="impress.js" />
            <outline text="reveal.js" />
          </outline>
          <outline text="Computer science behind postgres indexes">
            <outline text="https://rcoh.me/posts/postgres-indexes-under-the-hood/" />
            <outline text="http://patshaughnessy.net/2014/11/11/discovering-the-computer-science-behind-postgres-indexes" />
          </outline>
          <outline text="&lt;b&gt;Indexes in postgres (Part 1): An Introduction to Binary Search Trees&lt;/b&gt;">
            <outline text="Getting started">
              <outline text="Sorted arrays">
                <outline text="If elements have a &quot;total order&quot; defined on them">
                  <outline text="Aka a binary comparison operation between elements has been defined - elements can be arranged in a unique sequence from smallest to greatest" />
                  <outline text="Don't ask me any more questions on &quot;total order&quot; because I won't be able to answer them." />
                </outline>
                <outline text="Allows binary search to efficiently find key" />
                <outline text="Inserts/deletes are a different story">
                  <outline text="Average/worst O(n)" />
                  <outline text="(Best case, O(1), assuming end of array operations)" />
                </outline>
              </outline>
              <outline text="Binary search trees are collections that can efficiently maintain a dynamically changing dataset in sorted order">
                <outline text="Still supports binary search operations" />
                <outline text="Even after inserts or deletes (even in the middle)" />
              </outline>
              <outline text="Form the foundation of the main index type in postgres (b-tree)">
                <outline text="Other indexes I know &lt;b&gt;nothing&lt;/b&gt; about" _note="https://www.postgresql.org/docs/9.5/indexes-types.html&#10;https://www.citusdata.com/blog/2017/10/17/tour-of-postgres-index-types/">
                  <outline text="Hash" />
                  <outline text="Generalised Inverted Index" _note="(GIN)" />
                  <outline text="Generalized Inverted Seach Tree" _note="(GiST)" />
                  <outline text="Space partitioned GiST" _note="(SP-GiST)" />
                  <outline text="Block Range Indexes" _note="(BRIN)" />
                </outline>
              </outline>
            </outline>
            <outline text="And in we go" _note="going all algorithm on yo asses">
              <outline text="What is a binary tree?" _note="(unordered)">
                <outline text="&quot;&lt;i&gt;A structure defined on a finite set of nodes that either...&lt;/i&gt;">
                  <outline text="&lt;i&gt;contain no nodes, or&lt;/i&gt;" />
                  <outline text="&lt;i&gt;is composed of three disjoint sets of nodes: a &lt;/i&gt;&lt;b&gt;&lt;i&gt;root&lt;/i&gt;&lt;/b&gt;&lt;i&gt; node, a binary tree called its &lt;/i&gt;&lt;b&gt;&lt;i&gt;left subtree&lt;/i&gt;&lt;/b&gt;&lt;i&gt;, and a binary tree called its &lt;/i&gt;&lt;b&gt;&lt;i&gt;right subtree&lt;/i&gt;&lt;/b&gt;&lt;i&gt;.&lt;/i&gt;" />
                  <outline text="&lt;i&gt;&quot;&lt;/i&gt;" />
                </outline>
              </outline>
              <outline text="What is a binary &lt;b&gt;&lt;i&gt;search&lt;/i&gt;&lt;/b&gt; tree?">
                <outline text="The same but ordered...">
                  <outline text="If present, the left child of a node is &lt;b&gt;&lt;i&gt;always&lt;/i&gt;&lt;/b&gt; less than or equal to itself" />
                  <outline text="If present, the right child of a node is &lt;b&gt;&lt;i&gt;always&lt;/i&gt;&lt;/b&gt; greater than itself" />
                </outline>
                <outline text="Common complexities?">
                  <outline text="Complete tree at &lt;b&gt;O(logN)&lt;/b&gt;" />
                  <outline text="Incomplete tree worst case complexity at &lt;b&gt;O(N)&lt;/b&gt;" _note="Single continuous branch of length N" />
                </outline>
                <outline text="Class representation..." _note="class Node:&#10;    __slots__ = ['value', 'left', 'right', 'parent']&#10;    def __init__(self, value, left=None, right=None, parent=None):&#10;        self.value = value&#10;        self.left = left&#10;        self.right = right&#10;        self.parent = parent&#10;&#10;root_node = Node(value=10)&#10;left_node = Node(value=5, parent=root_node)&#10;root_node.left = left_node&#10;etc..." />
                <outline text="Walking the tree (in order)">
                  <outline text="&quot;Inorder tree walk&quot; -&amp;gt; can be written like this..." _note="def inorder_tree_walk(x):&#10;    inorder_tree_walk(x.left)&#10;    print(x.key)&#10;    inorder_tree_walk(x.right)" />
                  <outline text="O(N) time complexity, obv" />
                  <outline text="Demo?" />
                </outline>
                <outline text="Searching!" _note="Where are you, value?">
                  <outline text="Standard search">
                    <outline text="Given a pointer to root &lt;i&gt;x&lt;/i&gt;, and a value &lt;i&gt;k...&lt;/i&gt;" _note="def tree_search(x, k):&#10;    if x is None or k == x.key:&#10;        return x&#10;    elif k &amp;lt; x.key:&#10;        return tree_search(x.left, k)&#10;    else:&#10;        return tree_search(x.right, k)" />
                    <outline text="Complexity O(&lt;i&gt;h&lt;/i&gt;), where &lt;i&gt;h&lt;/i&gt; is the height of the tree" />
                    <outline text="Iterative alternative (often more efficient)" _note="def iterative_tree_search(x, k):&#10;    while x != None and k != x.key:&#10;        if k &amp;lt; x.key:&#10;            x = x.left&#10;        else x = x.right&#10;    return x" />
                  </outline>
                  <outline text="Minimum/maximum values?">
                    <outline text="Go left or right!" _note="def tree_min(x):&#10;    while x.left != None:&#10;        x = x.left&#10;    return x" />
                  </outline>
                  <outline text="Successor/predecessor?">
                    <outline text="We can determine the successor of a node without ever comparing keys!" />
                    <outline text="Successor..." _note="def tree_successor(x):&#10;    if x.right is not None:&#10;        return tree_min(x.right)&#10;    y = x.p&#10;    while y is not None and x == y.right:&#10;        x = y&#10;        y = y.p&#10;    return y" />
                    <outline text="Predecessor is inversed!" />
                  </outline>
                </outline>
                <outline text="Insertion/deletion?">
                  <outline text="Require the data structure to be modified, whilst maintaining binary search tree rules to hold" />
                  <outline text="Tree insertions are quite straighforward. Deletion more complicated." />
                  <outline text="Insertion" _note="def tree_insert(T, z):&#10;    y = None&#10;    x = T.root&#10;    while x is not None:&#10;        y = x  # y is last present node, aka the &quot;trailing pointer&quot;&#10;        if z.key &amp;lt; x.key:&#10;            x = x.left&#10;        else:&#10;            x = x.right&#10;    z.p = y&#10;    if y is None:&#10;        T.root = z  # tree T was empty&#10;    elif z.key &amp;lt; y.key:&#10;        y.left = z&#10;    else:&#10;        y.right = z">
                    <outline text="Again, O(&lt;i&gt;h&lt;/i&gt;)" />
                    <outline text="Demo?" />
                  </outline>
                  <outline text="Deletion (get's a bit fiddly)">
                    <outline text="Varies based on current structure of tree" />
                    <outline text="Conceptually, three/four cases">
                      <outline text="If &lt;i&gt;z&lt;/i&gt; has no children, we simply remove it by modifying its parent to replace &lt;i&gt;z&lt;/i&gt; with None as its child" />
                      <outline text="If &lt;i&gt;z &lt;/i&gt;has just one child, then we elevate that child to take &lt;i&gt;z&lt;/i&gt;'s position by modifying &lt;i&gt;z&lt;/i&gt;'s parent to replace &lt;i&gt;z &lt;/i&gt;by &lt;i&gt;z&lt;/i&gt;'s child" />
                      <outline text="If &lt;i&gt;z&lt;/i&gt; has two children, we find &lt;i&gt;z&lt;/i&gt;'&lt;i&gt;s&lt;/i&gt; successor &lt;i&gt;y&lt;/i&gt;, which... (Brace yourselves)">
                        <outline text="... is &lt;i&gt;z&lt;/i&gt;'&lt;i&gt;s&lt;/i&gt; right child. We have &lt;i&gt;y&lt;/i&gt; take &lt;i&gt;z&lt;/i&gt;'s position in the tree. The rest of &lt;i&gt;z&lt;/i&gt;'s original right subtree becomes &lt;i&gt;y&lt;/i&gt;'s new right subtree, and &lt;i&gt;z&lt;/i&gt;'s left subtree becomes &lt;i&gt;y&lt;/i&gt;'s new left subtree." />
                        <outline text="... is in &lt;i&gt;z&lt;/i&gt;'s right subtree but is &lt;b&gt;not&lt;/b&gt; it's right child, we first replace &lt;i&gt;y&lt;/i&gt; by it's own right child, and then we replace &lt;i&gt;z&lt;/i&gt; by &lt;i&gt;y&lt;/i&gt;." />
                      </outline>
                      <outline text="&lt;b&gt;To the board!&lt;/b&gt;" />
                    </outline>
                    <outline text="We require a &quot;transplant&quot; routine (how to move a subtree rooted at &lt;i&gt;u&lt;/i&gt; with subtree rooted at &lt;i&gt;v&lt;/i&gt;)" _note="def transplant(T, u, v):&#10;    if u.p is None:&#10;        T.root = v&#10;    elif u == u.p.left:  # if u is left child of it's parent&#10;        u.p.left = v&#10;    else:&#10;        u.p.right = v&#10;    if v is not None:&#10;        v.p = u.p" />
                    <outline text="And finally" _note="def tree_delete(T, z):&#10;    if z.left is None:&#10;        transplant(T, z, z.right)&#10;    elif z.right is None:&#10;        transplant(T, z, z.left)&#10;    else:&#10;        y = tree_min(z.right)&#10;        if y.p != z:&#10;            transplant(T, y, y.right)&#10;            y.right = z.right&#10;            y.right.p = y&#10;        transplant(T, z, y)&#10;        y.left = z.left&#10;        y.left.p = y" />
                    <outline text="Complexity">
                      <outline text="Transplants run in constant time O(1)" />
                      <outline text="tree_min runs in O(h)" />
                      <outline text="Therefore complexity of deletes also runs in O(h)" />
                    </outline>
                  </outline>
                </outline>
              </outline>
              <outline text="Further consideration">
                <outline text="Self balancing trees? For next session." />
              </outline>
            </outline>
          </outline>
        </outline>
        <outline text="Non-sprint backlog">
          <outline text="Ensure omitted fields are globally ignored #todo" />
          <outline text="Integration-testing">
            <outline text="Add in tests/integration base dir to cookiecutter repo(s)? #todo" />
          </outline>
          <outline text="Consider Behave BDD talk for L&amp;amp;L sesh?" />
        </outline>
        <outline text="Interviews #om-interview">
          <outline text="Muhammad Tahir (Redhat bloke)">
            <outline text="Standard big company situtation. Been at redhat for 6 years" />
            <outline text="Seemingly well versed in certain areas (CI/CD, agile, mentoring, probably python in general)" />
            <outline text="Lacks experience elsewhere - as in no notable SQL experience, uses mongoDB in current role, previously used mysql but interacted via a GUI" />
            <outline text="Seemed like a nice guy. Recognised his faults and really wants to learn newer tech" />
          </outline>
          <outline text="James Gillard">
            <outline text="3 years as dev ops engineer" />
            <outline text="Very little coding experience" />
            <outline text="However seems &lt;i&gt;very&lt;/i&gt; driven and enthusiastic" />
            <outline text="Rui and I have a plan" />
          </outline>
        </outline>
        <outline _complete="true" text="Metadata PR" />
        <outline _complete="true" text="Go debug" _note="webhook.go :240&#10;error decoding rawEvents&#10;rawEvents -&amp;gt; Msg EventType (msys) -&amp;gt; Message *Event (message_event) -&amp;gt; GeoIP GeoIP (geo_ip) -&amp;gt; Latitude  float64 (latitude)&#10;" />
      </outline>
      <outline _complete="true" text="#wc2019-01-14::work">
        <outline _complete="true" text="`brew upgrade fish`" _note="fish is now at v3 major release" />
        <outline text="Blueprints table is going to be moved to core db #todo">
          <outline _complete="true" text="Migrations for current ecomm tables" />
          <outline _complete="true" text="Adaptions for `api.campaigns`?" />
          <outline text="Improve on `req_ctx` using `session` key for core session on blueprint requests #todo" />
        </outline>
        <outline text="Merge and deploy new global blueprint creation dashboard #todo" />
        <outline _complete="true" text="Book skiing time off #todo" _note="8th-17th (8th can be half day PM) " />
        <outline _complete="true" text="Take home algorithms book #todo" />
        <outline _complete="true" text="Write confluence doc detailing integration_testing approach on confluence #todo" />
        <outline _complete="true" text="Add Ometriversity doc to confluence, tidy up and link to sessions spreadsheet #todo" />
        <outline text="Non-sprint backlog">
          <outline text="Ensure omitted fields are globally ignored #todo" />
          <outline text="Integration-testing">
            <outline text="Add in tests/integration base dir to cookiecutter repo(s)? #todo" />
          </outline>
          <outline text="Consider Behave BDD talk for L&amp;amp;L sesh?" />
        </outline>
        <outline _complete="true" text="Metadata PR" />
        <outline _complete="true" text="Go debug" _note="webhook.go :240&#10;error decoding rawEvents&#10;rawEvents -&amp;gt; Msg EventType (msys) -&amp;gt; Message *Event (message_event) -&amp;gt; GeoIP GeoIP (geo_ip) -&amp;gt; Latitude  float64 (latitude)&#10;" />
      </outline>
      <outline _complete="true" text="#wc2019-01-07::work">
        <outline text="Testing">
          <outline text="Fix issue with developer postgres image - at present the nextval constraint does not exist like it does in prod, meaning it incorrectly expects an id to be passed, and thus throws the error.">
            <outline text="Image creation is is ometia.migrations/devtools2/servertools/*" />
          </outline>
          <outline text="Add in tests/integration base dir to cookiecutter repo(s) #todo" />
        </outline>
        <outline text="Ometri-versity presentation" />
        <outline _complete="true" text="Metadata PR" />
        <outline text="Fill out lattice feeedback" />
        <outline text="David Krehwinkel #om-interview">
          <outline text="Self awareness" />
          <outline text="Poor memory/good problem solver" />
          <outline text="No official team-lead positions">
            <outline text="Unofficially helps out at points with onboarding new hires" />
            <outline text="Works with senior team, perhaps less opportunity to mentor more junior devs" />
          </outline>
          <outline text="Process input">
            <outline text="Pycharm IDE" />
            <outline text="Bitbucket to github decision" />
            <outline text="Had unstructured agile" />
            <outline text="His influence mostly around choosing tooling. Some AWS components (unsure)?" />
          </outline>
          <outline text="Interesting perspective on what is microservices">
            <outline text="Webcrawler, core part split into &quot;microservices&quot;, in lambda functions" />
          </outline>
          <outline text="&quot;Love hate relationship with sql databases&quot;">
            <outline text="Admits he's not an expert &quot;do not know as much as he wants to&quot;" />
          </outline>
          <outline text="Noted hostile and pressured environment in previous role." />
          <outline text="Can share monitoring handler for something - did he work on that in last role?" />
        </outline>
        <outline _complete="true" text="Go debug" _note="webhook.go :240&#10;error decoding rawEvents&#10;rawEvents -&amp;gt; Msg EventType (msys) -&amp;gt; Message *Event (message_event) -&amp;gt; GeoIP GeoIP (geo_ip) -&amp;gt; Latitude  float64 (latitude)&#10;" />
        <outline text="Phalecs Jagboro #om-interview">
          <outline text="Background">
            <outline text="Aware of generating customer profile" />
            <outline text="Didn't mention marketing aspect" />
          </outline>
          <outline text="His background">
            <outline text="Mention of fullstack - seems to find that interesting" />
            <outline text="His backend service">
              <outline text="Problem with swagger is that it's not enforced, it's descriptive, they have a separate validation part">
                <outline text="Unsure if correct, probably knows more than me..." />
              </outline>
              <outline text="Zookeeper for discovery of services. Currently direct configuration between services." />
            </outline>
          </outline>
          <outline text="Scores">
            <outline text="Architecture 2/3?">
              <outline text="No exposure to kubernetes, unsure about Docker" />
            </outline>
            <outline text="Tools 2/3?" />
            <outline text="Mentoring ??? Led a company as CTO but no clear examples">
              <outline text="Not talking about actual person mentoring, more processes." />
              <outline text="Mentored a product manager to fill the position he was in? Not the strongest example." />
              <outline text="Figuring out what works for each person? Not a clear example again." />
            </outline>
            <outline text="DB/orm 3/4?">
              <outline text="Analyse execution path" />
              <outline text="Figure out where to add indexes" />
              <outline text="Didn't explicitly mention EXPLAIN ANALYSE" />
            </outline>
          </outline>
          <outline text="Final thoughts">
            <outline text="Not sure if questions were understood entirely, hard to get desired answers." />
            <outline text="Communication issues? Although most likely an issue with the phone line" />
            <outline text="Wants exposure to ML, interesting seeing as apparently has implemented an ML pipeline" />
          </outline>
        </outline>
      </outline>
      <outline _complete="true" text="#wc2018-12-31::work">
        <outline _complete="true" text="Codacy analysis" _note="Python package https://github.com/codacy/python-codacy-coverage#setup">
          <outline text="Picks up use of asserts etc in tests (not intelligent enough to recognise test files). Can specify which files to ignore though (although will this affect test coverage anaylysis?">
            <outline text="Side note: related to python run in optimised mode which removes asserts/docstrings etc." _note="python -O blah.py" />
          </outline>
          <outline text="Decent breakdown/explanation of issues (at least) in file view." />
          <outline text="Picks up on cool things (such as sql injection vulnerabilities and `try...except: pass` blocks" />
          <outline text="A lot of raised issues are fairly simple linting outputs. You can specify which linters but I can only see pylint available for python" />
          <outline text="Seems like it centralises a number of separately implemented tools in a convenient way. Nice in terms of centralised view and convience. However achievable through manual means (i.e. integrate bandit with circleci)" />
          <outline text="Coverage is pretty decent" />
        </outline>
        <outline _complete="true" text="Snyk playaround">
          <outline text="Does not support setup.py (but will soon, see below)" _note="https://github.com/snyk/snyk-python-plugin/issues/23" />
          <outline text="Does `pipenv check` achieve the same coverage?">
            <outline text="Seems to output warnings/alerts where pipenv does not." />
            <outline text="Assuming the db of vulnerabilities is more responsive" />
          </outline>
          <outline text="Seems that the pipenv support does not extend to the online UI version, only locally (or integrated with CI pipeline etc) when running `snyk test`" _note="install snyk with `npm install -g snyk`" />
        </outline>
        <outline text="Feedback on PE (project/eng team)doc" _note="https://docs.google.com/document/d/18qDhnfL1uv5T3oHO53IuPSqngWJ3uID6Z4luGKWUMjk/edit" />
        <outline _complete="true" text="Feedback on Engineering Growth Matrix" _note="&amp;gt;comments appreaciated https://docs.google.com/document/d/1pUWwvHQe4fZ6dFce9_0pqLIru4YXw12hrsICFSZQFIs/edit?usp=sharing&#10;&#10;That’s a really great document! I would find it *super* useful as an ongoing actively-maintained reference. Couple questions/suggestions etc:&#10;&#10;1. I’m assuming during 1on1s (or elsewhere) each competency is reviewed and progress and goals are assessed? I.e. “You need to do X to get to the next level”?&#10;2. What would be really great would be a method by which we’re assessed on each sub-competency (of the _next_ level), i.e.&#10;```&quot;Within 'Collaboration and Mentoring', for item regarding 'Mentoring', you are currently operating at grade {some grade}. In order to progress, you should aim to reach grade {required grade} and {measurable tasks/achievements/competencies} are how you will achieve that&quot;.```&#10;(obviously wording and terminology would need to not be shit).&#10;3. Unsure how useful or relevant it would be, but given point 2 above, perhaps there could be rigid consistency for each “sub-competency” between each main competency (i.e. there are X consistently related sub-competencies for each level). Could be particularly useful when addressing which granular aspects of an engineer is preventing them from progressing as a whole (i.e. you have never shown interest in mentoring someone therefore you are not a well rounded engineer” (extreme example with other complexities factoring in of course).&#10;&#10;Closing thought to play devils advocate against some of the points I made above (lol). One of the things I found negative at IBM was the exaggerated “hoop-jumping” culture and requirements in order to progress - it wasn’t unheard of to see very skilled and valuable engineers not progress because they hadn’t ticked some obscure box on some PDP doc. That said, I think that was in part due to the disconnect between the engineer in question and the examining board deciding whether or not they should go up a band (who never even met said engineer), so I don’t think this is necessarily a worry for some time! Even still, I think there’s definitely a balance to be found (IMO). " />
        <outline text="Console solution to accept JSON `recipients` and `segmentation_tree` and write to db for global blueprints #todo">
          <outline _complete="true" text="json validation #todo" />
          <outline _complete="true" text="json payload validation #todo" />
          <outline _complete="true" text="Will need to be inserted into all shards #todo" />
          <outline _complete="true" text="Success message of some description #todo" />
          <outline text="Double check composer .lock and .phar file changes are required and relevant #todo" />
          <outline _complete="true" text="json_decode nullifies output for any string with a 'non-breaking space' in it. #todo" />
        </outline>
        <outline text="Re-factor to account for new tidier scheduling logic #todo" _note="scroll to bottom https://ometria.atlassian.net/wiki/spaces/DZ/pages/267059269/Data+structure">
          <outline text="Investigate how mass_email deals with calculating scheduling for campaigns/variants">
            <outline text="Relevant code seems to be within campaign_processor.batch_generator.get_batch_generator, where currently batching_mode is passed to dictate with processor to retrieve" />
            <outline text="More relevant code in BaseBatchGenerator.__init__() which deals with setting _dt_scheduled and _dt_scheduled_display based on whether it's set on campaign and/or variant (variant appears to currently override so might have to ovveride here based on new rules)." />
          </outline>
          <outline text="Add new field to MassCampaignVariant(.schedule_mode)." />
          <outline text="Deal with migration for new field" />
        </outline>
        <outline text="send_test endpoint #todo" />
        <outline text="Confirm split tests work with existing code #todo" />
        <outline text="Deployments #proj-broadcast">
          <outline _complete="true" text="Use mass_campaign_configuration table">
            <outline text="New field or implied via no related mass_campaign.mass_campaign_configuration entry?" />
            <outline text="Issues with implied via no joining field?" />
          </outline>
          <outline _complete="true" text="Update document to detail new segmentation approach #todo " _note="https://ometria.atlassian.net/wiki/spaces/DZ/pages/267682224/Segmentation+API" />
          <outline _complete="true" text="New table mass_campaign_blueprints/mass_campaign_configuration_blueprints #todo">
            <outline text="recipients json" />
            <outline text="segmentation_tree json" />
            <outline text="account_id, nullable to allow for global ometria blueprints" />
          </outline>
          <outline text="Deploy new datamodels including revert back to no relationships #todo" />
          <outline text="Deploy ecomm migrations #todo" />
          <outline text="Write Monitoring migrations #todo" />
          <outline text="Deploy monitoring migrations #todo" />
          <outline text="Update ometria_lib_monitoring_db_logger #todo" />
          <outline text="Deploy new blueprint creator on admin console #todo" />
          <outline _complete="true" text="Fix except on siblings #todo">
            <outline text="except_ (all previous siblings joined)" />
          </outline>
          <outline _complete="true" text="Consider refactor of new API (perhaps using marshmallow-sqlalchemy) #todo" />
        </outline>
        <outline text="Consider how to generate variants on schedule/publish time #todo" />
        <outline text="Non-critical">
          <outline text="Consider adding new `mass_campaign_variant.is_sending` which can be added to the API for more granular send information (given the added potential complexity in campaigns) #todo" _note="Within a broadcast campaign list (show which variants inside a campaign are sending etc)." />
          <outline text="Pytest will need updating at some point, and then direct fixture-calling will need to be refactored to stop it throwing warnings and thus failing on circleci" />
          <outline text="Ensure all tests have correct naming convention, so some mass.api.&amp;lt;endpoint&amp;gt;s should imply that they receive configs rather than campaigns #todo" />
        </outline>
        <outline text="Address duplicate customer_id deletion logic in mass_email?? #todo" />
        <outline text="Ometri-versity presentation" />
        <outline text="broadcast ui build number 6264" />
        <outline text="Validate `name` for `blueprint` #todo" />
        <outline text="Testing">
          <outline text="Add in tests/integration base dir to cookiecutter repo(s) #todo" />
        </outline>
        <outline _complete="true" text="#om-support https://ometriaeu.freshdesk.com/a/tickets/6585 cafe du cycliste (Cafe du Cycliste_M2 Staging 737)">
          <outline text="To recreate" _note="tossh Worker1&#10;https://github.com/Ometria/ometria.importers#manual-debugging&#10;&amp;gt;&amp;gt;&amp;gt; from ometria_importers.worker.adaptors import *&#10;&amp;gt;&amp;gt;&amp;gt; a = get_adaptor(737, debug=True)&#10;&amp;gt;&amp;gt;&amp;gt; import datetime&#10;&amp;gt;&amp;gt;&amp;gt; r = a.get_products_modified_between(datetime.datetime(2018, 12, 24), datetime.datetime(2019, 1, 2))&#10;Access passed URL in browser and details" />
          <outline text="Ritesh gone back to client with details" />
        </outline>
      </outline>
      <outline _complete="true" text="#wc2018-12-17">
        <outline text="Re-factor to account for new tidier scheduling logic #todo" _note="scroll to bottom https://ometria.atlassian.net/wiki/spaces/DZ/pages/267059269/Data+structure">
          <outline text="Investigate how mass_email deals with calculating scheduling for campaigns/variants">
            <outline text="Relevant code seems to be within campaign_processor.batch_generator.get_batch_generator, where currently batching_mode is passed to dictate with processor to retrieve" />
            <outline text="More relevant code in BaseBatchGenerator.__init__() which deals with setting _dt_scheduled and _dt_scheduled_display based on whether it's set on campaign and/or variant (variant appears to currently override so might have to ovveride here based on new rules)." />
          </outline>
          <outline text="Add new field to MassCampaignVariant(.schedule_mode)." />
          <outline text="Deal with migration for new field" />
        </outline>
        <outline text="Outstanding work timings" _note="https://docs.google.com/document/d/1XDOsP3PiEGn0oeAF9wOJ6aXr_PlQ_AIsKNU5Rufxrsw/edit" />
        <outline text="send_test endpoint #todo" />
        <outline text="Confirm split tests work with existing code #todo" />
        <outline text="Deployments #proj-broadcast">
          <outline _complete="true" text="Use mass_campaign_configuration table">
            <outline text="New field or implied via no related mass_campaign.mass_campaign_configuration entry?" />
            <outline text="Issues with implied via no joining field?" />
          </outline>
          <outline _complete="true" text="Update document to detail new segmentation approach #todo " _note="https://ometria.atlassian.net/wiki/spaces/DZ/pages/267682224/Segmentation+API" />
          <outline _complete="true" text="New table mass_campaign_blueprints/mass_campaign_configuration_blueprints #todo">
            <outline text="recipients json" />
            <outline text="segmentation_tree json" />
            <outline text="account_id, nullable to allow for global ometria blueprints" />
          </outline>
          <outline text="Deploy new datamodels including revert back to no relationships #todo" />
          <outline text="Deploy ecomm migrations #todo" />
          <outline text="Write Monitoring migrations #todo" />
          <outline text="Deploy monitoring migrations #todo" />
          <outline text="Update ometria_lib_monitoring_db_logger #todo" />
          <outline _complete="true" text="Fix except on siblings #todo">
            <outline text="except_ (all previous siblings joined)" />
          </outline>
          <outline _complete="true" text="Consider refactor of new API (perhaps using marshmallow-sqlalchemy) #todo" />
        </outline>
        <outline text="Consider how to generate variants on schedule/publish time #todo" />
        <outline text="Console solution to accept JSON `recipients` and `segmentation_tree` and write to db for global blueprints #todo">
          <outline text="Will need to be inserted into all shards" />
          <outline text="json_decode nullifies output for any string with a 'non-breaking space' in it. #todo" />
        </outline>
        <outline text="Non-critical">
          <outline text="Consider adding new `mass_campaign_variant.is_sending` which can be added to the API for more granular send information (given the added potential complexity in campaigns) #todo" _note="Within a broadcast campaign list (show which variants inside a campaign are sending etc)." />
          <outline text="Pytest will need updating at some point, and then direct fixture-calling will need to be refactored to stop it throwing warnings and thus failing on circleci" />
          <outline text="Ensure all tests have correct naming convention, so some mass.api.&amp;lt;endpoint&amp;gt;s should imply that they receive configs rather than campaigns #todo" />
        </outline>
        <outline text="Address duplicate customer_id deletion logic in mass_email?? #todo" />
        <outline text="Ometri-versity idea" _note="Discussion and solution to &quot;Towers problem&quot; from kattis&#10;https://math.stackexchange.com/questions/101138/complexity-class-of-comparison-of-power-towers" />
      </outline>
      <outline _complete="true" text="#wc2018-12-10">
        <outline text="Outstanding work timings" _note="https://docs.google.com/document/d/1XDOsP3PiEGn0oeAF9wOJ6aXr_PlQ_AIsKNU5Rufxrsw/edit" />
        <outline _complete="true" text="fix tests #todo" />
        <outline _complete="true" text="duplicate endpoint #todo" />
        <outline text="Re-factor to account for new tidier scheduling logic #todo" _note="scroll to bottom https://ometria.atlassian.net/wiki/spaces/DZ/pages/267059269/Data+structure" />
        <outline text="send_test endpoint #todo" />
        <outline _complete="true" text="Confusing to have `MassCampaigns._get() and .get()` as functions accessing different schema #todo" />
        <outline text="Confirm split tests work with existing code #todo" />
        <outline text="Deployments #proj-broadcast">
          <outline _complete="true" text="Use mass_campaign_configuration table">
            <outline text="New field or implied via no related mass_campaign.mass_campaign_configuration entry?" />
            <outline text="Issues with implied via no joining field?" />
          </outline>
          <outline _complete="true" text="Update document to detail new segmentation approach #todo " _note="https://ometria.atlassian.net/wiki/spaces/DZ/pages/267682224/Segmentation+API" />
          <outline _complete="true" text="New table mass_campaign_blueprints/mass_campaign_configuration_blueprints #todo">
            <outline text="recipients json" />
            <outline text="segmentation_tree json" />
            <outline text="account_id, nullable to allow for global ometria blueprints" />
          </outline>
          <outline text="Deploy new datamodels including revert back to no relationships #todo" />
          <outline text="Deploy ecomm migrations #todo" />
          <outline text="Write Monitoring migrations #todo" />
          <outline text="Deploy monitoring migrations #todo" />
          <outline text="Update ometria_lib_monitoring_db_logger #todo" />
          <outline _complete="true" text="Fix except on siblings #todo">
            <outline text="except_ (all previous siblings joined)" />
          </outline>
          <outline _complete="true" text="Consider refactor of new API (perhaps using marshmallow-sqlalchemy) #todo" />
        </outline>
        <outline _complete="true" text="Consider more graceful approach to clearing customers table after tests_segmentation #todo" />
        <outline _complete="true" text="Deal with failing tests caused by directly called fixtures (circleci does not allow warnings through) #todo" />
        <outline text="Consider how to generate variants on schedule/publish time #todo" />
        <outline _complete="true" text="WHERE IT WAS LEFT BEFORE HOLS">
          <outline text="Part way through testing. Latest fail was to do with `template_instance_revision_is` not being accessible on MassCampaign (as it manually added to the model within `api.campaigns`." />
          <outline text="Unfortunately cannot access that field via `mass_campaign_configuration.mass_campaign.template_instance_revision_id` as it doesn't exist." />
          <outline text="Best approach is probably to remove the global relationship mappings between mass_campaign and mass_campaign_configuration within the datamodels repo and add the relationship within api.campaigns as per the other." />
        </outline>
        <outline text="Console solution to accept JSON `recipients` and `segmentation_tree` and write to db for global blueprints #todo" />
        <outline text="Non-critical">
          <outline text="Consider adding new `mass_campaign_variant.is_sending` which can be added to the API for more granular send information (given the added potential complexity in campaigns) #todo" _note="Within a broadcast campaign list (show which variants inside a campaign are sending etc)." />
          <outline text="Pytest will need updating at some point, and then direct fixture-calling will need to be refactored to stop it throwing warnings and thus failing on circleci" />
          <outline text="Ensure all tests have correct naming convention, so some mass.api.&amp;lt;endpoint&amp;gt;s should imply that they receive configs rather than campaigns #todo" />
        </outline>
      </outline>
      <outline _complete="true" text="#wc2018-12-03">
        <outline _complete="true" text="Samantha dev interview">
          <outline text="Design">
            <outline text="Mapping for lists, SQL database" />
            <outline text="Cron job scheduled every hour" />
            <outline text="Keep track of previous import date. For each members list ID" />
            <outline text="Mentioned pagination supported with mailchimp API, prevent overloading memory">
              <outline text="How to deal with multiple calls?">
                <outline text="Logical flow">
                  <outline text="Before hitting API, grab dt from db (if exists)" />
                  <outline text="Request records for after that dt" />
                  <outline text="100 at a time, while loop?" />
                </outline>
                <outline text="Seemed to have an understanding of dealing with failures on the import job, i.e. only update dt on successful processing." />
              </outline>
            </outline>
            <outline text="Use rabbitmq for transformation of data">
              <outline text="What on queue? Actual records pulled from mailchimp">
                <outline text="Other process that reads off queue, transforms and sends to ometria API." />
              </outline>
            </outline>
            <outline text="Handling failures">
              <outline text="Try/except around the critical parts that could fail, raise exception. Log to something like sentry, or retry logic">
                <outline text="Would would be worth retrying?">
                  <outline text="Connection issue" />
                </outline>
              </outline>
              <outline text="Separate check for last updated times, raise if time beyond certain time diff" />
            </outline>
          </outline>
          <outline text="Architectural considerations?">
            <outline text="Deployments at student.com are automated through circle (other teams)." />
          </outline>
          <outline text="Code structure">
            <outline text="Main app file" />
            <outline text="Config file for rabbit mq and db stuff" />
          </outline>
          <outline text="Pair programming exercise">
            <outline text="How would you store config info/globals etc?" />
            <outline text="Mention `if __name__ == '__main__'" />
            <outline text="She mentioned use of .get() and assumption that keys are always there (good)." />
          </outline>
          <outline text="She wasn't immediately sure about how to deal with credentials in a local setting, but understood environment vars on further pushing." />
          <outline text="Fairly junior" />
          <outline text="&quot;Biggest challenge&quot;">
            <outline text="Struggled answering this">
              <outline text="Has she led or been heavily involved in any significant projects?" />
            </outline>
            <outline text="Talking about issues at current company with logging.">
              <outline text="Seems a bit weak in answers around this." />
              <outline text="Possibly lacking experience" />
            </outline>
          </outline>
        </outline>
        <outline _complete="true" text="Confirm split tests work with existing code #todo" />
        <outline _complete="true" text="Console solution to accept JSON `recipients` and `segmentation_tree` and write to db for global blueprints #todo" />
        <outline _complete="true" text="Blueprints CRUD api #proj-broadcast">
          <outline _complete="true" text="Use mass_campaign_configuration table">
            <outline text="New field or implied via no related mass_campaign.mass_campaign_configuration entry?" />
            <outline text="Issues with implied via no joining field?" />
          </outline>
          <outline _complete="true" text="Update document to detail new segmentation approach #todo " _note="https://ometria.atlassian.net/wiki/spaces/DZ/pages/267682224/Segmentation+API" />
          <outline _complete="true" text="New table mass_campaign_blueprints/mass_campaign_configuration_blueprints #todo">
            <outline text="recipients json" />
            <outline text="segmentation_tree json" />
            <outline text="account_id, nullable to allow for global ometria blueprints" />
          </outline>
          <outline _complete="true" text="Deploy new datamodels #todo" />
          <outline _complete="true" text="Deploy ecomm migrations #todo" />
          <outline _complete="true" text="Write Monitoring migrations #todo" />
          <outline _complete="true" text="Deploy monitoring migrations #todo" />
          <outline _complete="true" text="Update ometria_lib_monitoring_db_logger #todo" />
          <outline _complete="true" text="Fix except on siblings #todo">
            <outline text="except_ (all previous siblings joined)" />
          </outline>
          <outline _complete="true" text="Consider refactor of new API (perhaps using marshmallow-sqlalchemy) #todo" />
        </outline>
        <outline _complete="true" text="Mass endpoints #todo">
          <outline _complete="true" text="unschedule" />
          <outline _complete="true" text="cancel" />
          <outline _complete="true" text="pause" />
          <outline _complete="true" text="resume" />
          <outline text="duplicate" />
          <outline text="send_test #todo">
            <outline text="currently endpoint in api.campaigns" _note="/campaigns/mass/{id}/send_test" />
            <outline text="hits gearman endpoint in mass_email" _note="&quot;messages.send_sync_email&quot;: email_producer.send_sync_email" />
          </outline>
          <outline _complete="true" text="schedule #todo" />
          <outline _complete="true" text="Filters">
            <outline text="group (all, scheduled, draft, sent, cancelled)" />
            <outline text="title" />
            <outline text="date_from" />
            <outline text="date_to" />
          </outline>
        </outline>
        <outline _complete="true" text="Consider how to generate variants on schedule/publish time #todo" />
        <outline _complete="true" text="Consider adding new `mass_campaign_variant.is_sending` which can be added to the API for more granular send information (given the added potential complexity in campaigns) #todo" />
        <outline _complete="true" text="Remove the mass_campaign - mass_campaign_configuration relationships in datamodels, and add the relationship directly in api.campaigns (on the MassCampaignAPI model) #todo" />
        <outline _complete="true" text="WHERE IT WAS LEFT BEFORE HOLS">
          <outline _complete="true" text="Part way through testing. Latest fail was to do with `template_instance_revision_is` not being accessible on MassCampaign (as it manually added to the model within `api.campaigns`." />
          <outline _complete="true" text="Unfortunately cannot access that field via `mass_campaign_configuration.mass_campaign.template_instance_revision_id` as it doesn't exist." />
          <outline _complete="true" text="Best approach is probably to remove the global relationship mappings between mass_campaign and mass_campaign_configuration within the datamodels repo and add the relationship within api.campaigns as per the other." />
        </outline>
        <outline _complete="true" text="Confusing to have `MassCampaigns._get() and .get()` as functions accessing different schema" />
      </outline>
      <outline _complete="true" text="#wc2018-11-26">
        <outline _complete="true" text="Confirm split tests work with existing code #todo" />
        <outline _complete="true" text="Console solution to accept JSON `recipients` and `segmentation_tree` and write to db for global blueprints #todo" />
        <outline _complete="true" text="Blueprints CRUD api #proj-broadcast">
          <outline _complete="true" text="Use mass_campaign_configuration table">
            <outline text="New field or implied via no related mass_campaign.mass_campaign_configuration entry?" />
            <outline text="Issues with implied via no joining field?" />
          </outline>
          <outline _complete="true" text="Update document to detail new segmentation approach #todo " _note="https://ometria.atlassian.net/wiki/spaces/DZ/pages/267682224/Segmentation+API" />
          <outline _complete="true" text="New table mass_campaign_blueprints/mass_campaign_configuration_blueprints #todo">
            <outline text="recipients json" />
            <outline text="segmentation_tree json" />
            <outline text="account_id, nullable to allow for global ometria blueprints" />
          </outline>
          <outline text="Deploy new datamodels #todo" />
          <outline text="Deploy ecomm migrations #todo" />
          <outline text="Write Monitoring migrations #todo" />
          <outline text="Deploy monitoring migrations #todo" />
          <outline text="Update ometria_lib_monitoring_db_logger #todo" />
          <outline _complete="true" text="Fix except on siblings #todo">
            <outline text="except_ (all previous siblings joined)" />
          </outline>
          <outline _complete="true" text="Consider refactor of new API (perhaps using marshmallow-sqlalchemy) #todo" />
        </outline>
        <outline _complete="true" text="Mass endpoints #todo">
          <outline _complete="true" text="unschedule" />
          <outline _complete="true" text="cancel" />
          <outline _complete="true" text="pause" />
          <outline _complete="true" text="resume" />
          <outline _complete="true" text="duplicate" />
          <outline _complete="true" text="send_test #todo">
            <outline _complete="true" text="currently endpoint in api.campaigns" _note="/campaigns/mass/{id}/send_test" />
            <outline _complete="true" text="hits gearman endpoint in mass_email" _note="&quot;messages.send_sync_email&quot;: email_producer.send_sync_email" />
          </outline>
          <outline _complete="true" text="schedule #todo" />
          <outline _complete="true" text="Filters">
            <outline text="group (all, scheduled, draft, sent, cancelled)" />
            <outline text="title" />
            <outline text="date_from" />
            <outline text="date_to" />
          </outline>
        </outline>
        <outline _complete="true" text="Consider how to generate variants on schedule/publish time #todo" />
        <outline _complete="true" text="Consider adding new `mass_campaign_variant.is_sending` which can be added to the API for more granular send information (given the added potential complexity in campaigns) #todo" />
        <outline _complete="true" text="Remove the mass_campaign - mass_campaign_configuration relationships in datamodels, and add the relationship directly in api.campaigns (on the MassCampaignAPI model) #todo" />
        <outline _complete="true" text="WHERE IT WAS LEFT BEFORE HOLS">
          <outline _complete="true" text="Part way through testing. Latest fail was to do with `template_instance_revision_is` not being accessible on MassCampaign (as it manually added to the model within `api.campaigns`." />
          <outline _complete="true" text="Unfortunately cannot access that field via `mass_campaign_configuration.mass_campaign.template_instance_revision_id` as it doesn't exist." />
          <outline _complete="true" text="Best approach is probably to remove the global relationship mappings between mass_campaign and mass_campaign_configuration within the datamodels repo and add the relationship within api.campaigns as per the other." />
        </outline>
        <outline _complete="true" text="See if the DefaultDictField can be phased out #todo" />
        <outline _complete="true" text="Fix issue with updating and_filter fields #todo">
          <outline text="Rui will always send all fields, so regenerating and_filters each time is correct" />
          <outline text="Will send `field: null` for fields that want to be reset" />
        </outline>
      </outline>
      <outline _complete="true" text="#wc2018-11-19">
        <outline _complete="true" text="Book off stag do's #todo" />
        <outline _complete="true" text="Book off Christmas #todo" />
        <outline _complete="true" text="Need to return timestamps in general in API? #todo #proj-broadcast" />
        <outline _complete="true" text="Consider how to deal with split tests/split tests w/ winner #todo">
          <outline text="Normal split tests">
            <outline text="For segmentation, could poss reuse logic for random splits?" />
          </outline>
          <outline text="Split test w/ winner">
            <outline text="Use a percentage based on the &quot;test&quot; segment. A footnote will be clear on the front end to explain the reason for the lower numbers." />
          </outline>
        </outline>
        <outline _complete="true" text="In segmentation tree tests, ensure the older siblings have preference over the younger in terms of matches #todo" />
        <outline _complete="true" text="Test with `finalise` == False #todo" />
        <outline _complete="true" text="Fix swagger to accept null in list fields #todo" />
        <outline _complete="true" text="Prevent omitted fields overriding fields on model #todo" />
        <outline _complete="true" text="Ensure updating one and_filter field doesn't cause others to be overwritten #todo" />
      </outline>
      <outline _complete="true" text="#wc2018-11-12">
        <outline text="Blueprints CRUD api #proj-broadcast">
          <outline _complete="true" text="Use mass_campaign_configuration table">
            <outline text="New field or implied via no related mass_campaign.mass_campaign_configuration entry?" />
            <outline text="Issues with implied via no joining field?" />
          </outline>
          <outline _complete="true" text="Update document to detail new segmentation approach #todo " _note="https://ometria.atlassian.net/wiki/spaces/DZ/pages/267682224/Segmentation+API" />
          <outline _complete="true" text="New table mass_campaign_blueprints/mass_campaign_configuration_blueprints #todo">
            <outline text="recipients json" />
            <outline text="segmentation_tree json" />
            <outline text="account_id, nullable to allow for global ometria blueprints" />
          </outline>
          <outline text="Deploy new datamodels #todo" />
          <outline text="Deploy ecomm migrations #todo" />
          <outline text="Write Monitoring migrations #todo" />
          <outline text="Deploy monitoring migrations #todo" />
          <outline text="Update ometria_lib_monitoring_db_logger #todo" />
          <outline _complete="true" text="Fix except on siblings #todo">
            <outline text="except_ (all previous siblings joined)" />
          </outline>
          <outline _complete="true" text="Consider refactor of new API (perhaps using marshmallow-sqlalchemy) #todo" />
        </outline>
        <outline text="Need to return timestamps in general in API? #todo" />
        <outline _complete="true" text="Issue with random split node, query and therefore splits will vary for each leaf node query run">
          <outline _complete="true" text="For the sake of returning aggregated totals, this is unimportant (and actually there's no need for an order by random), but will however become relevant when correctly generating the customer_sets on campaign publish time" />
          <outline _complete="true" text="Update segmentation api query to remove order_by(func.random()) for customer count queries #todo" />
          <outline _complete="true" text="Write separate mechanism to ensure consistency between customer sets below random splits (by running the queries for split blocks and persisting that record of customers sets to later nodes) #todo">
            <outline text="Perhaps by running the queries for each to generate customer_sets, and creating a new query. Processing time is not critical in this instance." _note="select([customers]).where(customers.c.id.in_(customer_set))" />
          </outline>
          <outline _complete="true" text="When `finalise==True`, need to assign the customer_sets to the nodes, rather than `n_customers`" />
        </outline>
        <outline _complete="true" text="Create column of customer_id's rather than using a `select id from customers where id in ...` #todo" />
        <outline _complete="true" text="mass_campaign fields using marshmallow directly automatically assign defaults. Need to deal with that manually with new API. Ref. template_configuration #todo" />
      </outline>
    </outline>
    <outline text="Life">
      <outline _complete="true" text="#wc2019-09-23::life">
        <outline _complete="true" text="Figure out drinks volumes" />
        <outline _complete="true" text="Kim gift">
          <outline text="https://www.blackpearl.london/product/small-padlock-necklace-silver/" />
        </outline>
        <outline _complete="true" text="Groomsmen gift" />
        <outline _complete="true" text="Day before wedding list">
          <outline _complete="true" text="Belt from uniqlo" />
          <outline _complete="true" text="Silk socks from uniqlo" />
          <outline _complete="true" text="Iron shirt" />
          <outline _complete="true" text="Copy Speech to cards" />
          <outline _complete="true" text="Line up beard" />
          <outline _complete="true" text="Pack for Fri night">
            <outline _complete="true" text="Rings" />
            <outline _complete="true" text="Necklace" />
            <outline _complete="true" text="Cufflinks" />
            <outline _complete="true" text="Suit" />
            <outline _complete="true" text="Shirt" />
            <outline _complete="true" text="Shoes" />
            <outline _complete="true" text="Wedding socks" />
            <outline _complete="true" text="Hip flasks" />
            <outline _complete="true" text="Brandy" />
            <outline _complete="true" text="Speech cards" />
            <outline _complete="true" text="Phone charger" />
            <outline _complete="true" text="Toothbrush" />
            <outline _complete="true" text="Toothpaste" />
            <outline _complete="true" text="Shampoo and conditioner" />
            <outline _complete="true" text="Deodorant" />
            <outline _complete="true" text="Aftershave" />
            <outline _complete="true" text="Hair stuff" />
            <outline _complete="true" text="Belt" />
            <outline _complete="true" text="Ties" />
            <outline _complete="true" text="Pocked squares" />
            <outline _complete="true" text="Groomsmen socks" />
            <outline _complete="true" text="Blister plasters" />
            <outline _complete="true" text="Note 8 plus charger" />
            <outline text="Core" _note="coreclapton" />
          </outline>
        </outline>
        <outline _complete="true" text="Confirm Charlie car" />
        <outline _complete="true" text="Booze for hipflasks" />
        <outline _complete="true" text="Bag for Sunday morning" />
        <outline _complete="true" text="Call moss bros">
          <outline text="When is Robert in?" />
          <outline text="When can I get fitted" />
          <outline text="Buy shirt" />
          <outline text="Buy ties/pocket squars" />
        </outline>
        <outline text="Contact standard life about updating online details" />
      </outline>
      <outline _complete="true" text="#wc2019-09-09::life">
        <outline _complete="true" text="Return shirts" />
        <outline _complete="true" text="Buy phone case" />
        <outline text="Ibiza">
          <outline text="TODO">
            <outline _complete="true" text="Shave" />
            <outline _complete="true" text="Cut nails" />
            <outline _complete="true" text="Download films" />
            <outline _complete="true" text="Hang suits out" />
            <outline _complete="true" text="Bring duvet in" />
          </outline>
          <outline text="Clothes">
            <outline _complete="true" text="7x pants" />
            <outline _complete="true" text="7?x socks" />
            <outline _complete="true" text="White oxford shirt" />
            <outline _complete="true" text="EZY jeans" />
            <outline _complete="true" text="Chubbies shorts x2" />
            <outline _complete="true" text="Under armour joggers" />
            <outline _complete="true" text="Blue AA shorts" />
            <outline _complete="true" text="Black swimmers" />
            <outline _complete="true" text="All the shirts">
              <outline text="New shirts (x3)" />
              <outline text="Old brown pattern" />
              <outline text="Stag bought shirt" />
              <outline text="Blue short sleeved" />
              <outline text="?mustard shirt" />
            </outline>
            <outline _complete="true" text="Tshirts x7?" />
            <outline _complete="true" text="Vests x?" />
            <outline _complete="true" text="Belts">
              <outline text="Black" />
              <outline text="Brown" />
            </outline>
            <outline _complete="true" text="Fred jumper" />
            <outline _complete="true" text="Black down jacket" />
            <outline _complete="true" text="Ankle socks" />
          </outline>
          <outline text="Shoes">
            <outline _complete="true" text="White trainers" />
            <outline _complete="true" text="Loafers" />
            <outline _complete="true" text="White flip flops" />
            <outline _complete="true" text="Black flip flops" />
          </outline>
          <outline text="Elec">
            <outline _complete="true" text="Phone charger" />
            <outline _complete="true" text="Phone case" />
            <outline _complete="true" text="Earphones" />
            <outline _complete="true" text="?shaver" />
          </outline>
          <outline text="Toiletries">
            <outline _complete="true" text="Deodorant" />
            <outline _complete="true" text="Aftershave" />
            <outline _complete="true" text="Hair stuff" />
            <outline text="Toothpaste" />
            <outline text="Nexium" />
            <outline _complete="true" text="Micropore" />
            <outline _complete="true" text="Nail clippers" />
          </outline>
          <outline text="Misc">
            <outline _complete="true" text="Passport" />
            <outline _complete="true" text="Boarding pass" />
            <outline _complete="true" text="Bumbag" />
            <outline _complete="true" text="Sunglasses" />
          </outline>
        </outline>
        <outline text="Uniqlo">
          <outline _complete="true" text="Jeans" />
          <outline text="Ankle socks?" />
        </outline>
        <outline _complete="true" text="Shoes">
          <outline text="Grenson" />
          <outline text="Awaiting shoe delivery and call" />
        </outline>
        <outline _complete="true" text="Haircut" />
        <outline text="Clothes washes" />
        <outline _complete="true" text="Buy shirts for holiday" />
        <outline text="Bring suits down to Brighton">
          <outline text="Book train for Friday evening to come to Brighton" />
        </outline>
        <outline text="Food invites to send" _note="https://www.surveymonkey.com/r/G6WQWK5">
          <outline text="Sent">
            <outline text="Sue" />
            <outline text="Dave" />
            <outline text="Hattie" />
            <outline text="George" />
            <outline text="Claire Holob" />
            <outline text="Christaleni" />
            <outline text="Philip" />
            <outline text="Matthew" />
            <outline text="Simon" />
            <outline text="Eleanor" />
            <outline text="Tom" />
            <outline text="Claire" />
            <outline text="Hazel" />
            <outline text="Claire" />
            <outline text="David" />
            <outline text="Rory" />
            <outline text="James" />
            <outline text="Ann" />
            <outline text="Gill" />
          </outline>
        </outline>
        <outline text="Contact standard life about updating online details" />
        <outline text="vim /tmp/menu_choices.py work machine" />
      </outline>
      <outline _complete="true" text="#wc2019-08-26::life ">
        <outline text="Food invites to send" _note="https://www.surveymonkey.com/r/G6WQWK5">
          <outline text="Sent">
            <outline text="Sue" />
            <outline text="Dave" />
            <outline text="Hattie" />
            <outline text="George" />
            <outline text="Claire Holob" />
            <outline text="Christaleni" />
            <outline text="Philip" />
            <outline text="Matthew" />
            <outline text="Simon" />
            <outline text="Eleanor" />
            <outline text="Tom" />
            <outline text="Claire" />
            <outline text="Hazel" />
            <outline text="Claire" />
            <outline text="David" />
            <outline text="Rory" />
            <outline text="James" />
            <outline text="Ann" />
            <outline text="Gill" />
          </outline>
        </outline>
        <outline text="Contact standard life about updating online details" />
      </outline>
      <outline _complete="true" text="#wc2019-08-05::life">
        <outline _complete="true" text="Mum Fitbit strap or" />
        <outline text="Look into iterm2 python scripting interface" />
        <outline text="Contact standard life about updating online details" />
        <outline text="Buy protein" />
        <outline text="Finalise wedding outfit" />
        <outline text="Add Ann and Melitsa and Steve to evite" />
        <outline text="Text Kit re meet for drinks" />
      </outline>
      <outline _complete="true" text="#wc2019-07-22::life">
        <outline _complete="true" text="Mum Fitbit strap or" />
        <outline text="Contact standard life about updating online details" />
        <outline text="Buy protein" />
        <outline text="Order beer">
          <outline text="02037442141" />
          <outline text="2x Juicebox IPA" />
          <outline text="2x Session IPA" />
          <outline text="2x Jet Lager" />
          <outline text="2x twin outlet with chiller" />
        </outline>
        <outline text="Finalise wedding outfit" />
        <outline text="Add Ann and Melitsa and Steve to evite" />
        <outline text="Text Kit re meet for drinks" />
      </outline>
      <outline _complete="true" text="#wc2019-07-22::life">
        <outline text="Text Kit re meet for drinks" />
        <outline text="Lakes wedding weekend">
          <outline _complete="true" text="Shave" />
          <outline _complete="true" text="?Pack shaver plus charger and adaptor" />
          <outline _complete="true" text="Buy oxford shirt" />
          <outline _complete="true" text="Iron shirt(s)" />
          <outline _complete="true" text="Clothes">
            <outline _complete="true" text="4x pants" />
            <outline _complete="true" text="5x socks (inc 2x wedding)" />
            <outline _complete="true" text="4x t-shirts" />
            <outline _complete="true" text="Black shorts" />
            <outline _complete="true" text="Toiletries">
              <outline _complete="true" text="Shampoo conditioner" />
              <outline _complete="true" text="Smelly stuff x2" />
              <outline _complete="true" text="Toothbrush toothpaste" />
              <outline _complete="true" text="Hair stuff" />
              <outline _complete="true" text="Nexium" />
              <outline _complete="true" text="Suncream" />
            </outline>
            <outline _complete="true" text="Elec">
              <outline _complete="true" text="Phone charger" />
              <outline _complete="true" text="Laptop and charger" />
              <outline _complete="true" text="Portable charger" />
            </outline>
            <outline _complete="true" text="Trainers" />
            <outline _complete="true" text="?Flip flops" />
            <outline _complete="true" text="Black coat" />
            <outline _complete="true" text="Wedding">
              <outline _complete="true" text="Belt" />
              <outline _complete="true" text="Chinos" />
              <outline _complete="true" text="Oxford shirt" />
              <outline _complete="true" text="Dress shirt" />
              <outline _complete="true" text="Black tie" />
              <outline _complete="true" text="Suit jacket" />
              <outline _complete="true" text="Docs" />
            </outline>
            <outline _complete="true" text="Walking">
              <outline _complete="true" text="Walking boots" />
              <outline _complete="true" text="Walking socks" />
              <outline _complete="true" text="Bag" />
              <outline _complete="true" text="Portable charger" />
            </outline>
            <outline _complete="true" text="Shoe care kit">
              <outline text="Polish" />
              <outline text="Balm" />
              <outline text="Brush" />
            </outline>
          </outline>
          <outline text="Hotel">
            <outline text="Premier Inn Stoke Trentham Gardens, Stone Rd, Stoke-on-Trent ST4 8JG" />
          </outline>
        </outline>
        <outline text="Lara 30th bday Facebook invite" />
        <outline text="Add Ann and Melitsa and Steve to evite" />
      </outline>
      <outline _complete="true" text="#wc2019-07-08::life">
        <outline text="#kettlebells snatch test (24). 66 in 5m, finished in ~10" />
        <outline text="Jonny bday this Saturday" />
        <outline text="Lara 30th bday Facebook invite" />
        <outline text="Add Ann and Melitsa and Steve to evite" />
      </outline>
      <outline _complete="true" text="#wc2019-06-24::life">
        <outline text="Trainers I like">
          <outline text="Adidas Supercourt" />
          <outline text="Nike SB Zoom Stefan Janoski RM" />
        </outline>
        <outline text="Lara 30th bday Facebook invite" />
        <outline text="Add Ann and Melitsa and Steve to evite" />
      </outline>
      <outline _complete="true" text="#wc2019-06-03::life">
        <outline _complete="true" text="Stag packing">
          <outline _complete="true" text="Clothes">
            <outline _complete="true" text="3x pants" />
            <outline _complete="true" text="3x socks" />
            <outline _complete="true" text="3x t-shirts" />
            <outline _complete="true" text="?Shirt" />
            <outline _complete="true" text="Jumper" />
            <outline _complete="true" text="Shorts (blue ones)" />
            <outline _complete="true" text="Jeans" />
            <outline _complete="true" text="Black coat" />
            <outline _complete="true" text="Vans" />
            <outline text="Towel" />
            <outline _complete="true" text="Doc martens" />
            <outline _complete="true" text="Old vans" />
            <outline _complete="true" text="Activity stuff" />
          </outline>
          <outline text="Elec">
            <outline _complete="true" text="Phone charger" />
          </outline>
          <outline text="Toiletries">
            <outline _complete="true" text="Nexium" />
            <outline text="Toothbrush/toothpaste" />
            <outline text="Shower stuff" />
            <outline _complete="true" text="Smelly stuff" />
            <outline _complete="true" text="Hair stuff" />
          </outline>
        </outline>
        <outline text="Lara 30th bday Facebook invite" />
        <outline _complete="true" text="chubbies shorts tracking http://webtrack.dhlglobalmail.com/?trackingnumber=GM605336778100148678%0D%0A" />
        <outline _complete="true" text="Confirm Tom Mckellow numbers" />
        <outline text="Add Ann and Melitsa and Steve to evite" />
        <outline _complete="true" text="Tell Charlie no Lucas" />
      </outline>
      <outline _complete="true" text="#wc2019-05-27::life">
        <outline text="Lara 30th bday Facebook invite" />
        <outline text="chubbies shorts tracking http://webtrack.dhlglobalmail.com/?trackingnumber=GM605336778100148678%0D%0A" />
        <outline text="Confirm Tom Mckellow numbers" />
        <outline text="Add Ann and Melitsa and Steve to evite" />
      </outline>
      <outline _complete="true" text="#wc2019-05-06::life">
        <outline _complete="true" text="Call bulb about dodgy meter #todo" />
        <outline _complete="true" text="Book car into service #todo" />
        <outline text="Buy myprotein #todo" />
        <outline _complete="true" text="Car weekend away">
          <outline text="Clothes">
            <outline _complete="true" text="Pants x2" />
            <outline _complete="true" text="Socks x2" />
            <outline _complete="true" text="Tshirt x2" />
            <outline text="Jumper" />
            <outline text="Black coat" />
          </outline>
          <outline text="Toiletries">
            <outline _complete="true" text="Toothbrush" />
            <outline _complete="true" text="Toothpaste" />
            <outline _complete="true" text="Smelly" />
            <outline _complete="true" text="Hair" />
            <outline _complete="true" text="Nexium" />
          </outline>
          <outline text="Elec">
            <outline _complete="true" text="Phone charger" />
            <outline text="Earphones" />
          </outline>
        </outline>
      </outline>
      <outline _complete="true" text="#wc2019-04-29::life">
        <outline _complete="true" text="Springfest stag">
          <outline _complete="true" text="Todo">
            <outline _complete="true" text="Charge portacharger" />
            <outline _complete="true" text="Check in" />
            <outline _complete="true" text="Get boarding pass on app" />
          </outline>
          <outline _complete="true" text="Packing list">
            <outline _complete="true" text="Clothes">
              <outline _complete="true" text="2x tshirts" />
              <outline _complete="true" text="3x pants" />
              <outline _complete="true" text="3x socks" />
              <outline _complete="true" text="Jeans" />
              <outline _complete="true" text="Jumper" />
              <outline _complete="true" text="Lederhosen" />
              <outline _complete="true" text="White shirt" />
              <outline _complete="true" text="Undershorts" />
              <outline _complete="true" text="Black down coat" />
              <outline _complete="true" text="Old vans" />
              <outline _complete="true" text="Microtowel" />
            </outline>
            <outline _complete="true" text="Toiletries">
              <outline _complete="true" text="Hair stuff" />
              <outline _complete="true" text="Beard stuff" />
              <outline _complete="true" text="Smelly stuff" />
              <outline _complete="true" text="Toothbrush" />
              <outline _complete="true" text="Toothpaste" />
              <outline _complete="true" text="Mini washing stuff" />
              <outline _complete="true" text="Beard comb" />
              <outline _complete="true" text="Nexium" />
            </outline>
            <outline _complete="true" text="Electrics">
              <outline _complete="true" text="Portable charger" />
              <outline _complete="true" text="Phone charger" />
              <outline _complete="true" text="Earphones" />
              <outline _complete="true" text="Adaptor" />
            </outline>
            <outline _complete="true" text="Important">
              <outline _complete="true" text="Passport" />
            </outline>
          </outline>
        </outline>
        <outline text="Call bulb about dodgy meter #todo" />
        <outline text="Buy myprotein #todo" />
      </outline>
      <outline _complete="true" text="#wc2019-04-22::life">
        <outline text="#kettlebells 23-04-19">
          <outline text="C&amp;amp;PP 26kg 5 reps/side" />
          <outline text="50kg single arm swings 10 per side" />
          <outline text="2x20kg walking lunges, 1 length" />
          <outline text="Managed 2 rounds plus c&amp;amp;pp then nearly vomited" />
        </outline>
      </outline>
      <outline _complete="true" text="#wc2019-04-15::life">
        <outline _complete="true" text="Buy chillys bottle top #todo" />
        <outline _complete="true" text="Buy lederhosen #todo" />
        <outline text="Call bulb about dodgy meter #todo" />
        <outline text="Buy myprotein #todo" />
      </outline>
      <outline _complete="true" text="#wc2019-04-08::life">
        <outline text="#kettlebells Mon 8th">
          <outline text="Clean &amp;amp; pp" />
          <outline text="2 hand swings" />
        </outline>
        <outline text="Buy chillys bottle top #todo" />
        <outline text="Call bulb about dodgy meter #todo" />
        <outline text="Buy myprotein #todo" />
      </outline>
      <outline _complete="true" text="#wc2019-04-01::life">
        <outline _complete="true" text="Camping list">
          <outline _complete="true" text="Pack tickets #todo" />
          <outline _complete="true" text="Phone charger" />
          <outline _complete="true" text="Toiletries" />
          <outline _complete="true" text="Nexium" />
          <outline _complete="true" text="Airbed" />
          <outline _complete="true" text="Sleeping bag (buy from decathlon) #todo" />
          <outline _complete="true" text="Pump" />
          <outline _complete="true" text="Pillow" />
          <outline _complete="true" text="Camping chair" />
          <outline _complete="true" text="Toilet roll" />
          <outline _complete="true" text="Baby wipes" />
          <outline _complete="true" text="Portable charger" />
          <outline _complete="true" text="Food">
            <outline _complete="true" text="Crisps" />
            <outline _complete="true" text="Beer" />
            <outline _complete="true" text="Other snacks" />
            <outline _complete="true" text="Dinner for tonight" />
          </outline>
          <outline text="Clothes">
            <outline _complete="true" text="Thick socks" />
            <outline _complete="true" text="Tshirts x2" />
            <outline _complete="true" text="Jeans" />
            <outline _complete="true" text="Merino wool shirt" />
            <outline _complete="true" text="Gym trousers" />
            <outline _complete="true" text="Woolly jumper" />
            <outline _complete="true" text="Hat?" />
            <outline _complete="true" text="VBF boots" />
            <outline _complete="true" text="Vans for slip on" />
            <outline _complete="true" text="Thick coat in car" />
            <outline _complete="true" text="Black down coat" />
          </outline>
        </outline>
        <outline text="#kettlebells Mon 1st April">
          <outline text="Clean &amp;amp; pp">
            <outline text="26kg 5 reps each side" />
            <outline text="32kg 5 sets of 3" />
          </outline>
          <outline text="2 hand swings">
            <outline text="32kg X 10" />
            <outline text="3x50.6x10" />
          </outline>
        </outline>
        <outline _complete="true" text="Buy Kim bday present #todo" />
        <outline text="Call bulb about dodgy meter #todo" />
        <outline text="Book dr appnt #todo" />
        <outline text="Buy myprotein #todo" />
        <outline text="Chubbies shorts" />
        <outline text="New app ideas">
          <outline text="Simple input, powerful output" />
          <outline text="For what">
            <outline text="Strength training?" />
            <outline text="General training?" />
          </outline>
          <outline text="Input word, connect with linked concepts. Build tree of connections">
            <outline text="Another social network?" />
            <outline text="Knowledge resource?" />
          </outline>
          <outline text="What value to get out of app?">
            <outline text="Common interests?" />
            <outline text="Organisation?" />
            <outline text="Motivation?" />
            <outline text="Idea generation?">
              <outline text="Meld into exercise - input exercise, then generates next options in tree form?" />
              <outline text="Todo idea generation? Done X, now choose from Y or Z?" />
            </outline>
          </outline>
          <outline text="What will entice users?">
            <outline text="Simple usage" />
            <outline text="Instant gratification" />
            <outline text="Constant updates - new things to look at" />
          </outline>
          <outline text="&quot;What do you like?&quot;">
            <outline text="&quot;Beer&quot;">
              <outline text="What sort?">
                <outline text="Multi-choice &quot;IPA&quot;">
                  <outline text="Options" />
                </outline>
              </outline>
            </outline>
          </outline>
          <outline text="Generate personal visual &quot;Interest board&quot;">
            <outline text="Share with &quot;friends&quot; (social network)" />
          </outline>
          <outline text="&quot;Simple search engine&quot;">
            <outline text="&quot;beer&quot; - returns top types of beer" />
          </outline>
          <outline text="&quot;Score my life&quot;">
            <outline text="Track and continually update certain &quot;things&quot; that a user is interested in" />
          </outline>
          <outline text="Exercise based challenge generator. Challenge friends, schedule deadlines" />
          <outline text="Something to facililate meeting with friends">
            <outline text="One input box">
              <outline text="Enter guests (recognise email addresses of previous &quot;contacts&quot;)?" />
              <outline text="Enter activity (type &quot;beer&quot;, returns pubs/restaurants">
                <outline text="How to deal with location?" />
              </outline>
            </outline>
            <outline text="Keep super simple, basic account requirements" />
            <outline text="Creates event board" />
            <outline text="How to entice?">
              <outline text="Scoreboard on how often you meet. Track &quot;last met&quot; date" />
            </outline>
          </outline>
        </outline>
      </outline>
      <outline _complete="true" text="#wc2019-03-25::life">
        <outline _complete="true" text="Find cafe in Tunbridge Wells #todo">
          <outline text="The black dog" />
          <outline text="Pantiles cafe" />
        </outline>
        <outline _complete="true" text="Pay 750 off credit card #todo" />
        <outline _complete="true" text="Buy Mothers day card #todo" />
        <outline _complete="true" text="Research journey to Tunbridge Wells #todo" />
        <outline _complete="true" text="Buy milk for breakfast #todo" />
        <outline _complete="true" text="Buy coffee #todo" />
        <outline _complete="true" text="Fill up car #todo" />
        <outline _complete="true" text="Chase up Charlie on stag #todo" _note="Hi all! Apologies for pulling you all into yet another stag whatsapp group.&#10;&#10;I believe the best man (Charlie) and groomsmen have been busy putting together some preliminary plans for a weekend in June, but other than that I know nothing, so I thought I'd bring you all together, leave (at some point) and then let them put the proposal(s?) forward.&#10;&#10;Would be amazing if any of you could come to the mystery event!" />
        <outline text="Buy Kim bday present #todo" />
        <outline text="#kettlebells weds 27th">
          <outline text="C&amp;amp;push press single hand worked up to 3 sets of 3 using 32kg kb" />
          <outline text="2 hand swings">
            <outline text="36x10" />
            <outline text="50.6 3x10" />
          </outline>
          <outline text="Walking front squats">
            <outline text="2x16kg by side" />
            <outline text="2.5 lengths then right glute cramped" />
          </outline>
          <outline text="Windmill 1x12kg static holds in stretch position">
            <outline text="3x10s hold each side" />
          </outline>
        </outline>
        <outline text="#kettlebells Mon 25th">
          <outline text="4 broken rounds">
            <outline text="Squat 2x16kg 10reps" />
            <outline text="Oh press 2x16 10reps" />
            <outline text="Swings 2 hand 36kg 8reps" />
          </outline>
        </outline>
        <outline _complete="true" text="Settle bills and outstanding ski money #todo" />
        <outline text="Call bulb about dodgy meter #todo" />
        <outline text="Book dr appnt #todo" />
        <outline _complete="true" text="Think of stag ideas and create group #todo" />
        <outline text="Send mum meatloaf recipe #todo" />
        <outline text="Buy myprotein #todo" />
      </outline>
      <outline _complete="true" text="#wc2019-03-18::life">
        <outline _complete="true" text="Book in MOT and service #todo" />
        <outline _complete="true" text="Buy Liz headphones #todo" />
        <outline text="Settle bills and outstanding ski money #todo" />
        <outline text="Call bulb about dodgy meter #todo" />
        <outline _complete="true" text="Look at car insurance renewal and service #todo">
          <outline _complete="true" text="Car insurance">
            <outline text="Renewed with general accident" />
          </outline>
          <outline text="Service" />
        </outline>
        <outline text="Book dr appnt #todo" />
        <outline text="Think of stag ideas and create group #todo" />
      </outline>
      <outline _complete="true" text="#wc2019-03-04::life">
        <outline _complete="true" text="Ski todo">
          <outline text="Packing">
            <outline _complete="true" text="Normal">
              <outline _complete="true" text="Pants x8">
                <outline _complete="true" text="1 more" />
              </outline>
              <outline _complete="true" text="Socks x8 max" />
              <outline _complete="true" text="T-shirts (inc smarter) x8 max" />
              <outline _complete="true" text="Flannel shirt? x1" />
              <outline _complete="true" text="Jeans x1" />
              <outline _complete="true" text="Joggers x1" />
              <outline _complete="true" text="Woolley jumper" />
              <outline _complete="true" text="Docs" />
              <outline _complete="true" text="Walking boots" />
            </outline>
            <outline _complete="true" text="Skiing">
              <outline _complete="true" text="Trousers" />
              <outline _complete="true" text="Belt" />
              <outline _complete="true" text="Jacket" />
              <outline _complete="true" text="Thermal shirts x3" />
              <outline text="Socks x5?">
                <outline text="2 more" />
              </outline>
              <outline _complete="true" text="Under shirts?" />
              <outline _complete="true" text="Long johns" />
              <outline _complete="true" text="Goggles" />
              <outline _complete="true" text="Red bag" />
            </outline>
            <outline _complete="true" text="Misc">
              <outline _complete="true" text="Passport" />
              <outline _complete="true" text="Water bottle" />
              <outline _complete="true" text="Towel" />
            </outline>
            <outline _complete="true" text="Elec">
              <outline _complete="true" text="Laptop + charger" />
              <outline _complete="true" text="Switch + charger" />
              <outline _complete="true" text="Phone charger" />
              <outline _complete="true" text="Adaptor + multiway" />
              <outline _complete="true" text="Earphones" />
            </outline>
            <outline _complete="true" text="Toiletries">
              <outline _complete="true" text="Toothbrush/toothpaste" />
              <outline _complete="true" text="Deodorant/aftershave" />
              <outline _complete="true" text="Shampoo/cond/shower gel" />
              <outline _complete="true" text="Nexium" />
              <outline _complete="true" text="Beard comb and oil" />
              <outline _complete="true" text="Hair stuff" />
            </outline>
          </outline>
          <outline _complete="true" text="Treat doc martens" />
          <outline _complete="true" text="Put on clothes wash" />
          <outline _complete="true" text="Pack headphones" />
          <outline _complete="true" text="Cut nails" />
          <outline _complete="true" text="Shave/tidy" />
          <outline _complete="true" text="Charge portable charger" />
        </outline>
        <outline text="Settle bills and outstanding ski money #todo" />
        <outline text="Call bulb about dodgy meter #todo" />
        <outline text="Look at car insurance renewal and service #todo">
          <outline _complete="true" text="Car insurance">
            <outline text="Renewed with general accident" />
          </outline>
          <outline text="Service" />
        </outline>
        <outline text="Book dr appnt #todo" />
        <outline text="Think of stag ideas and create group #todo" />
      </outline>
      <outline _complete="true" text="#wc2019-02-25::life">
        <outline text="Settle bills and outstanding ski money #todo" />
        <outline text="Call bulb about dodgy meter #todo" />
        <outline _complete="true" text="Order belt and switch carry case #todo" />
        <outline text="Look at car insurance renewal and service #todo" />
        <outline text="Ski todo" />
        <outline text="Book dr appnt #todo" />
        <outline text="Think of stag ideas and create group #todo" />
      </outline>
      <outline _complete="true" text="#wc2019-02-11::life">
        <outline _complete="true" text="Pay pieminister #todo" />
        <outline text="Book dr appnt #todo" />
        <outline text="Create groomsmen group on whatsapp? #todo" />
        <outline text="Think of stag ideas and create group #todo" />
      </outline>
      <outline _complete="true" text="#wc2019-02-04::life">
        <outline text="Book dr appnt #todo" />
        <outline _complete="true" text="Call granny #todo" />
        <outline _complete="true" text="Ask Matt re groomsman #todo" />
        <outline text="Create groomsmen group on whatsapp? #todo" />
        <outline text="Think of stag ideas and create group #todo" />
      </outline>
      <outline _complete="true" text="#wc2019-01-28::life">
        <outline _complete="true" text="Secret weekend">
          <outline text="Clothes">
            <outline _complete="true" text="Pants x3" />
            <outline _complete="true" text="Socks x3" />
            <outline _complete="true" text="Tshirts x3" />
            <outline _complete="true" text="Fred jumper" />
            <outline _complete="true" text="Jeans" />
            <outline text="DMs" />
            <outline text="Coat" />
            <outline _complete="true" text="Gloves" />
          </outline>
          <outline text="Elec">
            <outline _complete="true" text="Phone charger" />
            <outline _complete="true" text="Adaptor" />
            <outline _complete="true" text="Portable charger (plus cable)" />
          </outline>
          <outline _complete="true" text="Toiletries">
            <outline _complete="true" text="Nexium" />
            <outline _complete="true" text="Toothbrush" />
            <outline _complete="true" text="Toothpaste" />
            <outline _complete="true" text="Smellies x2" />
            <outline _complete="true" text="Hair stuff" />
            <outline _complete="true" text="Beard stuff" />
            <outline _complete="true" text="Beard comb" />
            <outline _complete="true" text="Toe stuff" />
          </outline>
          <outline text="Misc">
            <outline _complete="true" text="Passports" />
            <outline _complete="true" text="Boarding passes" />
            <outline _complete="true" text="?Hackers delight" />
          </outline>
        </outline>
        <outline text="Book dr appnt #todo" />
        <outline _complete="true" text="Investigate storage on EC2 instance (storage)" _note="https://console.aws.amazon.com/billing/home?region=eu-west-1#/bills?year=2019&amp;amp;month=1" />
        <outline _complete="true" text="Call barclaycard #todo" />
      </outline>
      <outline _complete="true" text="#wc2019-01-21::life">
        <outline _complete="true" text="Pack more chalk #todo" />
        <outline text="#bw::19-01-24 #am 119.75kg" />
        <outline text="Book dr appnt #todo" />
        <outline text="Investigate storage on EC2 instance (storage)" _note="https://console.aws.amazon.com/billing/home?region=eu-west-1#/bills?year=2019&amp;amp;month=1" />
        <outline text="Call barclaycard #todo" />
        <outline text="#bw::19-01-21 #am 120kg" />
        <outline _complete="true" text="Skistag prep">
          <outline text="Charge porta-charger" />
          <outline text="Charge earphones" />
          <outline _complete="true" text="Buy long-johns" />
          <outline _complete="true" text="Download films" />
          <outline text="Packing">
            <outline text="Normal clothes">
              <outline _complete="true" text="3 pants" />
              <outline _complete="true" text="3 socks" />
              <outline _complete="true" text="Comfy trousers" />
              <outline _complete="true" text="Jeans" />
              <outline _complete="true" text="Jumper" />
              <outline _complete="true" text="4 shirts">
                <outline text="2 for going out" />
                <outline text="2 under ski" />
              </outline>
              <outline _complete="true" text="Desert boots" />
              <outline _complete="true" text="Boots" />
              <outline _complete="true" text="Coat" />
              <outline _complete="true" text="Mini bag" />
            </outline>
            <outline _complete="true" text="Ski clothes">
              <outline _complete="true" text="Long johns" />
              <outline _complete="true" text="Trousers" />
              <outline _complete="true" text="3x thermal tops" />
              <outline _complete="true" text="Northface jacket" />
              <outline _complete="true" text="2x ski socks" />
              <outline _complete="true" text="Goggles" />
              <outline _complete="true" text="Gloves" />
            </outline>
            <outline text="Toiletries">
              <outline _complete="true" text="Toothbrush" />
              <outline _complete="true" text="Toothpaste" />
              <outline _complete="true" text="Shampoo/conditioner" />
              <outline _complete="true" text="Showergel" />
              <outline _complete="true" text="Hair stuff" />
              <outline _complete="true" text="Beard stuff" />
              <outline _complete="true" text="Smelly stuff" />
              <outline _complete="true" text="Nexium" />
            </outline>
            <outline text="Electrical">
              <outline _complete="true" text="Phone charger" />
              <outline _complete="true" text="Adaptor" />
              <outline _complete="true" text="Earphones" />
            </outline>
            <outline text="Important">
              <outline _complete="true" text="Download app with boarding pass" />
              <outline _complete="true" text="Passport" />
            </outline>
          </outline>
        </outline>
        <outline _complete="true" text="Register warranty for instant pot #todo" />
        <outline _complete="true" text="Register warranty for hoover #todo" />
      </outline>
      <outline _complete="true" text="#wc2019-01-14::life">
        <outline text="Book dr appnt #todo" />
        <outline text="Investigate storage on EC2 instance (storage)" _note="https://console.aws.amazon.com/billing/home?region=eu-west-1#/bills?year=2019&amp;amp;month=1" />
        <outline text="Call barclaycard #todo" />
        <outline text="#bw::19-01-18 #am 120kg" />
        <outline _complete="true" text="Skistag prep">
          <outline text="Charge porta-charger" />
          <outline text="Charge earphones" />
          <outline _complete="true" text="Buy long-johns" />
          <outline _complete="true" text="Download films" />
          <outline text="Packing">
            <outline text="Normal clothes">
              <outline _complete="true" text="3 pants" />
              <outline _complete="true" text="3 socks" />
              <outline _complete="true" text="Comfy trousers" />
              <outline _complete="true" text="Jeans" />
              <outline _complete="true" text="Jumper" />
              <outline _complete="true" text="4 shirts">
                <outline text="2 for going out" />
                <outline text="2 under ski" />
              </outline>
              <outline _complete="true" text="Desert boots" />
              <outline _complete="true" text="Boots" />
              <outline _complete="true" text="Coat" />
              <outline _complete="true" text="Mini bag" />
            </outline>
            <outline _complete="true" text="Ski clothes">
              <outline _complete="true" text="Long johns" />
              <outline _complete="true" text="Trousers" />
              <outline _complete="true" text="3x thermal tops" />
              <outline _complete="true" text="Northface jacket" />
              <outline _complete="true" text="2x ski socks" />
              <outline _complete="true" text="Goggles" />
              <outline _complete="true" text="Gloves" />
            </outline>
            <outline text="Toiletries">
              <outline _complete="true" text="Toothbrush" />
              <outline _complete="true" text="Toothpaste" />
              <outline _complete="true" text="Shampoo/conditioner" />
              <outline _complete="true" text="Showergel" />
              <outline _complete="true" text="Hair stuff" />
              <outline _complete="true" text="Beard stuff" />
              <outline _complete="true" text="Smelly stuff" />
              <outline _complete="true" text="Nexium" />
            </outline>
            <outline text="Electrical">
              <outline _complete="true" text="Phone charger" />
              <outline _complete="true" text="Adaptor" />
              <outline _complete="true" text="Earphones" />
            </outline>
            <outline text="Important">
              <outline _complete="true" text="Download app with boarding pass" />
              <outline _complete="true" text="Passport" />
            </outline>
          </outline>
        </outline>
        <outline _complete="true" text="Register warranty for instant pot #todo" />
        <outline _complete="true" text="Register warranty for hoover #todo" />
      </outline>
      <outline _complete="true" text="#wc2019-01-07::life">
        <outline text="Book dr appnt #todo" />
        <outline text="Investigate storage on EC2 instance (storage)" _note="https://console.aws.amazon.com/billing/home?region=eu-west-1#/bills?year=2019&amp;amp;month=1" />
        <outline text="Call barclaycard #todo" />
        <outline _complete="true" text="Skistag prep">
          <outline text="Charge porta-charger" />
          <outline text="Charge earphones" />
          <outline _complete="true" text="Buy long-johns" />
          <outline _complete="true" text="Download films" />
          <outline text="Packing">
            <outline text="Normal clothes">
              <outline _complete="true" text="3 pants" />
              <outline _complete="true" text="3 socks" />
              <outline _complete="true" text="Comfy trousers" />
              <outline _complete="true" text="Jeans" />
              <outline _complete="true" text="Jumper" />
              <outline _complete="true" text="4 shirts">
                <outline text="2 for going out" />
                <outline text="2 under ski" />
              </outline>
              <outline _complete="true" text="Desert boots" />
              <outline _complete="true" text="Boots" />
              <outline _complete="true" text="Coat" />
              <outline _complete="true" text="Mini bag" />
            </outline>
            <outline _complete="true" text="Ski clothes">
              <outline _complete="true" text="Long johns" />
              <outline _complete="true" text="Trousers" />
              <outline _complete="true" text="3x thermal tops" />
              <outline _complete="true" text="Northface jacket" />
              <outline _complete="true" text="2x ski socks" />
              <outline _complete="true" text="Goggles" />
              <outline _complete="true" text="Gloves" />
            </outline>
            <outline text="Toiletries">
              <outline _complete="true" text="Toothbrush" />
              <outline _complete="true" text="Toothpaste" />
              <outline _complete="true" text="Shampoo/conditioner" />
              <outline _complete="true" text="Showergel" />
              <outline _complete="true" text="Hair stuff" />
              <outline _complete="true" text="Beard stuff" />
              <outline _complete="true" text="Smelly stuff" />
              <outline _complete="true" text="Nexium" />
            </outline>
            <outline text="Electrical">
              <outline _complete="true" text="Phone charger" />
              <outline _complete="true" text="Adaptor" />
              <outline _complete="true" text="Earphones" />
            </outline>
            <outline text="Important">
              <outline _complete="true" text="Download app with boarding pass" />
              <outline _complete="true" text="Passport" />
            </outline>
          </outline>
        </outline>
        <outline text="#bw::2019-01-09 #pm 120.75kg" />
        <outline text="Register warranties for instant pot and hoover #todo" />
      </outline>
      <outline _complete="true" text="#wc2018-12-31::life">
        <outline text="Book dr appnt #todo" />
        <outline _complete="true" text="Follow up seat change with BA (think it's fine, but double check) #todo" />
        <outline text="StrengthApp #proj-strengthapp">
          <outline text="Open sourcing">
            <outline text="App outstanding">
              <outline _complete="true" text="Check for secret keys in repo history etc #todo" />
              <outline _complete="true" text="Move all repos to github #todo" />
              <outline _complete="true" text="Update READMEs #todo">
                <outline _complete="true" text="Note that current API is mangled to support old frontend" />
              </outline>
              <outline text="Signup page #todo" />
              <outline _complete="true" text="Logout button #todo" />
              <outline _complete="true" text="Remove warning about accepting new members #todo" />
              <outline text="No option to add secondary lifts without main #todo">
                <outline text="Improved lift adding in general (only display what can be added #todo" />
              </outline>
              <outline text="Fix desired set-rep endpoint" />
              <outline text="Edit work-required UI?" />
              <outline text="Check if summary sql query is actually doing what it's supposed to do" />
            </outline>
            <outline text="Choose license #todo" _note="https://choosealicense.com/">
              <outline text="openpowerlifting license https://gitlab.com/openpowerlifting/opl-data/blob/master/LICENSE" />
            </outline>
            <outline text="Write basic roadmap">
              <outline text="Accessory lifts and contribution to main lifts" />
              <outline text="Suggested ramping sets/reps" />
              <outline text="Intelligent adaption of work required">
                <outline text="Single AMRAP set a week per lift?" />
                <outline text="AMRAP attempt, miss X amount and therefore increase work required?" />
              </outline>
              <outline text="Datatables frontend?" />
              <outline text="Improvements to &quot;work&quot; algorithm" />
            </outline>
            <outline text="Blog post">
              <outline text="Add screen of required reps for new projected orm's #todo" />
              <outline text="Clean up &quot;Does it work&quot; section #todo" />
              <outline text="Write &quot;What next section&quot; #todo" />
            </outline>
            <outline text="Post on Reddit" />
            <outline text="Approach openpowerlifting?">
              <outline text="Ask about how to go about getting traction" />
              <outline text="Perhaps some contributors will be interested?" />
            </outline>
          </outline>
        </outline>
        <outline _complete="true" text="Fuzzy note #proj-fuzzynote">
          <outline text="General refactor of existing code #todo" />
          <outline text="Add expand/collapse functionality for nodes #todo">
            <outline text="Extend builtin xml types?" />
            <outline text="Create custom node type (will require manual tree parsing)?" />
          </outline>
          <outline text="Python to cpp" _note="http://cs.slu.edu/~goldwamh/publications/python2cpp.pdf" />
        </outline>
        <outline text="Investigate storage on EC2 instance (storage)" _note="https://console.aws.amazon.com/billing/home?region=eu-west-1#/bills?year=2019&amp;amp;month=1" />
        <outline text="Call barclaycard #todo" />
        <outline text="#bw::2019-01-04 #am 121kg" />
        <outline text="#bw::2019-01-02 #am 122.25kg no shoes" />
      </outline>
      <outline _complete="true" text="#wc2018-12-24">
        <outline text="Book dr appnt #todo" />
        <outline _complete="true" text="Consider alternative to AWS as costed 45 quid last month #todo" />
        <outline text="Follow up seat change with BA (think it's fine, but double check) #todo" />
        <outline _complete="true" text="Get ski stuff from home #todo" />
        <outline text="StrengthApp #proj-strengthapp">
          <outline text="Open sourcing">
            <outline text="App outstanding">
              <outline _complete="true" text="Check for secret keys in repo history etc #todo" />
              <outline _complete="true" text="Move all repos to github #todo" />
              <outline _complete="true" text="Update READMEs #todo">
                <outline _complete="true" text="Note that current API is mangled to support old frontend" />
              </outline>
              <outline _complete="true" text="Signup page #todo" />
              <outline _complete="true" text="Logout button #todo" />
              <outline _complete="true" text="Remove warning about accepting new members #todo" />
              <outline _complete="true" text="No option to add secondary lifts without main #todo">
                <outline _complete="true" text="Improved lift adding in general (only display what can be added) #todo" />
              </outline>
              <outline _complete="true" text="Fix desired set-rep endpoint #todo" />
              <outline text="Edit work-required (and one rm) UI #todo">
                <outline text="Add tick box to enable/disable lifts #todo" />
              </outline>
              <outline text="APPLY MIGRATION TO PROD #todo" />
              <outline text="Add note to &quot;add lift&quot; detailing adding primary unlocks additional #todo" />
              <outline text="Improve front end build target to prevent need to auto update html #todo" />
              <outline text="&quot;Make migration&quot; script #todo" />
              <outline text="Check if summary sql query is actually doing what it's supposed to do #todo" />
              <outline text="Consider better (more persistent) authentication strategy, avoid daily logins. #todo" />
              <outline _complete="true" text="Update work required on all related lifts automatically #todo" />
            </outline>
            <outline text="Choose license #todo" _note="https://choosealicense.com/">
              <outline text="openpowerlifting license https://gitlab.com/openpowerlifting/opl-data/blob/master/LICENSE" />
            </outline>
            <outline text="Write basic roadmap">
              <outline text="Accessory lifts and contribution to main lifts" />
              <outline text="Suggested ramping sets/reps" />
              <outline text="Intelligent adaption of work required">
                <outline text="Single AMRAP set a week per lift?" />
                <outline text="AMRAP attempt, miss X amount and therefore increase work required?" />
              </outline>
              <outline text="Datatables frontend?" />
              <outline text="Improvements to &quot;work&quot; algorithm" />
            </outline>
            <outline text="Blog post">
              <outline text="Add screen of required reps for new projected orm's #todo" />
              <outline text="Clean up &quot;Does it work&quot; section #todo" />
              <outline text="Write &quot;What next section&quot; #todo" />
            </outline>
            <outline text="Docs on app">
              <outline text="How to select work required. Give example work_required's for a few well known programs" />
            </outline>
            <outline text="Post on Reddit" />
            <outline text="Approach openpowerlifting?">
              <outline text="Ask about how to go about getting traction" />
              <outline text="Perhaps some contributors will be interested?" />
            </outline>
          </outline>
          <outline text="Tools">
            <outline text="Pull database">
              <outline text="Drop and recreate database locally" />
              <outline text="Tunnel" />
              <outline text="`pg_dump -U strengthapp_user -d strengthapp_db -h 127.0.0.1 -p 5433 -f strength_dump.sql`" />
              <outline text="`psql strength_db &amp;lt; strength_dump.sql`" />
              <outline text="`@somthing`" />
            </outline>
          </outline>
        </outline>
        <outline text="Fuzzy note #proj-fuzzynote">
          <outline text="General refactor of existing code #todo" />
          <outline text="Add expand/collapse functionality for nodes #todo">
            <outline text="Extend builtin xml types?" />
            <outline text="Create custom node type (will require manual tree parsing)?" />
          </outline>
          <outline text="Python to cpp" _note="http://cs.slu.edu/~goldwamh/publications/python2cpp.pdf" />
        </outline>
      </outline>
      <outline _complete="true" text="#wc2018-12-17">
        <outline text="Book dr appnt #todo" />
        <outline text="Fuzzy note #proj-fuzzynote">
          <outline text="General refactor of existing code #todo" />
          <outline text="Add expand/collapse functionality for nodes #todo">
            <outline text="Extend builtin xml types?" />
            <outline text="Create custom node type (will require manual tree parsing)?" />
          </outline>
          <outline text="Python to cpp" _note="http://cs.slu.edu/~goldwamh/publications/python2cpp.pdf" />
        </outline>
        <outline text="Consider alternative to AWS as costed 45 quid last month #todo" />
        <outline _complete="true" text="Renew locker at LSBU #todo" />
        <outline text="Follow up seat change with BA (think it's fine, but double check) #todo" />
        <outline _complete="true" text="Present buying">
          <outline _complete="true" text="Mum bday">
            <outline text="Champneys day treatment" />
          </outline>
          <outline text="Xmas">
            <outline text="Dad" />
            <outline text="Mum" />
            <outline _complete="true" text="Kim">
              <outline _complete="true" text="Running trainers nike size 7" />
            </outline>
            <outline _complete="true" text="Liz">
              <outline _complete="true" text="Toilet paper origami" />
              <outline _complete="true" text="Jumper" />
            </outline>
            <outline text="Kelvin">
              <outline text="Whiskey?" />
              <outline text="Uniqlo jumper?" />
            </outline>
            <outline _complete="true" text="Secret santa for Matt">
              <outline _complete="true" text="Trump poetry book" />
            </outline>
          </outline>
        </outline>
        <outline _complete="true" text="Add pizza slice to tab #todo" />
        <outline text="Get ski stuff from home #todo" />
        <outline text="#bw::2018-12-21 #pm 121kg w/out shoes" />
        <outline _complete="true" text="Packing">
          <outline text="Nexium" />
          <outline text="Iglu" />
          <outline text="Laptops" />
          <outline text="Switch?" />
          <outline text="Gym stuff?" />
        </outline>
        <outline _complete="true" text="Food bin out #todo" />
        <outline _complete="true" text="Change bed sheets #todo" />
      </outline>
      <outline _complete="true" text="#wc2018-12-03">
        <outline _complete="true" text="Contest flight seat issues #todo">
          <outline text="Case ID 1595920" _note="http://www.care.flysas.com/SelfService/FeedbackForm/CaseStatus?CaseID=5676aad0-119e-439a-a7aa-de2baad7a971" />
          <outline _complete="true" text="london oslo both" />
          <outline _complete="true" text="oslo bodo 1" />
          <outline _complete="true" text="bodo oslo 1" />
          <outline _complete="true" text="oslo london 1 £17" />
          <outline _complete="true" text="Main website -&amp;gt; customer care -&amp;gt; complaints &amp;amp; compliments" />
        </outline>
        <outline _complete="true" text="Contact Ring about resizing #todo" />
        <outline _complete="true" text="Follow up on ring resize #todo" />
        <outline text="Book dr appnt #todo" />
        <outline _complete="true" text="Sort bill split #todo" />
        <outline _complete="true" text="Buy dishwasher cleaner and salt #todo" />
        <outline text="Fuzzy note #proj-fuzzynote">
          <outline text="General refactor of existing code #todo" />
          <outline text="Add expand/collapse functionality for nodes #todo">
            <outline text="Extend builtin xml types?" />
            <outline text="Create custom node type (will require manual tree parsing)?" />
          </outline>
          <outline text="Python to cpp" _note="http://cs.slu.edu/~goldwamh/publications/python2cpp.pdf" />
        </outline>
        <outline text="Consider alternative to AWS as costed 45 quid last month #todo" />
        <outline text="Renew locker at LSBU #todo" />
        <outline text="Follow up seat change with BA (think it's fine, but double check) #todo" />
        <outline text="Present buying">
          <outline _complete="true" text="Mum bday">
            <outline text="Champneys day treatment" />
          </outline>
          <outline text="Xmas">
            <outline text="Happy socks for everyone" />
            <outline text="Dad" />
            <outline text="Mum" />
            <outline _complete="true" text="Kim">
              <outline _complete="true" text="Running trainers nike size 7" />
            </outline>
            <outline _complete="true" text="Liz">
              <outline _complete="true" text="Toilet paper origami" />
              <outline _complete="true" text="Jumper" />
            </outline>
            <outline text="Kelvin">
              <outline text="Whiskey?" />
              <outline text="Uniqlo jumper?" />
            </outline>
            <outline _complete="true" text="Secret santa for Matt">
              <outline _complete="true" text="Trump poetry book" />
            </outline>
          </outline>
        </outline>
        <outline text="#bw::2018-12-09 #midday 119.5 w/out shoes (121 with)" />
        <outline _complete="true" text="Food bin out #todo" />
        <outline _complete="true" text="Change bed sheets #todo" />
        <outline _complete="true" text="Cut nails #todo" />
        <outline text="Tea building mailroom code C3568Z" />
      </outline>
      <outline _complete="true" text="#wc2018-11-26">
        <outline _complete="true" text="Meter reading for electricity #todo" />
        <outline _complete="true" text="Order new laces for gym shoes #todo" />
        <outline _complete="true" text="Holiday checklist">
          <outline text="Check in on flights?">
            <outline text="Check in opens 22 hours before" />
            <outline _complete="true" text="Check ferry" />
          </outline>
          <outline _complete="true" text="Pack">
            <outline _complete="true" text="Clothes">
              <outline text="Jeans" />
              <outline _complete="true" text="Joggers?" />
              <outline _complete="true" text="3x tshirts" />
              <outline text="Green jumper" />
              <outline _complete="true" text="Thermal white layer" />
              <outline _complete="true" text="3x pants and socks" />
            </outline>
            <outline _complete="true" text="Elec">
              <outline _complete="true" text="Phone charger" />
              <outline _complete="true" text="Adaptor" />
              <outline _complete="true" text="Portable charger" />
              <outline _complete="true" text="Earphones" />
            </outline>
            <outline _complete="true" text="Toiletries">
              <outline _complete="true" text="Toothbrush" />
              <outline _complete="true" text="Shower stuff" />
              <outline _complete="true" text="Nexium" />
            </outline>
          </outline>
          <outline _complete="true" text="Book taxi" />
          <outline _complete="true" text="Wash clothes (maybe)" />
          <outline _complete="true" text="Charge portable charger" />
          <outline _complete="true" text="Download films" />
          <outline _complete="true" text="To buy at airport">
            <outline text="Shower gel" />
            <outline text="Shampoo/conditioner?" />
            <outline text="Face wash" />
            <outline text="Toothpaste" />
          </outline>
          <outline text="Number to call on arrival +47 90363616" />
          <outline _complete="true" text="Tidy Kitchen" />
          <outline _complete="true" text="Shave" />
          <outline _complete="true" text="Cut nails" />
        </outline>
        <outline _complete="true" text="Text ring to say thanks #todo" />
      </outline>
      <outline _complete="true" text="#wc2018-11-19">
        <outline _complete="true" text="Ensure meals confirmed and supplies can be bought #todo #manshausen">
          <outline text="Buy from Bodo" />
        </outline>
        <outline _complete="true" text="Chase up earin on issues with earbuds (separate to capsule issues) #todo" />
        <outline _complete="true" text="Moisturise shoes #todo" />
      </outline>
      <outline _complete="true" text="#wc2018-11-12">
        <outline _complete="true" text="Get back to mansh about meals and activities #todo #manshausen">
          <outline text="Emailed confirmation meals on Saturday and Sunday night." />
          <outline text="Enquired about buying supplies for lunch times." />
        </outline>
        <outline _complete="true" text="Book stag flights #todo">
          <outline text="Friday April 26th - Sunday April 28th" />
          <outline text="" />
        </outline>
        <outline _complete="true" text="Update earin on other issues #todo">
          <outline text="Emailed 16th Nov regarding ongoing sound issues" />
        </outline>
      </outline>
    </outline>
  </outline>
  <outline _complete="true" text="StrengthApp #proj-strengthapp">
    <outline text="Release">
      <outline text="App outstanding">
        <outline _complete="true" text="Check for secret keys in repo history etc #todo" />
        <outline _complete="true" text="Move all repos to github #todo" />
        <outline _complete="true" text="Update READMEs #todo">
          <outline _complete="true" text="Note that current API is mangled to support old frontend" />
        </outline>
        <outline _complete="true" text="Signup page #todo" />
        <outline _complete="true" text="Logout button #todo" />
        <outline _complete="true" text="Remove warning about accepting new members #todo" />
        <outline _complete="true" text="No option to add secondary lifts without main #todo">
          <outline text="Improved lift adding in general (only display what can be added #todo" />
        </outline>
        <outline _complete="true" text="Fix desired set-rep endpoint" />
        <outline text="Edit work-required UI to group related lifts #todo" />
        <outline _complete="true" text="Check if summary sql query is actually doing what it's supposed to do #todo" />
        <outline text="Option to send weight for remaining sets #todo" />
        <outline text="Smooth out work_performance algorithm so it falls more consistently #todo">
          <outline text="Add days work and then drop to next day, rather than adding work, multiplying work loss and applying straight up." _note="At present, there are dramatic drops per day caused by multiple historic days zeroing simultaneously" />
        </outline>
        <outline text="Add &quot;intensity&quot; metric to lifts, along with work_required, i.e. balance the average suggested intensity (of the given rep max) #todo" _note="At the mo, the default is 83%, should be easy enough to change" />
      </outline>
      <outline text="Backlog">
        <outline text="Strengthapp input box reason for changing 1rm or work #todo" />
        <outline text="Beltless lift tickbox? #todo" />
        <outline text="Gamification as a concept #todo">
          <outline text="Beat previous &quot;score&quot;, aka achieve stronger result" />
          <outline text="&quot;choose game&quot; -&amp;gt; &quot;choose lift&quot;" />
        </outline>
        <outline text="Fuzzy search add lifts #todo" />
      </outline>
      <outline text="Choose license #todo" _note="https://choosealicense.com/">
        <outline text="openpowerlifting license https://gitlab.com/openpowerlifting/opl-data/blob/master/LICENSE" />
      </outline>
      <outline text="Write basic roadmap">
        <outline text="Accessory lifts and contribution to main lifts" />
        <outline text="Suggested ramping sets/reps" />
        <outline text="Intelligent adaption of work required">
          <outline text="Single AMRAP set a week per lift?" />
          <outline text="AMRAP attempt, miss X amount and therefore increase work required?" />
        </outline>
        <outline text="Datatables frontend?" />
        <outline text="Improvements to &quot;work&quot; algorithm" />
      </outline>
      <outline text="Blog post">
        <outline text="Add screen of required reps for new projected orm's #todo" />
        <outline text="Clean up &quot;Does it work&quot; section #todo" />
        <outline text="Write &quot;What next section&quot; #todo" />
      </outline>
      <outline text="Post on Reddit" />
      <outline text="Approach openpowerlifting?">
        <outline text="Ask about how to go about getting traction" />
        <outline text="Perhaps some contributors will be interested?" />
      </outline>
    </outline>
  </outline>
  <outline _complete="true" text="Wedding planning #wedding" _note="https://docs.google.com/spreadsheets/d/1Otw_MtaGlSk1uqD7_isfUFoZW_BnZfkQV4_9ZnBwVic/edit#gid=0">
    <outline _complete="true" text="Venues">
      <outline _complete="true" text="Bath baths" _note="Extra info?" />
      <outline text="London">
        <outline text="Ceremony">
          <outline text="Marylebone Townhall" />
          <outline text="https://www.theoldfinsburytownhall.co.uk/" />
          <outline text="Holborn Town Hall" />
          <outline text="Core Clapton £3600 (inc VAT), ceremony (£600 for registrar) and reception, BYOB, disabled access https://www.tagvenue.com/rooms/london/4935/core-clapton/old-parish-hall?event-offer=wedding#room-map" />
          <outline text="Hackney town hall £900 room &amp;amp; registrar" />
        </outline>
        <outline text="Reception">
          <outline _complete="true" text="The Knights Templar - https://www.jdwetherspoon.com/pubs/all-pubs/england/london/the-knights-templar-near-fleet-street">
            <outline text="Wetherspoons! Might be mad cheap" />
          </outline>
          <outline _complete="true" text="St Barts Brewery - https://www.tagvenue.com/rooms/london/2067/st-barts-brewery/whole-venue?event-offer=wedding">
            <outline text="Two floors (mezzanine floor), nice modern bar/gastro pub" />
            <outline text="Up to 250 guests, unsure about eating numbers. Might be limited in space." />
          </outline>
          <outline _complete="true" text="Swan wharf - https://www.tagvenue.com/rooms/london/2246/swan-wharf/stable-b">
            <outline text="Dining up to 80?? Double check. Up to 300 standing." />
            <outline text="BYOB" />
            <outline text="From £1000/day" />
            <outline text="Lots of outdoor space" />
          </outline>
          <outline _complete="true" text="Hoxton Arches http://www.hoxtonarches.com/ £3540 ">
            <outline text="From £2000/day" />
            <outline text="Up to 120 people dining, 280 people standing" />
            <outline text="Right next to Hoxton Station" />
            <outline text="BYOB" />
            <outline text="Approved caterers only, allows external catering?? Unsure what situation here is" />
            <outline text="Restrictions on band" _note="2019-01-03 Email from Laila Coupry via tagvenue:&#10;&quot;Hi Kimberley,&#10;If its small band no brass band and accoustic thats fine.&#10;They will need to play couple of hours before 10pm then.&#10;Laila&quot;" />
          </outline>
          <outline text="Old Parish Hall at Core Clapton - https://www.coreclapton.org/event-space">
            <outline text="£3000 all in" />
            <outline text="Main hall, entrance hall and outdoor space." />
            <outline text="Main hall 180 seated space. Entry 130 standing (plenty of overall room)" />
            <outline text="No corkage, BYOB" />
            <outline text="Licensed to do ceremonies" />
            <outline text="No catering restrictions. Large kitchen on site." />
            <outline text="Wedding brochure - https://docs.wixstatic.com/ugd/4bf0c3_800065a1d0ad4d9984251b552592c0cd.pdf" />
          </outline>
          <outline _complete="true" text="Hoxton Docks £6000 til 11pm £8000 til 1am https://www.venuescanner.com/london/hoxton-docks/atrium" />
          <outline _complete="true" text="Dickens Inn £2000 August, £1500 October https://www.dickensinn.co.uk/events/" />
        </outline>
      </outline>
    </outline>
    <outline _complete="true" text="Wedding TODO">
      <outline _complete="true" text="#insurance Insurance" _note="https://www.weddinginsurancesolutions.co.uk/cover-details/wedding-insurance-cover/cheap-wedding-insurance/?wpam_id=2" />
      <outline _complete="true" text="Buy spirit bottle dispenser" />
      <outline _complete="true" text="Pieminister">
        <outline _complete="true" text="Add updated schedule details in response">
          <outline text="PM staff and Nick (rather than users) turning room around during reception drinks" />
          <outline text="Kegged beer won't be available during drinks reception (as kegs will be upstairs)" />
          <outline text="2x no mash (roast veg) for main" />
        </outline>
        <outline _complete="true" text="Finalise table plan" />
        <outline _complete="true" text="Send food choices back to pieminister (3-4 weeks before)">
          <outline text="Include canape choices" />
        </outline>
        <outline _complete="true" text="Confirm no. staff meals and dietaries" />
        <outline _complete="true" text="Canape choices">
          <outline text="Chipolatas" />
          <outline text="Mac n cheese bites" />
          <outline text="Beetroot &amp;amp; goats cheese sticks" />
          <outline text="Smoked salmon blini" />
        </outline>
        <outline _complete="true" text="Starter choices">
          <outline text="Pieminister board" />
          <outline text="Charcuterie board" />
        </outline>
      </outline>
      <outline _complete="true" text="Skype meeting with Robin (videographer)" />
      <outline _complete="true" text="#important Call and confirm beer with fourpure" />
      <outline _complete="true" text="#important Book ice bins" />
      <outline _complete="true" text="#important Book ice (call)" />
      <outline _complete="true" text="#important Buy remaining 24 white wine" />
      <outline _complete="true" text="#important #sam Cufflinks?" />
      <outline _complete="true" text="#important #sam Order groomsmen socks" />
      <outline _complete="true" text="#important #sam Ties, pocket squares" />
      <outline _complete="true" text="#sam groomsmen gifts" />
      <outline _complete="true" text="Buy tesco shop" />
      <outline _complete="true" text="Confirm second shooter at groomsmen airbnb?" />
      <outline _complete="true" text="Confirmation of timings">
        <outline _complete="true" text="to send to pieminister" />
        <outline text="to photographer" />
        <outline text="to videographer" />
      </outline>
      <outline _complete="true" text="#kim schedule for Nick" />
      <outline _complete="true" text="Tidy up expenses sheet" />
      <outline _complete="true" text="Finalise how to display table plan" />
      <outline _complete="true" text="nickevenett@hotmail.com" />
      <outline _complete="true" text="Send out evening guest invites" />
      <outline _complete="true" text="Follow up with Gillie for prosecco" />
      <outline _complete="true" text="#sam Organise groomsmen's night before" />
      <outline _complete="true" text="Bar">
        <outline text="https://theportablebarcompany.com/How-to-Set-up-Bar-Party/" />
        <outline text="Beer">
          <outline text="Transport" />
          <outline text="Storage" />
          <outline text="Return equipment" />
        </outline>
        <outline text="Cider">
          <outline text="Call middle farm" />
          <outline text="https://www.middlefarm.com/cider-barn/" />
        </outline>
        <outline _complete="true" text="Order wine" />
        <outline _complete="true" text="Order spirits" />
        <outline text="Order soft drinks" />
        <outline _complete="true" text="#pending Order bar equipment off amazon">
          <outline _complete="true" text="Measurers" />
          <outline _complete="true" text="Straws" />
          <outline _complete="true" text="Napkins" />
          <outline text="Corkscrews" />
          <outline _complete="true" text="Bottle openers" />
        </outline>
        <outline text="#pending Order ice">
          <outline text="Ice delivery https://www.eskimo-ice.co.uk/">
            <outline text="Get ice between 3-4pm, time to chill but not too early" />
          </outline>
        </outline>
        <outline text="#pending Hire igloos (big ice boxes) ~£25 each. Hold approx 20 bottles wine / 4 bags ice">
          <outline text="Contacted https://www.alexanderhire.co.uk/">
            <outline text="6x https://www.alexanderhire.co.uk/equipment-hire/catering/kitchen/cooking/large-igloo-cool-box/" />
          </outline>
        </outline>
        <outline _complete="true" text="Order plastic biodegradeable cups">
          <outline text="https://www.nisbets.co.uk/" />
          <outline text="Pint" />
          <outline text="Half pint" />
        </outline>
      </outline>
      <outline _complete="true" text="Send registrar booking card to hackney council for two parking permits" />
      <outline _complete="true" text="Give Sam music choices" />
      <outline _complete="true" text="Confirm Jake MC duties" />
      <outline _complete="true" text="Furniture">
        <outline _complete="true" text="Chairman Hire" />
        <outline _complete="true" text="Cake table?" />
        <outline _complete="true" text="Collection time following day?" />
      </outline>
      <outline _complete="true" text="Disco lights">
        <outline text="Insight lighting" />
      </outline>
      <outline _complete="true" text="Hire linen" />
      <outline _complete="true" text="Buy table napkins" />
      <outline _complete="true" text="Confirm outside area decoration">
        <outline text="Solar lights" />
        <outline text="Shelter" />
      </outline>
      <outline _complete="true" text="#sam Cars">
        <outline text="Query Addison Lee" />
      </outline>
      <outline _complete="true" text="Flowers">
        <outline _complete="true" text="Visit Covent Garden flower market" />
        <outline text="Price estimate" />
        <outline text="Delivery/storage?" />
        <outline text="What tables look like?" />
        <outline text="Flowers">
          <outline text="White bouquet for Kim" />
          <outline text="White bouquet for bridesmaids" />
          <outline text="White flowers for table plan bottles" />
          <outline text="White flowers for groom" />
          <outline text="Foliage">
            <outline text="Long soft ruscus" />
            <outline text="20 bunches" />
            <outline text="40 bunches for freedom" />
            <outline text="3.50 per bunch plus vat" />
            <outline text="10 bunches per wrap" />
          </outline>
        </outline>
      </outline>
      <outline _complete="true" text="Confirm &quot;stationary&quot; e.g. what is on table when guests arrive">
        <outline text="Small card">
          <outline text="Name" />
          <outline text="Food choice" />
          <outline text="Brown card/typewriter print" />
        </outline>
        <outline text="Welsh cakes">
          <outline text="String to decorate" />
        </outline>
        <outline text="Table numbers in frames" />
      </outline>
      <outline _complete="true" text="Cake" />
      <outline _complete="true" text="Photography">
        <outline _complete="true" text="Skype meeting with Alline (photographer)">
          <outline text="10th September 7pm" />
        </outline>
        <outline _complete="true" text="Establish group shots" />
      </outline>
      <outline _complete="true" text="Confirm event bin">
        <outline text="Hackney council" />
        <outline text="Core Clapton not fussed" />
      </outline>
      <outline _complete="true" text="Check options for Pieminister" />
      <outline _complete="true" text="Follow up with Mother Kelly's">
        <outline text="2019-06-29 call, told to expect response by 2019-07-03" />
      </outline>
      <outline _complete="true" text="Save the date design @kim" />
      <outline _complete="true" text="Pay pieminister deposit @sam">
        <outline text="£2185.31" />
      </outline>
      <outline _complete="true" text="Finalise guestlist @sam @kim" />
      <outline _complete="true" text="Send save the dates @sam @kim" />
      <outline _complete="true" text="Finalise/alert best man/groomsmen @sam">
        <outline text="Charlie" />
        <outline text="Gareth" />
        <outline text="Jake" />
        <outline text="Matt" />
        <outline text="Miles" />
      </outline>
      <outline _complete="true" text="Establish playlists">
        <outline text="Downstairs" />
        <outline text="Upstairs" />
        <outline text="Diff times consideration">
          <outline text="Reception" />
          <outline text="Eating" />
          <outline text="Party" />
        </outline>
      </outline>
      <outline _complete="true" text="Things for mum and dad to bring up">
        <outline text="Wine" />
        <outline text="Wedding rings" />
        <outline text="Step ladders" />
        <outline text="Table cloths" />
        <outline text="Trunk for presents" />
      </outline>
      <outline _complete="true" text="Pay pieminister" />
      <outline _complete="true" text="Confetti" />
      <outline _complete="true" text="Finish wedding survey">
        <outline text="Awaiting response from registrar" />
        <outline _complete="true" text="Words to thank guests for coming (e.g. from abroad/great distances - details of countries)" />
        <outline _complete="true" text="What is policy of noise/disturbance from small children or babies (wait to leave or quieten, or carry on)" />
        <outline _complete="true" text="Are we doing personal vows (if yes, include on separate sheet)" />
        <outline _complete="true" text="Are we having any readings (if yes, who and what)" />
        <outline _complete="true" text="Are we having any music (if so, what)">
          <outline text="Entrance" />
          <outline text="Register signing" />
          <outline text="Exit" />
        </outline>
        <outline _complete="true" text="Any additional considerations or information that we would like to be considered for inclusion in the ceremony" />
      </outline>
    </outline>
    <outline _complete="true" text="Groomsmen dress">
      <outline text="Addresses">
        <outline text="Miles">
          <outline text="Miles Brammer, Re. Eingang, Tile-Wardenberg-Strasse 13, 10555 Berlin, Germany" />
        </outline>
        <outline text="Gareth">
          <outline text="322 Dyffryn Y Coed, Church Village, CF38 1QA" />
        </outline>
      </outline>
      <outline text="Style">
        <outline text="Black chino/trouser">
          <outline text="https://www.uniqlo.com/uk/en/product/men-kando-ultra-light-trousers-l34-415693.html?dwvar_415693_length=INL034&amp;amp;dwvar_415693_color=COL69&amp;amp;dwvar_415693_size=INS028&amp;amp;cgid=IDtrousers2381&amp;amp;hassubcat=false" />
          <outline text="https://www.uniqlo.com/uk/en/product/men-slim-fit-chino-trousers-418916.html?dwvar_418916_size=INS028&amp;amp;dwvar_418916_color=COL69&amp;amp;dwvar_418916_length=INL034" />
        </outline>
        <outline text="Jacket">
          <outline text="blue burton that I found - https://www.asos.com/burton-menswear/burton-menswear-jersey-blazer-in-light-blue/prd/12804959?clr=blue&amp;amp;colourWayId=16416610&amp;amp;SearchQuery=&amp;amp;cid=21809" />
          <outline text="Kim found blue herringbone - " _note="https://www.asos.com/asos-design/asos-design-wedding-super-skinny-wool-mix-blazer-with-large-herringbone-in-blue/prd/11401046?clr=blue&amp;amp;colourWayId=16361096&amp;amp;SearchQuery=&amp;amp;cid=21809" />
          <outline text="Double breasted blue dogtooth check - https://www.asos.com/asos-design/asos-design-wedding-slim-double-breasted-blazer-in-wool-mix-with-blue-dogtooth-check/prd/10859772?clr=blue&amp;amp;colourWayId=16365230&amp;amp;SearchQuery=&amp;amp;cid=5678" />
        </outline>
        <outline text="Shoes">
          <outline text="https://www.drmartens.com/uk/en_gb/p/25009001" />
        </outline>
      </outline>
      <outline text="Sizes">
        <outline text="Me" />
        <outline text="Charlie" _note="waist 34&#10;chest 40R&#10;leg 33" />
        <outline text="Matt" _note="waist 33/34&#10;chest 40/42&#10;neck 16.5&#10;shoe 11" />
        <outline text="Jake" _note="waist 36&#10;chest 43 (42L)&#10;neck 16.5&#10;leg 34&#10;shoe 11" />
        <outline text="Miles" _note="29/30 waist&#10;37 chest" />
        <outline text="Gareth" _note="36 waist for thigh space&#10;41 chest&#10;15 1/2 - 16 neck. 16 shirt is too big on chest" />
      </outline>
    </outline>
    <outline _complete="true" text="Draft schedule" _note="https://docs.google.com/document/d/14VkbgsJH7PICfza0HcCSyxdgYnDVJssGyUX3b-99r9A/edit?usp=sharing" />
    <outline _complete="true" text="Wedding alco volumes" _note="https://docs.google.com/spreadsheets/d/1DaBw1y56MhP1E-hhqpr7wedI-5A0iy69vX02V__v9PE/edit#gid=0" />
    <outline _complete="true" text="Nick Schedule" _note="https://docs.google.com/spreadsheets/d/136xfLEA6LvgFYDpd4rpHj7Dm7Poyu-KW6R24pQQXN-k/edit?usp=sharing_eip&amp;amp;ts=5d9dbcaf&amp;amp;urp=gmail_link" />
    <outline _complete="true" text="Stag">
      <outline text="Bros">
        <outline text="School (extended)">
          <outline text="Charlie" />
          <outline text="Matt D" />
          <outline text="Adam" />
          <outline text="Jonny" />
          <outline text="Rob" />
          <outline text="Liam" />
          <outline text="Stuart C" />
          <outline text="Chris C" />
          <outline text="John" />
          <outline text="Billy" />
          <outline text="Omer" />
        </outline>
        <outline text="Not Camping">
          <outline text="Dad" />
          <outline text="Kelvin" />
          <outline text="Paul" />
          <outline text="Kerry" />
          <outline text="Neil" />
          <outline text="Ron?" />
          <outline text="Jake" />
          <outline text="Matt" />
          <outline text="Sam" />
          <outline text="Dan" />
        </outline>
        <outline text="Uni">
          <outline text="Gareth" />
          <outline text="Miles" />
          <outline text="Kit" />
          <outline text="Tom W" />
        </outline>
        <outline text="Misc">
          <outline text="Tom S" />
          <outline text="Josh" />
          <outline text="Geraint" />
          <outline text="Ben" />
        </outline>
        <outline text="Kim home boys">
          <outline text="Nick (Laura)" />
          <outline text="Matthew (Lou)" />
        </outline>
      </outline>
    </outline>
    <outline _complete="true" text="Entertainment">
      <outline text="Music">
        <outline text="Iron Boot Scrapers" _note="https://www.youtube.com/watch?v=CEELukqdOoA&#10;">
          <outline text="£1350-1750" />
          <outline text="Song request list">
            <outline text="Start Wearing Purple (Gogol Bordello)" />
          </outline>
        </outline>
        <outline text="Iron boot scrapers https://www.youtube.com/watch?v=CEELukqdOoA £1350-1750" />
      </outline>
    </outline>
    <outline _complete="true" text="Travel">
      <outline text="http://www.oldlondonbus.co.uk/price-guide" />
    </outline>
    <outline _complete="true" text="Guests" _note="https://docs.google.com/spreadsheets/d/1Otw_MtaGlSk1uqD7_isfUFoZW_BnZfkQV4_9ZnBwVic/edit#gid=0">
      <outline text="Not camping">
        <outline text="Andrea, Paul" />
        <outline text="Kerry, Gilly" />
        <outline text="Jake, Becci, Belle" />
        <outline text="Claudia, Matt" />
        <outline text="Gabriella" />
        <outline text="Lou, Sam" />
        <outline text="Jo, Dan" />
        <outline text="Maggie, Ron" />
        <outline text="Neil, Justine, Harry, Charlie" />
        <outline text="Vici?" />
      </outline>
      <outline text="Sam fam">
        <outline text="Mum, Dad" />
        <outline text="Liz, Kelvo" />
        <outline text="Nanny, Gdad, Hazel">
          <outline text="Nanny's cousin?" />
        </outline>
        <outline text="Granny" />
        <outline text="Sue, Dave, Hattie/Partner?, George/Partner?" />
        <outline text="Mike, Spooky, Claire/partner?" />
        <outline text="Dad extended">
          <outline text="Gill">
            <outline text="Tom/Claire/Grace" />
            <outline text="Chris/Faith/Walt/Another" />
          </outline>
          <outline text="Ann">
            <outline text="Matthew/Miriam/Eleanor/Tristran (sp?)/Bryn" />
            <outline text="Simon, Rachel, Patrick, Another" />
          </outline>
          <outline text="John, Chris, Joanna/Hubby, Helen" />
          <outline text="David, Claire, James, Rory, Billy" />
          <outline text="Richard, Nic, Francesca/Carlotta" />
          <outline text="Iris" />
          <outline text="Christalleni, Philip, Eleanor" />
          <outline text="Melitsa, Steve" />
          <outline text="Tony Eden">
            <outline text="Joanna/Steve" />
            <outline text="Gemma/Samantha" />
          </outline>
          <outline text="Needs checking . . . . " />
        </outline>
      </outline>
      <outline text="Sam school">
        <outline text="Charlie, Maria, Lukas" />
        <outline text="Matt, Emma, ?Seb, Ollie" />
        <outline text="Adam, Kerry" />
        <outline text="Jonny" />
        <outline text="Alex, Liam" />
        <outline text="Rob, Nat" />
        <outline text="Eloise" />
        <outline text="John, Maxine" />
        <outline text="Chris, Becky +1?" />
        <outline text="Billy +1?" />
        <outline text="Stuart" />
        <outline text="Omer, Lauren +1?" />
      </outline>
      <outline text="Sam uni">
        <outline text="Gareth, Dee, Ollie" />
        <outline text="Miles, Maja" />
        <outline text="Kit, Emma" />
        <outline text="Tom Wright +1?" />
        <outline text="Jo" />
        <outline text="Ines +1?" />
      </outline>
      <outline text="Sam other">
        <outline text="Tom Shaw, Emma" />
        <outline text="Josh, Jasmine" />
        <outline text="Mia, Adam?" />
        <outline text="Sarah +1?" />
      </outline>
      <outline text="?Sam work" />
      <outline text="Kim Wales">
        <outline text="Yetty &amp;amp; James" />
        <outline text="Lou &amp;amp; Matthew" />
        <outline text="Mouse &amp;amp; Greg" />
        <outline text="Dave &amp;amp;1" />
        <outline text="Mari &amp;amp; Matt" />
        <outline text="Kate &amp;amp; Stephen" />
        <outline text="Kirsty &amp;amp; Kristian" />
        <outline text="Fizz &amp;amp; Pip" />
        <outline text="Lindsey &amp;amp; Muzzy" />
        <outline text="Gina &amp;amp; Brom" />
        <outline text="Gem &amp;amp; Robbie" />
        <outline text="Stacey &amp;amp; Simon" />
        <outline text="Jenna &amp;amp; Lewis" />
        <outline text="Lauren &amp;amp; Cam" />
        <outline text="Jade &amp;amp; 1" />
        <outline text="Nerys &amp;amp; Charlie" />
        <outline text="Son &amp;amp; Fi" />
        <outline text="Dad &amp;amp; Mum" />
        <outline text="?Josie &amp;amp;1" />
        <outline text="?Jan &amp;amp; Clive" />
        <outline text="Amy Quinlan &amp;amp;1" />
        <outline text="Jo P" />
      </outline>
      <outline text="Kim London">
        <outline text="Scarlett &amp;amp; 1" />
        <outline text="Irene" />
        <outline text="Maggie " />
        <outline text="Jo M" />
        <outline text="Helen Brew &amp;amp; Mark" />
        <outline text="Ceri &amp;amp; Geraint " />
        <outline text="Ben &amp;amp; Anna" />
        <outline text="Laura &amp;amp; Nick" />
        <outline text="?Darzi's" />
      </outline>
      <outline text="Misc">
        <outline text="Katie and Cat" />
      </outline>
    </outline>
  </outline>
  <outline text="Ometria">
    <outline text="CircleCI new UI" _note="https://app.circleci.com/pipelines/github/Ometria/ometria.preferences_center" />
    <outline text="Segmentation filter examples">
      <outline text="Exclude unengaged" _note="AND not(&#10;  EXISTS (&#10;    SELECT &#10;      1 &#10;    FROM &#10;      customers_health_dimensions &#10;    WHERE &#10;      customers_health_dimensions.customer_id = &lt;a href=&quot;http://customers.id&quot;&gt;customers.id&lt;/a&gt; &#10;      AND customers_health_dimensions.engagement = 0&#10;  )&#10;)" />
      <outline text="Exclude in automation campaign" _note="AND not(&#10;  EXISTS (&#10;    SELECT &#10;      1 &#10;    FROM &#10;      trigger_campaign_customer &#10;    WHERE &#10;      trigger_campaign_customer.customer_id = customers.id &#10;      AND trigger_campaign_customer.is_active IS true &#10;      AND trigger_campaign_customer.is_test IS NOT true &#10;      AND trigger_campaign_customer.is_control_group IS NOT true &#10;      AND trigger_campaign_customer.trigger_campaign_id IN (285)&#10;  )&#10;) " />
      <outline text="Standard customer suppression (mass email and API)" _note="AND email IS NOT NULL &#10;AND is_email_valid IS NOT false &#10;AND optin IS true" />
    </outline>
    <outline text="KPI SQL queries">
      <outline text="Leads acquired" _note="SELECT to_char(date_trunc('month', timestamp AT TIME ZONE 'Europe/London'), 'YYYY-MM') AS month&#10;     , SUM(leads_acquired) AS leads_acquired&#10;FROM cube_customers_lifecycle_events&#10;WHERE account_id = 515&#10;AND timestamp AT TIME ZONE 'Europe/London' &amp;gt;= '2017-04-01 00:00:00'::timestamp&#10;AND timestamp AT TIME ZONE 'Europe/London' &amp;lt; '2019-07-31 23:59:59'::timestamp&#10;GROUP BY 1" />
    </outline>
    <outline text="SSH commands">
      <outline text="Test cluster node SSH" _note="ssh -A -i .ssh/tectonic-test.pem core@18.203.187.9" />
    </outline>
    <outline text="Reporting">
      <outline text="Set env" />
      <outline text="Env vars" _note="set -x OM_GEARMAN_HOST localhost; \&#10;set -x OM_GEARMAN_PORT 8089; \&#10;set -x OM_GEARMAN_BINARY_PORT 4730; \&#10;set -x OM_POSTGRES_HOST_ECOMM_READONLY localhost; \&#10;set -x OM_POSTGRES_USERNAME_ECOMM_READONLY ometria_readonly; \&#10;set -x OM_POSTGRES_PASSWORD_ECOMM_READONLY qwerty; \&#10;set -x OM_POSTGRES_PORT_ECOMM_READONLY 5432; \&#10;set -x REDIS_HOST &quot;localhost&quot;; \&#10;set -x REDIS_PORT 6379; \&#10;set -x REDIS_DB 3; \&#10;set -x OM_REPORTING_NO_READONLY_DB true" />
      <outline text="Example invocation" _note="python ometria_reporting/tools/test.py trigger_campaigns_flow_performance = campaignId=49 groupBy=nodeId versionId=90 dateFrom=2020-02-06 dateTo=2020-03-04" />
    </outline>
    <outline text="Helm">
      <outline text="Manual deploy process">
        <outline text="Assume role" _note="aws-vault exec test -- $SHELL -l" />
        <outline text="CD into helmfile.yaml directory" />
        <outline text="Diff helmconfig for specific env to see what will change" _note="helmfile -e {environment in helmfile.yaml} diff&#10;helmfile -e ew1-test-01-test diff" />
        <outline text="Apply config" _note="helmfile -e ew1-test-01-test apply" />
        <outline text="List helm resources" _note="helm -n {namespace} list&#10;helm -n test list" />
        <outline text="Destroy resource with helmfile" _note="helmfile -e ew1-test-01-test destroy" />
        <outline text="Or destroy with helm (specify resource name)" _note="helm -n test delete {resource name}&#10;helm -n test delete onsite-product-recommendations" />
        <outline text="`apply` will look for `latest` tag by default, but to specify a build" _note="git tag {tag}&#10;git push --tags&#10;Set envvar OM_IMAGE_TAG to tag name&#10;Then apply" />
      </outline>
      <outline text="Secrets generation">
        <outline text="Assume AWS role" />
        <outline text="Copy .sops.yaml from another project, put in top level helm dir" />
        <outline text="Run `sops {target_file}` where target_file is something like `ew1-test-01-test/secrets.yaml`" />
        <outline text="Will open an editor - add the keys to that (see other repo's */secrets.yaml for example formats)" />
      </outline>
    </outline>
    <outline text="Kube">
      <outline text="User access" _note="https://github.com/Ometria/ometria.k8s#user-access" />
    </outline>
    <outline text="AWS">
      <outline text="Role setup" _note="https://github.com/Ometria/ometria.tf.account/blob/master/new_aws_users.md" />
    </outline>
    <outline _complete="true" text="Intro to Eng sessions">
      <outline text="Engineering">
        <outline text="Intro">
          <outline text="Talk about team structure" />
          <outline text="How we prioritise work" />
          <outline text="How we interact with other teams" />
        </outline>
        <outline text="Currently 21 people + 3 (now 4) PMs" />
        <outline text="CTO - Al James">
          <outline text="One of the 4 original founders" />
          <outline text="Built the first ever version of the platform" />
          <outline text="Hands on tech, oversees general technical decisions" />
        </outline>
        <outline text="VPE - Gareth">
          <outline text="Oversees wider engineering function and processes" />
        </outline>
        <outline text="Engineering Directors, Al Jamieson and Matt D">
          <outline text="Al will be tackling &quot;growth&quot;" />
          <outline text="Matt has had a number of responsibilities but is only here a couple more weeks" />
        </outline>
        <outline text="Engineering Managers">
          <outline text="Michal - will be heading up a team as it grows in S'ham" />
        </outline>
        <outline text="17 engineers, organically grown into 3 separate teams">
          <outline text="Dev ops">
            <outline text="Building and maintaining our vast infrastructure" />
            <outline text="Prepping us for our imminent move to the US" />
            <outline text="Generally helping keep us alive" />
          </outline>
          <outline text="B/E data focused">
            <outline text="Work on data ingestion pipelines" />
          </outline>
          <outline text="Product focused (where I've been for a while)">
            <outline text="2x F/E devs and a bunch of B/E devs" />
            <outline text="Focus on more customer facing features, things the clients will see and the backend systems required to support" />
          </outline>
          <outline text="PMs have mapped 1:1 to each team">
            <outline text="Handle prioritisation of work at a more local level" />
          </outline>
        </outline>
        <outline text="Each team organises itself">
          <outline text="Organise and run their own locally scoped meetings" />
          <outline text="Our team organically moved into a kanban style of working" />
          <outline text="Other teams use scrum, etc" />
          <outline text="Wider ProdEng weekly meetings, &quot;All hands&quot;" />
          <outline text="Lunch and learns" />
          <outline text="Guilds are just about to become a thing (in their early stages)" />
        </outline>
        <outline text="What work we do" />
        <outline text="Bulk of what we do" />
        <outline text="Main project stream born out of OKRs">
          <outline text="These could be product or platform focused, but are planned in advance and prioritised at a high level based on wider goals or requirements">
            <outline text="Build X feature" />
            <outline text="Make Y part of system run more reliably" />
          </outline>
          <outline text="Discussed and prioritised within SMT/Snr Eng staff" />
          <outline text="Filter down, organised into more local projects and handled by the teams" />
        </outline>
        <outline text="Support stream">
          <outline text="Handle tickets that come up through T1 and T2">
            <outline text="Tricky technical questions" />
            <outline text="Requests for processes that can't be carried out outside of eng team (not yet productised)">
              <outline text="Anonymisation requests is an example" />
            </outline>
          </outline>
          <outline text="Support kanban board is maintained by support engineers and devs" />
          <outline text="Prioritisation by support engineers" />
          <outline text="Operate a two-week rota system with two engineers">
            <outline text="Weds-Thurs dedicated T3 support days" />
            <outline text="Other days are optional days, used as an opportunity to build tooling to enable support to carry out tasks">
              <outline text="Up to rota'd engineers to prioritise work accordingly" />
            </outline>
          </outline>
        </outline>
        <outline text="On-call rota">
          <outline text="24/7 support" />
          <outline text="Respond to critical alerts, escalations from support on-call or issues across the platform" />
          <outline text="Weekly rotation (Monday -&amp;gt; Monday)" />
        </outline>
        <outline text="General ad-hoc requests during working hours">
          <outline text="Incidents" />
        </outline>
      </outline>
    </outline>
    <outline _complete="true" text="Lunch &amp;amp; Learn">
      <outline text="https://docs.google.com/spreadsheets/d/1AvompD6R37O8mv7AP-JSqtgY_HwAkdZyFOqYYFc5DMU/edit#gid=0" />
      <outline text="https://docs.google.com/document/d/1HijATK7gBd2tDF618HFUdnZXimYUeX72JCvAv7jk76Y/edit?ts=5bf3e127" />
    </outline>
    <outline _complete="true" text="Projects" _note="Daily (and beyond) task planning">
      <outline text="Broadcast UI #proj-broadcast">
        <outline _complete="true" text="#todo add overall segmentation tree gen time to mass_email logging" />
        <outline _complete="true" text="#todo is_ready_to_send is being returned twice in campaign json objects" />
        <outline _complete="true" text="#todo ensure logging for segmentation tree actually works in both api.campaigns and mass_email" />
        <outline _complete="true" text="Outstanding optimisations to run #todo">
          <outline text="UNION ALL on all queries - run single query" />
          <outline text="SELECT id FROM customers WHERE MOD(id, 10) = 0 (or something)" />
          <outline text="If leaf nodes are splits, run parent query and do in mem split for final nodes" />
        </outline>
        <outline _complete="true" text="Clients to run queries on #todo" />
        <outline _complete="true" text="maybe #todo need to fail validation if campaign.error_data in api layer">
          <outline text="Now thinking this isn't required" />
        </outline>
        <outline _complete="true" text="#todo Mad campaign id's that are currently causing errors = 2078, 2079 (all schedule = 'now')">
          <outline _complete="true" text="PUT payload pre-schedule" _note="{&quot;title&quot;:&quot;Copy of Copy of TEST ER random mad campaign&quot;,&quot;template&quot;:{&quot;template_instance_id&quot;:null,&quot;template_instance_revision_id&quot;:null,&quot;subject&quot;:null,&quot;subject_configuration&quot;:{},&quot;preheader&quot;:null},&quot;delivery&quot;:{&quot;schedule_mode&quot;:&quot;now&quot;,&quot;dt_scheduled_display&quot;:null,&quot;batch_mode&quot;:&quot;none&quot;,&quot;batch_data&quot;:null,&quot;from_name&quot;:&quot;Broadcast user&quot;,&quot;from_email_address&quot;:&quot;broadcast22@ometria.email&quot;,&quot;reply_to&quot;:&quot;broadcast22@ometria.email&quot;,&quot;url_parameters&quot;:{&quot;bx_profile&quot;:&quot;{{profile.hash}}&quot;,&quot;bx_profile2&quot;:&quot;asdasd&quot;,&quot;matt_test&quot;:&quot;hello2&quot;,&quot;template_title&quot;:&quot;{{ email.template_title|urlencode }}&quot;,&quot;type&quot;:&quot;broadcast&quot;,&quot;utm_medium&quot;:&quot;email&quot;}},&quot;recipients&quot;:{&quot;customer_list_id&quot;:null,&quot;customer_query&quot;:{&quot;and_filters&quot;:[{&quot;field&quot;:&quot;exclude_nonengaged&quot;,&quot;op&quot;:&quot;eq&quot;,&quot;value&quot;:[&quot;true&quot;]}],&quot;filters&quot;:[{&quot;field&quot;:&quot;email&quot;,&quot;op&quot;:&quot;contains&quot;,&quot;value&quot;:[&quot;sam+bui&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;customer_suppress_list_id&quot;:null,&quot;customer_suppress_query&quot;:{},&quot;exclude_unengaged&quot;:true,&quot;exclude_all_automation&quot;:false},&quot;segmentation_tree&quot;:{&quot;type&quot;:&quot;initial&quot;,&quot;childBlock&quot;:{&quot;id&quot;:1,&quot;type&quot;:&quot;segmentation&quot;,&quot;items&quot;:[{&quot;id&quot;:1,&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 1&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;date_of_birth&quot;,&quot;op&quot;:&quot;after&quot;,&quot;value&quot;:[&quot;1989-01-01&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;childBlock&quot;:{&quot;id&quot;:2,&quot;type&quot;:&quot;split&quot;,&quot;items&quot;:[{&quot;id&quot;:1,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}},{&quot;id&quot;:2,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50},&quot;childBlock&quot;:{&quot;id&quot;:4,&quot;type&quot;:&quot;segmentation&quot;,&quot;items&quot;:[{&quot;id&quot;:1,&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 1&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;lifecycle_status&quot;,&quot;op&quot;:&quot;eq&quot;,&quot;value&quot;:[&quot;ACTIVE&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;}},{&quot;id&quot;:2,&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 2&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;gender&quot;,&quot;op&quot;:&quot;eq&quot;,&quot;value&quot;:[&quot;f&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;}}]}}]}},{&quot;id&quot;:2,&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 2&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;date_of_birth&quot;,&quot;op&quot;:&quot;after&quot;,&quot;value&quot;:[&quot;1979-01-01&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;childBlock&quot;:{&quot;id&quot;:3,&quot;type&quot;:&quot;split&quot;,&quot;items&quot;:[{&quot;id&quot;:1,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}},{&quot;id&quot;:2,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}}]}},{&quot;id&quot;:3,&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 3&quot;,&quot;data&quot;:{}}]}},&quot;variants&quot;:[{&quot;title&quot;:&quot;Segment 1 &amp;gt; Split 1&quot;,&quot;blockId&quot;:2,&quot;blockItemId&quot;:1,&quot;template&quot;:{&quot;template_instance_id&quot;:8912,&quot;template_instance_revision_id&quot;:10160,&quot;subject&quot;:&quot;TEST 89-01-01 split 50&quot;,&quot;subject_configuration&quot;:null,&quot;preheader&quot;:&quot;test preheader&quot;,&quot;template_preview&quot;:&quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/10213084c9d2562bcaf802df1480b8fd29c5aa63/png?thumb_width=400&amp;amp;full_page=true&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=true&amp;amp;url=https%3A%2F%2Fappstaging.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D352%26id%3D10160%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3Dc62dd01c%26sig%3D811f4a644fdcb6e2d0687c90953b2b1d23593b82520ff0f5f24f893fe4968bc1&quot;},&quot;delivery&quot;:{&quot;schedule_mode&quot;:null},&quot;leaf&quot;:{&quot;id&quot;:1,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}},&quot;path&quot;:[{&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 1&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;date_of_birth&quot;,&quot;op&quot;:&quot;after&quot;,&quot;value&quot;:[&quot;1989-01-01&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}}]},{&quot;title&quot;:&quot;Segment 1 &amp;gt; Split 2 &amp;gt; Segment 1&quot;,&quot;blockId&quot;:4,&quot;blockItemId&quot;:1,&quot;template&quot;:{&quot;template_instance_id&quot;:8914,&quot;template_instance_revision_id&quot;:10165,&quot;subject&quot;:&quot;TEST 89-01-01 split 50 lifecycle active&quot;,&quot;subject_configuration&quot;:null,&quot;preheader&quot;:&quot;fdgsfdsfm&quot;,&quot;template_preview&quot;:&quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/53d1b655abd83771bd792bbcea6abc8b2d8c767d/png?thumb_width=400&amp;amp;full_page=true&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=true&amp;amp;url=https%3A%2F%2Fappstaging.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D352%26id%3D10165%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3D8bf3c527%26sig%3Db492389710b40ece011d6fab393bb97a40d7cebee2dcc11f9949978a0e661eb3&quot;},&quot;delivery&quot;:{&quot;schedule_mode&quot;:null},&quot;leaf&quot;:{&quot;id&quot;:1,&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 1&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;lifecycle_status&quot;,&quot;op&quot;:&quot;eq&quot;,&quot;value&quot;:[&quot;ACTIVE&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;}},&quot;path&quot;:[{&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 1&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;date_of_birth&quot;,&quot;op&quot;:&quot;after&quot;,&quot;value&quot;:[&quot;1989-01-01&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 1&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;lifecycle_status&quot;,&quot;op&quot;:&quot;eq&quot;,&quot;value&quot;:[&quot;ACTIVE&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;}}]},{&quot;title&quot;:&quot;Segment 1 &amp;gt; Split 2 &amp;gt; Segment 2&quot;,&quot;blockId&quot;:4,&quot;blockItemId&quot;:2,&quot;template&quot;:{&quot;template_instance_id&quot;:8913,&quot;template_instance_revision_id&quot;:10162,&quot;subject&quot;:&quot;TEST 89-01-01 split 50 gender female&quot;,&quot;subject_configuration&quot;:null,&quot;preheader&quot;:&quot;dfsfs&quot;,&quot;template_preview&quot;:&quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/ba4b7ee01658b0c6f241c132e08f418b41af9862/png?thumb_width=400&amp;amp;full_page=true&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=true&amp;amp;url=https%3A%2F%2Fappstaging.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D352%26id%3D10162%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3D86c68d0c%26sig%3D4faaf23b529e1c490fcbc58856c5a1e0e5c7978ab2d1b1ad4da2a1e7ed604f37&quot;},&quot;delivery&quot;:{&quot;schedule_mode&quot;:null},&quot;leaf&quot;:{&quot;id&quot;:2,&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 2&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;gender&quot;,&quot;op&quot;:&quot;eq&quot;,&quot;value&quot;:[&quot;f&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;}},&quot;path&quot;:[{&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 1&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;date_of_birth&quot;,&quot;op&quot;:&quot;after&quot;,&quot;value&quot;:[&quot;1989-01-01&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 2&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;gender&quot;,&quot;op&quot;:&quot;eq&quot;,&quot;value&quot;:[&quot;f&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;}}]},{&quot;title&quot;:&quot;Segment 2 &amp;gt; Split 1&quot;,&quot;blockId&quot;:3,&quot;blockItemId&quot;:1,&quot;template&quot;:{&quot;template_instance_id&quot;:8915,&quot;template_instance_revision_id&quot;:10167,&quot;subject&quot;:&quot;TEST 79-01-01 split first 50&quot;,&quot;subject_configuration&quot;:null,&quot;preheader&quot;:&quot;hgfhgfhgf&quot;,&quot;template_preview&quot;:&quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/2f78e16305ef1b71ced2fdcea0cd9d1844c048a2/png?thumb_width=400&amp;amp;full_page=true&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=true&amp;amp;url=https%3A%2F%2Fappstaging.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D352%26id%3D10167%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3Df1641510%26sig%3Dd06f8e2c5ac62c5f5c7688a9f10f5fe2d1c08e7a77a2cdd14c1a4ed3569f398a&quot;},&quot;delivery&quot;:{&quot;schedule_mode&quot;:null},&quot;leaf&quot;:{&quot;id&quot;:1,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}},&quot;path&quot;:[{&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 2&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;date_of_birth&quot;,&quot;op&quot;:&quot;after&quot;,&quot;value&quot;:[&quot;1979-01-01&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}}]},{&quot;title&quot;:&quot;Segment 2 &amp;gt; Split 2&quot;,&quot;blockId&quot;:3,&quot;blockItemId&quot;:2,&quot;template&quot;:{&quot;template_instance_id&quot;:8916,&quot;template_instance_revision_id&quot;:10168,&quot;subject&quot;:&quot;TEST 79-01-01 split second 50&quot;,&quot;subject_configuration&quot;:null,&quot;preheader&quot;:&quot;jwklrjew&quot;,&quot;template_preview&quot;:&quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/f143f2a15cc2d8783d7782603b39fddcf4287894/png?thumb_width=400&amp;amp;full_page=true&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=true&amp;amp;url=https%3A%2F%2Fappstaging.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D352%26id%3D10168%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3D6fec0222%26sig%3D049b97e5cb40d511731f5c798871f7c7c1dfef8b4b9ccec0562556116c832710&quot;},&quot;delivery&quot;:{&quot;schedule_mode&quot;:null},&quot;leaf&quot;:{&quot;id&quot;:2,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}},&quot;path&quot;:[{&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 2&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;date_of_birth&quot;,&quot;op&quot;:&quot;after&quot;,&quot;value&quot;:[&quot;1979-01-01&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}}]},{&quot;title&quot;:&quot;Segment 3&quot;,&quot;blockId&quot;:1,&quot;blockItemId&quot;:3,&quot;template&quot;:{&quot;template_instance_id&quot;:8917,&quot;template_instance_revision_id&quot;:10170,&quot;subject&quot;:&quot;TEST ER Catchall&quot;,&quot;subject_configuration&quot;:null,&quot;preheader&quot;:&quot;gfdgfdgd&quot;,&quot;template_preview&quot;:&quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/bd58e9382c95b3498ff9454c6cc4c9c266fc2875/png?thumb_width=400&amp;amp;full_page=true&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=true&amp;amp;url=https%3A%2F%2Fappstaging.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D352%26id%3D10170%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3D2d89a3cc%26sig%3D6c9f90bcb937c5d48f7c124ef4f33cbb8f6c47f45845d96c5eec1f36a73821a0&quot;},&quot;delivery&quot;:{&quot;schedule_mode&quot;:null},&quot;leaf&quot;:{&quot;id&quot;:3,&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 3&quot;,&quot;data&quot;:{}},&quot;path&quot;:[{&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 3&quot;,&quot;data&quot;:{}}]}]}" />
          <outline _complete="true" text="Put in test_broadcast_send_real_massive.json with altered templatey ids" />
          <outline _complete="true" text="Attempt to reproduce locally">
            <outline _complete="true" text="Achieved with above payload" />
            <outline _complete="true" text="Traceback" _note="Traceback (most recent call last):&#10;  File &quot;/Volumes/Work/server/apps/ometria.mass_email/ometria_mass_email/campaign_processor/tasks.py&quot;, line 228, in process_campaign&#10;    process_campaign_variants(session, campaign_table, campaign)&#10;  File &quot;/Volumes/Work/server/apps/ometria.mass_email/ometria_mass_email/campaign_processor/variant_processors.py&quot;, line 350, in process_campaign_variants&#10;    return processor()&#10;  File &quot;/Volumes/Work/server/apps/ometria.mass_email/ometria_mass_email/campaign_processor/variant_processors.py&quot;, line 317, in __call__&#10;    self.process_variants()&#10;  File &quot;/Volumes/Work/server/apps/ometria.mass_email/ometria_mass_email/campaign_processor/variant_processors.py&quot;, line 235, in process_variants&#10;    finalise=True)&#10;  File &quot;/Users/samuellock/.virtualenvs/mass_email/lib/python3.6/site-packages/ometria_lib_segmentation/campaigns.py&quot;, line 352, in __init__&#10;    self.root.generate_query(input_dict, self.finalise)&#10;  File &quot;/Users/samuellock/.virtualenvs/mass_email/lib/python3.6/site-packages/ometria_lib_segmentation/campaigns.py&quot;, line 217, in generate_query&#10;    child_block_item.generate_query(child, finalise)&#10;  File &quot;/Users/samuellock/.virtualenvs/mass_email/lib/python3.6/site-packages/ometria_lib_segmentation/campaigns.py&quot;, line 154, in generate_query&#10;    self.set_query()&#10;  File &quot;/Users/samuellock/.virtualenvs/mass_email/lib/python3.6/site-packages/ometria_lib_segmentation/campaigns.py&quot;, line 144, in set_query&#10;    self._set_segmentation_query()&#10;  File &quot;/Users/samuellock/.virtualenvs/mass_email/lib/python3.6/site-packages/ometria_lib_segmentation/campaigns.py&quot;, line 136, in _set_segmentation_query&#10;    self._apply_constraints(self.constraints)&#10;  File &quot;/Users/samuellock/.virtualenvs/mass_email/lib/python3.6/site-packages/ometria_lib_segmentation/campaigns.py&quot;, line 117, in _apply_constraints&#10;    timezone=self._tree.timezone,&#10;  File &quot;/Users/samuellock/.virtualenvs/mass_email/lib/python3.6/site-packages/ometria_lib_segmentation/mapper.py&quot;, line 715, in get_customer_query&#10;    query_filters = _preprocess_filters(query_filters, timezone)&#10;  File &quot;/Users/samuellock/.virtualenvs/mass_email/lib/python3.6/site-packages/ometria_lib_segmentation/mapper.py&quot;, line 339, in _preprocess_filters&#10;    value = _process_value(field, op, value, timezone)&#10;  File &quot;/Users/samuellock/.virtualenvs/mass_email/lib/python3.6/site-packages/ometria_lib_segmentation/mapper.py&quot;, line 326, in _process_value&#10;    return _process_datetime_value(op, value, timezone, dt_now)&#10;  File &quot;/Users/samuellock/.virtualenvs/mass_email/lib/python3.6/site-packages/ometria_lib_segmentation/mapper.py&quot;, line 297, in _process_datetime_value&#10;    interval = get_interval(op, value, timezone)&#10;  File &quot;/Users/samuellock/.virtualenvs/mass_email/lib/python3.6/site-packages/ometria_lib_segmentation/datetimes.py&quot;, line 308, in get_interval&#10;    parser = DateTimeParser(timezone)&#10;  File &quot;/Users/samuellock/.virtualenvs/mass_email/lib/python3.6/site-packages/ometria_lib_segmentation/datetimes.py&quot;, line 245, in __init__&#10;    self._timezone = pytz.timezone(timezone)&#10;  File &quot;/Users/samuellock/.virtualenvs/mass_email/lib/python3.6/site-packages/pytz/__init__.py&quot;, line 159, in timezone&#10;    if zone.upper() == 'UTC':&#10;AttributeError: 'Europe/London' object has no attribute 'upper'" />
            <outline _complete="true" text="Appears to be a simple fix when passing timezone to MassCampaignTree in ometria_mass_email/campaign_processor/variant_processors.py l233">
              <outline text="wrap cache.get_account_details(self._campaign.account_id).timezone in str()" />
              <outline text="ACTUALLY investigate why it sometimes worked and sometimes didn't" />
              <outline text="Could be because it's the first time the segmentation library actually needed it, but strange that it was only in the large given campaign" />
            </outline>
          </outline>
          <outline _complete="true" text="I believe issue caused by over time sends" />
          <outline _complete="true" text="Single block_item campaign with optimal time send DOES work, only affected by above campaigns it seems" />
        </outline>
        <outline _complete="true" text="Script for generating customers in api.campaigns.mass_create_customers.py">
          <outline text="Run developer_environment core" />
          <outline text="Tunnel to test env postgres on 5732" />
          <outline text="set -x POSTGRES_PORT 5732" />
          <outline text="In api.campaigns, run pipenv run python mass_create_customers.py" />
        </outline>
        <outline _complete="true" text="#todo migrations" />
        <outline _complete="true" text="#todo add `campaign_version` field to returned campaign objects" />
        <outline _complete="true" text="#todo filter out opted out customers in segmentation lib" />
        <outline _complete="true" text="#todo env bar for n_thread_pool and default" />
        <outline _complete="true" text="#todo open PR for mass email integration" />
        <outline _complete="true" text="#todo Update campaign_configs in api.campaigns mass.api to campaigns?" />
        <outline _complete="true" text="#todo Add variant creation dblog in schedule() step in API" />
        <outline _complete="true" text="CURRENT: localtime sends (test campaign only with random split nodes) are failing mass_email validation due to attempting to validate dt_scheduled_display with str">
          <outline text="Needs to be handled within mass_email as passing through gearman automatically converts to string" />
        </outline>
        <outline _complete="true" text="Mass email deploy">
          <outline text="Current version in case of need to rollback">
            <outline text="&quot;quay.io/ometria/ometria.mass_email:v8.56&quot;" />
          </outline>
          <outline text="Deployment command">
            <outline text="python deployment/cloud_setup/deploy.py v9.0 -e prod" />
          </outline>
          <outline text="Rollback command">
            <outline text="python deployment/cloud_setup/deploy.py v8.56 -e prod" />
          </outline>
        </outline>
        <outline _complete="true" text="Console2 deploy">
          <outline text="Existing version if need to rollback">
            <outline text="quay.io/ometria/ometria.console2:build-6745" />
          </outline>
          <outline text="New version">
            <outline text="6747" />
          </outline>
        </outline>
        <outline _complete="true" text="#todo ensure sentry integration works on prod after deployment" />
        <outline _complete="true" text="#todo Run new mass_email backend with existing console2 and front-end. Create campaigns and ensure they behave as expecting for legacy flow" />
        <outline _complete="true" text="#todo ensure will not time out in mass_email flow">
          <outline text="#todo implement correct timeout handling in lib.segmentation?">
            <outline text="For both general query running (in threads) and also for finalised=true random splits" />
          </outline>
          <outline text="#todo deal with timeouts when generating batches with segmentation tree. Fail if necessary" />
        </outline>
        <outline _complete="true" text="#todo metrics for segmentation tree generation?" />
        <outline _complete="true" text="#todo creating identical equivalent campaigns in either base segmentation or block item creates diff between batch_data = {} or batch_data = None">
          <outline text="Base segmentation sets to empty dict" />
          <outline text="Seems to be outside of API layer" />
          <outline text="Possibly not even an issue" />
        </outline>
        <outline _complete="true" text="#todo admin campaign actions" />
        <outline _complete="true" text="#todo unequal random split numbers">
          <outline text="Due to suppressed contacts being deleted from the campaign table in mass email when it's being initially generated and filled from the campaign customer query" />
          <outline _complete="true" text="Potential theory is that I could be losing IDs in assign_segments_to_batches on the join between batch_subquery and join_subquery, possibly because there are missing id's in the customer_table which are present in the node query (i.e. the node_query is failing to filter something out)" />
          <outline _complete="true" text="Should be able to recreate locally. Create and schedule and then call process_campaign directly with breakpoint" />
          <outline _complete="true" text="Try Sam+bui plus random split. Ensure totals 100. Might offer clues" />
          <outline _complete="true" text="Check campaign table initial query uses campaign segmentation" />
          <outline _complete="true" text="2106 -&amp;gt; 2109" />
        </outline>
        <outline _complete="true" text="#todo test sends need to be fixed">
          <outline text="Is it even broken on prod?!" />
        </outline>
        <outline _complete="true" text="#todo check exclude rules with random split, leaf node and non" />
        <outline _complete="true" text="#todo add metrics for UI segmentation tree gen" />
        <outline _complete="true" text="#todo Update lib.segmentation version on mass_email (removed query logging)" />
        <outline _complete="true" text="Fake Big Retailer: 984">
          <outline text="Update query" _note="WITH cte AS (&#10;    SELECT id&#10;    FROM customers&#10;    WHERE account_id = 984&#10;    AND email IS NOT NULL&#10;    AND optin&#10;    LIMIT 1000000&#10;)&#10;UPDATE customers c&#10;SET is_email_valid = True&#10;FROM cte&#10;WHERE c.id = cte.id">
            <outline text="Exclude already updated ones" _note="WITH cte AS (&#10;    SELECT id&#10;    FROM customers&#10;    WHERE account_id = 984&#10;    AND email IS NOT NULL&#10;    AND optin&#10;    AND is_email_valid IS NOT TRUE&#10;    LIMIT 1000000&#10;)&#10;UPDATE customers c&#10;SET is_email_valid = True&#10;FROM cte&#10;WHERE c.id = cte.id" />
          </outline>
        </outline>
        <outline _complete="true" text="#todo duplicate scheduled now issue" />
        <outline _complete="true" text="#todo review frontend tickets" />
        <outline _complete="true" text="#todo remove logging from each segmentation query" />
        <outline _complete="true" text="#todo updates (with nested fields) do not overwrite Null fields" />
        <outline _complete="true" text="#todo TEST PLAN">
          <outline text="Segmentation" _note="Finished for now, until winner types are introduced">
            <outline text="BOTH UI AND BACKEND TABLES">
              <outline _complete="true" text="Base and tree compatibility">
                <outline _complete="true" text="Empty campaign (no block items) - 2062">
                  <outline text="Include unengaged" />
                </outline>
                <outline _complete="true" text="Empty campaign with campaign segmentation (generally exclude unengaged to keep volume down except where explicitly set)">
                  <outline _complete="true" text="Customer list">
                    <outline _complete="true" text="Add customer to list id = 440 (foobartest)" />
                    <outline _complete="true" text="Check mass_campaign" />
                    <outline _complete="true" text="Check single mass_campaign_variant" />
                    <outline _complete="true" text="Check single mass_campaign_batch" />
                    <outline _complete="true" text="Check attribution in campaign table" />
                    <outline _complete="true" text="Check row count against customer query with list" _note="SELECT&#10;   -- 352 AS account_id,&#10;   -- customers.id AS customer_id,&#10;   -- coalesce(&#10;   --   customers.timezone, 'Europe/London'&#10;   -- ) AS timezone,&#10;   -- customers.email AS email,&#10;   -- false AS is_delivered,&#10;   -- false AS is_opened,&#10;   -- false AS is_clicked&#10;   count(*)&#10; FROM&#10;   customers&#10; WHERE&#10;   customers.account_id = 352&#10;   AND not(&#10;     EXISTS (&#10;       SELECT&#10;         1&#10;       FROM&#10;         customers_health_dimensions&#10;       WHERE&#10;         customers_health_dimensions.customer_id = customers.id&#10;         AND customers_health_dimensions.engagement = 0&#10;     )&#10;   )&#10;   AND customers.email IS NOT NULL&#10;   AND customers.optin IS true&#10;   AND customers.is_email_valid IS NOT false&#10;   AND customers.id in (select customer_id from lists_customers where list_id = 440)" />
                    <outline _complete="true" text="Ensure email received" />
                  </outline>
                  <outline _complete="true" text="Customer segmentation - 2064">
                    <outline _complete="true" text="Add 2 segmentation rules (email contains sam+bui)">
                      <outline text="email contains sam+bui" />
                      <outline text="gender = male" />
                      <outline text="Lifecycle status = active" />
                      <outline text="Manual returns 19" _note="select count(*) from customers where email like 'sam+bui%' and gender = 'm' and lifecycle_status = 'ACTIVE';" />
                    </outline>
                    <outline _complete="true" text="Check mass_campaign" />
                    <outline _complete="true" text="Check single mass_campaign_variant" />
                    <outline _complete="true" text="Check single mass_campaign_batch" />
                    <outline _complete="true" text="Check attribution in campaign table" />
                    <outline _complete="true" text="Check row count against customer query" />
                    <outline _complete="true" text="Ensure correct number of emails received" />
                  </outline>
                  <outline _complete="true" text="Suppression list - 2065">
                    <outline _complete="true" text="Add all sam+bui emails to list that sam@ometria is in and use that - 661 &quot;date sent test&quot;" />
                    <outline _complete="true" text="Check mass_campaign" />
                    <outline _complete="true" text="Check single mass_campaign_variant" />
                    <outline _complete="true" text="Check single mass_campaign_batch" />
                    <outline _complete="true" text="Check attribution in campaign table" />
                    <outline _complete="true" text="Check row count against customer query with list" />
                    <outline _complete="true" text="Ensure single email received" />
                  </outline>
                  <outline _complete="true" text="Suppression segmentation - 2066">
                    <outline _complete="true" text="Add email contains sam+bui" />
                    <outline _complete="true" text="Add 2 suppression segmentation rules" _note="select count(*) from customers where email like 'sam+bui%' and (gender != 'm' or lifecycle_status != 'AT_RISK');&#10;returns 89">
                      <outline text="gender = male" />
                      <outline text="lifecycle status = AT RISK" />
                    </outline>
                    <outline _complete="true" text="Check mass_campaign" />
                    <outline _complete="true" text="Check single mass_campaign_variant" />
                    <outline _complete="true" text="Check single mass_campaign_batch" />
                    <outline _complete="true" text="Check attribution in campaign table" />
                    <outline _complete="true" text="Check row count against customer query" />
                    <outline _complete="true" text="Ensure correct number of emails received" />
                  </outline>
                  <outline _complete="true" text="Exclude unengaged - id 2061">
                    <outline _complete="true" text="Variants generated" />
                    <outline _complete="true" text="Batch generated" />
                    <outline _complete="true" text="Campaign table generated with correct batch attribution" />
                  </outline>
                  <outline _complete="true" text="Exclude all automation - 2068 (2067 had no exclusions)">
                    <outline _complete="true" text="INCLUDE unengaged" />
                    <outline _complete="true" text="3 id's currently in automation campaigns" _note="SELECT customers.id&#10; FROM customers&#10; WHERE customers.account_id = 352 AND (EXISTS (SELECT 1&#10; FROM trigger_campaign_customer&#10; WHERE trigger_campaign_customer.customer_id = customers.id AND trigger_campaign_customer.is_active IS true AND trigger_campaign_customer.is_test IS NOT true AND trigger_campaign_customer.is_control_group IS NOT&#10; true))">
                      <outline text="1242498" />
                      <outline text="1255598" />
                      <outline text="1242499" />
                    </outline>
                    <outline _complete="true" text="Assert tables are sane" />
                    <outline _complete="true" text="Assert len = all customers - 3">
                      <outline text="All relevant customer query" _note="SELECT count(customers.id)&#10; FROM customers&#10; WHERE customers.account_id = 352 AND customers.optin is true AND customers.is_email_valid is true AND not(&#10;      EXISTS (&#10;        SELECT&#10;          1&#10;        FROM&#10;          customers_health_dimensions&#10;        WHERE&#10;          customers_health_dimensions.customer_id = customers.id&#10;          AND customers_health_dimensions.engagement = 0&#10;      )&#10;    )" />
                      <outline text="Customer query negating those in automation" _note="SELECT count(customers.id)&#10; FROM customers&#10; WHERE customers.account_id = 352 AND not (EXISTS (SELECT 1&#10; FROM trigger_campaign_customer&#10; WHERE trigger_campaign_customer.customer_id = customers.id AND trigger_campaign_customer.is_active IS true AND trigger_campaign_customer.is_test IS NOT true AND trigger_campaign_customer.is_control_group IS NOT&#10; true)) AND customers.optin is true AND customers.is_email_valid is true AND not(&#10;      EXISTS (&#10;        SELECT&#10;          1&#10;        FROM&#10;          customers_health_dimensions&#10;        WHERE&#10;          customers_health_dimensions.customer_id = customers.id&#10;          AND customers_health_dimensions.engagement = 0&#10;      )&#10;    )" />
                    </outline>
                    <outline _complete="true" text="Assert 3 above are not in table" />
                  </outline>
                  <outline _complete="true" text="Exclude in automation with id - id 2070">
                    <outline _complete="true" text="Exclude where member of trigger_campaign_id = 131 'Preheader test - Abandoned basket'">
                      <outline text="Found with query" _note="select customer_id, trigger_campaign_id from trigger_campaign_customer where customer_id in (SELECT customers.id&#10;  FROM customers&#10;  WHERE customers.account_id = 352 AND (EXISTS (SELECT 1&#10;  FROM trigger_campaign_customer&#10;  WHERE trigger_campaign_customer.customer_id = customers.id AND trigger_campaign_customer.is_active IS true AND trigger_campaign_customer.is_test IS NOT true AND trigger_campaign_customer.is_control_group IS NOT&#10;&#10;  true)) AND customers.optin is true AND customers.is_email_valid is true AND not(&#10;       EXISTS (&#10;         SELECT&#10;           1&#10;         FROM&#10;           customers_health_dimensions&#10;         WHERE&#10;           customers_health_dimensions.customer_id = customers.id&#10;           AND customers_health_dimensions.engagement = 0&#10;       )&#10;     )) order by trigger_campaign_id" />
                    </outline>
                    <outline _complete="true" text="Customer ids that should be excluded are">
                      <outline text="1242499" />
                      <outline text="1242498" />
                    </outline>
                    <outline _complete="true" text="Leaving">
                      <outline text="1255598" />
                    </outline>
                    <outline _complete="true" text="Count should be 137 sends and should exclude 2 noted above" />
                  </outline>
                </outline>
                <outline _complete="true" text="#TODO scalyr log when campaign failed validation and then got stuck in &quot;sending&quot; state" _note="https://www.scalyr.com/events?centered=true&amp;amp;continuationToken=GTMC0heyUJAVmMPLwituiA--&amp;amp;endTime=1556209141424464294&amp;amp;highlightEvent=GTMC0heyUJAVmMPLwituiA--&amp;amp;inclusiveStart=true&amp;amp;log=campaign_processor_586178.log&amp;amp;logSource=broadcast-ui_ecs_cluster%2Fmass_email&amp;amp;startTime=1556205351159910100&amp;amp;teamToken=M%2Ft2aK78HxuNx3YEMIuTQQ--&amp;amp;tokenCentered=true" />
                <outline _complete="true" text="Base segmentation (email contains 'sam+bui') and...">
                  <outline _complete="true" text="Single EMPTY block_item">
                    <outline _complete="true" text="Create equivalent rows for same segmentation using base block, and single block item">
                      <outline _complete="true" text="gender = male" />
                      <outline _complete="true" text="Same template (coat one)" />
                    </outline>
                    <outline _complete="true" text="Base segmentation campaign id = 2074" />
                    <outline _complete="true" text="Single block item campaign id (didn't set batch data) = 2075">
                      <outline _complete="true" text="And again having set batch data = 2076" />
                    </outline>
                    <outline _complete="true" text="Ensure generated variant rows are identical" />
                  </outline>
                  <outline _complete="true" text="Single block_item with additional segmentation" />
                  <outline _complete="true" text="Multiple block items">
                    <outline _complete="true" text="Same attribute (i.e. gender) - 2073">
                      <outline text="Gender male, female and catch-all">
                        <outline text="Catch-all should be none" />
                      </outline>
                    </outline>
                    <outline _complete="true" text="Diff attribute (i.e. gender and lifecycle status)" />
                    <outline _complete="true" text="Same filter twice (gender = male, gender = male)" />
                    <outline _complete="true" text="Overlapping filters (DOB after 1990, then DOB after 1980)" />
                  </outline>
                  <outline _complete="true" text="Multiple blocks (ensure mutual exclusivity)">
                    <outline _complete="true" text="Same level" />
                    <outline _complete="true" text="Over 2 levels" />
                  </outline>
                </outline>
                <outline _complete="true" text="Empty base segmentation and...">
                  <outline _complete="true" text="Copied &quot;mental&quot; campaign and disabled 'sam+bui' filter on base" />
                  <outline text="A couple of above cases" />
                </outline>
              </outline>
              <outline text="Ordering (ensure working segmentation in single paths)">
                <outline _complete="true" text="Segmentation -&amp;gt; random" />
                <outline _complete="true" text="Random -&amp;gt; segmentation" />
                <outline text="Segmentation -&amp;gt; split w/ winner" />
                <outline text="Random -&amp;gt; split w/winner" />
                <outline text="Random -&amp;gt; random" />
              </outline>
              <outline text="Mutual exclusivity ...">
                <outline text="Within blocks">
                  <outline _complete="true" text="Segment block items">
                    <outline _complete="true" text="Plus catch-alls" />
                  </outline>
                  <outline _complete="true" text="Random splits">
                    <outline text="Plus catch-alls" />
                  </outline>
                  <outline text="Split test w/ winner">
                    <outline text="Plus catch-alls" />
                  </outline>
                </outline>
                <outline _complete="true" text="Between multiple blocks" />
              </outline>
              <outline text="Inclusivity ...">
                <outline text="I.e. child block item in path should be a subset of parent" />
                <outline _complete="true" text="Segmentation -&amp;gt; segmentation" />
                <outline _complete="true" text="Segmentation -&amp;gt; Random" />
                <outline _complete="true" text="Random -&amp;gt; segmentation" />
                <outline text="Random -&amp;gt; Random" />
                <outline text="Segmentation -&amp;gt; winner" />
                <outline text="Random -&amp;gt; winner" />
                <outline _complete="true" text="Three deep?" />
              </outline>
            </outline>
          </outline>
          <outline text="Scheduling/batching (validate correct send time and config)">
            <outline _complete="true" text="Devanka found issue">
              <outline text="Payload" _note="{&quot;title&quot;:&quot;Copy of Copy of test send in batches&quot;,&quot;template&quot;:{&quot;template_instance_id&quot;:8973,&quot;template_instance_revision_id&quot;:10247,&quot;subject&quot;:&quot;{% if not profile.name %}{{ profile.name }}{{ profile.gender }}{{ profile.email }}{% else %}nc{% endif %}&quot;,&quot;subject_configuration&quot;:{&quot;defaultSubject&quot;:&quot;nc&quot;,&quot;filter&quot;:[{&quot;filters&quot;:{&quot;field&quot;:&quot;name&quot;,&quot;op&quot;:&quot;is_empty&quot;,&quot;value&quot;:[]},&quot;label&quot;:[&quot;true&quot;],&quot;subject&quot;:&quot;{{ profile.name }}{{ profile.gender }}{{ profile.email }}&quot;}]},&quot;preheader&quot;:&quot;{{ profile.number_of_items_purchased }}{{ profile.lifecycle_status }}{{ profile.email }}{{ profile.gender }}{{ profile.name }}{{ profile.firstname }}{{ profile.lastname }}&quot;},&quot;delivery&quot;:{&quot;schedule_mode&quot;:&quot;schedule&quot;,&quot;dt_scheduled_display&quot;:null,&quot;batch_mode&quot;:&quot;over_time&quot;,&quot;batch_data&quot;:{&quot;batch_count&quot;:20,&quot;batch_delay&quot;:1,&quot;batch_delay_unit&quot;:&quot;minutes&quot;},&quot;from_name&quot;:&quot;Broadcast user&quot;,&quot;from_email_address&quot;:&quot;broadcast22@ometria.email&quot;,&quot;reply_to&quot;:&quot;broadcast22@ometria.email&quot;,&quot;url_parameters&quot;:{&quot;bx_profile&quot;:&quot;{{profile.hash}}&quot;,&quot;bx_profile2&quot;:&quot;asdasd&quot;,&quot;matt_test&quot;:&quot;hello2&quot;,&quot;template_title&quot;:&quot;{{ email.template_title|urlencode }}&quot;,&quot;type&quot;:&quot;broadcast&quot;,&quot;utm_medium&quot;:&quot;email&quot;}},&quot;recipients&quot;:{&quot;customer_list_id&quot;:null,&quot;customer_query&quot;:{&quot;and_filters&quot;:[{&quot;field&quot;:&quot;exclude_nonengaged&quot;,&quot;op&quot;:&quot;eq&quot;,&quot;value&quot;:[&quot;true&quot;]}],&quot;filters&quot;:[{&quot;field&quot;:&quot;email&quot;,&quot;op&quot;:&quot;startswith&quot;,&quot;value&quot;:[&quot;sam+bui&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;customer_suppress_list_id&quot;:null,&quot;customer_suppress_query&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;email&quot;,&quot;op&quot;:&quot;not_startswith&quot;,&quot;value&quot;:[&quot;sam+bui&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;exclude_unengaged&quot;:true,&quot;exclude_all_automation&quot;:false},&quot;segmentation_tree&quot;:{&quot;type&quot;:&quot;initial&quot;,&quot;childBlock&quot;:{&quot;id&quot;:2,&quot;type&quot;:&quot;segmentation&quot;,&quot;items&quot;:[{&quot;id&quot;:1,&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 1&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;email&quot;,&quot;op&quot;:&quot;startswith&quot;,&quot;value&quot;:[&quot;sam+bui&quot;]}],&quot;group&quot;:&quot;customers&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;childBlock&quot;:{&quot;id&quot;:3,&quot;type&quot;:&quot;split&quot;,&quot;items&quot;:[{&quot;id&quot;:1,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:100},&quot;childBlock&quot;:{&quot;id&quot;:4,&quot;type&quot;:&quot;split&quot;,&quot;items&quot;:[{&quot;id&quot;:1,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50},&quot;childBlock&quot;:{&quot;id&quot;:8,&quot;type&quot;:&quot;split&quot;,&quot;items&quot;:[{&quot;id&quot;:1,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50},&quot;childBlock&quot;:{&quot;id&quot;:9,&quot;type&quot;:&quot;split&quot;,&quot;items&quot;:[{&quot;id&quot;:1,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:100}}]}},{&quot;id&quot;:2,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}}]}},{&quot;id&quot;:2,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50},&quot;childBlock&quot;:{&quot;id&quot;:5,&quot;type&quot;:&quot;split&quot;,&quot;items&quot;:[{&quot;id&quot;:1,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50},&quot;childBlock&quot;:{&quot;id&quot;:7,&quot;type&quot;:&quot;split&quot;,&quot;items&quot;:[{&quot;id&quot;:1,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:25}},{&quot;id&quot;:2,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:25}},{&quot;id&quot;:3,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 3&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:25}},{&quot;id&quot;:4,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 4&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:25}}]}},{&quot;id&quot;:2,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}}]}}]}}]}},{&quot;id&quot;:2,&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 2&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;email&quot;,&quot;op&quot;:&quot;contains&quot;,&quot;value&quot;:[&quot;sam+bui&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;childBlock&quot;:{&quot;id&quot;:6,&quot;type&quot;:&quot;split&quot;,&quot;items&quot;:[{&quot;id&quot;:1,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}},{&quot;id&quot;:2,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}}]}}]}},&quot;variants&quot;:[{&quot;title&quot;:&quot;Segment 1 &amp;gt; Split 1 &amp;gt; Split 1 &amp;gt; Split 1 &amp;gt; Split 1&quot;,&quot;blockId&quot;:9,&quot;blockItemId&quot;:1,&quot;template&quot;:{},&quot;delivery&quot;:{&quot;schedule_mode&quot;:null},&quot;leaf&quot;:{&quot;id&quot;:1,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:100}},&quot;path&quot;:[{&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 1&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;email&quot;,&quot;op&quot;:&quot;startswith&quot;,&quot;value&quot;:[&quot;sam+bui&quot;]}],&quot;group&quot;:&quot;customers&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:100},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:100}}]},{&quot;title&quot;:&quot;Segment 1 &amp;gt; Split 1 &amp;gt; Split 1 &amp;gt; Split 2&quot;,&quot;blockId&quot;:8,&quot;blockItemId&quot;:2,&quot;template&quot;:{},&quot;delivery&quot;:{&quot;schedule_mode&quot;:null},&quot;leaf&quot;:{&quot;id&quot;:2,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}},&quot;path&quot;:[{&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 1&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;email&quot;,&quot;op&quot;:&quot;startswith&quot;,&quot;value&quot;:[&quot;sam+bui&quot;]}],&quot;group&quot;:&quot;customers&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:100},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}}]},{&quot;title&quot;:&quot;Segment 1 &amp;gt; Split 1 &amp;gt; Split 2 &amp;gt; Split 1 &amp;gt; Split 1&quot;,&quot;blockId&quot;:7,&quot;blockItemId&quot;:1,&quot;template&quot;:{},&quot;delivery&quot;:{&quot;schedule_mode&quot;:null},&quot;leaf&quot;:{&quot;id&quot;:1,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:25}},&quot;path&quot;:[{&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 1&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;email&quot;,&quot;op&quot;:&quot;startswith&quot;,&quot;value&quot;:[&quot;sam+bui&quot;]}],&quot;group&quot;:&quot;customers&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:100},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:25}}]},{&quot;title&quot;:&quot;Segment 1 &amp;gt; Split 1 &amp;gt; Split 2 &amp;gt; Split 1 &amp;gt; Split 2&quot;,&quot;blockId&quot;:7,&quot;blockItemId&quot;:2,&quot;template&quot;:{},&quot;delivery&quot;:{&quot;schedule_mode&quot;:null},&quot;leaf&quot;:{&quot;id&quot;:2,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:25}},&quot;path&quot;:[{&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 1&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;email&quot;,&quot;op&quot;:&quot;startswith&quot;,&quot;value&quot;:[&quot;sam+bui&quot;]}],&quot;group&quot;:&quot;customers&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:100},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:25}}]},{&quot;title&quot;:&quot;Segment 1 &amp;gt; Split 1 &amp;gt; Split 2 &amp;gt; Split 1 &amp;gt; Split 3&quot;,&quot;blockId&quot;:7,&quot;blockItemId&quot;:3,&quot;template&quot;:{},&quot;delivery&quot;:{&quot;schedule_mode&quot;:null},&quot;leaf&quot;:{&quot;id&quot;:3,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 3&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:25}},&quot;path&quot;:[{&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 1&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;email&quot;,&quot;op&quot;:&quot;startswith&quot;,&quot;value&quot;:[&quot;sam+bui&quot;]}],&quot;group&quot;:&quot;customers&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:100},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 3&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:25}}]},{&quot;title&quot;:&quot;Segment 1 &amp;gt; Split 1 &amp;gt; Split 2 &amp;gt; Split 1 &amp;gt; Split 4&quot;,&quot;blockId&quot;:7,&quot;blockItemId&quot;:4,&quot;template&quot;:{},&quot;delivery&quot;:{&quot;schedule_mode&quot;:null},&quot;leaf&quot;:{&quot;id&quot;:4,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 4&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:25}},&quot;path&quot;:[{&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 1&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;email&quot;,&quot;op&quot;:&quot;startswith&quot;,&quot;value&quot;:[&quot;sam+bui&quot;]}],&quot;group&quot;:&quot;customers&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:100},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 4&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:25}}]},{&quot;title&quot;:&quot;Segment 1 &amp;gt; Split 1 &amp;gt; Split 2 &amp;gt; Split 2&quot;,&quot;blockId&quot;:5,&quot;blockItemId&quot;:2,&quot;template&quot;:{},&quot;delivery&quot;:{&quot;schedule_mode&quot;:null},&quot;leaf&quot;:{&quot;id&quot;:2,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}},&quot;path&quot;:[{&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 1&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;email&quot;,&quot;op&quot;:&quot;startswith&quot;,&quot;value&quot;:[&quot;sam+bui&quot;]}],&quot;group&quot;:&quot;customers&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:100},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}}]},{&quot;title&quot;:&quot;Segment 2 &amp;gt; Split 1&quot;,&quot;blockId&quot;:6,&quot;blockItemId&quot;:1,&quot;template&quot;:{},&quot;delivery&quot;:{&quot;schedule_mode&quot;:null},&quot;leaf&quot;:{&quot;id&quot;:1,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}},&quot;path&quot;:[{&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 2&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;email&quot;,&quot;op&quot;:&quot;contains&quot;,&quot;value&quot;:[&quot;sam+bui&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 1&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}}]},{&quot;title&quot;:&quot;Segment 2 &amp;gt; Split 2&quot;,&quot;blockId&quot;:6,&quot;blockItemId&quot;:2,&quot;template&quot;:{},&quot;delivery&quot;:{&quot;schedule_mode&quot;:null},&quot;leaf&quot;:{&quot;id&quot;:2,&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}},&quot;path&quot;:[{&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 2&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;email&quot;,&quot;op&quot;:&quot;contains&quot;,&quot;value&quot;:[&quot;sam+bui&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;},&quot;childBlock&quot;:{&quot;items&quot;:[{}]}},{&quot;type&quot;:&quot;split&quot;,&quot;title&quot;:&quot;Split 2&quot;,&quot;data&quot;:{&quot;splitPercent&quot;:50}}]}]}" />
            </outline>
            <outline text="Single variant">
              <outline _complete="true" text="Schedule now (default)" />
              <outline _complete="true" text="Schedule in future" />
              <outline text="Optimal time">
                <outline text="CAMPAIGN SETTINGS" />
                <outline text="VARIANT SETTINGS">
                  <outline text="Broken payload" _note="{&quot;title&quot;:&quot;TEST ER single batch type optimal time VARIANT DATA&quot;,&quot;template&quot;:{&quot;template_instance_id&quot;:null,&quot;template_instance_revision_id&quot;:null,&quot;subject&quot;:null,&quot;subject_configuration&quot;:{},&quot;preheader&quot;:null},&quot;delivery&quot;:{&quot;schedule_mode&quot;:&quot;optimize&quot;,&quot;dt_scheduled_display&quot;:&quot;2019-05-01 23:00:00+00:00&quot;,&quot;batch_mode&quot;:&quot;optimal_time&quot;,&quot;batch_data&quot;:null,&quot;from_name&quot;:&quot;Broadcast user&quot;,&quot;from_email_address&quot;:&quot;broadcast22@ometria.email&quot;,&quot;reply_to&quot;:&quot;broadcast22@ometria.email&quot;,&quot;url_parameters&quot;:{&quot;bx_profile&quot;:&quot;{{profile.hash}}&quot;,&quot;bx_profile2&quot;:&quot;asdasd&quot;,&quot;matt_test&quot;:&quot;hello2&quot;,&quot;template_title&quot;:&quot;{{ email.template_title|urlencode }}&quot;,&quot;type&quot;:&quot;broadcast&quot;,&quot;utm_medium&quot;:&quot;email&quot;}},&quot;recipients&quot;:{&quot;customer_list_id&quot;:null,&quot;customer_query&quot;:{&quot;and_filters&quot;:[{&quot;field&quot;:&quot;exclude_nonengaged&quot;,&quot;op&quot;:&quot;eq&quot;,&quot;value&quot;:[&quot;true&quot;]}]},&quot;customer_suppress_list_id&quot;:null,&quot;customer_suppress_query&quot;:{},&quot;exclude_unengaged&quot;:true,&quot;exclude_all_automation&quot;:false},&quot;segmentation_tree&quot;:{&quot;type&quot;:&quot;initial&quot;,&quot;childBlock&quot;:{&quot;id&quot;:1,&quot;type&quot;:&quot;segmentation&quot;,&quot;items&quot;:[{&quot;id&quot;:1,&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 1&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;email&quot;,&quot;op&quot;:&quot;contains&quot;,&quot;value&quot;:[&quot;sam+bui&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;}}]}},&quot;variants&quot;:[{&quot;title&quot;:&quot;Segment 1&quot;,&quot;blockId&quot;:1,&quot;blockItemId&quot;:1,&quot;template&quot;:{&quot;template_instance_id&quot;:8966,&quot;template_instance_revision_id&quot;:10238,&quot;subject&quot;:&quot;TEST ER single batch type optimal time VARIANT DATA&quot;,&quot;subject_configuration&quot;:null,&quot;preheader&quot;:&quot;Optimal variant preheader&quot;,&quot;template_preview&quot;:&quot;https://api.urlbox.io/v1/8e55ae0a-7277-4536-854e-16976e1350fe/12f9b768648bc3b7d9674adf2cb4f23d61018310/png?thumb_width=400&amp;amp;full_page=true&amp;amp;width=800&amp;amp;delay=1&amp;amp;skip_scroll=true&amp;amp;url=https%3A%2F%2Fappstaging.ometria.com%2Fmisc%2Ftemplate-preview.php%3Facc%3D352%26id%3D10238%26render%3Dtemplate_instance_revision%26mode%3Ddraft%26cb%3Dc62dd01c%26sig%3D7184a7bfae41bee79f698270342ae9c94c9082b86e74d7e0f646c1fd1db532be&quot;},&quot;delivery&quot;:{&quot;schedule_mode&quot;:&quot;optimize&quot;,&quot;dt_scheduled_display&quot;:&quot;2019-05-02T10:30:00Z&quot;,&quot;batch_mode&quot;:&quot;optimal_time&quot;,&quot;batch_data&quot;:{&quot;interval_hours&quot;:24}},&quot;leaf&quot;:{&quot;id&quot;:1,&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 1&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;email&quot;,&quot;op&quot;:&quot;contains&quot;,&quot;value&quot;:[&quot;sam+bui&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;}},&quot;path&quot;:[{&quot;type&quot;:&quot;segmentation&quot;,&quot;title&quot;:&quot;Segment 1&quot;,&quot;data&quot;:{&quot;filters&quot;:[{&quot;field&quot;:&quot;email&quot;,&quot;op&quot;:&quot;contains&quot;,&quot;value&quot;:[&quot;sam+bui&quot;]}],&quot;group&quot;:&quot;all&quot;,&quot;query_type&quot;:&quot;and&quot;}}]}]}" />
                </outline>
              </outline>
              <outline text="Over time" />
              <outline text="Local time" />
            </outline>
            <outline text="Multiple variants (two might do)">
              <outline _complete="true" text="Schedule now (default)" />
              <outline text="Schedule in future" />
              <outline text="Optimal time" />
              <outline text="Over time" />
              <outline text="Local time" />
            </outline>
            <outline text="Winner variants">
              <outline text="#todo Delay" />
              <outline text="#todo Correct variant winner generation">
                <outline text="#todo Other batch types in winner (optimal etc)??" />
              </outline>
            </outline>
          </outline>
          <outline text="#todo As many obscure segmentation filters as poss" />
          <outline _complete="true" text="ENSURE BACKWARDS COMPATIBILITY">
            <outline text="#todo Detailed check of mass_email flow to ensure existing one is untouched" />
            <outline text="#todo Mass email code review - ask??" />
          </outline>
          <outline text="Performance (later on)" />
          <outline text="Campaign operations">
            <outline _complete="true" text="Create" />
            <outline _complete="true" text="Get" />
            <outline _complete="true" text="List" />
            <outline text="Delete" />
            <outline text="Duplicate">
              <outline text="PLUS from legacy campaigns" />
            </outline>
            <outline text="Test sends">
              <outline text="Single" />
              <outline text="Multiple" />
            </outline>
            <outline text="Pause" />
            <outline text="Resume" />
            <outline text="Cancel" />
            <outline text="Schedule" />
            <outline text="Unschedule" />
          </outline>
        </outline>
        <outline _complete="true" text="Sprint 1 tasks">
          <outline _complete="true" text="DEPLOY BLUEPRINTS #todo" />
          <outline _complete="true" text="Deploy datamodels with blueprint model #todo" />
          <outline _complete="true" text="PR BLUEPRINTS UI #todo" />
          <outline _complete="true" text="Validate `name` for `blueprint` #todo" />
          <outline _complete="true" text="send_test endpoint #todo #proj-broadcast">
            <outline text="Variant id logic change (now read from variants array) - investigate #todo">
              <outline text="Various fields need to be read from the variants array objects" />
              <outline text="Fall back to campaign if not defined" />
            </outline>
            <outline text="Make sure overridden subject is retrieved from variant and not campaign if poss in #todo" />
          </outline>
          <outline _complete="true" text="Passing empty tree to segmentation API returns 500. Empty tree = initial block with no child block #todo" />
          <outline _complete="true" text="url_parameters.parameters.keys should be url_pararameters.keys #todo" _note="Diff between url_parameters in and out of recipients field (one is enforced, one isn't)" />
        </outline>
        <outline _complete="true" text="Deployments #proj-broadcast">
          <outline _complete="true" text="Ometria.coreservices update required" />
          <outline text="**DEPLOYMENT PLAN**">
            <outline _complete="true" text="Create beta release for datamodels" />
            <outline text="datamodels release -&amp;gt; 5.88-beta">
              <outline text="Might have issues when pip installing in lib.segmentation" />
            </outline>
            <outline text="Create beta release for lib.segmentation" />
            <outline text="Update dependencies in lib.segmentation">
              <outline text="lib.datamodels" />
            </outline>
            <outline text="Update dependencies in api.campaigns">
              <outline text="lib.segmentation" />
              <outline text="lib.datamodels" />
              <outline text="lib.monitoring_db_logger" />
            </outline>
            <outline text="Update dependencies in mass_email">
              <outline text="lib.segmentation" />
              <outline text="lib.datamodels" />
              <outline text="lib.monitoring_db_logger" />
            </outline>
          </outline>
          <outline _complete="true" text="lib.segmentation #todo">
            <outline text="Deploy release" />
            <outline text="Update dependencies in api.campaigns and mass_email" />
          </outline>
          <outline _complete="true" text="Migrations #todo">
            <outline text="variant.segmentation_block_id, variant.segmentation_block_item_id" />
            <outline text="variant.schedule_mode" />
            <outline text="config.data -&amp;gt; config.segmentation_tree" />
            <outline text="removed config.and_filters" />
            <outline text="Other fields (all in single migration now)" />
          </outline>
          <outline _complete="true" text="datamodels #todo">
            <outline text="Sync with above" />
            <outline text="Create release" />
            <outline text="Update dependencies in api.campaigns, mass_email, lib.segmentation (INVESTIGATE OTHERS)" />
          </outline>
          <outline _complete="true" text="Use mass_campaign_configuration table">
            <outline text="New field or implied via no related mass_campaign.mass_campaign_configuration entry?" />
            <outline text="Issues with implied via no joining field?" />
          </outline>
          <outline _complete="true" text="Update document to detail new segmentation approach #todo " _note="https://ometria.atlassian.net/wiki/spaces/DZ/pages/267682224/Segmentation+API" />
          <outline _complete="true" text="New table mass_campaign_blueprints/mass_campaign_configuration_blueprints #todo">
            <outline text="recipients json" />
            <outline text="segmentation_tree json" />
            <outline text="account_id, nullable to allow for global ometria blueprints" />
          </outline>
          <outline _complete="true" text="Deploy new datamodels including revert back to no relationships plus refs #todo" />
          <outline _complete="true" text="Deploy ecomm migrations #todo" />
          <outline _complete="true" text="Update ometria_lib_monitoring_db_logger #todo">
            <outline text="Investigate what else this entails? #todo" />
          </outline>
          <outline text="Monitoring migrations #todo">
            <outline _complete="true" text="Write monitoring migrations #todo" />
            <outline _complete="true" text="Deploy monitoring migrations #todo" />
            <outline _complete="true" text="Update actual model in datamodels #todo" />
          </outline>
          <outline _complete="true" text="Remove `and_filters` row from mass_campaign_configuration and store/retrieve in customer_query as is done presently #todo" />
          <outline _complete="true" text="Use opportunity pre-deployment to change mass_campaign_configuration.data to &quot;segmentation_tree&quot;? #todo" />
          <outline _complete="true" text="Fix except on siblings #todo">
            <outline text="except_ (all previous siblings joined)" />
          </outline>
          <outline _complete="true" text="Consider refactor of new API (perhaps using marshmallow-sqlalchemy) #todo" />
        </outline>
        <outline _complete="true" text="Manual testing flow">
          <outline text="Setup">
            <outline text="Run developer environment" />
            <outline text="Run container in mass_email" _note="docker-compose -f docker-compose-ci.yml up -d campaign_interface_gearman" />
            <outline text="Run migrations locally if required" />
            <outline text="If running dev env reduced db, insert my user" _note="insert into customers (account_id, email, firstname, lastname, optin, is_email_valid) values (352, 'sam@ometria.com', 'Sam', 'Lock', true, true)" />
            <outline text="Update TEMP mass_email dependencies if required" _note="pip install -e git+https://825493dfcfe37655b9bb8fbc574df64eecdb907d@github.com/Ometria/ometria.lib.segmentation.git@c7456f2#egg=ometria_lib_segmentation&#10;pip install -e git+https://825493dfcfe37655b9bb8fbc574df64eecdb907d@github.com/Ometria/ometria.datamodels.git@86864b0#egg=ometria_datamodels" />
            <outline text="Add required rows in ecomm" _note="insert into connections (account_id, type) values (352, 'ometria_sparkpost');&#10;insert into customers (account_id, email, firstname, lastname, optin, is_email_valid) values (352, 'sam@ometria.com', 'Sam', 'Lock', true, true)" />
            <outline text="Add required accounts.data in core" _note="'{&quot;start_of_year&quot;:1356912000,&quot;currency&quot;:&quot;EUR&quot;,&quot;country&quot;:&quot;GB&quot;,&quot;lifecycle&quot;:{&quot;at_risk_days&quot;:182,&quot;lapsed_days&quot;:385},&quot;campaign_settings&quot;:{&quot;email&quot;:{&quot;default_from_address&quot;:&quot;automation@ometria.email&quot;,&quot;default_from_name&quot;:&quot;Automation user&quot;,&quot;default_reply_to_address&quot;:&quot;automation-reply@ometria.email&quot;,&quot;optin_mode&quot;:&quot;loose&quot;,&quot;use_variant_data_in_marketing&quot;:false,&quot;default_url_parameters&quot;:{&quot;utm_medium&quot;:&quot;email&quot;,&quot;utm_source&quot;:&quot;newsletter&quot;,&quot;type&quot;:&quot;automation&quot;,&quot;matt_test&quot;:&quot;track3&quot;}},&quot;mass_email&quot;:{&quot;default_from_address&quot;:&quot;broadcast22@ometria.email&quot;,&quot;default_from_name&quot;:&quot;Broadcast user&quot;,&quot;default_reply_to_address&quot;:&quot;broadcast22@ometria.email&quot;,&quot;optin_mode&quot;:&quot;strict&quot;,&quot;default_url_parameters&quot;:{&quot;type&quot;:&quot;broadcast&quot;,&quot;utm_medium&quot;:&quot;email&quot;,&quot;bx_profile&quot;:&quot;{{profile.hash}}&quot;,&quot;bx_profile2&quot;:&quot;asdasd&quot;,&quot;template_title&quot;:&quot;{{ email.template_title|urlencode }}&quot;,&quot;matt_test&quot;:&quot;hello2&quot;}},&quot;transactional_email&quot;:{&quot;default_from_address&quot;:&quot;mickey-test@ometria.com&quot;,&quot;default_from_name&quot;:&quot;mickey-test&quot;,&quot;default_reply_to_address&quot;:&quot;mickey-test@ometria.com&quot;,&quot;default_url_parameters&quot;:{&quot;template_title&quot;:&quot;{{ email.template_title|urlencode }}&quot;,&quot;om_profile&quot;:&quot;{{ profile.hash }}&quot;,&quot;matt_test&quot;:&quot;hello&quot;}},&quot;limits&quot;:{&quot;max_emails_past_day&quot;:8,&quot;max_emails_past_week&quot;:5}},&quot;forms&quot;:{&quot;email&quot;:{&quot;default_from_address&quot;:null,&quot;default_from_name&quot;:null,&quot;default_subject&quot;:null}},&quot;whitelisted_stores&quot;:null,&quot;week_first_day&quot;:&quot;Monday&quot;,&quot;locale&quot;:&quot;en_GB.UTF-8&quot;,&quot;week_last_day&quot;:&quot;Sunday&quot;,&quot;timezone&quot;:&quot;e8725:Europe\/London&quot;,&quot;features&quot;:[&quot;v2:email_engagement_cohort&quot;,&quot;v2:magento_coupon_expiry&quot;,&quot;v2:taste_profiling&quot;,&quot;v2:connections&quot;,&quot;v2:contact_upload&quot;,&quot;v2:coupon_pools&quot;,&quot;v2:customer_health2&quot;,&quot;v2:filter_email_interactions&quot;,&quot;v2:mass_email&quot;,&quot;v2:realtime&quot;,&quot;v2:segment_evolution&quot;,&quot;v2:send_time_optimisation&quot;,&quot;v2:sms&quot;,&quot;v2:templates&quot;,&quot;v2:tf_template_instance_edit&quot;,&quot;v2:transactional_email&quot;,&quot;v2:transactional_automation_emails&quot;],&quot;formatting&quot;:{&quot;currency&quot;:{&quot;GBP&quot;:{&quot;prefix&quot;:&quot;\u00a3&quot;,&quot;dec_point&quot;:&quot;.&quot;,&quot;decimals&quot;:&quot;AUTO&quot;,&quot;thousands_sep&quot;:&quot;,&quot;},&quot;EUR&quot;:{&quot;prefix&quot;:&quot;\u20ac&quot;,&quot;dec_point&quot;:&quot;.&quot;,&quot;decimals&quot;:&quot;AUTO&quot;,&quot;thousands_sep&quot;:&quot;,&quot;}},&quot;number&quot;:{&quot;default&quot;:{&quot;thousands_sep&quot;:&quot;,&quot;,&quot;dec_point&quot;:&quot;.&quot;,&quot;decimals&quot;:&quot;AUTO&quot;}}}}'" />
            <outline text="Run test_broadcast_send.fish (in mass_email)">
              <outline text="Required json for &quot;template&quot;" _note="    &quot;template&quot;: {&#10;        &quot;subject&quot;: &quot;Test subject&quot;,&#10;        &quot;template_instance_id&quot;: 6692,&#10;        &quot;template_instance_revision_id&quot;: 7014&#10;    }," />
            </outline>
            <outline text="#todo enable mass_email service/gearman worker that allows validation of campaigns" />
            <outline text="Schedule curl request" _note="curl -s -X POST \&#10;-H &quot;Content-Type: application/json&quot; \&#10;-H &quot;Ometria-Account-Id:352&quot; \&#10;-H &quot;Ometria-User-Id:34&quot; \&#10;-H &quot;Ometria-User-Email:dev@ometria.com&quot; \&#10;-H &quot;Ometria-User-Permissions:view_campaigns,schedule_mass_campaign&quot; \&#10;&quot;http://127.0.0.1:8080/campaigns/mass/1/schedule&quot;" />
          </outline>
          <outline text="In repl" _note="from ometria_mass_email.campaign_processor.variant_processors import process_campaign_variants&#10;from ometria_mass_email.database.sessions import get_database_session&#10;session = get_database_session(352)&#10;from ometria_datamodels.ecomm import MassCampaign&#10;campaign = session.query(MassCampaign).one()&#10;from ometria_mass_email.campaign_processor.backend import generate_campaign_table&#10;campaign_table = generate_campaign_table(session, campaign)&#10;process_campaign_variants(session, campaign_table, campaign)&#10;&#10;session.commit()" />
          <outline text="Printed queries">
            <outline text="from_subquery" _note="SELECT campaigns.mass_352_1.uuid, row_number() OVER (ORDER BY campaigns.mass_352_1.uuid) AS rn, campaigns.mass_352_1.timezone AS tz, campaigns.mass_352_1.optimal_delivery_slot AS slot&#10;FROM campaigns.mass_352_1" />
            <outline text="update_query" _note="UPDATE campaigns.mass_352_1 SET batch_id=CASE WHEN (recipient_subquery.rn &amp;gt;= :recipient_subquery.rn_1 AND recipient_subquery.rn &amp;lt;= :recipient_subquery.rn_2) THEN :param_1 END FROM (SELECT anon_1.id AS id&#10;FROM (SELECT customers.id AS id&#10;FROM customers&#10;WHERE customers.account_id = :account_id_1 AND customers.email = any(:any_1) AND not(EXISTS (SELECT 1&#10;FROM customers_health_dimensions&#10;WHERE customers_health_dimensions.customer_id = customers.id AND customers_health_dimensions.engagement = :engagement_1))) AS anon_2 JOIN (SELECT customers.id AS id&#10;FROM customers&#10;WHERE customers.account_id = :account_id_2 AND customers.account_id = :account_id_3 AND customers.email = any(:any_2) AND customers.firstname = any(:any_3)) AS anon_1 ON anon_2.id = anon_1.id), (SELECT campaigns.mass_352_1.uuid AS uuid, row_number() OVER (ORDER BY campaigns.mass_352_1.uuid) AS rn, campaigns.mass_352_1.timezone AS tz, campaigns.mass_352_1.optimal_delivery_slot AS slot&#10;FROM campaigns.mass_352_1) AS recipient_subquery WHERE campaigns.mass_352_1.customer_id = id AND campaigns.mass_352_1.uuid = recipient_subquery.uuid" />
            <outline text="print(update_query.compile(compile_kwargs={&quot;literal_binds&quot;: True}))" _note="UPDATE campaigns.mass_352_1 SET batch_id=CASE WHEN (recipient_subquery.rn &amp;gt;= 1 AND recipient_subquery.rn &amp;lt;= 1) THEN 1 END FROM (SELECT anon_1.id AS id&#10;FROM (SELECT customers.id AS id&#10;FROM customers&#10;WHERE customers.account_id = 352 AND customers.email = any(NULL) AND not(EXISTS (SELECT 1&#10;FROM customers_health_dimensions&#10;WHERE customers_health_dimensions.customer_id = customers.id AND customers_health_dimensions.engagement = 0))) AS anon_2 JOIN (SELECT customers.id AS id&#10;FROM customers&#10;WHERE customers.account_id = 352 AND customers.account_id = 352 AND customers.email = any(NULL) AND customers.firstname = any(NULL)) AS anon_1 ON anon_2.id = anon_1.id), (SELECT campaigns.mass_352_1.uuid AS uuid, row_number() OVER (ORDER BY campaigns.mass_352_1.uuid) AS rn, campaigns.mass_352_1.timezone AS tz, campaigns.mass_352_1.optimal_delivery_slot AS slot&#10;FROM campaigns.mass_352_1) AS recipient_subquery WHERE campaigns.mass_352_1.customer_id = id AND campaigns.mass_352_1.uuid = recipient_subquery.uuid" />
          </outline>
          <outline text="Running mass_email recently. Run docker-compose-ci.yml">
            <outline text="Expose rabbitmq port in above file" _note="  rabbitmq:&#10;    image: rabbitmq:3.6-management-alpine&#10;    networks:&#10;     - ometriadeveloper_environment_default&#10;    ports:&#10;     - &quot;5672:5672&quot; # daemon API" />
          </outline>
        </outline>
        <outline text="#todo remove datadog segmentation metrics" />
        <outline text="Non-critical">
          <outline text="Move tests to lib.segmentation lib #todo" />
          <outline _complete="true" text="Ensure all tests have correct naming convention, so some mass.api.&amp;lt;endpoint&amp;gt;s should imply that they receive configs rather than campaigns #todo" />
          <outline text="#todo console in infrastructure for test environment">
            <outline text="Nearly. `Broadcast email use` requires a redshift db" />
          </outline>
          <outline text="#todo mass_email review">
            <outline _complete="true" text="#todo Mass campaign config cache pointless" />
            <outline _complete="true" text="#todo Add comment to delete from campaign table" />
            <outline _complete="true" text="#todo Comment into additional constraint in batch processor where segmentation_block_id is passed" />
            <outline _complete="true" text="#todo add another end to end test in mass_email `e2e`" />
            <outline _complete="true" text="#todo Failing circleci unit test">
              <outline text="Due to &quot;not null&quot; constraints firing on inserts into mass_email_configuration. Possibly an issue with seq messing up again" />
            </outline>
          </outline>
          <outline text="Consider adding new `mass_campaign_variant.is_sending` which can be added to the API for more granular send information (given the added potential complexity in campaigns) #todo" _note="Within a broadcast campaign list (show which variants inside a campaign are sending etc).">
            <outline text="Also add `is_sent`. Prep for all poss states." />
            <outline text="Run in parallel with other required migration" />
          </outline>
          <outline text="#todo add tree validation on schedule" />
        </outline>
        <outline text="ometria.infrastructure">
          <outline text="DANGER kubectx for switching between clusters">
            <outline text="BE CAREFUL HERE. Know where you are applying" />
          </outline>
          <outline text="Update api.campaigns">
            <outline text="broadcast-ui-test-env/ometria-manifests/api-campaigns.yaml">
              <outline text="Update image and `kubectl apply`" />
            </outline>
          </outline>
          <outline text="Update mass_email">
            <outline text="broadcast-ui-test-env/ecs-tasks/variables.tf">
              <outline text="Update mass_email_docker_image" />
              <outline text="zsh" />
              <outline text="`source aws_assume_role_zsh.sh arn:aws:iam::425412661744:role/Ops_Users OmetriaTest`">
                <outline text="" />
              </outline>
              <outline text="cd broadcast-ui-test-env/ecs-tasks" />
              <outline text="terraform apply" />
              <outline text="Kick inactive tasks if necessary on aws (having chosen correct test role)">
                <outline text="Click on task id, &quot;stop&quot;" />
              </outline>
              <outline text="If issues with service resolution (i.e. rabbitmq) it might be because the NLBs have lost targets due to change in kube configuration (or something)">
                <outline text="cd broadcast-ui-test-env/ometria-terraform" />
                <outline text="terraform apply" />
              </outline>
            </outline>
          </outline>
          <outline text="in /Volumes/Work/server/apps/ometria.infrastructure/broadcast-ui-test-env/ecs-tasks" _note="Eg relevant folder">
            <outline text="`terraform plan` will display what will occur with a `terraform apply`" />
          </outline>
          <outline text="Access console2">
            <outline text="k port-forward console2-cc5bcf6bf-kx5wq 8080:80" _note="k port-forward {pod} {local_port}:{remote_port}" />
          </outline>
          <outline text="Kube auth config (which was put in .kube/config) specified here" _note="broadcast-ui-test-env/tectonic/tectonic_1.9.6-tectonic.1/generated/auth/kubeconfig" />
        </outline>
        <outline text="#om-script .compile(compile_kwargs={&quot;literal_binds&quot;: True})">
          <outline text="print(query.compile(compile_kwargs={&quot;literal_binds&quot;: True}))">
            <outline text="" />
          </outline>
        </outline>
        <outline _complete="true" text="Make safe for nodes with unexpected dict values, i.e. passing type `split` and no `splitPercentage` will fail #todo" />
        <outline _complete="true" text="Define &quot;variants&quot; objects better in swagger doc #todo" />
      </outline>
      <outline text="SMS #proj-sms">
        <outline text="console2 branch tag `feature_sms`" />
      </outline>
      <outline text="Archived">
        <outline text="Broadcast UI" _note="https://docs.google.com/spreadsheets/d/1hEA30ECXmzD-8tB1oHHYf4_ynoE99maXSIVnTPi7sjY/edit?ts=5bc9e9de">
          <outline _complete="true" text="Does changing `scheduled_mode` remove the need for `dt_scheduled_display` on mass_campaign? #todo" />
          <outline text="Research" _note="Current flow (standard, non-split etc), API calls and template generation">
            <outline text="RECIPIENT tab, create campaign">
              <outline text="POST to `service/mass-email/campaigns/mass`, in api.campaigns." />
              <outline text="Adds to mass_campaign and mass_campaign_variant" />
              <outline text="Linked to each other and variant is_master = true" />
              <outline text="Template data all null" />
            </outline>
            <outline text="SETUP tab, further updates">
              <outline text="PUT to `service/mass-email/campaigns/mass/&amp;lt;id&amp;gt;`" />
              <outline text="Updates `subject` and `preheader` on mass_campaign table but NOT `mass_campaign_variant` table" />
            </outline>
            <outline text="TEMPLATE tab, template selection">
              <outline text="POST to `service/templates/template-instance`" />
              <outline text="In mass_campaign and mass_campaign_variant, no template data yet updated" />
              <outline _complete="true" text="" />
            </outline>
            <outline text="Click `Next` on TEMPLATE tab, now on DELIVERY tab">
              <outline text="POST to `service/templates/actions/validate`" />
              <outline text="PUT to `service/templates/template-instance/&amp;lt;id&amp;gt;`" />
              <outline text="PUT to `service/mass-email/campaigns/mass/&amp;lt;id&amp;gt;`" />
              <outline text="mass_campaign: template_id still null, BUT template_instance_id and template_instance_revision_id have been set." />
              <outline text="Not in mass_campaign_variant" />
            </outline>
            <outline text="Next, onto REVIEW tab">
              <outline text="PUT to `service/mass-email/campaigns/mass/&amp;lt;id&amp;gt;`" />
            </outline>
            <outline text="Save and send">
              <outline text="PUT to `service/mass-email/campaigns/mass/&amp;lt;id&amp;gt;`" />
              <outline text="POST to `service/mass-email/campaigns/mass/&amp;lt;id&amp;gt;/schedule`" />
            </outline>
            <outline text="In a standard campaign, mass_campaign_variant table does not take any template information (stored in related mass_campaign table)" />
          </outline>
          <outline text="Meetings">
            <outline text="Kick-off meeting #d-181008">
              <outline text="Opting for highest single affinity to attribute defining the winning group" />
              <outline text="Both group name and attribute id(/name?) passed as merge tags for templates" />
              <outline text="Filter out zero-product attributes" />
              <outline text="How we build tree-segmentation? Will it be fast enough?" />
              <outline text="New API required for new data strucute translating to campaign generation" />
              <outline text="Thought required around API for new segmentation" />
              <outline text="Requires changing `scheduled_mode` logic" />
            </outline>
            <outline text="Data structure meeting #d-181011">
              <outline _complete="true" text="Figure out link between tree data structure and generating the per customer table and recursive segmentation calcs #todo">
                <outline _complete="true" text="Generate python tree structure based off input json #todo" />
                <outline text="Create tree_campaign_1 table consisting of all customers returned from basic segmentation query with block_id and block_item_id defaulted to null #todo " />
                <outline _complete="true" text="Depth first walk over tree structure. For each node, update tree_campaign_1 with SET block_id and block_item_id and run any node-specific segmentation query. Compare returned customers with tree_campaign_1 ensuring block_id IS null (hence no overlap on lower sibling node's customers) OR compare with parent customer_id set if has parent. Create customer_id set. #todo" />
                <outline _complete="true" text="Deal with node_id's properly #todo " />
                <outline _complete="true" text="Refine and general tidy #todo " />
                <outline text="Do we need to use connection pools? #todo " />
                <outline _complete="true" text="Handle root node's segmentation data correctly #todo" />
                <outline _complete="true" text="Consider chaining queries down path using segmentation lib and multithreading the requests per leaf node? #todo " />
                <outline _complete="true" text="Ensure threading is per query #todo" />
                <outline _complete="true" text="Investigate split solution as cannot be isolated node query #todo" />
                <outline _complete="true" text="Session needs to be retrieved per query for now #todo" />
              </outline>
              <outline text="We might support a secondary way of estimating a response by only recalculating/querying for the node and applying some intersection to the related/child nodes (thus greatly reducing query time)" />
            </outline>
          </outline>
          <outline text="data structure">
            <outline text="https://ometria.atlassian.net/wiki/spaces/DZ/pages/267059269/Data+structure" />
            <outline text="https://ometria.atlassian.net/wiki/spaces/DZ/pages/267682224/Nested+segmentation" _note="-- 1) Root query&#10;CREATE TABLE tree_campaign_1 AS&#10;    SELECT&#10;        id AS customer_id,&#10;        NULL AS block_id,&#10;        NULL AS block_item_id&#10;    FROM&#10;        customers&#10;    WHERE &amp;lt;root segmentation query&amp;gt;;&#10; &#10;-- 2) First block:&#10;-- Foreach block item:&#10;UPDATE tree_campaign_1&#10;SET block_id=1, block_item_id=1&#10;WHERE customer_id IN (SELECT id FROM customers WHERE account_id=X AND n_transactions_valid=1)&#10;AND block_id IS NULL;&#10; &#10;-- Then its children (we might do a better way to split here, for example):&#10;UPDATE tree_campaign_1&#10;SET block_id=2, block_item_id=(CASE RANDOM() WHEN &amp;lt; 0.5 THEN 1 ELSE 2 END)&#10;WHERE block_id=1;&#10; &#10;-- Back to parents:&#10;UPDATE tree_campaign_1&#10;SET block_id=1, block_item_id=2&#10;WHERE customer_id IN (SELECT id FROM customers WHERE account_id=X AND n_transactions_valid=2)&#10;AND block_id IS NULL;&#10;UPDATE tree_campaign_1&#10; &#10;SET block_id=1, block_item_id=3&#10;WHERE customer_id IN (SELECT id FROM customers WHERE account_id=X AND n_transactions_valid=3)&#10;AND block_id IS NULL;&#10;UPDATE tree_campaign_1&#10; &#10;SET block_id=1, block_item_id=4&#10;WHERE customer_id IN (SELECT id FROM customers WHERE account_id=X AND n_transactions_valid=4)&#10;AND block_id IS NULL;" />
          </outline>
          <outline _complete="true" text="datamodels/migrations">
            <outline _complete="true" text="New table with #todo ">
              <outline _complete="true" text="unique ID" />
              <outline _complete="true" text="account_id" />
              <outline _complete="true" text="1 2 1 mapping to mass_campaigns table (ON DELETE CASCADE)" />
              <outline _complete="true" text="json field" />
              <outline _complete="true" text="variants array" />
              <outline _complete="true" text="dt_created" />
              <outline _complete="true" text="dt_updated" />
              <outline _complete="true" text="and_filters" />
            </outline>
            <outline text="No need to generate new fields for template">
              <outline text="subject: string," />
              <outline text="subject_configuration: object," />
              <outline text="preheader: string," />
            </outline>
            <outline _complete="true" text="Create another new field on mass_campaign table `and_filters` to hold the below filters #todo ">
              <outline _complete="true" text="excludeUnengaged: boolean," />
              <outline _complete="true" text="excludeAllAutomation: boolean," />
              <outline _complete="true" text="excludeAutomationIds: number[]" />
            </outline>
            <outline text="Batch specific fields can just extend the existing batch_data json blob, rather than require creation of new fields" />
            <outline text="Change `mass_campaign_configuration.mass_campaign_id` to NOT NULL" />
            <outline text="Change `mass_campaign_configuration.data` to a better name (this will affect api.campaigns also)" />
            <outline _complete="true" text="Do I need to populate variants array with variant data, or just integers? #todo" />
            <outline _complete="true" text="Make release when ready #todo " />
          </outline>
          <outline text="api.campaigns">
            <outline _complete="true" text="Deal with any unwanted db commit on mass_campaign creation #todo" />
            <outline _complete="true" text="Update lib.monitoring_db_logger reference when ready &lt;span&gt;#todo&lt;/span&gt; " />
            <outline _complete="true" text="Have updated swagger validator and connexion so `x-nullable` should now be supported. Change all back to that. #todo" />
            <outline _complete="true" text="Remove `null` from enums in swagger schema. NOT `none` #todo " />
            <outline _complete="true" text="Update datamodels ref when ready &lt;span&gt;#todo&lt;/span&gt;" />
            <outline _complete="true" text="ENSURE NO REGRESSIONS IN SWAGGER UI &lt;span&gt;#todo&lt;/span&gt;" />
            <outline _complete="true" text="mass_campaign fields to potentially add back in #todo ">
              <outline _complete="true" text="check marshmallow schema #todo " />
              <outline _complete="true" text="check writeable_fields #todo " />
              <outline _complete="true" text="check swagger schema #todo " />
              <outline text="read/write">
                <outline text="is_ready_to_send" />
                <outline text="is_ignore_rate_limiting" />
                <outline text="is_auto_followup_enabled" />
                <outline _complete="true" text="auto_followup_delay" />
                <outline _complete="true" text="auto_followup_delay_unit" />
                <outline _complete="true" text="auto_followup_subject" />
                <outline text="n_recipients_estimated" />
              </outline>
              <outline text="read only">
                <outline text="dt_scheduled" />
                <outline text="template_preview" />
                <outline text="is_cancelled" />
                <outline text="group - dump_only" />
              </outline>
              <outline text="test_type" />
              <outline text="test_data" />
            </outline>
            <outline _complete="true" text="Make safe for nodes with unexpected dict values, i.e. passing type `split` and no `splitPercentage` will fail &lt;span&gt;#todo&lt;/span&gt; " />
            <outline _complete="true" text="More graceful tidy up of references to ensure garbage collection &lt;span&gt;#todo&lt;/span&gt;" />
            <outline _complete="true" text="Time profiling">
              <outline text="Before" _note="big 35s&#10;rui 8s" />
              <outline text="After" _note="big 5s&#10;rui &amp;lt;0.5s" />
            </outline>
            <outline _complete="true" text="Mem leak #todo">
              <outline text="1mb leak likely related to new sessions created per query" />
              <outline text="larger amount leaked due to leftover threads of thread pool executor" />
            </outline>
          </outline>
          <outline _complete="true" text="lib.monitoring_db_logger">
            <outline _complete="true" text="Update logs to accept configuration id #todo " />
            <outline _complete="true" text="Make release when finished &lt;span&gt;#todo&lt;/span&gt; " />
          </outline>
          <outline text="mass_email" />
          <outline text="lib.segmentation" />
        </outline>
      </outline>
      <outline _complete="true" text="Have a look at the reporting.py module">
        <outline text="Get head around queries and the reports they generate" />
        <outline text="Familiarise with above redshift database (BE CAREFUL, PROD DB w/ 1.2 bil entries...)" />
      </outline>
      <outline _complete="true" text="Deliverability reporting">
        <outline _complete="true" text="/deliverability/reporting.py - where I will be spending much of my time." />
        <outline _complete="true" text="More succinct and specific reported data (rather than large generic tables)" />
        <outline _complete="true" text="Possible approaches" _note="Initial musings">
          <outline text="Possible tree structure/decision tree approach?">
            <outline text="Stefan points out inefficiencies." />
            <outline text="Possible complexities" />
          </outline>
          <outline text="Suggested approach:">
            <outline text="Separation of main metrics, i.e. &quot;To domain&quot;, &quot;Account Id&quot;, &quot;IP groups&quot; (ip_address v binding_group)." />
            <outline text="Each &quot;metric&quot; might represent a sub query/common table element (CTE)." />
            <outline text="On initial analysis of generated report data, algorithm could do the following:">
              <outline text="Identify any key accounts suffering from low deliverability (looking at overall delivery rate)">
                <outline text="Primarily delivery rate" />
                <outline text="Also delay rate" />
              </outline>
              <outline text="For identified accounts" />
            </outline>
          </outline>
        </outline>
        <outline _complete="true" text="Potentially good data sets to check algorithm output">
          <outline text="Good time period 24th November - after black Friday" />
          <outline text="Michela - deliverability analyst (?)" />
          <outline text="Prod5 issues 16th Jan" />
        </outline>
        <outline _complete="true" text="Recursive tree structure approach">
          <outline text="Could possibly use a recursive tree structure (e.g. dictionary) that iterates over nodes and generates new child nodes when certain metrics are under target">
            <outline text="Metrics being delivery_rate or perhaps delay_rate" />
          </outline>
          <outline text="Approach">
            <outline text="Determine delivery_rate (and later the delay_rate) for">
              <outline text="(Using separate queries to return each queryset)" />
              <outline text="Account_id" />
              <outline text="Target domain" />
              <outline text="Campaign" />
              <outline text="IP Pool" />
              <outline text="(Long average delivery time per campaign)" />
            </outline>
            <outline _complete="true" text="V1">
              <outline text="If the delivery_rate is under a given metric, write it into the top level of the dictionary" />
              <outline text="For each of the written metrics, pop the given one and repeat the above node generation for the remaining metrics (providing they are below the threshold again).">
                <outline text="Write methods that use try/except paths to aggregate and filter data (in python memory) for each metric." />
              </outline>
              <outline text="A recursive algorithm passing a reducing list per node would be a viable approach." />
              <outline text="If you make it through the entire string of metrics (i.e. len(list) == 0) with a minimal drop in delivery_rate/with delivery rate remaining above threshold, then theoretically you can conclude that you have a strong/sole cause of an issue." />
              <outline text="The target end result is a collection of tree structures (i.e. a dictionary with N * no.metrics top level nodes)." />
              <outline text="Example data structure">
                <outline text="{ ">
                  <outline text="&quot;account_id&quot;: {">
                    <outline text="&quot;delivery_rate&quot;: 0.98," />
                    <outline text="&quot;to_domain&quot;: {">
                      <outline text="&quot;delivery_rate&quot;: 0.96," />
                      <outline text="&quot;campaign&quot;: {">
                        <outline text="&quot;ip_pool&quot;:  {">
                          <outline text="&quot;delivery_rate&quot;: 0.9" />
                        </outline>
                        <outline text="}" />
                      </outline>
                      <outline text="}" />
                    </outline>
                    <outline text="}," />
                    <outline text="&quot;campaign&quot;: {">
                      <outline text="&quot;delivery_rate&quot;: 0.97," />
                      <outline text="&quot;to_domain&quot;: {...}" />
                    </outline>
                    <outline text="}," />
                    <outline text="..." />
                  </outline>
                  <outline text="}" />
                  <outline text="..." />
                </outline>
                <outline text="}" />
              </outline>
              <outline text="Problems with v1">
                <outline text="Need to take into account each instance of the metric which has questionable delivery_rate" />
                <outline text="Data structure becoming more complicated as this goes on..." />
              </outline>
            </outline>
          </outline>
        </outline>
        <outline _complete="true" text="Path/tree generation (single queryset)">
          <outline text="Carry out large initial generic query returning grouped results for all relevant metrics" />
          <outline text="Generate set of all to_domain's and account_id's." />
          <outline text="From the resultant queryset, find average delivery_rates for all to_domains and add these to a list of lists (each domain representing the first index of an individual list)" />
          <outline text="Iterate over this list of lists. For each domain, calculate the average delivery_rate." />
          <outline text="Identify if there's big disparity between each delivery_rate - if there is, keep the low rate in the list, and pop the others. If there is no disparity, then the chain ends here and we present the general issue with the domain.">
            <outline text="For now, &quot;disparity&quot; can be defined as above or below some arbitrary value (e.g. 0.9)" />
          </outline>
          <outline text="If we get down to account_id level, then we repeat the previous step for the binding_groups" />
        </outline>
        <outline _complete="true" text="Path/tree generation (multi queryset)">
          <outline text="Find domains with average deliverability &amp;lt; some threshold" />
          <outline text="For each of the domains with low delivery rate, filter per account and note down accounts with low deliverability also. Score as a child node with delivery score" />
          <outline text="Repeat entire process but with domain and account swopped." />
          <outline text="Within the &lt;b&gt;domain -&amp;gt; account&lt;/b&gt; tree, iterate over each account_id and check to see if those accounts are affected by other domains. If they are, remove them from the list, and if there are no remaining accounts for a given domain, remove that domain from the final summary tree." />
        </outline>
        <outline _complete="true" text="Total data aggregation">
          <outline text="Accumulate all data" />
          <outline text="Top level domain, get percentage of accounts with poor deliverability (using a score calc'd from total and specific delivery rate)" />
          <outline text="Also get percentage of ip_pools with poor deliverability as above" />
          <outline text="Repeat for other top level domains" />
        </outline>
        <outline _complete="true" text="Areas for improvement">
          <outline text="Use a score as a comparator rather than percentages (to remove low total hits and to remove the need to filter for totals below X)">
            <outline text="Possible approaches">
              <outline text="1 - delivered / total * log10(total) ??">
                <outline text="8 / 10 -&amp;gt; 0.2" />
                <outline text="80 / 100 -&amp;gt; 0.4" />
                <outline text="50 / 100 -&amp;gt; 1" />
                <outline text="800 / 1000 -&amp;gt; 0.6" />
                <outline text="(500 / 1000 -&amp;gt; 1.5" />
                <outline text="8000 / 10000 -&amp;gt; 0.8" />
              </outline>
              <outline text="1 - delivered / total with some reducer for lower totals...">
                <outline text="Perhaps linear scale multiplier from 0 -&amp;gt; 1 applying to 0 -&amp;gt; 1000 emails respectively e.g. assuming 50% delivery rate...">
                  <outline text="100 emails = 50% * 100/1000 = 5% bounced (95% final &quot;deliverability&quot;)" />
                  <outline text="500 emails = 50% * 500/1000 = 25% bounced (75% final...)" />
                  <outline text="750 emails = 37.5% bounced" />
                  <outline text="1000 emails = 50% bounced" />
                </outline>
                <outline text="Assuming 80% delivery rate">
                  <outline text="500 emails (400 delivered) = 20% * 500/1000 = 10% bounced" />
                </outline>
              </outline>
            </outline>
          </outline>
          <outline text="Think of better metric tree comparator than current &quot;X == 1&quot; check." />
          <outline text="New 100 limit/total filter is less relevant for account specific filtering. Investigate!" />
        </outline>
        <outline _complete="true" text="Vector tree">
          <outline _complete="true" text="each object is a node in the tree" />
          <outline _complete="true" text="vectors store aggragations of various counts (like totals and block bounces etc)." />
          <outline _complete="true" text="calculate scores at lowest levels" />
          <outline _complete="true" text="scores of sibling nodes used to calculate parent scores" />
          <outline _complete="true" text="create tree with &quot;good/bad threshold&quot;" />
          <outline _complete="true" text="calculate_score method" />
          <outline _complete="true" text="domain -&amp;gt; account -&amp;gt; ip pool" />
          <outline _complete="true" text="account -&amp;gt; domain -&amp;gt; ip pool" />
        </outline>
        <outline text="Prettify email report">
          <outline _complete="true" text="Add total" />
          <outline _complete="true" text="100 * on percentages" />
          <outline _complete="true" text="Number annotations" />
          <outline text="Colours for severity" />
        </outline>
        <outline text="Get function working for swopping out account_id with client_name" />
        <outline _complete="true" text="Decide on model schema">
          <outline text="uuid" />
          <outline text="name">
            <outline text="t-online.de:215:prod5:00.00.00.0000" />
            <outline text="215:t-online.de:prod5:00.00.00.0000" />
          </outline>
          <outline text="to_domain" />
          <outline text="account_id" />
          <outline text="binding_group" />
          <outline text="ip_address" />
          <outline text="delivery_rate" />
          <outline text="undelivered" />
          <outline text="total" />
          <outline text="dt_initial" />
          <outline text="dt_updated" />
          <outline text="resolved BOOL">
            <outline text="for determining if &quot;identical issues&quot; are actually pre-existing or not" />
          </outline>
        </outline>
        <outline _complete="true" text="Create model" />
        <outline _complete="true" text="Create SQL migration" />
      </outline>
      <outline _complete="true" text="template_title tag">
        <outline text="Tasks">
          <outline _complete="true" text="Write get_template_instance function in cache.functions" />
          <outline _complete="true" text="Use this function in the campaign_processor.backend get_template_title function (as well as the template one)" />
          <outline _complete="true" text="Can then mock this function in the tests to deal with the attempted call to the non-existent database to get templates and instances" />
          <outline text="pytest ometria_mass_email/tests/campaign_processor/test_tasks_process.py -k 'test_template_title_with_template_id'" />
          <outline text="For mass campaign tests">
            <outline text="Mock cache.get_mass_campaign etc" />
            <outline text="Mock get_* methods (what would otherwise be the discovery cron jobs) to return a mocked mass campaign or batch" />
            <outline text="Run process_* methods and see if the template_title is generated correctly" />
          </outline>
          <outline text="Let Simeon know when it's done so he can remove his end" />
          <outline _complete="true" text="Write unit tests. Assert correct input to cache template" />
          <outline _complete="true" text="Cover a bunch of inputs (including corner cases i.e. template instance/parent template instance/campaign/variant etc) for both gearman API calls and also various mass campaign generations (simple/split/winner)" />
          <outline _complete="true" text="give best possible chance of passing template_title to template, given the large variety of different use cases." />
          <outline _complete="true" text="likely best approach to add some additional step to attempt to get email_title within the _generate_job_object function, and add to the template_data[&quot;email&quot;] sub-dict in the return." />
        </outline>
        <outline text="Useful resources">
          <outline text="email workers">
            <outline text="backend">
              <outline text="send mass email" />
              <outline text="send standard email" />
            </outline>
            <outline text="called in tasks through gearman">
              <outline text="interfaces">
                <outline text="email_producer">
                  <outline text="_generate_job_object" />
                </outline>
              </outline>
            </outline>
            <outline text="models">
              <outline text="Template" />
              <outline text="TemplateInstance" />
              <outline text="TemplateInstanceRevision" />
            </outline>
            <outline text="models.schemas.GEARMAN_TRIGGERED_EMAIL_SCHEMA is where recognisable table schema is stored" />
          </outline>
          <outline text="In all cases, endpoints need to receive either template_id or template_html" />
          <outline text="curl -d &quot;@sync_email.json&quot; -X POST http://localhost:8089/test.messages.send_sync_email -H &quot;X-Gearman-Unique: 123456&quot;" />
          <outline text="docker-compose logs -f sync_email" />
          <outline text="docker-compose down &amp;amp;&amp;amp; docker build . -t mass_email &amp;amp;&amp;amp; docker-compose -f docker-compose-sam.yml up -d" />
        </outline>
        <outline text="Exploration...">
          <outline text="One possible path">
            <outline text="gearman.interfaces.email_producers">
              <outline text="send_sync_email() receives the request object with relevant &quot;data&quot; key." />
              <outline text="the job is generated via the _generate_job_object function (passing &quot;data&quot;)" />
              <outline text="email_workers.tasks">
                <outline text="send_sync_email() receives job object with optional &quot;template_data&quot; (cleaned via the voluptuous schema checks)]" />
                <outline text="this is passed on to email_workers.backend.send_standard_email (among other things)" />
              </outline>
            </outline>
          </outline>
        </outline>
      </outline>
      <outline _complete="true" text="UTM parameters">
        <outline text="update_with_default_url_parameters_for_campaign_descriptor" />
        <outline text="get_campaign_url_parameters has many more parameters" />
        <outline text="Do not add om_campaign to previews" />
        <outline text="if is_preview campaign_identifier should be set to 0" />
        <outline text="elinks -dump -dump-charset utf-8 -dump-width 80" />
      </outline>
      <outline _complete="true" text="Fix scheduling batches in the past" />
      <outline _complete="true" text="Accept template_instance_revision_id to triggerfish gearman endpoint">
        <outline _complete="true" text="Talk to Simeon about what he's sending in the request payload to give the opportunity to tidy up the endpoints on our end." />
        <outline _complete="true" text="Create a new schema (leaving old intact for now) with above in mind" />
        <outline _complete="true" text="Discussion">
          <outline _complete="true" text="Don't need template_id anymore" />
          <outline _complete="true" text="Split into preview and triggered endpoints">
            <outline _complete="true" text="send_async will be replaced with send_triggered" />
          </outline>
        </outline>
      </outline>
      <outline _complete="true" text="Add confidence/score metric to campaigns">
        <outline text="In batch_generator, OptimalTimeBatchGenerator.__call__(), add optimal_delivery_score/confidence to insert into temp table (approx line 290)" />
        <outline text="In batch_processor (I think), add the confidence score, and the total amount of customers above some constant (e.g. 0.5) to the MassCampaignVariant table" />
      </outline>
      <outline _complete="true" text="Ask Al to remove duplicate recipients on deliverability monitor emails" />
      <outline _complete="true" text="Test campaign_title in production" />
      <outline _complete="true" text="Add details of new template tags to">
        <outline text="https://ometria.atlassian.net/wiki/spaces/OCT/pages/37814311/Ometria+merge+tags" />
      </outline>
      <outline _complete="true" text=" Refactor sparkpost api send_email function to class">
        <outline _complete="true" text="use .domain" />
        <outline text="TEMP_DIVERSION_DOMAINS">
          <outline _complete="true" text="rename to BT_BLACKLIST_REDIRECT_DOMAINS" />
          <outline _complete="true" text="move out of class up to module based constants as per others" />
          <outline text="Replace if else error handling in .send_email with a dict {code: error}" />
        </outline>
        <outline _complete="true" text="validate_email function return None, rather than `else None` in class" />
        <outline _complete="true" text="Remove mutable input dicts" />
        <outline _complete="true" text="Scalyr logging issue">
          <outline text="Stefan plans on raising a ticket with sparkpost regarding the issue. The errors are rare and clustered together over a couple of seconds, so perhaps increasing the backoff factor within `cache.functions.get_sparkpost_session()` would alleviate the issue." />
          <outline text="https://www.scalyr.com/events?filter=(($severity%20%3E%204%20%7C%7C%20$log_severity%20%3E%204)%20%26%26%20!($sink%20%3D%20true)%20%26%26%20!(((($account_id%20%3D%202%20%7C%7C%20$account_id%20%3D%2024)%20%7C%7C%20$account_id%20%3D%2079)%20%7C%7C%20$account_id%20%3D%20352))%20%26%26%20!($message%20contains%20%22ometria%2Femail%2Fsuppression%2F%22)%20%26%26%20!($message%20contains%20%22ometria%2Femail%2Ftemplate%2Ferror%2Fsubject%2FTemplateUserError%22)%20%26%26%20!($logfile%20contains%20%22template_renderer_gearman%22)%20%26%26%20!($message%20contains%20%22raised%20unexpected:%20WorkerLostError(%5C%27Worker%20exited%20prematurely:%20exitcode%200%22))&amp;amp;teamToken=M%2Ft2aK78HxuNx3YEMIuTQQ--&amp;amp;logSource=prod_ecs_cluster%2Fmass_email&amp;amp;startTime=72%20hours" />
        </outline>
        <outline _complete="true" text="Remove from email merge data" />
        <outline _complete="true" text="Fix tests broken by old sparkpost_api.send_email mock function" />
        <outline _complete="true" text="Rename SparkpostEmail to SparkpostApi" />
        <outline _complete="true" text="Model schema, Required and default makes no sense, they're optional. Order accordingly" />
        <outline _complete="true" text="Pass in kwargs explictly and set types" />
        <outline _complete="true" text="Run the `if sink or should_sink_email(self._account_id, email_address)` checks in init" />
        <outline _complete="true" text="Rename dr ed email cleaning function in generate email data method to `rewrite_email_address`. Within there, have a call to the dr ed re write, and potentially to the sink checks above" />
        <outline _complete="true" text="Could add generic self._sink or something similar" />
        <outline _complete="true" text="Add support for flexible binding (i.e. redirect X % to Y binding group)" />
        <outline _complete="true" text="Add support for CC and BCC" />
        <outline _complete="true" text="Generally tidy up and make prettier" />
        <outline _complete="true" text="Ensure any place that was calling the old method is updated to use the new class" />
      </outline>
      <outline _complete="true" text="Email metadata">
        <outline _complete="true" text="ometria.lib.email_metadata" />
        <outline _complete="true" text="mass_email refactor">
          <outline _complete="true" text="update requirements.py dependency" />
          <outline _complete="true" text="`email_workers/backend.py`" />
          <outline _complete="true" text="tests">
            <outline _complete="true" text="test to cover only single case where I had to adapt for voluptuous breaking change" />
            <outline _complete="true" text="gearman endpoints" />
            <outline _complete="true" text="mass email" />
          </outline>
        </outline>
        <outline _complete="true" text="sparkpost_events_ingestion refactor">
          <outline _complete="true" text="In `worker.py`, anywhere where `rcpt_` is used (rcpt_meta)" />
        </outline>
      </outline>
      <outline _complete="true" text="skip_scroll">
        <outline _complete="true" text="api.mass_email" />
        <outline _complete="true" text="api.campaigns" />
        <outline _complete="true" text="api.templates" />
        <outline _complete="true" text="console2" />
      </outline>
      <outline _complete="true" text="Transactional emails">
        <outline _complete="true" text="migrations">
          <outline _complete="true" text="Add row transactional_email_id (or something) to sparkpost_email_events. Type charvar(256)." />
          <outline _complete="true" text="Add other row is_transactional" />
        </outline>
        <outline _complete="true" text="lib.email_metadata">
          <outline _complete="true" text="Add shortened is_transactional as abbreviated mapping" />
        </outline>
        <outline _complete="true" text="mass_email">
          <outline _complete="true" text="Add some extra logic to add is_transactional to the metadata (via the lib) if appropriate. Will only be necessary if True." />
        </outline>
        <outline _complete="true" text="sparkpost events ingestion">
          <outline _complete="true" text="Add some logic to retrieve is_transactional or None" />
          <outline _complete="true" text="populate new row in sparkpost_email_events" />
        </outline>
        <outline _complete="true" text="datamodels">
          <outline _complete="true" text="Update schema in ecomm.py" />
        </outline>
        <outline _complete="true" text="mass_email_pipeline">
          <outline _complete="true" text="Add per email stats into transactional_email_send_status" />
          <outline _complete="true" text="Add aggregations into cube_transactional_email_stats" />
          <outline _complete="true" text="`CREATE UNIQUE INDEX idx_cube_transactional_email_stats ON cube_transactional_email_stats (account_id, dt, stream, is_transactional, is_sandbox);`" />
        </outline>
        <outline _complete="true" text="Change is_transactional so it doesn't default to False." />
        <outline _complete="true" text="Consider merging email_metadata libs in together" />
        <outline _complete="true" text="transactional_campaign_id is direct mapping, no regex required" />
      </outline>
      <outline _complete="true" text="Coupon codes">
        <outline text="Misc">
          <outline _complete="true" text="In importers" />
          <outline _complete="true" text="Create_coupon_codes" />
          <outline _complete="true" text="'Adapter' and 'importer' are used interchangeably" />
        </outline>
        <outline text="csv_upload">
          <outline _complete="true" text="Update README" />
          <outline _complete="true" text="Consider S3 download location" />
          <outline _complete="true" text="Grab CSV from s3" />
          <outline _complete="true" text="Process that CSV by batching and adding jobs to a beanstalk queue" />
          <outline _complete="true" text="Worker process picks up batches from queue and sends them on to API for final proper processing (adding to pools and such like)" />
        </outline>
      </outline>
      <outline _complete="true" text="Get various permissions">
        <outline text="console.ometria.com / app.ometria.com" />
        <outline text="kubernetes" />
        <outline text="db privileges?" />
        <outline text="ssh access for mass_email deployments" />
      </outline>
      <outline _complete="true" text="Transactional email resend">
        <outline text="Comment out db writes (transcational send and status tables)" />
        <outline text="Comment out rate limiting OR set very high" />
        <outline text="Patch account_id being sent to function somehow (basically comment out decorator and pass in explicitly)" />
        <outline text="No need to worry about request_id generation as logging is local and db writes will be disabled" />
        <outline text="Tunnel pg and gearman_http, local redis (hopefully)" />
        <outline text="Write to file on each successful send for idempotent-ness" />
        <outline text="Bypass rows without template_id set" />
        <outline text="Run local flask server" />
        <outline text="First pass, run with sandbox = True" />
        <outline text="profile_id won't be supplied but we should only be retrieving customers other than writing (as we've already sent these)" />
        <outline text="reply_to - no record of this so will have to send without (optional field)" />
      </outline>
      <outline _complete="true" text="SMS">
        <outline text="Misc questions">
          <outline text="Anonymising phone number when optout?" />
          <outline text="Listing multiple phone numbers?" />
        </outline>
        <outline text="data_ingestion">
          <outline text="Add phone_number(_country) to customer_listing creating or updating" />
        </outline>
        <outline text="lib.data_validation">
          <outline text="Add phoned_number(_country) field to CONTACT schema" />
        </outline>
        <outline text="data_store">
          <outline text="use new version of lib.validation" />
        </outline>
        <outline text="datamodels">
          <outline text="Add field to Customers" />
          <outline text="Consider adding creds to client model I cant remember the name of (connections?). How does the client input this information (question for myself)" />
        </outline>
        <outline text="migrations">
          <outline text="Write migration to add field to Customers " />
        </outline>
        <outline text="Planning meeting">
          <outline text="We are not enforcing regions for incoming phone numbers (i.e. do not hardcore &quot;GB&quot;). Therefore we can store numbers from any region." />
          <outline text="Deal with deletion for PII functionality" />
          <outline text="Another new field required in customer: phone_number_country" />
        </outline>
      </outline>
      <outline _complete="true" text="Triggerfish stats reporting">
        <outline _complete="true" text="datamodels">
          <outline _complete="true" text="add fields to transactions" />
          <outline _complete="true" text="add fields to unsubscribes" />
          <outline _complete="true" text="create new trigger_campaign_structure" />
        </outline>
        <outline _complete="true" text="migrations">
          <outline _complete="true" text="for above" />
        </outline>
        <outline _complete="true" text="data_ingestion">
          <outline _complete="true" text="write code to populate the transactions fields (ref &quot;orders&quot;)" />
          <outline _complete="true" text="om:&amp;lt;hash&amp;gt;:&amp;lt;version_id&amp;gt;:&amp;lt;node_id&amp;gt;" />
        </outline>
        <outline _complete="true" text="php core_services">
          <outline _complete="true" text="write code to handle unsubscribe events" />
        </outline>
        <outline _complete="true" text="api.campaigns">
          <outline _complete="true" text="write code to populate new trigger_campaign_structure table" />
        </outline>
        <outline text="reporting">
          <outline _complete="true" text="flows tab">
            <outline text="api.campaigns">
              <outline text="send extra version_id param" />
            </outline>
            <outline text="reporting">
              <outline text="sql to generate report" />
            </outline>
          </outline>
          <outline _complete="true" text="For generating previous (bottom) ui stats: ometria_reporting/reports/trigger_campaigns/campaign_flows_report.py">
            <outline _complete="true" text="cube_trigger_campaign_flow_performance" />
          </outline>
          <outline _complete="true" text="Simeon's code to generate new cube table in ometria.master">
            <outline _complete="true" text="cube_trigger_campaign_flow_performance" />
          </outline>
          <outline text="tables with version_id">
            <outline text="transcations.trigger_campaign_version_id" />
            <outline text="trigger_campaign_customer.version_id" />
            <outline text="trigger_campaign_send.version_id" />
            <outline text="trigger_campaign_structure.version_id" />
            <outline text="unsubscribes.trigger_campaign_version_id" />
          </outline>
        </outline>
      </outline>
    </outline>
    <outline _complete="true" text="Tech" _note="Cheat-sheet stuff">
      <outline text="pip">
        <outline text="Install local repo as editable dependecy">
          <outline text="`pip install -e /server/apps/ometria.datamodels`" />
          <outline text="Remove local &quot;egg&quot; with `pip uninstall ometria_datamodels`" />
          <outline text="Reinstall as normal (with -U for update)" />
          <outline text="check with `pip freeze --local`" />
        </outline>
      </outline>
      <outline text="python">
        <outline text="env vars fish local" _note="set -x OM_POSTGRES_USERNAME ometria; \&#10;set -x OM_POSTGRES_HOST localhost; \&#10;set -x OM_POSTGRES_PORT 5432; \&#10;set -x OM_POSTGRES_PASSWORD qwerty; \&#10;set -x OM_GEARMAN_PORT 8089; \&#10;set -x OM_GEARMAN_HOST localhost" />
        <outline text="env vars tunnel postgres gearman_http" _note="set -x OM_POSTGRES_PORT 5732; \&#10;set -x OM_POSTGRES_PASSWORD &amp;lt;prod_pw&amp;gt;; \&#10;set -x OM_POSTGRES_USERNAME ometria_readonly" />
        <outline text="PYTHONPATH">
          <outline text="PYTHONPATH=/server/apps/ometria.mass_email:$PYTHONPATH" />
          <outline text="PYTHONPATH=/server/apps/ometria.mass_email:$PYTHONPATH python3 ometria_mass_email/deliverability/reporting.py" />
        </outline>
      </outline>
      <outline text="git">
        <outline text="`(git add &amp;lt;blah&amp;gt;) &amp;amp;&amp;amp; git commit --amend --no-edit` -&amp;gt; commit onto previous commit with not edit (omit --no-edit to change commit message)" />
      </outline>
      <outline text="Migrations">
        <outline text="NOTE: Do below in separate branch and get reviewed" />
        <outline text="ecomm">
          <outline text="Pull latest migrations in repo" />
          <outline text="Ensure local postgres = running" />
          <outline text="Best practice, in migrations repo, run `./run_migrations_dev` (to ensure there are no old migrations to apply)" />
          <outline text="If errors are hit (missing dependencies) run `php composer/composer.phar install` to install." />
          <outline text="Run `add_ecomm_migration.sh &amp;lt;explicit_migration_name&amp;gt;` to create migration file" />
          <outline text="`git add &amp;lt;file&amp;gt;`" />
          <outline text="Write actual migration in generated file" />
          <outline text="`./run_migrations_dev` to test that the migration runs correctly" />
          <outline text="If I need to roll back migration `sudo OMETRIA_ENV=dev db/tools/ruckus db:migrate ENV=ecomm VERSION=&amp;lt;version to roll back to e.g. 20141224120427&amp;gt;`" />
          <outline text="Ask a higher up nicely to deploy for me" />
        </outline>
      </outline>
      <outline text="Docker">
        <outline text="docker rm -f `docker ps -aq`" />
        <outline text="&lt;span&gt;docker&lt;/span&gt; rmi -f `&lt;span&gt;docker&lt;/span&gt; images -aq`" />
        <outline text="`&lt;span&gt;docker&lt;/span&gt;-compose down &amp;amp;&amp;amp; &lt;span&gt;docker&lt;/span&gt; build -t mass_email . &amp;amp;&amp;amp; &lt;span&gt;docker&lt;/span&gt;-compose -f &lt;span&gt;docker&lt;/span&gt;-compose-sam.yml up`" />
        <outline text="`cd applications/mass_email &amp;amp;&amp;amp; docker-compose down &amp;amp;&amp;amp; cd ../.. &amp;amp;&amp;amp; docker-compose down &amp;amp;&amp;amp; docker-compose up -d &amp;amp;&amp;amp; cd applications/mass_email &amp;amp;&amp;amp; docker-compose up -d &amp;amp;&amp;amp; cd ../.. &amp;amp;&amp;amp; docker-compose logs -f`" />
        <outline text="How to run docker build with dependency on locally generated package (i.e. `pip install -e /server/apps/ometria.datamodels` (run within mass email root dir))">
          <outline text="`docker-compose down &amp;amp;&amp;amp; docker build -t mass_email -f Dockerfile /server/apps &amp;amp;&amp;amp; docker-compose -f docker-compose-sam.yml up`" />
          <outline text="`-f Dockerfile` is not necessary but explicit" />
          <outline text="`/server/apps` in the main build command is what's specifying the context, which is important for the Dockerfile (i.e. for the COPY commands), e.g.">
            <outline text="`COPY ometria.mass_email/requirements.txt /server/apps/ometria.mass_email/requirements.txt`" />
            <outline text="instead of" />
            <outline text="`COPY requirements.txt /server/apps/ometria.mass_email/requirements.txt`" />
          </outline>
          <outline text="Additional steps in the Dockerfile are (at the end right before the `RUN` command)">
            <outline text="To copy the datamodel repo (from the context of /server/apps as mentioned above) to the container">
              <outline text="`COPY ometria.datamodels /server/apps/ometria.datamodels`" />
            </outline>
            <outline text="To install the dependency within the container, done explicitly">
              <outline text="`RUN pip install -e /server/apps/ometria.datamodels`" />
            </outline>
          </outline>
        </outline>
        <outline text="To run a bash shell on a given container">
          <outline text="`docker exec -it &amp;lt;image_id&amp;gt; /bin/bash`" />
        </outline>
        <outline text="When adding new docker-compose.yml in new service repo, that needs to rely on developer environment, need to add the following:">
          <outline text="High level">
            <outline text="`networks:">
              <outline text="ometriadeveloperenvironment_default:">
                <outline text="external: true`" />
              </outline>
            </outline>
          </outline>
          <outline text="Within new `service`">
            <outline text="`networks:">
              <outline text="- ometriadeveloperenvironment_default`" />
            </outline>
          </outline>
          <outline text="Example can be found in: `ometria.developer_environment/applications/mass_email/docker-compose.yml`" />
        </outline>
        <outline text="`docker run -ti --rm --entrypoint bash postgres` (t = enable tty, i = interactive. Both required for proper interactive shell)." />
        <outline text="`docker exec -it 4dfd8a942648 /bin/bash`" />
        <outline text="/var/lib/postgresql/data2/pg_hba.conf" />
        <outline text="docker run containers to talk with one another" _note="docker run --env-file=.env --network host mass_email_pipeline">
          <outline text="Note network set to &quot;host&quot;, as is the case in developer_environment docker-compose.yml" />
        </outline>
      </outline>
      <outline text="Databases">
        <outline text="pgcli -U ometria_campaigns -d ometria_ecomm -h localhost -p 5432" />
        <outline text="psql -h archive.cgbemj0dtuj8.eu-west-1.redshift.amazonaws.com -p 5439 -d ometriatest -U ometria_ro">
          <outline text="Standard unrestricted user = ometria" />
          <outline text="SQL tabs access URL = postgres://ometria_ro@archive.cgbemj0dtuj8.eu-west-1.redshift.amazonaws.com:5439/ometriatest" />
        </outline>
        <outline text="pgcli redshift://ometria_ro@archive.cgbemj0dtuj8.eu-west-1.redshift.amazonaws.com:5439/ometriatest" />
        <outline text="pgcli -U ometria -d ometria_core -h localhost -p 5432" />
        <outline text="Kube">
          <outline text="Useful commands">
            <outline text="kubectl get &amp;lt;pods/namespaces/deploy/cronjob/ingress/secret&amp;gt; (get information on stuff)" />
            <outline text="kubectl get &amp;lt;pods/namespaces/deploy/cronjob/ingress/secret&amp;gt; (get information on stuff)" />
            <outline text="kubectl cluster-info (gets info on cluster)" />
            <outline text="kubectl describe &amp;lt;namespaces/deploy/etc...&amp;gt; &amp;lt;name from equivalent get&amp;gt;" />
            <outline text="kubectl get namespaces" />
            <outline text="... --namespace &amp;lt;namespace&amp;gt; (run any command on specific namespace)" />
            <outline text="kubectl get configmap ometria-config -o yaml (command followed by &quot;-o yaml&quot; gives output in yaml format)" />
            <outline text="kubectl exec -ti api-public-597fc5d488-hff22 bash (access bash on specific pod)" />
            <outline text="kubectl describe pods grafana-f4f8874f9-w4tjw --namespace grafana2 (get info on particular grafana pod in relevant namespace including port for next command)" />
            <outline text="kubectl port-forward grafana-f4f8874f9-w4tjw --namespace grafana2 3000 (expose grafana dashboard via port forwarding)" />
            <outline text="kubectl proxy --port=8080 (expose kube API locally via proxy)" />
            <outline text="kubectl delete deployment &amp;lt;tag/name&amp;gt;" />
          </outline>
          <outline text="Concepts">
            <outline text="kubectl get services. Service are abstractions/exposed outside of the kube cluster, aka can be accessed from within the subnet/AWS vpc" />
          </outline>
          <outline text="Deployments">
            <outline text="Write config yaml file (use one of many others as example)" />
            <outline text="kubectl apply -f &amp;lt;yaml file&amp;gt;" />
          </outline>
          <outline text="Full url for accessing service endpoints after proxy" _note="/api/v1/namespaces/default/services/&amp;lt;service&amp;gt;/proxy/&amp;lt;endpoint&amp;gt;" />
        </outline>
      </outline>
      <outline text="AWS">
        <outline text="Security groups" _note="https://eu-west-1.console.aws.amazon.com/ec2/v2/home?region=eu-west-1#SecurityGroups:sort=groupName" />
        <outline text="Role_Bastion_SSH" />
      </outline>
      <outline _complete="true" text="Useful debug">
        <outline text="Logging">
          <outline text="Below can be stacked" />
          <outline text="General logging">
            <outline text="`import logging`" />
            <outline text="`logging.getLogger(&quot;&quot;).setLevel(&quot;DEBUG&quot;)`" />
          </outline>
          <outline text="Stream logging">
            <outline text="logging.getLogger(&quot;&quot;).addHandler(logging.StreamHandler())" />
          </outline>
          <outline text="General sqlalchemy">
            <outline text="logging.getLogger(&quot;sqlalchemy.engine&quot;).setLevel(&quot;INFO&quot;)" />
          </outline>
          <outline text="In celery_config/log_configuration.py, override with `logging.getLogger(&quot;sqlalchemy.engine&quot;).setLevel(log_level)`" />
        </outline>
        <outline text="Error: sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) permission denied for relation template_instance_revisions">
          <outline text="psql -U postgres -h localhost -p 5432 -d ometria_ecomm" />
          <outline text="grant all on template_instance_revisions to ometria_campaigns;" />
        </outline>
        <outline text="When attempting to run postgres image in dev environment - core services, it might not recognise some models (often tempate something), ensure that the latest postgres image has been pulled from quay.io with">
          <outline text="docker pull quay.io/ometria/developer-postgres" />
        </outline>
        <outline text="When campaigns in test, need to change the following regex">
          <outline text="mass_email.ometria_mass_email.monitoring.backend.CAMPAIGN_WORKER_REX" />
          <outline text="to" />
          <outline text="re.compile(r&quot;celery@campaign_worker_.*&quot;)" />
          <outline text="reason being in test/local env, for some reason the worker name generation isn't working, and it's defaulting to &quot;_moby&quot;, so the above softer regex check means it will pick up the generated worker" />
        </outline>
        <outline text="python2 repos, issues with importing due to virtualenv path not pointing at site-packages">
          <outline text="`workon &amp;lt;env_name&amp;gt;`" />
          <outline text="`cdvirtualenv &amp;lt;env_name&amp;gt;`" />
          <outline text="`cd lib/python2.7/site-packages`" />
          <outline text="`pwd`" />
          <outline text="Open python interpreter in actual dir and">
            <outline text="`import sys`" />
            <outline text="`sys.path.append('&amp;lt;above_printed_dir up to site-packages&amp;gt;')" />
          </outline>
        </outline>
      </outline>
      <outline _complete="true" text="Accounts">
        <outline text="Slack" />
        <outline text="Jira">
          <outline text="Logging" />
          <outline text="Json parsing, key value storing" />
        </outline>
        <outline text="Quay">
          <outline text="Docker building" />
          <outline text="git tags trigger docker builds" />
          <outline text="docker login quay.io">
            <outline text="username: sam_ometria" />
          </outline>
        </outline>
        <outline text="Github">
          <outline text="https://github.com/Ometria/ometria.developer_environment" />
          <outline text="store code/clone repos to /server/apps/">
            <outline text="all private repos must be in format: ometria.foo" />
            <outline text="ometria_foo" />
          </outline>
          <outline text="Repositories">
            <outline text="ometria.developer_environment">
              <outline text="docker-compose up" />
            </outline>
            <outline text="ometria.mass_email" />
          </outline>
        </outline>
        <outline text="Datadog" />
        <outline text="Ometria">
          <outline text="app.ometria.com">
            <outline text="dev@ometria.com" />
            <outline text="Ometria1234" />
          </outline>
        </outline>
        <outline text="Sparkpost">
          <outline text="https://ometria.e.sparkpost.com/" />
        </outline>
      </outline>
    </outline>
    <outline _complete="true" text="Misc" _note="Personal development, onboarding etc...">
      <outline _complete="true" text="Admin">
        <outline text="Enter passwork received via SMS" />
        <outline text="https://console.ometria.com/_authlink" />
        <outline text="Use password to log in at https://console.ometria.com/private/table/accounts/" />
      </outline>
      <outline _complete="true" text="Sunlight ideas">
        <outline text="Nginx/web servers" />
        <outline text="Cryptography" />
        <outline text="Security in general (server or web)" />
        <outline text="&quot;The imposter's handbook&quot;" />
      </outline>
      <outline _complete="true" text="Sparkpost">
        <outline text="account id notes">
          <outline text="500 / 501 -&amp;gt; 500" />
          <outline text="503 / 502 -&amp;gt; 502" />
        </outline>
      </outline>
      <outline _complete="true" text="Freshdesk" _note="When I am the assigned Dev-of-the-day">
        <outline text="&quot;Tickets&quot; tab down the left side" />
        <outline text="Filter on &quot;Groups&quot; -&amp;gt; &quot;Level 3 support&quot; and &quot;Status&quot; -&amp;gt; &quot;All unresolved&quot;" />
        <outline text="DO NOT &quot;Reply&quot; as that goes back to the customer, only &quot;Add note&quot; (when in ticket detail view)" />
        <outline text="Once I've addressed with final comments etc, only thing left to do is reassign to Level 1." />
      </outline>
      <outline _complete="true" text="Feedback">
        <outline text="I'm being critiqued on vague criteria / vaguely defined tasks, and it's weighing on the decision around my probationary period which is causing me prolonged stress and anxiety." />
        <outline text="There hasn't been a procedure / structure explained to me regarding the probationary process, so I've been unaware of the specific expectations from me, and have thus been anxious about job security for much of my time here.">
          <outline text="Strengthened by other factors, i.e. Sales team volatility." />
        </outline>
        <outline text="In some cases, this anxiety is causing poor judgement and is potentially affecting my work." />
        <outline text="The feedback I've been given, although very useful, has often left me unsure and nervous, e.g.">
          <outline text="&quot;Speed up&quot;" />
          <outline text="&quot;Yes, because you're improving&quot;" />
          <outline text="&quot;Al not good at giving 'bad' feedback&quot; bad = bad" />
        </outline>
        <outline text="Recent example, sparkpost api refactor.">
          <outline text="Original task was add CC &amp;amp; BCC fields to API" />
          <outline text="Original code was of poor quality." />
          <outline text="I made suggestion to attempt to refactor the code - no specifics defined beyond that, it seemed to me to be an iterative / exploratory task, i.e. some measurable improvement to code." />
          <outline text="Outcome of first/second iteration of task were used to draw conclusions for progress through probationary period and fed back to me as critiques." />
          <outline text="These critiques seem to heavily weigh on the overall outcome of my probationary period, leading to continual anxiety and pressure." />
        </outline>
      </outline>
    </outline>
  </outline>
  <outline _complete="true" text="Personal">
    <outline _complete="true" text="Gym">
      <outline text="Monday 25th">
        <outline text="Squats">
          <outline text="20x10" />
          <outline text="40x10" />
          <outline text="60x8" />
          <outline text="80x5" />
          <outline text="100x5" />
          <outline text="120x3" />
          <outline text="140x5(x5)" />
        </outline>
        <outline text="Bench">
          <outline text="20x10" />
          <outline text="40x10" />
          <outline text="60x10" />
          <outline text="80x8(x5)" />
        </outline>
      </outline>
      <outline text="Custom program" _note="4/week comeback hypertrophy">
        <outline text="Monday" _note="Bench">
          <outline text="Incline BB bench " />
          <outline text="OH DB press" />
          <outline text="Rear fly's" />
          <outline text="Front raises" />
          <outline text="BB shrugs" />
        </outline>
        <outline text="Tuesday" _note="Squat">
          <outline text="Squats" />
          <outline text="GMs" />
          <outline text="DB RDLs" />
          <outline text="Leg extensions" />
          <outline text="Hamstring curls" />
        </outline>
        <outline text="Thursday" _note="Bench">
          <outline text="Bench" />
          <outline text="Incline DB press" />
          <outline text="Incline DB fly's" />
          <outline text="Lying tricep extensions" />
          <outline text="Curls" />
        </outline>
        <outline text="Friday" _note="Deadlift">
          <outline text="Deadlifts" />
          <outline text="Leg press" />
          <outline text="Calf raises" />
          <outline text="Hamstring curls" />
        </outline>
      </outline>
      <outline text="GN" _note="Greg Nuckols intermediate regular progression">
        <outline text="Monday" _note="Bench day">
          <outline text="Bench (4x2, 6x2, 8x2, + 2.5-5kg)" />
          <outline text="Incline press (same progression as above)" />
          <outline text="Pulldowns (2-3 sets)" />
          <outline text="Upright rows (3-4 sets)" />
          <outline text="Flys (1-2 sets)" />
        </outline>
        <outline text="Tuesday" _note="Squat day">
          <outline text="Squat (4x2, 6x2, 8x2, + 2.5-5kg)" />
          <outline text="RDL (same progression as above)" />
          <outline text="GMs (4-6 sets)" />
          <outline text="Leg press (2-4 sets)" />
          <outline text="Rows (3-4 sets)" />
        </outline>
        <outline text="Thursday" _note="Press day" />
        <outline text="Friday" _note="OHP day" />
      </outline>
    </outline>
    <outline _complete="true" text="Mum card">
      <outline text="To the loveliest most wonderful woman I know" />
      <outline text="" />
    </outline>
    <outline _complete="true" text="Kim wine">
      <outline text="Fair trade rose sparkling muscato 5.5%" />
    </outline>
    <outline _complete="true" text="Life projects">
      <outline _complete="true" text="Software">
        <outline _complete="true" text="Udacity - Scalable Microservices with Kubernetes">
          <outline text="https://classroom.udacity.com/courses/ud615" />
        </outline>
        <outline _complete="true" text="Mastering PostgreSQL in Application Development">
          <outline text="epub page 19-20" />
        </outline>
        <outline _complete="true" text="Async programming (with twisted) - http://krondo.com/in-which-we-begin-at-the-beginning/" />
        <outline _complete="true" text="Algorithms and Data Structures - The Basic Toolbox" />
      </outline>
    </outline>
    <outline _complete="true" text="Rubik's cube times">
      <outline text="1:55.86 (1st Jan 2018)" />
      <outline text="1:23 (5th Jan 2018)" />
      <outline text="1:01 (27th July 2018)" />
    </outline>
    <outline _complete="true" text="Tell Kim about Blinkist" />
    <outline _complete="true" text="Beers">
      <outline text="Old ruffian" />
      <outline _complete="true" text="Albino squid - assassin (red rye IPA)" />
      <outline _complete="true" text="Belgium">
        <outline text="Tripel karmeliet">
          <outline text="Strong, hoppy, wheaty, nice, not as nice as darker ones" />
        </outline>
      </outline>
    </outline>
    <outline _complete="true" text="Interesting stuff...">
      <outline text="ram mount x grip" />
      <outline text="Crypto">
        <outline text="Bitcointalk" />
        <outline text="Bittrex.com" />
        <outline text="Chart analysis" />
        <outline text="Read project whitepapers" />
      </outline>
      <outline text="Sheku Kanneh-Mason">
        <outline text="Cellist on Sunday brunch" />
        <outline text="inspiration (album out late Jan)" />
      </outline>
      <outline _complete="true" text="Taste this beer, London" />
    </outline>
    <outline _complete="true" text="Suit sizes (red herring)">
      <outline text="Jacket 48 reg + 1/2 on sleeve" />
      <outline text="Trouser 42 reg + 1 1/2 on leg" />
      <outline text="Waistcoat 46 reg" />
      <outline text="Shirt Jeff Banks 17.5 inch tailored" />
    </outline>
    <outline _complete="true" text="Scooters">
      <outline text="Inokim" _note="https://inokimuk.com/products/quick-3/#product-gallery" />
    </outline>
  </outline>
  <outline text="Wiki">
    <outline text="Restart mac sound service" _note="sudo kill -9 (ps ax|grep 'coreaudio[a-z]' | awk '{print $1}')" />
    <outline text="vim">
      <outline text="Test binding" _note="nmap &amp;lt;Leader&amp;gt;tt :!pytest -p no:warnings -k test_segmentation_tree&amp;lt;enter&amp;gt;" />
      <outline text="Behave pdb stdout" _note="import sys, pdb; pdb.Pdb(stdout=sys.__stdout__).set_trace()" />
      <outline text="youcompleteme">
        <outline text="`cmake -G &quot;Unix Makefiles&quot; -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DPATH_TO_LLVM_ROOT=~/ycm_temp/llvm_root_dir . ~/.vim/plugged/youcompleteme/third_party/ycmd/cpp`" />
      </outline>
      <outline text="Profiling performance (plugins)" _note="https://stackoverflow.com/questions/12213597/how-to-see-which-plugins-are-making-vim-slow" />
      <outline text="Fugitive cheatsheet https://github.com/yanick/cheatsheets/blob/master/vim/fugitive.mkd" />
      <outline text="Fzf tmux pane switcher" _note="In .config/fish/config.fish&#10;```function fp&#10;    set -lx tmux_out (tmux list-panes -s -F '#{session_name}:#I #{window_name} #{pane_index}' | rg &quot;^[0-9:]* [a-zA-Z.-_]* 0&quot; | awk '{printf (&quot;%s %s\\n&quot;, $1, $2)}' | fzf --query=&quot;$1&quot; --select-1 --exit-0);&#10;    set -lx pane (echo $tmux_out | awk '{print $1;}')&#10;    tmux switch-client -t &quot;$pane&quot;&#10;end```&#10;&#10;In .tmux.conf&#10;`bind-key -r &quot;C-c&quot; new-window -c &quot;#{pane_current_path}&quot; &quot;fp&quot;`" />
      <outline text="ctags tpope auto build git hook" _note="https://tbaggery.com/2011/08/08/effortless-ctags-with-git.html" />
      <outline text="Syntax highlighting">
        <outline text="https://vim.fandom.com/wiki/Creating_your_own_syntax_files" />
        <outline text="https://stackoverflow.com/a/33630610" />
        <outline text="https://superuser.com/a/1298894" />
        <outline text="http://vimdoc.sourceforge.net/htmldoc/syntax.html" />
      </outline>
    </outline>
    <outline text="Python">
      <outline text="Referencing memory address after python del" _note="https://rushter.com/blog/python-garbage-collector/&#10;``` &#10;class PyObject(ctypes.Structure):&#10;    _fields_ = [(&quot;refcnt&quot;, ctypes.c_long)]&#10;add = id(foo)&#10;PyObject.from_address(add).refcnt```" />
    </outline>
    <outline _complete="true" text="SqlAlchemy">
      <outline text="Count rows from query object" _note="totals_query = select([func.count().label('rows')]).select_from(query)&#10;engine.execute(totals_query, **query_kwargs)" />
      <outline text="Random sample from table" _note="https://www.postgresql.org/docs/devel/sql-select.html#SQL-FROM" />
    </outline>
    <outline _complete="true" text="Assembly">
      <outline text="Intel tutorial" _note="https://software.intel.com/en-us/articles/introduction-to-x64-assembly">
        <outline text="" />
      </outline>
      <outline text="Wikibooks tutorial" _note="https://en.wikibooks.org/wiki/X86_Assembly" />
    </outline>
    <outline text="Kubernetes">
      <outline text="Delete first N number of pods sorted by age, with a particular label" _note="k get pod -l app=console2 --sort-by=.status.startTime | head -14 | tail -n +2 | cut -d' ' -f-3 | xargs kubectl delete pod" />
    </outline>
    <outline text="AWS">
      <outline text="Check aws user with key and secret">
        <outline text="Set envvars">
          <outline text="set -x AWS_ACCESS_KEY_ID {}" />
          <outline text="set -x AWS_SECRET_ACCESS_KEY {}" />
          <outline text="aws sts get-caller-identity" />
        </outline>
      </outline>
    </outline>
    <outline text="Kibana">
      <outline text="Example link for node events" _note="https://ew1-shared-kibana.public.ew1-shared.ew1.shared.ometria.cloud/_plugin/kibana/app/kibana#/discover/7b090760-1d06-11ea-8aa5-63ab4691f23a?_g=()&amp;amp;_a=(columns:!(kubernetes.event.type,kubernetes.event.reason,kubernetes.event.message),filters:!(),index:%272e001cb0-1d06-11ea-9a01-59a30b036b90%27,interval:auto,query:(language:lucene,query:%27kubernetes.event.involved_object.kind:Node%27),sort:!(%27@timestamp%27,desc))" />
    </outline>
    <outline _complete="true" text="Coding interview university" _note="https://github.com/jwasham/coding-interview-university">
      <outline text="Algorithmic complexity / Big-O / Asymptotic analysis">
        <outline _complete="true" text="Harvard CS50 - Asymptotic Notation" _note="https://www.youtube.com/watch?v=iOq5kSKqeR4" />
        <outline _complete="true" text="Big O Notations (general quick tutorial)" _note="https://www.youtube.com/watch?v=V6mKVRU1evU" />
        <outline text="Big O Notation (and Omega and Theta) - best mathematical explanation" _note="https://www.youtube.com/watch?v=ei-A_wy5Yxw&amp;amp;index=2&amp;amp;list=PL1BaGV1cIH4UhkL8a9bJGG356covJ76qN" />
        <outline text="Skiena">
          <outline text="Video" _note="https://www.youtube.com/watch?v=gSyDMtdPNpU&amp;amp;index=2&amp;amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b" />
          <outline text="Slides" _note="http://www3.cs.stonybrook.edu/~algorith/video-lectures/2007/lecture2.pdf" />
        </outline>
        <outline text="A Gentle Introduction to Algorithm Complexity Analysis" _note="http://discrete.gr/complexity/" />
        <outline text="Orders of Growth (video)" _note="https://class.coursera.org/algorithmicthink1-004/lecture/59" />
        <outline text="Asymptotics (video)" _note="https://class.coursera.org/algorithmicthink1-004/lecture/61" />
        <outline text="UC Berkeley Big O (video)" _note="https://archive.org/details/ucberkeley_webcast_VIS4YDpuP98" />
        <outline text="UC Berkeley Big Omega (video)" _note="https://archive.org/details/ucberkeley_webcast_ca3e7UVmeUc" />
        <outline text="Amortized Analysis (video)" _note="https://www.youtube.com/watch?v=B3SpQZaAZP4&amp;amp;index=10&amp;amp;list=PL1BaGV1cIH4UhkL8a9bJGG356covJ76qN" />
        <outline text="Illustrating &quot;Big O&quot; (video)" _note="https://class.coursera.org/algorithmicthink1-004/lecture/63" />
        <outline text="TopCoder">
          <outline text="Computational Complexity: Section 1" _note="https://www.topcoder.com/community/competitive-programming/tutorials/computational-complexity-section-1/" />
          <outline text="Computational Complexity: Section 2" _note="https://www.topcoder.com/community/competitive-programming/tutorials/computational-complexity-section-2/" />
        </outline>
        <outline text="Cheat sheet" _note="http://bigocheatsheet.com/" />
        <outline text="Learn definition of asymptotic complexity?" />
      </outline>
      <outline text="Datastructures">
        <outline text="Arrays">
          <outline text="Study">
            <outline text="Arrays (video)" _note="https://www.coursera.org/learn/data-structures/lecture/OsBSF/arrays" />
            <outline text="UC Berkeley CS61B - Linear and Multi-Dim Arrays (video) (Start watching from 15m 32s)" _note="https://archive.org/details/ucberkeley_webcast_Wp8oiO_CZZE" />
            <outline text="Basic Arrays (video)" _note="https://www.lynda.com/Developer-Programming-Foundations-tutorials/Basic-arrays/149042/177104-4.html" />
            <outline text="Multi-dim (video)" _note="https://www.lynda.com/Developer-Programming-Foundations-tutorials/Multidimensional-arrays/149042/177105-4.html" />
            <outline text="Dynamic Arrays (video)" _note="https://www.coursera.org/learn/data-structures/lecture/EwbnV/dynamic-arrays" />
            <outline text="Jagged Arrays (video)" _note="https://www.youtube.com/watch?v=1jtrQqYpt7g" />
            <outline text="Jagged Arrays (video)" _note="https://www.lynda.com/Developer-Programming-Foundations-tutorials/Jagged-arrays/149042/177106-4.html" />
            <outline text="Resizing arrays (video)" _note="https://www.lynda.com/Developer-Programming-Foundations-tutorials/Resizable-arrays/149042/177108-4.html&#10;" />
          </outline>
          <outline text="Implement a vector (mutable array with automatic resizing):">
            <outline text="Practice coding using arrays and pointers, and pointer math to jump to an index instead of using indexing." />
            <outline text="new raw data array with allocated memory">
              <outline text="can allocate int array under the hood, just not use its features" />
              <outline text="start with 16, or if starting number is greater, use power of 2 - 16, 32, 64, 128" />
            </outline>
            <outline text="size() - number of items" />
            <outline text="capacity() - number of items it can hold" />
            <outline text="is_empty()" />
            <outline text="at(index) - returns item at given index, blows up if index out of bounds" />
            <outline text="push(item)" />
            <outline text="insert(index, item) - inserts item at index, shifts that index's value and trailing elements to the right" />
            <outline text="prepend(item) - can use insert above at index 0" />
            <outline text="pop() - remove from end, return value" />
            <outline text="delete(index) - delete item at index, shifting all trailing elements left" />
            <outline text="remove(item) - looks for value and removes index holding it (even if in multiple places)" />
            <outline text="find(item) - looks for value and returns first index with that value, -1 if not found" />
            <outline text="resize(new_capacity) // private function">
              <outline text="when you reach capacity, resize to double the size" />
              <outline text="when popping an item, if size is 1/4 of capacity, resize to half" />
            </outline>
          </outline>
          <outline text="Time">
            <outline text="O(1) to add/remove at end (amortized for allocations for more space), index, or update" />
            <outline text="O(n) to insert/remove elsewhere" />
          </outline>
          <outline text="Space">
            <outline text="contiguous in memory, so proximity helps performance" />
            <outline text="space needed = (array capacity, which is &amp;gt;= n) * size of item, but even if 2n, still O(n)" />
          </outline>
        </outline>
        <outline text="Linked lists">
          <outline text="Study">
            <outline text="Study">
              <outline text="Description:">
                <outline text="Singly Linked Lists (video)" _note="https://www.coursera.org/learn/data-structures/lecture/kHhgK/singly-linked-lists" />
                <outline text="CS 61B - Linked Lists 1 (video)" _note="https://archive.org/details/ucberkeley_webcast_htzJdKoEmO0" />
                <outline text="CS 61B - Linked Lists 2 (video)" _note="https://archive.org/details/ucberkeley_webcast_-c4I3gFYe3w" />
              </outline>
              <outline text="C Code (video) - not the whole video, just portions about Node struct and memory allocation." _note="https://www.youtube.com/watch?v=QN6FPiD0Gzo" />
              <outline text="Linked List vs Arrays:">
                <outline text="Core Linked Lists Vs Arrays (video)" _note="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/rjBs9/core-linked-lists-vs-arrays" />
                <outline text="In The Real World Linked Lists Vs Arrays (video)" _note="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/rjBs9/core-linked-lists-vs-arrays" />
              </outline>
              <outline text="why you should avoid linked lists (video)" _note="https://www.youtube.com/watch?v=YQs6IC-vgmo" />
              <outline text="Gotcha: you need pointer to pointer knowledge: (for when you pass a pointer to a function that may change the address where that pointer points) This page is just to get a grasp on ptr to ptr. I don't recommend this list traversal style. Readability and maintainability suffer due to cleverness.">
                <outline text="Pointers to pointers" _note="https://www.eskimo.com/~scs/cclass/int/sx8.html" />
              </outline>
            </outline>
            <outline text="Implement (I did with tail pointer &amp;amp; without):">
              <outline text="size() - returns number of data elements in list" />
              <outline text="empty() - bool returns true if empty" />
              <outline text="value_at(index) - returns the value of the nth item (starting at 0 for first)" />
              <outline text="push_front(value) - adds an item to the front of the list" />
              <outline text="pop_front() - remove front item and return its value" />
              <outline text="push_back(value) - adds an item at the end" />
              <outline text="pop_back() - removes end item and returns its value" />
              <outline text="front() - get value of front item" />
              <outline text="back() - get value of end item" />
              <outline text="insert(index, value) - insert value at index, so current item at that index is pointed to by new item at index" />
              <outline text="erase(index) - removes node at given index" />
              <outline text="value_n_from_end(n) - returns the value of the node at nth position from the end of the list" />
              <outline text="reverse() - reverses the list" />
              <outline text="remove_value(value) - removes the first item in the list with this value" />
            </outline>
            <outline text="Doubly-linked List">
              <outline text="Description (video)" _note="https://www.coursera.org/learn/data-structures/lecture/jpGKD/doubly-linked-lists" />
              <outline text="No need to implement" />
            </outline>
          </outline>
        </outline>
        <outline text="Stack">
          <outline text="Stacks (video)" _note="https://www.coursera.org/learn/data-structures/lecture/UdKzQ/stacks" />
          <outline text="Using Stacks Last-In First-Out (video)" _note="https://www.lynda.com/Developer-Programming-Foundations-tutorials/Using-stacks-last-first-out/149042/177120-4.html" />
          <outline text="Will not implement. Implementing with array is trivial." />
        </outline>
        <outline text="Queue">
          <outline text="Study">
            <outline text="Using Queues First-In First-Out(video)" _note="Using Queues First-In First-Out(video)" />
            <outline text="Queue (video)" _note="https://www.coursera.org/lecture/data-structures/queues-EShpq" />
            <outline text="Circular buffer/FIFO" _note="https://en.wikipedia.org/wiki/Circular_buffer" />
            <outline text="Priority Queues (video)" _note="https://www.lynda.com/Developer-Programming-Foundations-tutorials/Priority-queues-deques/149042/177123-4.html" />
          </outline>
          <outline text="Implement using linked-list, with tail pointer:">
            <outline text="enqueue(value) - adds value at position at tail" />
            <outline text="dequeue() - returns value and removes least recently added element (front)" />
            <outline text="empty()" />
          </outline>
          <outline text="Implement using fixed-sized array:">
            <outline text="enqueue(value) - adds item at end of available storage" />
            <outline text="dequeue() - returns value and removes least recently added element" />
            <outline text="empty()" />
            <outline text="full()" />
          </outline>
          <outline text="Cost:">
            <outline text="a bad implementation using linked list where you enqueue at head and dequeue at tail would be O(n) because you'd need the next to last element, causing a full traversal each dequeue" />
            <outline text="enqueue: O(1) (amortized, linked list and array [probing])" />
            <outline text="dequeue: O(1) (linked list and array)" />
            <outline text="empty: O(1) (linked list and array)" />
          </outline>
        </outline>
        <outline text="Hash table">
          <outline text="Study">
            <outline text="Videos:">
              <outline text="Hashing with Chaining (video)" _note="https://www.youtube.com/watch?v=0M_kIqhwbFo&amp;amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;amp;index=8" />
              <outline text="Table Doubling, Karp-Rabin (video)" _note="https://www.youtube.com/watch?v=BRO7mVIFt08&amp;amp;index=9&amp;amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" />
              <outline text="Open Addressing, Cryptographic Hashing (video)" _note="https://www.youtube.com/watch?v=rvdJDijO2Ro&amp;amp;index=10&amp;amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" />
              <outline text="PyCon 2010: The Mighty Dictionary (video)" _note="https://www.youtube.com/watch?v=C4Kc8xzcA68" />
              <outline text="(Advanced) Randomization: Universal &amp;amp; Perfect Hashing (video)" _note="https://www.youtube.com/watch?v=z0lJ2k0sl1g&amp;amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;amp;index=11" />
              <outline text="(Advanced) Perfect hashing (video)" _note="https://www.youtube.com/watch?v=N0COwN14gt0&amp;amp;list=PL2B4EEwhKD-NbwZ4ezj7gyc_3yNrojKM9&amp;amp;index=4" />
            </outline>
            <outline text="Online Courses:">
              <outline text="Understanding Hash Functions (video)" _note="https://www.lynda.com/Developer-Programming-Foundations-tutorials/Understanding-hash-functions/149042/177126-4.html" />
              <outline text="Using Hash Tables (video)" _note="https://www.lynda.com/Developer-Programming-Foundations-tutorials/Using-hash-tables/149042/177127-4.html" />
              <outline text="Supporting Hashing (video)" _note="https://www.lynda.com/Developer-Programming-Foundations-tutorials/Supporting-hashing/149042/177128-4.html" />
              <outline text="Language Support Hash Tables (video)" _note="https://www.lynda.com/Developer-Programming-Foundations-tutorials/Language-support-hash-tables/149042/177129-4.html" />
              <outline text="Core Hash Tables (video)" _note="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/m7UuP/core-hash-tables" />
              <outline text="Data Structures (video)" _note="https://www.coursera.org/learn/data-structures/home/week/3" />
              <outline text="Phone Book Problem (video)" _note="https://www.coursera.org/learn/data-structures/lecture/NYZZP/phone-book-problem" />
              <outline text="distributed hash tables:">
                <outline text="Instant Uploads And Storage Optimization In Dropbox (video)" _note="https://www.coursera.org/learn/data-structures/lecture/DvaIb/instant-uploads-and-storage-optimization-in-dropbox" />
                <outline text="Distributed Hash Tables (video)" _note="https://www.coursera.org/learn/data-structures/lecture/tvH8H/distributed-hash-tables" />
              </outline>
            </outline>
          </outline>
          <outline text="Implement with array using linear probing">
            <outline text="hash(k, m) - m is size of hash table" />
            <outline text="add(key, value) - if key already exists, update value" />
            <outline text="exists(key)" />
            <outline text="get(key)" />
            <outline text="remove(key)" />
          </outline>
        </outline>
      </outline>
      <outline text="More knowledge">
        <outline text="Binary search">
          <outline text="Binary Search (video)" _note="https://www.youtube.com/watch?v=D5SrAga1pno" />
          <outline text="Binary Search (video)" _note="https://www.khanacademy.org/computing/computer-science/algorithms/binary-search/a/binary-search" />
          <outline text="detail" _note="https://www.topcoder.com/community/competitive-programming/tutorials/binary-search/" />
          <outline text="Implement:">
            <outline text="binary search (on sorted array of integers)" />
            <outline text="binary search using recursion" />
          </outline>
        </outline>
        <outline text="Bitwise operations">
          <outline text="Bits cheat sheet - you should know many of the powers of 2 from (2^1 to 2^16 and 2^32)" _note="https://github.com/jwasham/coding-interview-university/blob/master/extras/cheat%20sheets/bits-cheat-cheet.pdf" />
          <outline text="Get a really good understanding of manipulating bits with: &amp;amp;, |, ^, ~, &amp;gt;&amp;gt;, &amp;lt;&amp;lt;">
            <outline text="words" _note="https://en.wikipedia.org/wiki/Word_(computer_architecture)" />
            <outline text="Good intro: Bit Manipulation (video)" _note="https://www.youtube.com/watch?v=7jkIUgLC29I" />
            <outline text="C Programming Tutorial 2-10: Bitwise Operators (video)" _note="https://www.youtube.com/watch?v=d0AwjSpNXR0" />
            <outline text="Bit Manipulation" _note="https://en.wikipedia.org/wiki/Bit_manipulation" />
            <outline text="Bitwise Operation" _note="https://en.wikipedia.org/wiki/Bitwise_operation" />
            <outline text="Bithacks" _note="https://graphics.stanford.edu/~seander/bithacks.html" />
            <outline text="The Bit Twiddler" _note="http://bits.stephan-brumme.com/" />
            <outline text="The Bit Twiddler Interactive" _note="http://bits.stephan-brumme.com/interactive.html" />
          </outline>
          <outline text="2s and 1s complement">
            <outline text="Binary: Plusses &amp;amp; Minuses (Why We Use Two's Complement) (video)" _note="https://www.youtube.com/watch?v=lKTsv6iVxV4" />
            <outline text="1s Complement" _note="https://en.wikipedia.org/wiki/Ones%27_complement" />
            <outline text="2s Complement" _note="https://en.wikipedia.org/wiki/Two%27s_complement" />
          </outline>
          <outline text="count set bits">
            <outline text="4 ways to count bits in a byte (video)" _note="https://youtu.be/Hzuzo9NJrlc" />
            <outline text="Count Bits" _note="https://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetKernighan" />
            <outline text="How To Count The Number Of Set Bits In a 32 Bit Integer" _note="http://stackoverflow.com/questions/109023/how-to-count-the-number-of-set-bits-in-a-32-bit-integer" />
          </outline>
          <outline text="round to next power of 2:">
            <outline text="Round Up To Next Power Of Two" _note="http://bits.stephan-brumme.com/roundUpToNextPowerOfTwo.html" />
          </outline>
          <outline text="swap values:">
            <outline text="Swap" _note="http://bits.stephan-brumme.com/swap.html" />
          </outline>
          <outline text="absolute value:">
            <outline text="Absolute Integer" _note="http://bits.stephan-brumme.com/absInteger.html" />
          </outline>
        </outline>
      </outline>
      <outline text="Trees">
        <outline text="Notes &amp;amp; Background">
          <outline text="Series: Core Trees (video)" _note="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/ovovP/core-trees" />
          <outline text="Series: Trees (video)" _note="https://www.coursera.org/learn/data-structures/lecture/95qda/trees" />
          <outline text="basic tree construction" />
          <outline text="traversal" />
          <outline text="manipulation algorithms" />
          <outline text="BFS (breadth-first search)">
            <outline text="MIT (video)" _note="https://www.youtube.com/watch?v=s-CYnVz-uh4&amp;amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;amp;index=13" />
            <outline text="level order (BFS, using queue) time complexity: O(n) space complexity: best: O(1), worst: O(n/2)=O(n)" />
          </outline>
          <outline text="DFS (depth-first search)">
            <outline text="MIT (video)" _note="https://www.youtube.com/watch?v=AfSk24UTFS8&amp;amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;amp;index=14" />
            <outline text="notes: time complexity: O(n) space complexity: best: O(log n) - avg. height of tree worst: O(n)" />
            <outline text="inorder (DFS: left, self, right)" />
            <outline text="postorder (DFS: left, right, self)" />
            <outline text="preorder (DFS: self, left, right)" />
          </outline>
        </outline>
        <outline text="Binary Search Tree Review (video)">
          <outline text="Binary Search Tree Review (video)" _note="https://www.youtube.com/watch?v=x6At0nzX92o&amp;amp;index=1&amp;amp;list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6" />
          <outline text="Series (video)" _note="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/p82sw/core-introduction-to-binary-search-trees">
            <outline text="starts with symbol table and goes through BST applications" />
          </outline>
          <outline text="Introduction (video)" _note="https://www.coursera.org/learn/data-structures/lecture/E7cXP/introduction" />
          <outline text="MIT (video)" _note="https://www.youtube.com/watch?v=9Jry5-82I68" />
          <outline text="C/C++:">
            <outline text="Binary search tree - Implementation in C/C++ (video)" _note="https://www.youtube.com/watch?v=COZK7NATh4k&amp;amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&amp;amp;index=28" />
            <outline text="BST implementation - memory allocation in stack and heap (video)" _note="https://www.youtube.com/watch?v=hWokyBoo0aI&amp;amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&amp;amp;index=29" />
            <outline text="Find min and max element in a binary search tree (video)" _note="https://www.youtube.com/watch?v=Ut90klNN264&amp;amp;index=30&amp;amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P" />
            <outline text="Find height of a binary tree (video)" _note="https://www.youtube.com/watch?v=_pnqMz5nrRs&amp;amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&amp;amp;index=31" />
            <outline text="Binary tree traversal - breadth-first and depth-first strategies (video)" _note="https://www.youtube.com/watch?v=9RHO6jU--GU&amp;amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&amp;amp;index=32" />
            <outline text="Binary tree: Level Order Traversal (video)" _note="https://www.youtube.com/watch?v=86g8jAQug04&amp;amp;index=33&amp;amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P" />
            <outline text="Binary tree traversal: Preorder, Inorder, Postorder (video)" _note="https://www.youtube.com/watch?v=gm8DUJJhmY4&amp;amp;index=34&amp;amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P" />
            <outline text="Check if a binary tree is binary search tree or not (video)" _note="https://www.youtube.com/watch?v=yEwSGhSsT0U&amp;amp;index=35&amp;amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P" />
            <outline text="Delete a node from Binary Search Tree (video)" _note="https://www.youtube.com/watch?v=gcULXE7ViZw&amp;amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&amp;amp;index=36" />
            <outline text="Inorder Successor in a binary search tree (video)" _note="https://www.youtube.com/watch?v=5cPbNCrdotA&amp;amp;index=37&amp;amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P" />
          </outline>
          <outline text="Implement:">
            <outline text="insert // insert value into tree" />
            <outline text="get_node_count // get count of values stored" />
            <outline text="print_values // prints the values in the tree, from min to max" />
            <outline text="delete_tree" />
            <outline text="is_in_tree // returns true if given value exists in the tree" />
            <outline text="get_height // returns the height in nodes (single node's height is 1)" />
            <outline text="get_min // returns the minimum value stored in the tree" />
            <outline text="get_max // returns the maximum value stored in the tree" />
            <outline text="is_binary_search_tree" />
            <outline text="delete_value" />
            <outline text="get_successor // returns next-highest value in tree after given value, -1 if none" />
          </outline>
        </outline>
        <outline text="Heap / Priority Queue / Binary Heap">
          <outline text="visualized as a tree, but is usually linear in storage (array, linked list)" />
          <outline text="Heap" _note="https://en.wikipedia.org/wiki/Heap_(data_structure)" />
          <outline text="Introduction (video)" _note="https://www.coursera.org/learn/data-structures/lecture/2OpTs/introduction" />
          <outline text="Naive Implementations (video)" _note="https://www.coursera.org/learn/data-structures/lecture/z3l9N/naive-implementations" />
          <outline text="Binary Trees (video)" _note="https://www.coursera.org/learn/data-structures/lecture/GRV2q/binary-trees" />
          <outline text="Tree Height Remark (video)" _note="https://www.coursera.org/learn/data-structures/supplement/S5xxz/tree-height-remark" />
          <outline text="Basic Operations (video)" _note="https://www.coursera.org/learn/data-structures/lecture/0g1dl/basic-operations" />
          <outline text="Complete Binary Trees (video)" _note="https://www.coursera.org/learn/data-structures/lecture/gl5Ni/complete-binary-trees" />
          <outline text="Pseudocode (video)" _note="https://www.coursera.org/learn/data-structures/lecture/HxQo9/pseudocode" />
          <outline text="Heap Sort - jumps to start (video)" _note="https://youtu.be/odNJmw5TOEE?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;amp;t=3291" />
          <outline text="Heap Sort (video)" _note="https://www.coursera.org/learn/data-structures/lecture/hSzMO/heap-sort" />
          <outline text="Building a heap (video)" _note="https://www.coursera.org/learn/data-structures/lecture/dwrOS/building-a-heap" />
          <outline text="MIT: Heaps and Heap Sort (video)" _note="https://www.youtube.com/watch?v=B7hVxCmfPtM&amp;amp;index=4&amp;amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" />
          <outline text="CS 61B Lecture 24: Priority Queues (video)" _note="https://archive.org/details/ucberkeley_webcast_yIUFT6AKBGE" />
          <outline text="Linear Time BuildHeap (max-heap)" _note="https://www.youtube.com/watch?v=MiyLo8adrWw" />
          <outline text="Implement a max-heap:">
            <outline text="insert" />
            <outline text="sift_up - needed for insert" />
            <outline text="get_max - returns the max item, without removing it" />
            <outline text="get_size() - return number of elements stored" />
            <outline text="is_empty() - returns true if heap contains no elements" />
            <outline text="extract_max - returns the max item, removing it" />
            <outline text="sift_down - needed for extract_max" />
            <outline text="remove(i) - removes item at index x" />
            <outline text="heapify - create a heap from an array of elements, needed for heap_sort" />
            <outline text="heap_sort() - take an unsorted array and turn it into a sorted array in-place using a max heap">
              <outline text="note: using a min heap instead would save operations, but double the space needed (cannot do in-place)." />
            </outline>
          </outline>
        </outline>
      </outline>
      <outline text="Sorting">
        <outline text="Notes">
          <outline text="Implement sorts &amp;amp; know best case/worst case, average complexity of each:">
            <outline text="no bubble sort - it's terrible - O(n^2), except when n &amp;lt;= 16" />
          </outline>
          <outline text="stability in sorting algorithms (&quot;Is Quicksort stable?&quot;)">
            <outline text="Sorting Algorithm Stability" _note="https://en.wikipedia.org/wiki/Sorting_algorithm#Stability" />
            <outline text="Stability In Sorting Algorithms" _note="http://stackoverflow.com/questions/1517793/stability-in-sorting-algorithms" />
            <outline text="Stability In Sorting Algorithms" _note="http://www.geeksforgeeks.org/stability-in-sorting-algorithms/" />
            <outline text="Sorting Algorithms - Stability" _note="http://homepages.math.uic.edu/~leon/cs-mcs401-s08/handouts/stability.pdf" />
          </outline>
          <outline text="Which algorithms can be used on linked lists? Which on arrays? Which on both?">
            <outline text="I wouldn't recommend sorting a linked list, but merge sort is doable." />
            <outline text="Merge Sort For Linked List" _note="http://www.geeksforgeeks.org/merge-sort-for-linked-list/" />
          </outline>
        </outline>
        <outline text="For heapsort, see Heap data structure above. Heap sort is great, but not stable." />
        <outline text="Sedgewick - Mergesort (5 videos)" _note="https://www.youtube.com/watch?v=4nKwesx_c8E&amp;amp;list=PLe-ggMe31CTeunC6GZHFBmQx7EKtjbGf9">
          <outline text="1. Mergesort" _note="https://www.youtube.com/watch?v=4nKwesx_c8E&amp;amp;list=PLe-ggMe31CTeunC6GZHFBmQx7EKtjbGf9&amp;amp;index=1" />
          <outline text="2. Bottom up Mergesort" _note="https://www.youtube.com/watch?v=HGOIGUYjeyk&amp;amp;list=PLe-ggMe31CTeunC6GZHFBmQx7EKtjbGf9&amp;amp;index=2" />
          <outline text="3. Sorting Complexity" _note="https://www.youtube.com/watch?v=WvU_mIWo0Ac&amp;amp;index=3&amp;amp;list=PLe-ggMe31CTeunC6GZHFBmQx7EKtjbGf9" />
          <outline text="4. Comparators" _note="https://www.youtube.com/watch?v=7MvC1kmBza0&amp;amp;index=4&amp;amp;list=PLe-ggMe31CTeunC6GZHFBmQx7EKtjbGf9" />
          <outline text="5. Stability" _note="https://www.youtube.com/watch?v=XD_5iINB5GI&amp;amp;index=5&amp;amp;list=PLe-ggMe31CTeunC6GZHFBmQx7EKtjbGf9" />
        </outline>
        <outline text="Sedgewick - Quicksort (4 videos)" _note="https://www.youtube.com/playlist?list=PLe-ggMe31CTeE3x2-nF1-toca1QpuXwE1">
          <outline text="1. Quicksort" _note="https://www.youtube.com/watch?v=5M5A7qPWk84&amp;amp;index=1&amp;amp;list=PLe-ggMe31CTeE3x2-nF1-toca1QpuXwE1" />
          <outline text="2. Selection" _note="https://www.youtube.com/watch?v=CgVYfSyct_M&amp;amp;index=2&amp;amp;list=PLe-ggMe31CTeE3x2-nF1-toca1QpuXwE1" />
          <outline text="3. Duplicate Keys" _note="https://www.youtube.com/watch?v=WBFzOYJ5ybM&amp;amp;index=3&amp;amp;list=PLe-ggMe31CTeE3x2-nF1-toca1QpuXwE1" />
          <outline text="4. System Sorts" _note="https://www.youtube.com/watch?v=rejpZ2htBjE&amp;amp;index=4&amp;amp;list=PLe-ggMe31CTeE3x2-nF1-toca1QpuXwE1" />
        </outline>
        <outline text="UC Berkeley:">
          <outline text="CS 61B Lecture 29: Sorting I (video)" _note="https://archive.org/details/ucberkeley_webcast_EiUvYS2DT6I" />
          <outline text="CS 61B Lecture 30: Sorting II (video)" _note="https://archive.org/details/ucberkeley_webcast_2hTY3t80Qsk" />
          <outline text="CS 61B Lecture 32: Sorting III (video)" _note="https://archive.org/details/ucberkeley_webcast_Y6LOLpxg6Dc" />
          <outline text="CS 61B Lecture 33: Sorting V (video)" _note="https://archive.org/details/ucberkeley_webcast_qNMQ4ly43p4" />
        </outline>
        <outline text="Bubble Sort (video)" _note="https://www.youtube.com/watch?v=P00xJgWzz2c&amp;amp;index=1&amp;amp;list=PL89B61F78B552C1AB" />
        <outline text="Analyzing Bubble Sort (video)" _note="https://www.youtube.com/watch?v=ni_zk257Nqo&amp;amp;index=7&amp;amp;list=PL89B61F78B552C1AB" />
        <outline text="Insertion Sort, Merge Sort (video)" _note="https://www.youtube.com/watch?v=Kg4bqzAqRBM&amp;amp;index=3&amp;amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" />
        <outline text="Insertion Sort (video)" _note="https://www.youtube.com/watch?v=c4BRHC7kTaQ&amp;amp;index=2&amp;amp;list=PL89B61F78B552C1AB" />
        <outline text="Merge Sort (video)" _note="https://www.youtube.com/watch?v=GCae1WNvnZM&amp;amp;index=3&amp;amp;list=PL89B61F78B552C1AB" />
        <outline text="Quicksort (video)" _note="https://www.youtube.com/watch?v=y_G9BkAm6B8&amp;amp;index=4&amp;amp;list=PL89B61F78B552C1AB" />
        <outline text="Selection Sort (video)" _note="https://www.youtube.com/watch?v=6nDMgr0-Yyo&amp;amp;index=8&amp;amp;list=PL89B61F78B552C1AB" />
        <outline text="Merge sort code:">
          <outline text="Using output array (C)" _note="http://www.cs.yale.edu/homes/aspnes/classes/223/examples/sorting/mergesort.c" />
          <outline text="Using output array (Python)" _note="https://github.com/jwasham/practice-python/blob/master/merge_sort/merge_sort.py" />
          <outline text="In-place (C++)" _note="https://github.com/jwasham/practice-cpp/blob/master/merge_sort/merge_sort.cc" />
        </outline>
        <outline text="Quick sort code:">
          <outline text="Implementation (C)" _note="http://www.cs.yale.edu/homes/aspnes/classes/223/examples/randomization/quick.c" />
          <outline text="Implementation (C)" _note="https://github.com/jwasham/practice-c/blob/master/quick_sort/quick_sort.c" />
          <outline text="Implementation (Python)" _note="https://github.com/jwasham/practice-python/blob/master/quick_sort/quick_sort.py" />
        </outline>
        <outline text="Implement:">
          <outline text="Mergesort: O(n log n) average and worst case" />
          <outline text="Quicksort O(n log n) average case" />
          <outline text="Selection sort and insertion sort are both O(n^2) average and worst case" />
          <outline text="For heapsort, see Heap data structure above." />
        </outline>
        <outline text="Not required, but I recommended them:">
          <outline text="Sedgewick - Radix Sorts (6 videos)" _note="https://www.youtube.com/playlist?list=PLe-ggMe31CTcNvUX9E3tQeM6ntrdR8e53">
            <outline text="1. Strings in Java" _note="https://www.youtube.com/watch?v=zRzU-FWsjNU&amp;amp;list=PLe-ggMe31CTcNvUX9E3tQeM6ntrdR8e53&amp;amp;index=6" />
            <outline text="2. Key Indexed Counting" _note="https://www.youtube.com/watch?v=CtgKYmXs62w&amp;amp;list=PLe-ggMe31CTcNvUX9E3tQeM6ntrdR8e53&amp;amp;index=5" />
            <outline text="3. Least Significant Digit First String Radix Sort" _note="https://www.youtube.com/watch?v=2pGVq_BwPKs&amp;amp;list=PLe-ggMe31CTcNvUX9E3tQeM6ntrdR8e53&amp;amp;index=4" />
            <outline text="4. Most Significant Digit First String Radix Sort" _note="https://www.youtube.com/watch?v=M3cYNY90R6c&amp;amp;index=3&amp;amp;list=PLe-ggMe31CTcNvUX9E3tQeM6ntrdR8e53" />
            <outline text="5. 3 Way Radix Quicksort" _note="https://www.youtube.com/watch?v=YVl58kfE6i8&amp;amp;index=2&amp;amp;list=PLe-ggMe31CTcNvUX9E3tQeM6ntrdR8e53" />
            <outline text="6. Suffix Arrays" _note="https://www.youtube.com/watch?v=HKPrVm5FWvg&amp;amp;list=PLe-ggMe31CTcNvUX9E3tQeM6ntrdR8e53&amp;amp;index=1" />
          </outline>
          <outline text="Radix Sort" _note="http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#radixSort" />
          <outline text="Radix Sort (video)" _note="https://www.youtube.com/watch?v=xhr26ia4k38" />
          <outline text="Radix Sort, Counting Sort (linear time given constraints) (video)" _note="https://www.youtube.com/watch?v=Nz1KZXbghj8&amp;amp;index=7&amp;amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" />
          <outline text="Randomization: Matrix Multiply, Quicksort, Freivalds' algorithm (video)" _note="https://www.youtube.com/watch?v=cNB2lADK3_s&amp;amp;index=8&amp;amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp" />
          <outline text="Sorting in Linear Time (video)" _note="https://www.youtube.com/watch?v=pOKy3RZbSws&amp;amp;list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf&amp;amp;index=14" />
        </outline>
      </outline>
      <outline text="Graphs">
        <outline text="Notes:">
          <outline text="There are 4 basic ways to represent a graph in memory:">
            <outline text="objects and pointers" />
            <outline text="adjacency matrix" />
            <outline text="adjacency list" />
            <outline text="adjacency map" />
          </outline>
          <outline text="Familiarize yourself with each representation and its pros &amp;amp; cons" />
          <outline text="BFS and DFS - know their computational complexity, their tradeoffs, and how to implement them in real code" />
          <outline text="When asked a question, look for a graph-based solution first, then move on if none." />
        </outline>
        <outline text="Skiena Lectures - great intro:">
          <outline text="CSE373 2012 - Lecture 11 - Graph Data Structures (video)" _note="https://www.youtube.com/watch?v=OiXxhDrFruw&amp;amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;amp;index=11" />
          <outline text="CSE373 2012 - Lecture 12 - Breadth-First Search (video)" _note="https://www.youtube.com/watch?v=g5vF8jscteo&amp;amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;amp;index=12" />
          <outline text="CSE373 2012 - Lecture 13 - Graph Algorithms (video)" _note="https://www.youtube.com/watch?v=S23W6eTcqdY&amp;amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;amp;index=13" />
          <outline text="CSE373 2012 - Lecture 14 - Graph Algorithms (con't) (video)" _note="https://www.youtube.com/watch?v=WitPBKGV0HY&amp;amp;index=14&amp;amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b" />
          <outline text="CSE373 2012 - Lecture 15 - Graph Algorithms (con't 2) (video)" _note="https://www.youtube.com/watch?v=ia1L30l7OIg&amp;amp;index=15&amp;amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b" />
          <outline text="CSE373 2012 - Lecture 16 - Graph Algorithms (con't 3) (video)" _note="https://www.youtube.com/watch?v=jgDOQq6iWy8&amp;amp;index=16&amp;amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b" />
        </outline>
        <outline text="Graphs (review and more):">
          <outline text="6.006 Single-Source Shortest Paths Problem (video)" _note="https://www.youtube.com/watch?v=Aa2sqUhIn-E&amp;amp;index=15&amp;amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" />
          <outline text="6.006 Dijkstra (video)" _note="https://www.youtube.com/watch?v=2E7MmKv0Y24&amp;amp;index=16&amp;amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" />
          <outline text="6.006 Bellman-Ford (video)" _note="https://www.youtube.com/watch?v=ozsuci5pIso&amp;amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;amp;index=17" />
          <outline text="6.006 Speeding Up Dijkstra (video)" _note="https://www.youtube.com/watch?v=CHvQ3q_gJ7E&amp;amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;amp;index=18" />
          <outline text="Aduni: Graph Algorithms I - Topological Sorting, Minimum Spanning Trees, Prim's Algorithm - Lecture 6 (video)" _note="https://www.youtube.com/watch?v=i_AQT_XfvD8&amp;amp;index=6&amp;amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm" />
          <outline text="Aduni: Graph Algorithms II - DFS, BFS, Kruskal's Algorithm, Union Find Data Structure - Lecture 7 (video)" _note="https://www.youtube.com/watch?v=ufj5_bppBsA&amp;amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;amp;index=7" />
          <outline text="Aduni: Graph Algorithms III: Shortest Path - Lecture 8 (video)" _note="https://www.youtube.com/watch?v=DiedsPsMKXc&amp;amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;amp;index=8" />
          <outline text="Aduni: Graph Alg. IV: Intro to geometric algorithms - Lecture 9 (video)" _note="https://www.youtube.com/watch?v=XIAQRlNkJAw&amp;amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;amp;index=9" />
          <outline text="CS 61B 2014 (starting at 58:09) (video)" _note="https://youtu.be/dgjX4HdMI-Q?list=PL-XXv-cvA_iAlnI-BQr9hjqADPBtujFJd&amp;amp;t=3489" />
          <outline text="CS 61B 2014: Weighted graphs (video)" _note="https://archive.org/details/ucberkeley_webcast_zFbq8vOZ_0k" />
          <outline text="Greedy Algorithms: Minimum Spanning Tree (video)" _note="https://www.youtube.com/watch?v=tKwnms5iRBU&amp;amp;index=16&amp;amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp" />
          <outline text="Strongly Connected Components Kosaraju's Algorithm Graph Algorithm (video)" _note="https://www.youtube.com/watch?v=RpgcYiky7uw" />
        </outline>
        <outline text="Full Coursera Course:">
          <outline text="Algorithms on Graphs (video)" _note="https://www.coursera.org/learn/algorithms-on-graphs/home/welcome" />
        </outline>
        <outline text="I'll implement:">
          <outline text="DFS with adjacency list (recursive)" />
          <outline text="DFS with adjacency list (iterative with stack)" />
          <outline text="DFS with adjacency matrix (recursive)" />
          <outline text="DFS with adjacency matrix (iterative with stack)" />
          <outline text="BFS with adjacency list" />
          <outline text="BFS with adjacency matrix" />
          <outline text="single-source shortest path (Dijkstra)" />
          <outline text="minimum spanning tree" />
          <outline text="DFS-based algorithms (see Aduni videos above):">
            <outline text="check for cycle (needed for topological sort, since we'll check for cycle before starting)" />
            <outline text="topological sort" />
            <outline text="count connected components in a graph" />
            <outline text="list strongly connected components" />
            <outline text="check for bipartite graph" />
          </outline>
        </outline>
      </outline>
      <outline text="Even More Knowledge" />
    </outline>
    <outline _complete="true" text="Vortex Core">
      <outline text="Useful notes">
        <outline text="Fn in docs is Pn on keyboard" />
        <outline text="Pn in docs is Menu on keyboard" />
        <outline text="Arrow keys, ignore docs, use Pn (on keyboard) + green arrow key" />
        <outline text="ESC secondary keys are actually mapped to Z, so tilde is Rshift + Fn1 + z (according to keyboard, not manual)" />
        <outline text="Hash key is achieved by pressing IN THIS ORDER (together but press initial one first): win (i.e. alt) + Fn1 + S" />
        <outline text="Volume keys, Pn (on keyboard) plus q / w / e" />
      </outline>
      <outline text="Changes I've made">
        <outline text="Blue layer">
          <outline text="Swopped alt and pn on keyboard (alt and fn)" />
        </outline>
        <outline text="Iterm, Pn +&amp;lt;/&amp;gt; to move tabs sideways" />
      </outline>
    </outline>
    <outline text="Regex">
      <outline text="https://regex101.com/" />
    </outline>
  </outline>
  <outline text="WorkFlowy Release Notes">
    <outline text="2020">
      <outline text="JULY">
        <outline text="July 01, 2020 ">
          <outline text="VERSIONS RELEASED">
            <outline text="&lt;b&gt;Web &lt;/b&gt;" _note="&lt;a href=&quot;https://workflowy.com&quot;&gt;https://workflowy.com&lt;/a&gt;" />
            <outline text="&lt;b&gt;Desktop&lt;/b&gt; 1.3.5-8835" _note="&lt;a href=&quot;https://workflowy.com/downloads&quot;&gt;https://workflowy.com/downloads&lt;/a&gt;" />
            <outline text="&lt;b&gt;Android &lt;/b&gt;3.5.17 " _note="&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.workflowy.android&quot;&gt;https://play.google.com/store/apps/details?id=com.workflowy.android&lt;/a&gt;" />
            <outline text="&lt;b&gt;iOS &lt;/b&gt;3.5.17 " _note="&lt;a href=&quot;https://itunes.apple.com/us/app/workflowy/id551139514?mt=8&quot;&gt;https://itunes.apple.com/us/app/workflowy/id551139514?mt=8&lt;/a&gt;" />
          </outline>
          <outline text="TWEAKS &amp;amp; FEATURES   ">
            <outline text="Pin as top window" _note="#desktop ">
              <outline text="&lt;i&gt;You can see what you're supposed to be doing while you're doing it ... makes it a lot easier to follow a plan!&lt;/i&gt;" />
              <outline text="What it does:">
                <outline text="We added a &quot;Pin&quot;/&quot;Unpin&quot; button to the main menu in the desktop app" />
                <outline text="When pinned, the app stays on top" />
                <outline text="When unpinned it is no longer on top" />
              </outline>
            </outline>
            <outline text="The previous &quot;&lt;a href=&quot;https://workflowy.com/#/ce9aae9e6aea&quot;&gt;Performance Optimization&lt;/a&gt;&quot; option on &lt;a href=&quot;http://beta.workflowy.com&quot;&gt;beta.workflowy.com&lt;/a&gt; is now integrated into the system. This allows for a smoother loading of lists when scrolling long-ish lists." _note="#desktop #web #ios #android " />
            <outline text="We made dialog text selactable (you can now select text from places like the Settings and Share menus)." _note="#desktop #web " />
          </outline>
          <outline text="MOST RECENT EXPERIMENTAL FEATURES " _note="&lt;a href=&quot;https://beta.workflowy.com&quot;&gt;https://beta.workflowy.com&lt;/a&gt;">
            <outline text="EMBEDDED HYPERLINK EDITOR">
              <outline text="&lt;i&gt;The popup link editor for embedded links has arrived on &lt;a href=&quot;http://beta.workflowy.com&quot;&gt;beta.workflowy.com&lt;/a&gt;&lt;/i&gt;" />
              <outline text="&lt;b&gt;1.&lt;/b&gt; Activate &quot;&lt;b&gt;Link editor&lt;/b&gt;&quot; under Experimental features&quot;" />
              <outline text="&lt;b&gt;2.&lt;/b&gt; Hover over any link and you'll see a link icon appear" />
              <outline text="&lt;b&gt;3.&lt;/b&gt; Click on the icon to bring up the link editor" />
              <outline text="&lt;b&gt;4.&lt;/b&gt; If you hover over any link you can hit &lt;b&gt;&lt;i&gt;Tab &lt;/i&gt;&lt;/b&gt;to activate the link editor" _note=" " />
            </outline>
            <outline text="MIRRORING | &lt;i&gt;formerly &quot;Cloning&quot; &lt;/i&gt;">
              <outline text="&lt;i&gt;Go along to &lt;a href=&quot;http://beta.workflowy.com&quot;&gt;beta.workflowy.com&lt;/a&gt; and activate the &quot;Mirror&quot; experimental feature in your Settings menu.&lt;/i&gt;" />
              <outline text="&lt;b&gt;1.&lt;/b&gt; Mirror any list by accessing the bullet items menu &amp;gt; &lt;b&gt;&lt;i&gt;Mirror &lt;/i&gt;&lt;/b&gt;(or hit &lt;b&gt;&lt;i&gt;Alt+Shift+M&lt;/i&gt;&lt;/b&gt;)." />
              <outline text="&lt;b&gt;2.&lt;/b&gt; The parent of any mirror list will have a &lt;i&gt;diamond &lt;/i&gt;instead of a bullet point." />
              <outline text="&lt;b&gt;3.&lt;/b&gt; What you write/ edit in one list will appear in any other mirrors." />
              <outline text="&lt;b&gt;4.&lt;/b&gt; With any mirror list, you can access the bullet items menu and at the top you will see &quot;&lt;i&gt;Embedded node – view origina&lt;/i&gt;l&quot;. Click on the link to take you to the original if you wish." _note=" " />
            </outline>
          </outline>
        </outline>
      </outline>
      <outline text="JUNE">
        <outline text="June 24, 2020 ">
          <outline text="VERSIONS RELEASED">
            <outline text="&lt;b&gt;Web&lt;/b&gt;" _note="&lt;a href=&quot;https://workflowy.com&quot;&gt;https://workflowy.com&lt;/a&gt;" />
            <outline text="&lt;b&gt;Desktop&lt;/b&gt; 1.3.5-8727" _note="&lt;a href=&quot;https://workflowy.com/downloads&quot;&gt;https://workflowy.com/downloads&lt;/a&gt;" />
            <outline text="&lt;b&gt;Android &lt;/b&gt;3.5.16 " _note="&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.workflowy.android&quot;&gt;https://play.google.com/store/apps/details?id=com.workflowy.android&lt;/a&gt;" />
            <outline text="&lt;b&gt;iOS &lt;/b&gt;3.5.16" _note="&lt;a href=&quot;https://itunes.apple.com/us/app/workflowy/id551139514?mt=8&quot;&gt;https://itunes.apple.com/us/app/workflowy/id551139514?mt=8&lt;/a&gt;" />
          </outline>
          <outline text="MOST RECENT EXPERIMENTAL FEATURES " _note="&lt;a href=&quot;https://beta.workflowy.com&quot;&gt;https://beta.workflowy.com&lt;/a&gt;">
            <outline text="MINOR PERFORMANCE OPTIMIZATION ">
              <outline text="This makes for a smoother scrolling experience in long lists (whereas previously &quot;lazy loading&quot; was more noticeable). " />
            </outline>
            <outline text="EMBEDDED HYPERLINK EDITOR">
              <outline text="&lt;i&gt;The popup link editor for embedded links has arrived on &lt;a href=&quot;http://beta.workflowy.com&quot;&gt;beta.workflowy.com&lt;/a&gt;&lt;/i&gt;" />
              <outline text="&lt;b&gt;1.&lt;/b&gt; Activate &quot;&lt;b&gt;Link editor&lt;/b&gt;&quot; under Experimental features&quot;" />
              <outline text="&lt;b&gt;2.&lt;/b&gt; Hover over any link and you'll see a link icon appear" />
              <outline text="&lt;b&gt;3.&lt;/b&gt; Click on the icon to bring up the link editor" />
              <outline text="&lt;b&gt;4.&lt;/b&gt; If you hover over any link you can hit &lt;b&gt;&lt;i&gt;Tab &lt;/i&gt;&lt;/b&gt;to activate the link editor" _note=" " />
            </outline>
            <outline text="MIRRORING | &lt;i&gt;formerly &quot;Cloning&quot;&lt;/i&gt;">
              <outline text="&lt;i&gt;Go along to &lt;a href=&quot;http://beta.workflowy.com&quot;&gt;beta.workflowy.com&lt;/a&gt; and activate the &quot;Mirror&quot; experimental feature in your Settings menu.&lt;/i&gt;" />
              <outline text="&lt;b&gt;1.&lt;/b&gt; Mirror any list by accessing the bullet items menu &amp;gt; &lt;b&gt;&lt;i&gt;Mirror &lt;/i&gt;&lt;/b&gt;(or hit &lt;b&gt;&lt;i&gt;Alt+Shift+M&lt;/i&gt;&lt;/b&gt;)." />
              <outline text="&lt;b&gt;2.&lt;/b&gt; The parent of any mirror list will have a &lt;i&gt;diamond &lt;/i&gt;instead of a bullet point." />
              <outline text="&lt;b&gt;3.&lt;/b&gt; What you write/ edit in one list will appear in any other mirrors." />
              <outline text="&lt;b&gt;4.&lt;/b&gt; With any mirror list, you can access the bullet items menu and at the top you will see &quot;&lt;i&gt;Embedded node – view origina&lt;/i&gt;l&quot;. Click on the link to take you to the original if you wish." _note=" " />
            </outline>
          </outline>
          <outline text="TWEAKS ">
            <outline text="BOARDS" _note="#desktop #web ">
              <outline text="Spacing between stacked (parallel) boards is now more snug/ compact" />
            </outline>
            <outline text="MIRRORING | &lt;i&gt;experimental feature&lt;/i&gt;" _note="&lt;a href=&quot;https://beta.workflowy.com&quot;&gt;https://beta.workflowy.com&lt;/a&gt;">
              <outline text="Changed the name &quot;Clone&quot; to &quot;&lt;b&gt;&lt;i&gt;Mirror&lt;/i&gt;&lt;/b&gt;&quot;" />
              <outline text="Changed the keyboard shortcut to &lt;b&gt;&lt;i&gt;Alt+Shift+M&lt;/i&gt;&lt;/b&gt;" />
              <outline text="There is now a popup box with a code that can be copy-pasted anywhere to mirror " />
            </outline>
            <outline text="EMBEDDED HYPERLINK EDITOR |  &lt;i&gt;experimental feature&lt;/i&gt;" _note="&lt;a href=&quot;https://beta.workflowy.com&quot;&gt;https://beta.workflowy.com&lt;/a&gt;">
              <outline text="The teaser (link icon) is now triggered only when the cursor is within a link (not alongside). Of course hovering over the link still activates the teaser!" />
              <outline text="No rendering of links with &quot;javascript:&quot;" />
              <outline text="No dropping of links during saving when they contain a tag" />
            </outline>
          </outline>
          <outline text="BUG FIXES ">
            <outline text="BOARDS" _note="#desktop #web ">
              <outline text="Restored the bullet items menu for cards with &quot;Better interaction for cards...&quot; enabled." />
              <outline text="The horizontal scrollbar for zoomed-in boards was obscured by the &quot;&lt;i&gt;get more space&lt;/i&gt;&quot; visual for free users." />
              <outline text="One couldn't click on tags in the first line of a card and anywhere you placed your cursor in the first line, it jumped to the beginning of the line." />
              <outline text="When you created a note in a card and then hovered, the hover background color didn't cover the notes." />
              <outline text="We can now move cards to empty columns (which don't have any cards yet)!" />
            </outline>
            <outline text="MIRRORING | &lt;i&gt;experimental feature&lt;/i&gt;" _note="&lt;a href=&quot;https://beta.workflowy.com&quot;&gt;https://beta.workflowy.com&lt;/a&gt;">
              <outline text="One couldn't zoom into a mirrored list when the original list was in a board." />
              <outline text="Any mirrored list moved into a board was not showing the card styling." />
              <outline text="Adjusted the items menu popup width on Mac so that the &quot;&lt;i&gt;Mirrored node - view original&lt;/i&gt;&quot; link didn't break into 2 lines." />
              <outline text="The app crashed when zooming into a mirrored item after the original item was deleted." />
              <outline text="The app crashed when zoomed into a mirrored item in one browser tab and the same mirror was deleted in a second browser tab." />
            </outline>
          </outline>
        </outline>
        <outline text="June 17, 2020 ">
          <outline text="VERSIONS RELEASED">
            <outline text="&lt;b&gt;Web&lt;/b&gt;" _note="&lt;a href=&quot;https://workflowy.com&quot;&gt;https://workflowy.com&lt;/a&gt;" />
            <outline text="&lt;b&gt;Desktop&lt;/b&gt; 1.3.5-8590" _note="&lt;a href=&quot;https://workflowy.com/downloads&quot;&gt;https://workflowy.com/downloads&lt;/a&gt;" />
            <outline text="&lt;b&gt;Android &lt;/b&gt;3.5.15 " _note="&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.workflowy.android&quot;&gt;https://play.google.com/store/apps/details?id=com.workflowy.android&lt;/a&gt;" />
            <outline text="&lt;b&gt;iOS &lt;/b&gt;3.5.15 " _note="&lt;a href=&quot;https://itunes.apple.com/us/app/workflowy/id551139514?mt=8&quot;&gt;https://itunes.apple.com/us/app/workflowy/id551139514?mt=8&lt;/a&gt;" />
          </outline>
          <outline text="BETA TESTING FEATURES " _note="&lt;a href=&quot;https://beta.workflowy.com&quot;&gt;https://beta.workflowy.com&lt;/a&gt;">
            <outline text="Cloning/ Embedding">
              <outline text="&lt;i&gt;Go along to &lt;a href=&quot;http://beta.workflowy.com&quot;&gt;beta.workflowy.com&lt;/a&gt; and activate the &quot;Cloning&quot; Experimental feature in your Settings menu.&lt;/i&gt;" />
              <outline text="&lt;b&gt;1.&lt;/b&gt; Clone any list by accessing the bullet items menu &amp;gt; &lt;b&gt;&lt;i&gt;Clone &lt;/i&gt;&lt;/b&gt;(or hit &lt;b&gt;&lt;i&gt;Alt+Shift+C&lt;/i&gt;&lt;/b&gt;)." />
              <outline text="&lt;b&gt;2.&lt;/b&gt; The parent of any clone list will have a diamond instead of a bullet point." />
              <outline text="&lt;b&gt;3.&lt;/b&gt; What you write/ edit in one list will appear in all other clones." />
              <outline text="&lt;b&gt;4.&lt;/b&gt; With any cloned list, you can access the bullet items menu and at the top you will see &quot;&lt;i&gt;Embedded node – view origina&lt;/i&gt;l&quot;. Click on the link to take you to the original if you wish." _note=" " />
            </outline>
            <outline text="Embedded hyperlink editor">
              <outline text="&lt;i&gt;The popup link editor for embedded links has arrived on &lt;a href=&quot;http://beta.workflowy.com&quot;&gt;beta.workflowy.com&lt;/a&gt;&lt;/i&gt;" />
              <outline text="&lt;b&gt;1.&lt;/b&gt; Activate &quot;&lt;b&gt;Link editor&lt;/b&gt;&quot; under Experimental features&quot;" />
              <outline text="&lt;b&gt;2.&lt;/b&gt; Hover over any link and you'll see a link icon appear" />
              <outline text="&lt;b&gt;3.&lt;/b&gt; Click on the icon to bring up the link editor" />
              <outline text="&lt;b&gt;4.&lt;/b&gt; If you hover over any link you can hit &lt;b&gt;&lt;i&gt;Tab &lt;/i&gt;&lt;/b&gt;to activate the link editor" _note=" " />
            </outline>
          </outline>
          <outline text="TWEAKS ">
            <outline text="Rolled back the auto-creation of a child bullet when zooming into an empty bullet." _note="#web #desktop #android #ios " />
            <outline text="Reverted the feature where only lists zoomed into would display in the breadcrumb display (and the rest in clickable elipses flyout menus). " _note="#web #desktop " />
          </outline>
          <outline text="BUG FIXES ">
            <outline text="CLONE-RELATED BUGS " _note="&lt;a href=&quot;https://beta.workflowy.com&quot;&gt;https://beta.workflowy.com&lt;/a&gt;">
              <outline text="Couldn't zoom into a cloned list when the original list was in a board" />
              <outline text="Clones, when moved into boards, did not have card styling" />
              <outline text="Adjusted the width of the &lt;i&gt;items menu&lt;/i&gt; on Mac to account for the &quot;&lt;i&gt;Embedded node - view original&lt;/i&gt;&quot; link" />
            </outline>
          </outline>
        </outline>
        <outline text="June 09, 2020 ">
          <outline text="Versions Released">
            <outline text="&lt;b&gt;Web&lt;/b&gt;" _note="&lt;a href=&quot;https://workflowy.com&quot;&gt;https://workflowy.com&lt;/a&gt;" />
            <outline text="&lt;b&gt;Desktop&lt;/b&gt; 1.3.5-8342" _note="&lt;a href=&quot;https://workflowy.com/downloads&quot;&gt;https://workflowy.com/downloads&lt;/a&gt;" />
            <outline text="&lt;b&gt;Android &lt;/b&gt;3.5.14 " _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="&lt;b&gt;iOS &lt;/b&gt;3.5.13" _note="&lt;a href=&quot;https://itunes.apple.com/us/app/workflowy/id551139514?mt=8&quot;&gt;https://itunes.apple.com/us/app/workflowy/id551139514?mt=8&lt;/a&gt;" />
          </outline>
          <outline text="Tweaks &amp;amp; additions">
            <outline text="Set up a &lt;a href=&quot;https://beta.workflowy.com/post/fractal-boards/&quot;&gt;marketing page&lt;/a&gt; (with video!) for Fractal Boards. " _note="#web" />
            <outline text="Now showing only the lists actively zoomed into in the &lt;i&gt;breadcrumb navigation &lt;/i&gt;(links in top toolbar) – while those in between are tucked away in ellipses that you can click on to reveal the the hidden breadcrumb hierarchy." _note="#web #desktop " />
          </outline>
          <outline text="Bugs and fixes">
            <outline text="Miscellaneous Boards fixes" _note="#web #desktop ">
              <outline text="Improved Boards zoom animation" />
              <outline text="Fixed overflowing text in cards with long strings of text (links)" />
              <outline text="A more ample &quot;white-space&quot; area to zoom in or drag and drop when using the &quot;Better interaction for cards&quot; feature in Settings." />
            </outline>
            <outline text="The item menu (3-dot button) made an appearance in the title of zoomed-in bullets on mobile. It was in fact a bug and not a feature (as many had thought). We will find a way to bring all those options to mobile!" _note="#android #ios " />
            <outline text="Use default colors for bullets, links &amp;amp; text when printing the page. Hip hip hooray!" _note="#web #desktop " />
            <outline text="The font color on the &quot;Theme&quot; and &quot;Font&quot; buttons didn't change according to the new theme switched to.  " _note="#web #desktop " />
            <outline text="Copying text in a bullet (by moving the pins) activated the left and right-swipe options menus. " _note="#ios " />
            <outline text="Eliminated the shared notice if you are the owner of a document and are viewing via the share link " _note="#web " />
          </outline>
        </outline>
        <outline text="June 03, 2020 ">
          <outline text="Versions Released">
            <outline text="&lt;b&gt;Web&lt;/b&gt;" _note="&lt;a href=&quot;https://workflowy.com&quot;&gt;https://workflowy.com&lt;/a&gt;" />
            <outline text="&lt;b&gt;Desktop&lt;/b&gt; 1.3.5-8079" _note="&lt;a href=&quot;https://workflowy.com/downloads&quot;&gt;https://workflowy.com/downloads&lt;/a&gt;" />
            <outline text="&lt;b&gt;Android &lt;/b&gt;3.5.13 " _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="&lt;b&gt;iOS &lt;/b&gt;3.5.12 " _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Bug fixes">
            <outline text="When selecting text with Shift+Left Arrow (before autosave runs), the latter part of words were being un-selected" _note="#web #desktop #windows" />
          </outline>
        </outline>
      </outline>
      <outline text="MAY">
        <outline text="May 27, 2020 ">
          <outline text="Versions Released">
            <outline text="&lt;b&gt;Web&lt;/b&gt;" _note="&lt;a href=&quot;https://workflowy.com&quot;&gt;https://workflowy.com&lt;/a&gt;" />
            <outline text="&lt;b&gt;Desktop&lt;/b&gt; v1.3.5-7933 " _note="&lt;a href=&quot;https://workflowy.com/downloads&quot;&gt;https://workflowy.com/downloads&lt;/a&gt;" />
            <outline text="&lt;b&gt;Android &lt;/b&gt;3.5.12" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="&lt;b&gt;iOS &lt;/b&gt;3.5.11" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Bug fixes">
            <outline text="Pasting anything from the clipboard after typing something (and before the app saved your changes) had the bullet content immediately erased. " _note="#web #desktop #ios #android " />
            <outline text="Fixed item(s) flashing (and seemingly, temporarily disappearing) when other items are selected" _note="#web #desktop " />
          </outline>
        </outline>
        <outline text="May 20, 2020 ">
          <outline text="Versions Released">
            <outline text="&lt;b&gt;Web&lt;/b&gt;" _note="https://workflowy.com" />
            <outline text="&lt;b&gt;Desktop&lt;/b&gt; v1.3.5-7845" _note="&lt;a href=&quot;https://workflowy.com/downloads&quot;&gt;https://workflowy.com/downloads&lt;/a&gt;" />
            <outline text="&lt;b&gt;Android &lt;/b&gt;3.5.11" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="&lt;b&gt;iOS &lt;/b&gt;3.5.11 &lt;b&gt; &lt;/b&gt;" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="New experimental features ">
            <outline text="Better interaction for cards in boards (&lt;i&gt;Activate in Settings&lt;/i&gt;)" _note="#web #desktop ">
              <outline text="You still click text to start typing" />
              <outline text="You now click outside of the text on a card to zoom" />
              <outline text="You now drag a card outside of text directly to move" />
              <outline text="&lt;b&gt;NOTE&lt;/b&gt;: After turning on this feature you will either need to refresh the app or zoom in/ out to activate." />
            </outline>
            <outline text="Templates (&lt;i&gt;Activate in Settings&lt;/i&gt;)" _note="#web #desktop #ios #android ">
              <outline text="This lets you create and reuse complex structures in a convenient way." />
              <outline text="Tag any template with &quot;# template&quot; (no spaces):">
                <outline text="Your (collapsed) list title will become a template button, allowing you to duplicate by clicking " />
                <outline text="Your (expanded) template will show a code that you can copy and paste wherever you want to use the template  " />
                <outline text="After pasting a template's code, the expanded list will show a &quot;&lt;i&gt;View template source&lt;/i&gt;&quot; link" />
              </outline>
            </outline>
            <outline text="Embedded hyperlinks / prett(ier) links" _note="#web #desktop #ios #android ">
              <outline text="This feature is eagerly under construction: thus far you can paste any URL and edit the link with text of your choice. A host of link-related features are on the way!" />
            </outline>
          </outline>
          <outline text="Features &amp;amp; Improvements">
            <outline text="Boards polishing " _note="#web #desktop ">
              <outline text="Darken the background of a card when it's draggable/ zoomable" />
              <outline text="Position drag line between cards, not up against them" />
              <outline text="Don't reverse the direction of the item menu (depending on position)" />
              <outline text="When switching something to board mode, expand the columns automatically" />
              <outline text="In breadcrumbs, only show the nodes you've zoomed into | &lt;a href=&quot;https://share.getcloudapp.com/mXuBNoRN&quot;&gt;Video demo&lt;/a&gt;" />
            </outline>
            <outline text="Boards" _note="#web #desktop ">
              <outline text="Turn any list into a (Kanban-like) board by accessing the &quot;View&quot; menu top right of your screen or via the 3-dot&lt;i&gt; Items menu&lt;/i&gt; to the left of each bullet " />
            </outline>
            <outline text="Auto-create a child bullet when you zoom into an empty node. Hooray!" _note="#web #desktop #ios #android " />
            <outline text="Retired the bullet hover menu to greener pastures and replaced it with the previously experimental &quot;&lt;i&gt;Faster items menu&lt;/i&gt;&quot; to the left of each bullet – now simply known as the &quot;&lt;i&gt;Items menu&lt;/i&gt;&quot;." _note="#web #desktop" />
          </outline>
          <outline text="Bug fixes">
            <outline text="Automatic scrolling for the left bar when dragging items onto it" _note="#web #desktop " />
            <outline text="Fixed a strange &quot;Harry Houdini&quot; bug with text drag-n-drop within a bullet (yes, people drag text!). The text either disappeared or re-appeared at the beginning of a bullet. " _note="#web " />
            <outline text="Have the &quot;Add sibling list&quot; button appear on hover only when there are siblings showing. Completed (and hidden) children lists were causing confusion and consternation." _note="#web #desktop " />
            <outline text="Multi-selecting items across multiple screen scrolls (long lists) and performing an action (ex. deleting) did not act on all the items." _note="#web #desktop " />
            <outline text="Depending on the location of the 3-dot bullet menu clicked on, the popup was cut off at the top to varying (incremental) degrees " _note="#web #desktop " />
            <outline text="The plus button in the bottom toolbar was showing under the search count banner in search mode" _note="#android " />
            <outline text="Expand/ collapse arrows were overlapping the bottom toolbar" _note="#android" />
          </outline>
        </outline>
      </outline>
      <outline text="JAN">
        <outline text="Jan 16, 2020 ">
          <outline text="Versions Released">
            <outline text="&lt;b&gt;Web&lt;/b&gt;" _note="https://workflowy.com" />
            <outline text="&lt;b&gt;Desktop&lt;/b&gt; 1.3.5  (&lt;time &gt;Fri, Jan 17, 2020)&lt;/time&gt; " _note="https://workflowy.com/downloads" />
            <outline text="&lt;b&gt;Android &lt;/b&gt;3.5.3  (&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;9&quot;&gt;Thu, Jan 9, 2020&lt;/time&gt;)   " _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="&lt;b&gt;iOS&lt;/b&gt; 3.5.3  (&lt;time startYear=&quot;2020&quot; startMonth=&quot;1&quot; startDay=&quot;9&quot;&gt;Thu, Jan 9, 2020&lt;/time&gt;)  " _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Features">
            <outline text="Left bar for easier navigation and quickly adding to any list" _note="#web #desktop #ios #android  " />
            <outline text="&lt;i&gt;You can move items into lists in the left bar on desktop and web!&lt;/i&gt;" _note="&lt;i&gt;#web #desktop &lt;/i&gt;" />
            <outline text="Add and search for dates (&lt;i&gt;experimental feature, turn on in settings&lt;/i&gt;)" _note="#web #desktop #ios #android  " />
            <outline text="Search helper for dates and advanced searches (&lt;i&gt;experimental feature, turn on in settings&lt;/i&gt;)" _note="#web #desktop #ios #android  " />
            <outline text="Faster load times in browsers (&lt;i&gt;experimental feature, turn on in settings&lt;/i&gt;)" _note="#web ">
              <outline text="An experimental feature that should dramatically speed up load time for people with large accounts... and let you work offline in your browser." />
            </outline>
          </outline>
          <outline text="Bug fixes">
            <outline text="&quot;Full width display&quot; (experimental feature) &lt;i&gt;was&lt;/i&gt; cutting off the 3-dot bullet options menu. " _note="#desktop #web" />
            <outline text="Fixed a bug where swiping right to complete would break and you'd be stuck with green bars on the page " _note="#ios " />
          </outline>
        </outline>
      </outline>
    </outline>
    <outline text="2019">
      <outline text="JUL">
        <outline text="July 19, 2019">
          <outline text="Features">
            <outline text="#desktop #web Add breadcrumbs to the Jump-to menu (the menu that comes up when you hit control/command+k), so people can see where they'll be going when there are many matches" />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#sharing #server Fix performance issue that was causing failed syncing and loading of shared projects" />
            <outline text="#ios Fix non-loading of WorkFlowy on iOS 10" />
            <outline text="#ios #android Don't crash when deleting the last item on an empty account" />
          </outline>
        </outline>
        <outline text="July 26, 2019">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.3.3" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.4.2" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.4.3" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Features">
            <outline text="Remove Google auth. People ran into a ton of issues and the benefits didn't warrant this at this time." />
          </outline>
          <outline text="Bug fixes">
            <outline text="#web Fix issue where you couldn't move or indent on lists when they were shared via url" />
            <outline text="Fix a bunch of login issues related to our code based email login" />
            <outline text="Allow people to switch to a password from google " />
          </outline>
        </outline>
      </outline>
      <outline text="JUN">
        <outline text="June 04, 2019">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.2.18" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.3.15" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.3.15" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#ios #android #desktop Fixed some sources of startup errors" />
            <outline text="#web #desktop Fixed bug with the middle mouse button when clicking links" />
          </outline>
        </outline>
        <outline text="June 12, 2019">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.3.0" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.4.0" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.4.0" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Features">
            <outline text="#web #desktop #ios #android Login with Google for GSuite and Gmail email addresses">
              <outline text="New Customers Only" />
              <outline text="Write to help@workflowy.com if you want to convert your existing login" />
            </outline>
            <outline text="#web #desktop #ios #android Login without a password for non Google-based email addresses">
              <outline text="You enter a one-time code sent by email instead of filling in a password" />
              <outline text="New Customers Only" />
              <outline text="Write to help@workflowy.com if you want to convert your existing login" />
            </outline>
            <outline text="#web #desktop #ios #android When you change your email address on your account WorkFlowy now sends an email to both the new and old address. You must click a link sent to the new address to confirm the change">
              <outline text="You no longer enter your password to do this" />
            </outline>
            <outline text="#web #desktop #ios #android If you want to delete your account, we now send you a confirmation email and you must click the link to confirm deletion">
              <outline text="You no longer enter your password" />
            </outline>
            <outline text="#web #desktop #ios #android New &quot;Full Access&quot; permission when sharing items">
              <outline text="There are now 3 permission levels">
                <outline text="&quot;Full Access&quot; - Users with this permission level can share the item with additional people" />
                <outline text="&quot;Can edit&quot; (&lt;b&gt;WorkFlowy Pro Only)&lt;/b&gt; - Users with this permission level can make changes to the content" />
                <outline text="&quot;Can view&quot; - Users with this permission level can only view the content" />
              </outline>
            </outline>
            <outline text="#web #desktop #ios #android Items with only completed items underneath them now show a count of how many completed children there are when you expand. &lt;b&gt;Update: &lt;/b&gt;based on your feedback, we’ve removed this feature while we reconsider." />
            <outline text="#desktop Instead of a blue notification bar indicating a new desktop update, there is now a blue dot above the settings menu. Choose 'Click to restart and update' to update the app." />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#web #desktop Preserve selection of text when it is scrolled out of view" />
          </outline>
        </outline>
        <outline text="June 25, 2019">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.3.2" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.4.1" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.4.1" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Features">
            <outline text="You can now log in to WorkFlowy using your Google-compatible email address">
              <outline text="https://blog.workflowy.com/2019/06/25/log-in-to-workflowy-with-your-google-account/" />
            </outline>
          </outline>
          <outline text="Bug Fixes">
            <outline text="#web #desktop #ios #android Improved startup time and responsiveness for people with lots of items in their account" />
            <outline text="#web #desktop #ios #android Fixed error when dragging multiple items under a collapsed item" />
            <outline text="#ios Fixed bug where theme/font selection menus didn't render on iPad" />
          </outline>
        </outline>
      </outline>
      <outline text="MAY">
        <outline text="May 07, 2019">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.2.13" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.3.11" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.3.11" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="News">
            <outline text="#web #desktop The 'Star' button in the upper left corner once again shows your starred items in Alphabetical order">
              <outline text="You can still access the advanced 'Jump To' menu by keyboard shortcut &lt;i&gt;cmd+k/ctrl+k&lt;/i&gt; or cmd+;/ctrl+;" />
            </outline>
          </outline>
          <outline text="Bug Fixes">
            <outline text="#web #desktop A number of improvements were made to the &quot;Jump To&quot; switcher to make it faster and better at text matching">
              <outline text="Access with &lt;i&gt;cmd/ctrl+K&lt;/i&gt; or &lt;i&gt;cmd/ctrl+;&lt;/i&gt;" />
            </outline>
            <outline text="#web Fixed bug where formatted export was not working properly in the Safari browser" />
            <outline text="#web #desktop Fixed bug where the '+' button was appearing on a read-only list" />
            <outline text="#web #desktop Fixed bug where Completed item was not showing 'Uncomplete' as an option in the item menu" />
            <outline text="#web #desktop Clicking with middle mouse button now opens links in a new tab (previously did nothing)" />
            <outline text="#web #desktop Fixed a bug where note text was sometimes getting bolded incorrectly" />
            <outline text="#web #desktop We removed a footer encouraging free users to refer WorkFlowy to others after getting lots of feedback about it">
              <outline text="Please refer your friends anyways! =)" />
            </outline>
          </outline>
        </outline>
        <outline text="May 14, 2019">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.2.14 [Hotfix 1.2.15]" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.3.12" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.3.12" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="News">
            <outline text="We are taking a harder line against data integrity problems which means that you may see more errors than you are used to in the past">
              <outline text="The plan is to identify and fix these errors as quickly as possible so WorkFlowy goes back to being error-free" />
            </outline>
          </outline>
          <outline text="Features">
            <outline text="#ios #android New # and @ buttons in the keyboard menu to enter a tag or mention" />
            <outline text="#ios #android Tags (#) and Mentions (@) now show autocomplete options" />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#ios #android Fixed bug where the left/right swipe menu height of an item did not account for the height of notes on that item" />
            <outline text="#ios #android The login email field now uses an email-friendly keyboard layout" />
            <outline text="#ios #android Fixed bug with left/right swipe where multiple swipes in a row would stomp on each other" />
            <outline text="#ios #android Improved the smoothness of the swipe animations" />
            <outline text="#ios #android Improved the way that spacing between items is adjusted when text size is changed" />
            <outline text="#android Fixed bug where the keyboard accessory bar was not showing up correctly" />
            <outline text="#web #desktop #android #ios Fixed bug where interacting with notes would incorrectly scroll the screen" />
            <outline text="#web #desktop Futher optimizations and improvements to the 'Jump To' menu (&lt;i&gt;cmd/ctrl-;&lt;/i&gt;)" />
            <outline text="#web #desktop Made the 'Jump To' menu case insensitive (&lt;i&gt;cmd/ctrl-;&lt;/i&gt;)" />
            <outline text="#web #firefox Fixed bug where export was broken" />
          </outline>
        </outline>
        <outline text="May 21, 2019">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.2.16" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.3.13" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.3.13" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#web #desktop Fixed right-click context menu when clicking on links" />
            <outline text="#web Fixed bug where email links were pointing to an insecure domain and giving certificate errors in some browsers" />
            <outline text="#web Fixed systems issue where the daily summary emails were not going out for several days" />
            <outline text="#android Fixed several bugs affecting the keyboard accessory menu and tag autocomplete" />
            <outline text="#android Fixed bug where hitting 'Enter' after autocompleting a tag would clear the search" />
            <outline text="#web Reverted a change that prevented WorkFlowy from being displayed in iFrame" />
            <outline text="#web #desktop Fixed bug where &lt;i&gt;cmd/ctrl-Enter &lt;/i&gt;would not move the cursor to the next line" />
          </outline>
        </outline>
        <outline text="May 28, 2019">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.2.17" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.3.14" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.3.14" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#ios Fixed password reset when opening the email using the Gmail app" />
            <outline text="#web #desktop Fixed so the hover menu shows up in full above the item when you trigger it near the button of the page (if you have Item Menu Button enabled)" />
            <outline text="#web #desktop Fixed bug where shared lists were not allowing edits even when edit permissions were enabled" />
            <outline text="#web #desktop Fixed cursor position after exploding a tag" />
            <outline text="#web #desktop Cursor focus restored for history, starred and jump navigation" />
          </outline>
        </outline>
      </outline>
      <outline text="APR">
        <outline text="April 02, 2019">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.2.8" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.3.7" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.3.7" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Features">
            <outline text="#web #desktop Added keyboard shortcut to navigate home">
              <outline text="cmd+' on Mac" />
              <outline text="ctrl + ' on Windows" />
            </outline>
          </outline>
          <outline text="Bug Fixes">
            <outline text="#desktop Fixed bug where only first page would print" />
            <outline text="#desktop Fixed broken 'copy link'" />
            <outline text="#ios #android Fixed bug where search bar wasn't appearing" />
            <outline text="#ios Fixed delays when tapping to focus" />
            <outline text="#ios #android Reduced blank space at top of home view" />
            <outline text="#web #desktop Fixed bug where starred pages would incorrectly appear many times in the list of starred pages" />
            <outline text="#web #desktop Fixed bug where unstarred items remained in the starred list" />
            <outline text="#web #desktop Fixed bug where an unshared bullet would incorrectly retain the blue halo" />
            <outline text="#web Fixed bug where Team Subscription page did not recognize your card on file" />
            <outline text="#web Fixed source of brief outages this past week" />
          </outline>
        </outline>
        <outline text="April 09, 2019">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.2.9" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.3.8" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.3.8" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#web #desktop Fixed bug where the 'space theme' background image was missing" />
          </outline>
        </outline>
        <outline text="April 16, 2019">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.2.10" _note="https://workflowy.com/downloads" />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#web #desktop Fixed bug with starred pages and searches overriding each other" />
            <outline text="#web #desktop Fixed bug where star icon wasn't showing with new Item Menu when viewing a shared item" />
            <outline text="#web #desktop Fixed bug where adding a child to the end of a list was broken" />
          </outline>
        </outline>
        <outline text="April 23, 2019">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.2.11" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.3.9" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.3.9" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="News">
            <outline text="The price for Teams has been increased to $10 per month per seat ($8 / month billed annually)">
              <outline text="This only affects new Teams, existing Teams will keep their current pricing" />
              <outline text="The minimum number of seats for a Team has also been lowered from 2 to 1" />
            </outline>
            <outline text="We changed the way that monthly quota usage it tabulated when editing a shared document">
              <outline text="Adding items to a shared document now counts against the quota of the person doing the editing rather than the owner of the document">
                <outline text="Previously when Alice had shared an item and Bob added items to it, those additional items woudl count against Alice's quota" />
                <outline text="Now, when Alice shares an item and Bob adds items to it, those additional items will count against Bob's quota" />
              </outline>
            </outline>
          </outline>
          <outline text="Features">
            <outline text="#ios #android New Swipe-Left Menu with 'Share', 'Duplicate', and 'Delete' options" _note="https://blog.workflowy.com/2019/04/23/you-can-now-share-and-duplicate-items-from-the-mobile-apps/">
              <outline text="Swipe from left to right on an item to bring up the menu" />
              <outline text="'Duplicate' makes a copy of the item and all its children, adding the #copy tag automatically" />
              <outline text="'Share' now integrates with the iOS and Android share sheets for sending content via text message, email, or other apps" />
              <outline text="Deleting an item now requires an additional click on 'Delete' after swiping left to avoid accidental deletion" />
            </outline>
            <outline text="#web #desktop Go to any item directly by name" _note="https://blog.workflowy.com/2019/04/24/a-faster-way-to-jump-around-workflowy/">
              <outline text="The 'Star' menu (upper left hand corner) now brings up an enhanced switcher with a text field where you can type the name of any item and go there instantly">
                <outline text="You can also use the shortcut &lt;i&gt;cmd-;&lt;/i&gt; on mac or &lt;i&gt;ctrl-;&lt;/i&gt; on Windows/Linux." />
              </outline>
              <outline text="This menu has a &quot;fuzzy search&quot; so it will match several items based on what you type and you can choose accordingly" />
              <outline text="The menu still shows all starred items by default" />
            </outline>
          </outline>
          <outline text="Bug Fixes">
            <outline text="#web #desktop #ios #android The server performance of deleting and sharing large numbers of items has been significantly increased">
              <outline text="This should allow you to delete or share items with a lot of children without your account grinding to a halt" />
            </outline>
            <outline text="#web #desktop #ios #android Fixed a bug where sometimes the monthly item usage would be too high after deleting then undoing that deletion" />
            <outline text="#ios #android Fixed some miscellaneous scrolling and swiping issues" />
          </outline>
        </outline>
        <outline text="April 30, 2019">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.2.12" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.3.10" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.3.10" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#ios Fixed tab key on external keyboards with iOS 12.2" />
            <outline text="#ios Fixed bug where sharing from iOS 12.2 would sometimes make WorkFlowy crash" />
            <outline text="#ios #android Fixed bug where non-ASCII (international) characters were pasting incorrectly when copying from Share Content" />
          </outline>
        </outline>
      </outline>
      <outline text="MAR">
        <outline text="Mar 05, 2019">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.2.4" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.3.3" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.3.3" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Features">
            <outline text="#web #desktop The +/- for expanding and collapsing items have been changed to downward facing or sideways facing arrows to match modern UI conventions">
              <outline text="https://blog.workflowy.com/2019/03/05/pointing-the-way-forward-or-downward/" />
            </outline>
          </outline>
          <outline text="Bug Fixes">
            <outline text="#web Fixed a bug where login wasn't working for some people">
              <outline text="Most common in Firefox and for people with ad blockers" />
            </outline>
            <outline text="#ios &quot;Typewriter&quot; font now uses Menlo">
              <outline text="&quot;Typewriter&quot; and &quot;Terminal&quot; are no longer the same font. There is now a new" />
              <outline text="https://en.wikipedia.org/wiki/Menlo_(typeface)" />
            </outline>
            <outline text="#ios #android Font size of notes for the current item now scale correctly with font size setting" />
            <outline text="#android Share links once again open in the browser instead of in the app (where they were showing a blank page)" />
            <outline text="#web #desktop #ios #android We improved the way that undo groups changes" />
            <outline text="#web Fixed bug where Login button was not appearing in Internet Explorer" />
            <outline text="#web #desktop Fixed a bug where 'Show Completed' setting was not always being saved on the account">
              <outline text="Meaning it would not be correct when opening account in a new window" />
            </outline>
            <outline text="#web #desktop The zoom shortcuts have been updated, please see the documentation on your specific platform to get the new ones">
              <outline text="Click the 'Gear' icon in the upper right" />
              <outline text="Click 'Settings' from the menu" />
              <outline text="Select 'Help me learn keyboard shortcuts' under 'Other'" />
            </outline>
          </outline>
        </outline>
        <outline text="Mar 12, 2019">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.2.5" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.3.4" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.3.4" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Features">
            <outline text="#ios Keyboard and controls bar are now dark when using the 'dark' theme">
              <outline text="Note: Dark theme is available to WorkFlowy Pro users only" />
            </outline>
            <outline text="#ios #android #desktop #web WorkFlowy now remembers the last theme you used and defaults to that theme when loading your account for the first time on a new device">
              <outline text="Each device can have a different theme set and that will be remembered across reloads" />
            </outline>
            <outline text="#web #desktop We now show the time an item was created or last modified in addition to the date" />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#web #desktop The bullet hover menu now takes slightly longer to appear">
              <outline text="This should help keep it from appearing unexpectedly" />
            </outline>
            <outline text="#web Fixed bug where the down arrow on the keyboard in Firefox was not working for multiline items" />
            <outline text="#web Fixed bug where bullets were showing up empty after text had been entered on Internet Explorer" />
            <outline text="#web #desktop Fixed alt-shift-d keyboard shortcut for duplicating an item on Windows" />
          </outline>
        </outline>
        <outline text="Mar 19, 2019 [hotfix Mar 20, 2019]">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.2.6" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.3.5" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.3.5" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Features">
            <outline text="#desktop Support Dark Mode on Mac OS Mojave" />
            <outline text="#web #desktop Changed the home icon to the word “Home”" />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#ios Fixed bug where keyboard wouldn't stay up on iPhone SE in landscape mode" />
            <outline text="#ios #android #desktop Fixed bug where starred items would disappear when launching the app offline" />
            <outline text="#ios #android Added a banner to indicate when app is offline and not syncing changes" />
            <outline text="#web #desktop #android Fixed app hanging occasionally after 100 zooms or 100 edits" />
            <outline text="#android Fixed star button showing twice" />
            <outline text="#desktop WorkFlowy icon now shows up correctly in Ubuntu 18 Linux" />
            <outline text="#desktop Fixed autoupdate on Linux" />
            <outline text="#web #desktop #android #ios Fixed bug where an item would be grayed out after undoing a complete" />
            <outline text="#web #desktop #android #ios Added a blacklist to prevent linking to potentially harmful sites" />
            <outline text="#web #desktop Fixed alignment of item selection and item highlight rectangles" />
            <outline text="#web #desktop Changed the text selection color to match the item selection color" />
            <outline text="#web #desktop Fixed hover menu sometimes overlapping with bullets and text" />
            <outline text="#web Fixed cursor not moving correctly when using up and down arrows in Safari" />
            <outline text="#web #desktop Printing no longer prints notification bars" />
            <outline text="#web #desktop Improve alignment of arrows with some font themes" />
            <outline text="#web #desktop Fixed highlight color for Hacker and Dark Theme" />
          </outline>
        </outline>
        <outline text="Mar 26, 2019">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.2.7" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.3.6" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.3.6" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Features">
            <outline text="#ios Updated iOS loading screen" />
            <outline text="#ios #android Added a bar at the bottom of the screen when you are offline" />
            <outline text="#web #desktop #ios #android Theme color improvements">
              <outline text="Inputs, buttons, and toggles now match the theme" />
              <outline text="Changed accent colors in Hacker and Dark themes" />
              <outline text="Wood theme now uses light colored menus and dialogs" />
              <outline text="Improved loading screen for Wood theme" />
              <outline text="Improved contrast between grays in Dark theme" />
            </outline>
          </outline>
          <outline text="Bug Fixes">
            <outline text="#ios Fixed app hanging occasionally after 100 zooms or 100 edits" />
            <outline text="#ios Fixed star button showing twice" />
            <outline text="#ios #android Fixed search bar rendering" />
            <outline text="#web Changed shortcut for show completed in Safari to Cmd+Shift+O" />
            <outline text="#web Fixed URL after navigating to root of a shared URL page " />
            <outline text="#web #desktop Fixed clicking in the right margin moves cursor to the end of the page" />
            <outline text="#desktop Do not switch themes to match Mac OS desktop theme when starting app" />
          </outline>
        </outline>
      </outline>
      <outline text="FEB">
        <outline text="Feb 05, 2019">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.1.16" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.2.10" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.2.10" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Features">
            <outline text="#web #desktop 'Copy Link' now available from the menu to get the URL for a given item">
              <outline text="https://blog.workflowy.com/2019/02/05/copy-links-from-the-desktop-app/" />
            </outline>
          </outline>
          <outline text="Bug Fixes">
            <outline text="#android #ios Fixed bug where the search bar randomly appears" />
            <outline text="#web Fixed bug where title wasn't showing up when a non-logged in user loaded a shared URL" />
            <outline text="#web #desktop Fixed bug where exiting search would delete text from the most recently added item" />
            <outline text="#web #desktop Fixed bug where it wasn't possible to select only part of the text when exporting" />
            <outline text="#web #desktop Fixed bug where export had the wrong background color in dark mode" />
            <outline text="#web #desktop Fixed bug where cursor didn't appear on the final line of a paragraph when using the down arrow" />
            <outline text="#web #desktop Fixed bug where tags were not being highlighted correctly during search" />
          </outline>
        </outline>
        <outline text="Feb 12, 2019 [hotfix Feb 13, 2019]">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.2.0, 1.2.1 [hotfix]" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.3.0" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.3.0" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="News">
            <outline text="Hotfix for desktop 1.2.1 released Feb 13, 2019">
              <outline text="#web #desktop Fixed bug where completion and deletion stopped working if multiple bullets selected" />
            </outline>
          </outline>
          <outline text="Bug Fixes">
            <outline text="#web #desktop Fixed bug where share emails were not getting sent to people in some cases">
              <outline text="In particular, when that person had their name set in the database" />
            </outline>
            <outline text="#web #desktop #ios #android We now hide the 'home' icon when you are on the home screen, to be less confusing" />
            <outline text="#web #desktop Fixed &lt;i&gt;alt-shift-0&lt;/i&gt; shortcut" />
          </outline>
        </outline>
        <outline text="Feb 19, 2019">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.2.2" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.3.1" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.3.1" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="News">
            <outline text="Daily summary emails were broken from Feb 14th - Feb 18th. They have resumed as of today (Feb 19, 2019)">
              <outline text="Sorry!" />
            </outline>
          </outline>
          <outline text="Features">
            <outline text="#web #desktop Sharing items that have a large number of children is now much much faster (100x?)">
              <outline text="This used to take minutes and possibly never finish. It now takes a few seconds" />
            </outline>
            <outline text="#web #desktop Deleting items that have a large number of children is now much much faster (100x?)">
              <outline text="This used to take minutes and possibly never finish. It now takes a few seconds" />
            </outline>
          </outline>
          <outline text="Bug Fixes">
            <outline text="#desktop #ios #android The apps now reload the entire account every 3 days in order to ensure stability and improve performance">
              <outline text="It used to work this way but we accidentally broke this functionality back in November 2018." />
            </outline>
            <outline text="#web #desktop #ios #android The 'Home' icon no longer shows when you are all the way zoomed out">
              <outline text="It was confusing some people when they clicked on it and it didn't do anything" />
            </outline>
            <outline text="#web #desktop Fixed bug where the +/- expand/collapse buttons were always visible" />
          </outline>
        </outline>
        <outline text="Feb 26, 2019">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.2.3" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.3.2" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.3.2" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#web Fixed bug where login was not always working with autofilled passwords, especially in Firefox and on Windows" />
            <outline text="#web Fixed editing errors on Internet Explorer" />
            <outline text="#web #desktop Fixed bug where hover menu would become transparent" />
            <outline text="Improved reliability of Dropbox backups for very large accounts">
              <outline text="We now upload the files to Dropbox in chunks instead of all at once" />
            </outline>
            <outline text="Fixed login for our Community Forum">
              <outline text="https://workflowy.zendesk.com/hc/en-us/community/topics" />
            </outline>
          </outline>
        </outline>
      </outline>
      <outline text="JAN">
        <outline text="Jan 08, 2019">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.1.11" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.2.5" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.2.5" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="News">
            <outline text="(Update 1/9/19) - We discovered that a few bug fixes didn't make it into this release and we pulled them out of the list. They will show up again in our next release." />
          </outline>
          <outline text="Features">
            <outline text="#web #desktop The task switcher (cmd/ctr-;) now uses the up/down arrows to move between items" />
            <outline text="#web #desktop The zoom animation is back and better than ever" />
            <outline text="#web #desktop The '+' button to add a new item now always shows at the bottom of the current list" />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#android Fixed major bug where indentation was deleting bullets" />
            <outline text="#ios #android When you have a single starred page, the star button once again takes you directly to it" />
            <outline text="#desktop #web Fixed bug where multiple undos would leave the document in an incorrect state" />
            <outline text="#desktop #web Fixed bug where tags would sometimes autocomplete to the wrong name" />
            <outline text="#desktop #web Fixed 'Export All' to no longer result in a blank screen" />
            <outline text="#web Fixed Chinese/Japanese/Korean (CJK) text entry on Internet Explorer" />
            <outline text="#web Fixed the bolding of text on Windows" />
            <outline text="#desktop #web Pasting into workflowy from third party sources like Word now handles carriage returns properly" />
            <outline text="#desktop #web Brought back the '...' for notes that are truncated" />
          </outline>
        </outline>
        <outline text="Jan 17, 2019 [hotfix Jan 18, 2019]">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.1.12, 1.1.13 [hotfix]" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.2.7" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.2.7" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="News">
            <outline text="[Update Fri Jan 18, 2019] We hotfixed a few issues that appeared with this release:">
              <outline text="Connecting your account to Dropbox is now fixed" />
              <outline text="Removing an embedded item works again" />
              <outline text="Fixed links that contain hashtags in them" />
              <outline text="Fixed some issues with underline/bold" />
            </outline>
          </outline>
          <outline text="Features">
            <outline text="#android WorkFlowy links now open inside the app if you have it installed (Deep App Links)" />
            <outline text="#desktop WorkFlowy links now also open in the Windows and Mac apps if you have them installed and enable the feature from settings (Deep Links)">
              <outline text="Not currently supported on Linux" />
            </outline>
            <outline text="#mobile #web The https://workflowy.com home page now displays on mobile browsers instead of just a login screen" />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#ios #android Fixed bug where the top of the next line was displayed when a note was collapsed (on system font)" />
            <outline text="#android Fixed bug where clicking external links from within WorkFlowy was not opening them in the browser and thus preventing exit" />
            <outline text="#android #ipad Fixed bug where several features were missing from Android tablets and iPads (expansion, indent/outdent)" />
            <outline text="#desktop #web Fixed bug where typing fast in the search box would cause some letters not to show up" />
            <outline text="#desktop #web Fixed a number of issues with drag and drop to move items" />
            <outline text="#desktop #web Fixed some issues with the back button" />
            <outline text="#desktop #web Fixed some issues with line breaks not appearing when pasting content from other text editors" />
            <outline text="#desktop #web Fixed a bug where hitting undo quickly makes an item vanish" />
            <outline text="#desktop #web #ios #android Fixed bug where not all embedded projects were getting synced all the time" />
          </outline>
        </outline>
        <outline text="Jan 23, 2019">
          <outline text="Version Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.1.14" _note="https://workflowy.com/downloads" />
          </outline>
          <outline text="Features">
            <outline text="#web The 'Daily Update' email now has separate sections for changes made by others from changes made by you" />
            <outline text="#web The 'Daily Update' email now has the date in the subject line" />
            <outline text="#web The 'Daily Update' email now includes statistics about the number of items added, modified, moved, completed, deleted, etc" />
            <outline text="#web #desktop New experimental feature &quot;Arrows for expand/collapse&quot; which replaces the +/- with triangular arrows for expand/collapse">
              <outline text="Also, the arrows are always visible" />
            </outline>
          </outline>
          <outline text="Bug Fixes">
            <outline text="#web #desktop Fix pasting of content into WorkFlowy from external sources" />
            <outline text="#web #desktop Fixed bug where tags were not getting highlighted in search mode" />
            <outline text="#web #desktop Fixed Bold/Italic/Underline formatting in proximity to tags" />
            <outline text="#web #desktop Fixed underlining of email addresses" />
          </outline>
        </outline>
        <outline text="Jan 29, 2019">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.1.15" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.2.9" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.2.9" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Features">
            <outline text="#mac #desktop The system emoji picker now works with WorkFlowy" />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#android Fixed bug where when moving items the background would scroll instead of the item moving" />
            <outline text="#android Fixed bug where bold/italic/underline formatting was not showing up" />
            <outline text="#ios #android Fix bug where show/hide completed was not always reflected correctly in the UI" />
            <outline text="#ios Fixed bug where search box wasn't focusing when the search button was pressed" />
            <outline text="#windows #desktop Fixed Javascript error ">
              <outline text="&quot;Cannot read property replace of undefined" />
            </outline>
            <outline text="#ios #android #desktop Fixed quota bar in Settings getting out of sync with usage" />
            <outline text="#web Fixed search highlighting for C/J/K text" />
            <outline text="#web #desktop Fixed zoom shortcuts (we had reversed them by accident)" />
            <outline text="#web #desktop Fixed the ctrl/cmd-shift-8 shortcut for starring/unstarring" />
          </outline>
        </outline>
      </outline>
    </outline>
    <outline text="2018">
      <outline text="DEC">
        <outline text="Dec 11, 2018">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.1.10" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.2.4" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="ios 3.2.4" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="News">
            <outline text="This release features a big rewrite of our core list processing Javascript code. Read all about it on our blog: https://blog.workflowy.com/2018/12/11/new-year-new-code/" />
          </outline>
          <outline text="Features">
            <outline text="#web #desktop The +/- expand/collapse buttons now always show for new users and on shared documents when the person viewing is not logged in">
              <outline text="This is to help new folks learn the interface" />
            </outline>
            <outline text="#web #desktop Expand/Collapse All is now available for everyone. It is available from the '...' menu or the menu that appears when you hover over a bullet">
              <outline text="This was previously an experimental feature">
                <outline text="https://blog.workflowy.com/2017/11/15/the-return-of-expand-and-collapse-all/" />
              </outline>
            </outline>
            <outline text="#web #desktop #ios #android Improved performance for accounts with lots of items displayed (expanded)">
              <outline text="This was previously an experimental feature" />
            </outline>
            <outline text="#web We made some important changes to the way expansions work for shared items">
              <outline text="If you share an item with me, and then I share a nested bullet with a third party, that third person will see the nested item's expansions as they appear to me rather than how they appear in the account of the person who owns the parent bullet.">
                <outline text="The advantage of this is that now I can control which items are expanded when I share an item even if I don't own the root account" />
                <outline text="For example, these Release Notes are under a WorkFlowy shared item owned by Jesse, but I (Jacob) can control the expansions you see when you first open it because I was the one that shared the Release Notes" />
                <outline text="Important Note: The expansions will be in the state they were when a new person views them, rather than the state they were in when it was first shared." />
              </outline>
              <outline text="If you share an item with me, when I embed the item in my account and then make changes to the way sub-items are expanded, they will be saved as part of my account">
                <outline text="So if I open my account on another computer it will retain the expansions I made" />
              </outline>
            </outline>
            <outline text="#web #desktop We have a fancy new way to switch between starred pages. Use the cmd-; (ctr-; on Windows) shortcut launch the new starrred pages switcher">
              <outline text="Keep hitting ; to switch between the options until you get to the one you want" />
            </outline>
            <outline text="#ios #android When moving items, indentation is now handled by the left or right position of your finger">
              <outline text="Relative to where your finger was when you started the move" />
            </outline>
            <outline text="#ios WorkFlowy links now open inside the app if you have it installed">
              <outline text="This works for links of the form /#/ which are links to items in your account" />
              <outline text="Important: You may need to uninstall/reinstall the app before this will work" />
            </outline>
          </outline>
          <outline text="Bug Fixes">
            <outline text="#web Notes in Daily Update emails no longer render HTML tags as text (&amp;lt;b&amp;gt;, &amp;lt;i&amp;gt; ,etc)" />
            <outline text="#web #desktop #ios #android The button to cancel your WorkFlowy Pro subscription from settings is now more prominent">
              <outline text="But of course we would rather you didn't =)" />
            </outline>
            <outline text="#web #desktop #ios #android Changed color saturation of Dark Mode back to how it used to be" />
            <outline text="#android Moving items is now much smoother" />
            <outline text="#android Fixed bug where the cursor would get blocked by the keyboard when editing items closer to the bottom of the screen" />
            <outline text="#ios You can now remove underline formatting from text">
              <outline text="This is a longstanding bug whose fix was made possible by our big rewrite" />
            </outline>
          </outline>
        </outline>
      </outline>
      <outline text="NOV">
        <outline text="Nov 06, 2018">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.1.7" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.2.3" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.2.3" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Features">
            <outline text="#web #desktop When you share an item by email, both you and the person you shared with will be subscribed to email updates. When either of you make an edit or add bullets, the other will receive an email with those changes">
              <outline text="These updates are sent at most once per hour (batching changes appropriately)." />
              <outline text="You can unsubscribe to these updates by clicking the unsubscribe link in the email" />
            </outline>
            <outline text="#web #desktop #ios #android You can now set themes (such as Dark Mode) independently on mobile and desktop" />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#ios #android Fixed Dark Mode search to not be dark text on dark background" />
            <outline text="#web Logins are now throttled to prevent people from trying to guess your email and password" />
            <outline text="#web Referrals page no longer has a form to send referral emails. Please copy your referral link and send referral emails using your preferred email client" />
            <outline text="#web Fixed bug where print dialog was showing twice" />
            <outline text="#web #desktop Fixed bug where text was being right aligned when printing from Safari" />
            <outline text="#web #desktop Fixed bug where you could not remove an embedded list if it had read-only permissions" />
            <outline text="#web Fixed bug where esc was not closing the export window" />
            <outline text="#web #desktop Fixed bug where if you shared an item whose name was entirely non-ascii characters the share link was broken">
              <outline text="If you currently have broken share links which have a &quot;double slash&quot; // in them, try removing and re-adding the share link in Desktop 1.1.7 or your browser" />
            </outline>
          </outline>
        </outline>
        <outline text="Nov 19, 2018">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
          </outline>
          <outline text="Features">
            <outline text="#web The daily summary emails that we send to people that subscribe to them have been dramatically improved. We now use colors to indicate items that have been completed, edited, moved, or deleted. We also have line-level edits highlighted, so if you edit a single line you will see what exactly has changed instead of just that the whole line was edited.">
              <outline text="The subject line was also changed from &quot;Your history...&quot; to &quot;Daily Update&quot;" />
              <outline text="If you would like to subscribe to these updates, open the Settings menu and toggle &quot;Send email summaries of changes to my account&quot;" />
            </outline>
          </outline>
        </outline>
      </outline>
      <outline text="OCT">
        <outline text="Oct 01, 2018">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#web Fix bug where firefox was covering the YYYY field on the billing page" />
            <outline text="#web Fixed broken Embedded WorkFlowy demo on website" />
          </outline>
        </outline>
        <outline text="Oct 04, 2018">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#web Fixed un-sharing bug" />
          </outline>
        </outline>
        <outline text="Oct 10, 2018">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.1.3, 1.1.4" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.2.1" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.2.1" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Features">
            <outline text="#desktop #web All WorkFlowy users can now share items with others privately by email address" />
            <outline text="#desktop #web When you share an item with someone by email, they will receive the contents of the item in the email (so they don't have to visit workflowy.com to see it)" />
            <outline text="#desktop #web A WorkFlowy item can now be shared by both email and URL at the same time" />
            <outline text="#web When someone signs up for WorkFlowy their account is auto-populated with any items that have been shared with them" />
            <outline text="#web When someone receives an email inviting them to a shared list, they can open and view the shared contents without having to create an account or sign in">
              <outline text="They will have to sign in or register to edit the contents" />
            </outline>
            <outline text="#web #desktop #ios #android You can now add your name to your account from the settings dialog" />
            <outline text="#web #desktop You can now reactivate your WorkFlowy Pro subscription from the settings dialog" />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#ios #android Long notes now stay open until you collapse them so they can be more easily viewed and edited" />
            <outline text="#ios Toolbar now consistently appears above the keyboard" />
            <outline text="#desktop You can now upgrade to WorkFlowy pro from the desktop" />
            <outline text="#desktop Desktop now maintains its size and position when you close and reopen" />
            <outline text="#desktop The Linux desktop app download link works again" />
            <outline text="#desktop #web Fixed a number of bugs related to tags, search, and show completed" />
            <outline text="#desktop #web In 'Export All' you can now use the 'select all' shortcut to select all the  text" />
            <outline text="#desktop #web 'Export' now pastes correctly into Excel" />
            <outline text="#desktop #web Fixed bug where keyboard shortcuts were showing up when printing" />
            <outline text="#desktop #web Added more text space for breadcrumbs to make navigation easier when viewing a deeply nested item" />
            <outline text="#web Show an error message when resetting password for email address that does not have an account" />
          </outline>
        </outline>
        <outline text="Oct 16, 2018">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
          </outline>
          <outline text="Features">
            <outline text="#web When sharing an item by email, the From name will be the name of the person that initiated the share rather than the name of the owner of the item being shared" />
            <outline text="#web After you add a shared item to your account, we now redirect to your account with that item zoomed" />
            <outline text="#web Use the browser's preferred date format intead of always using MM/DD/YYYY" />
            <outline text="#web Show loading indicator for Export" />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#web Fix bug where &quot;Show Completed&quot; would toggle during search and get out of sync" />
            <outline text="#web Restored the system default cmd-left and cmd-right shortcuts on macs so they once again take you to the beginning and end of a line" />
            <outline text="#web Settings menu now shows the correct number of monthly items in the progress bar" />
            <outline text="#web You can once more access your WorkFlowy Pro Invoices from the Settings menu" />
            <outline text="#web Fixed bug on Firefox where plus/minus expansion buttons were not appearing correctly" />
            <outline text="#web Fixed experimental feature toggles in settings menu" />
            <outline text="#web Search no longer expands over the breadcrumbs" />
            <outline text="#web HTML export no longer loses bold/italic/underline formatting" />
          </outline>
          <outline text="Announcements">
            <outline text="#web The /features/toggle page is now deprecated. You can access experimental features from the Settings menu" />
          </outline>
        </outline>
        <outline text="Oct 23, 2018">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
          </outline>
          <outline text="Features">
            <outline text="#web New link format for when you share by URL that includes the name of title bullet">
              <outline text="E.g https://workflowy.com/s/WorkFlowy-Release-Notes/aaEJNvR2y2xlu3s1" />
            </outline>
            <outline text="#web When add a shared URL you now get a new unique token each time you add/remove a shared URL. This allows you to revoke access to people using the previous token without having to remove people with email access" />
          </outline>
        </outline>
        <outline text="Oct 30, 2018">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.1.6" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.2.2" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.2.2" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Features">
            <outline text="#ios #android Dark Mode theme now available for WorkFlowy Pro subscribers" />
            <outline text="#ios Moved iOS 9.3 to the latest design" />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#ios Fixed position of toolbar for iOS 9.3" />
            <outline text="#ios #android Fixed bug where clicking on tags was not bringing up search" />
            <outline text="#ios Fixed bug where app was rendering unformatted HTML after login" />
            <outline text="#android Fixed bug where Android was preventing login with a warning message about being offline even though the phone was connected to the internet" />
            <outline text="#desktop Removed 'Unde/Redo' from 'Edit' menu because they did not work. Please continue to use 'Undo/Redo' from inside the app" />
            <outline text="#web #desktop Toggling experimental features from Settings now saves properly" />
            <outline text="#desktop Fixed bug where for a small number of users WorkFlowy was opening completely blank" />
            <outline text="#ios #android #desktop Fixed bug where the loading icon was not showing" />
            <outline text="#web #desktop Fixed bug where 'Light' font was rendering incorreclty as 'Sans-Serif'" />
            <outline text="#web #desktop Fixed bug where hitting &quot;Return&quot; was not triggering a new search" />
            <outline text="#web #desktop Added additional warning messages before you can delete your account" />
            <outline text="#web #desktop Fixed a number of cursor placement bugs" />
            <outline text="#web When sharing an item by email, the contents of the email will now only show completed items if you have 'Show completed' enabled." />
          </outline>
        </outline>
      </outline>
      <outline text="SEP">
        <outline text="Sep 18, 2018">
          <outline text="Versions Released">
            <outline text="Web" _note="https://workflowy.com" />
            <outline text="Desktop 1.1.2" _note="https://workflowy.com/downloads" />
            <outline text="Android 3.2.0" _note="https://play.google.com/store/apps/details?id=com.workflowy.android" />
            <outline text="iOS 3.2.0" _note="https://itunes.apple.com/us/app/workflowy/id551139514?mt=8" />
          </outline>
          <outline text="Features">
            <outline text="#ios #android You can now drag one item under another item that is not expanded" />
            <outline text="#ios #android You can now drag an item under another item that has no children" />
            <outline text="#web #desktop Many dialogs have been modernized" />
          </outline>
          <outline text="Bug Fixes">
            <outline text="#ios #android Fix bug where sign out button was missing from Settings" />
            <outline text="#ios #android Fix expanding the last item" />
            <outline text="#web #desktop When pasting multiple lines of text, the caret no longer moves to end of last item. The caret is now at beginning of the last item" />
            <outline text="#web #desktop Fix bug where pasting into a selected area cut off the text" />
          </outline>
        </outline>
      </outline>
    </outline>
  </outline>
  <outline _complete="true" text="Fuzzy notes" _note="https://www.askdavetaylor.com/how_do_i_write_a_fullscreen_bash_shell_script/">
    <outline _complete="true" text="tput - cursor control within shell script" />
    <outline _complete="true" text="Or use `curses` in C" />
    <outline _complete="true" text="Challenge with accepting keyboard input - loot at `stty` and `read` statement" />
    <outline _complete="true" text="Useful quora?" _note="https://stackoverflow.com/questions/8476332/writing-a-real-interactive-terminal-program-like-vim-htop-in-c-c-witho" />
    <outline _complete="true" text="Could use python" _note="https://docs.python.org/3/howto/curses.html" />
    <outline _complete="true" text="Scrolling" _note="https://github.com/mingrammer/python-curses-scroll-example/blob/master/tui.py&#10;https://github.com/LyleScott/Python-curses-Scrolling-Example/blob/master/curses_scrolling.py" />
    <outline _complete="true" text="Python curses built on C ncurses" />
  </outline>
  <outline text="WorkFlowy Extension API">
    <outline text="Official API" _note="Please note that the new API is &lt;b&gt;experimental&lt;/b&gt;. Email support@workflowy.com with any feedback.">
      <outline text="&lt;b&gt;Tree traversal&lt;/b&gt;">
        <outline text="WF.rootItem(): Item" _note="Get the root node." />
        <outline text="Item.getChildren(): Item[]" _note="To traverse the tree downwards." />
        <outline text="Item.getVisibleChildren(): Item[]" _note="Like getChildren() but takes into account the current search and the “show completed” setting. &lt;b&gt;Note&lt;/b&gt;: introduced in Dec 18 release." />
        <outline text="Item.getParent(): Item | null" _note="To traverse the tree upwards." />
        <outline text="Item.getNextVisibleSibling(ignoreSearch = false): Item | null" _note="&lt;b&gt;Note&lt;/b&gt;: new in the May 28th release." />
        <outline text="Item.getPreviousVisibleSibling(ignoreSearch = false): Item | null" _note="&lt;b&gt;Note&lt;/b&gt;: new in the May 28th release." />
        <outline text="Item.getNextPotentiallyVisibleSibling(ignoreSearch = false): Item | null" _note="&lt;b&gt;Note&lt;/b&gt;: deprecated in the May 28th release. Renamed to Item.getNextVisibleSibling()" />
        <outline text="Item.getPreviousPotentiallyVisibleSibling(ignoreSearch = false): Item | null" _note="&lt;b&gt;Note&lt;/b&gt;: deprecated in the May 28th release. Renamed to Item.getPreviousVisibleSibling()" />
      </outline>
      <outline text="&lt;b&gt;Tree querying&lt;/b&gt;">
        <outline text="WF.getItemById(id: string): Item" />
      </outline>
      <outline text="&lt;b&gt;Item information&lt;/b&gt;">
        <outline text="Item.getId(): string" _note="Get a node’s ID." />
        <outline text="Item.getUrl(): string" _note="&lt;b&gt;Note&lt;/b&gt;: new in the May 28th release." />
        <outline text="Item.equals(item: Item): boolean" _note="&lt;b&gt;Note&lt;/b&gt;: new in the May 28th release." />
        <outline text="Item.getName(): string" _note="Get the raw name, complete with html markup such as &amp;lt;b&amp;gt;Some bolded text&amp;lt;/b&amp;gt;." />
        <outline text="Item.getNameInPlainText(): string" _note="Plain text name, with markup tags stripped away." />
        <outline text="Item.getNote(): string" _note="Get the raw note, complete with html markup such as &amp;lt;b&amp;gt;Some bolded text&amp;lt;/b&amp;gt;." />
        <outline text="Item.getNoteInPlainText(): string" _note="Plain text note, with markup tags stripped away." />
        <outline text="Item.isCompleted(): boolean" />
        <outline text="Item.isShared(): boolean" />
        <outline text="Item.getPriority(): number" />
        <outline text="Item.getSharedUrl(): string" />
        <outline text="Item.getLastModifiedByUserId(): number" />
        <outline text="Item.getLastModifiedDate(): Date" />
        <outline text="Item.getCompletedDate(): Date" />
        <outline text="Item.getNumDescendants(maxCount: number): number" _note="Counts up to maxCount, then stops." />
        <outline text="Item.isMainTreeRoot(): boolean" _note="&lt;b&gt;Note&lt;/b&gt;: deprecated as of May 28th. Use Item.isMainDocumentRoot()." />
        <outline text="Item.isMainDocumentRoot(): boolean" _note="&lt;b&gt;Note&lt;/b&gt;: new in the May 28th release." />
        <outline text="Item.isReadOnly(): boolean" _note="&lt;b&gt;Note&lt;/b&gt;: new in the May 28th release." />
        <outline text="Item.getElement(): HTMLElement | null" _note="Returns the matching DOM element, if it exists. &lt;b&gt;Note&lt;/b&gt;: new in the May 28th release." />
      </outline>
      <outline text="&lt;b&gt;Document state&lt;/b&gt;">
        <outline text="WF.currentItem(): Item" _note="Current zoomed in item." />
        <outline text="WF.focusedItem(): Item" _note="The item that currently has keyboard focus." />
      </outline>
      <outline text="&lt;b&gt;Navigation&lt;/b&gt;">
        <outline text="WF.zoomIn(item: Item)" _note="Zooms into an item, with animation. This only works when the item provided is on screen." />
        <outline text="WF.zoomOut()" _note="Zooms out to the parent item, with animation." />
        <outline text="WF.zoomTo(item: Item, search?: string)" _note="Navigates directly to an item, without animation." />
      </outline>
      <outline text="&lt;b&gt;Tags&lt;/b&gt;">
        <outline text="WF.getItemTags(item: Item): Array&amp;lt;{index: number, tag: string}&amp;gt;" _note="Alias of WF.getItemNameTags(item: Item): Array&amp;lt;{index: number, tag: string}&amp;gt;" />
        <outline text="WF.getItemNameTags(item: Item): Array&amp;lt;{index: number, tag: string}&amp;gt;" _note="Gets the list of tags in the name of an item." />
        <outline text="WF.getItemNoteTags(item: Item): Array&amp;lt;{index: number, tag: string}&amp;gt;" _note="Gets the list of tags in the notes for an item." />
      </outline>
      <outline text="&lt;b&gt;Starring&lt;/b&gt;">
        <outline text="WF.starredItems(): Item[]" _note="&lt;b&gt;Deprecated&lt;/b&gt;: use WF.starredLocations()." />
        <outline text="WF.starredLocations(): {item: Item, search: string | null}[]" _note="&lt;b&gt;Note&lt;/b&gt;: introduced in May 7th release." />
        <outline text="WF.isCurrentLocationStarred(): boolean" _note="&lt;b&gt;Note&lt;/b&gt;: introduced in May 7th release." />
        <outline text="WF.toggleCurrentLocationStarred(): boolean" _note="&lt;b&gt;Note&lt;/b&gt;: introduced in May 7th release." />
      </outline>
      <outline text="&lt;b&gt;Editing&lt;/b&gt;" _note="All these operations create their own undo/redo edit group, that means each call will be undone individually. If you want to group multiple edits together so they get undone as a unit, use WF.editGroup().">
        <outline text="WF.createItem(parent: Item, priority: number): Item | null" />
        <outline text="WF.deleteItem(item: Item)" />
        <outline text="WF.duplicateItem(item: Item): Item | null" />
        <outline text="WF.expandItem(item: Item)" />
        <outline text="WF.collapseItem(item: Item)" />
        <outline text="WF.completeItem(item: Item)" _note="Toggles the completed state of an item." />
        <outline text="WF.moveItems(Items: Item[], newParent: Item, priority: number)" />
        <outline text="WF.setItemName(item: Item, content: string)" />
        <outline text="WF.setItemNote(item: Item, content: string)" />
        <outline text="WF.insertText(content: string)" _note="Inserts the given content at cursor." />
        <outline text="WF.editGroup(callback: () =&amp;gt; void)" _note="Perform multiple edits as part of the same edit group (for undo/redo purposes)." />
        <outline text="WF.save()" />
        <outline text="WF.undo()" />
        <outline text="WF.redo()" />
      </outline>
      <outline text="&lt;b&gt;Selection&lt;/b&gt;">
        <outline text="WF.getSelection(): Item[]" />
        <outline text="WF.setSelection(items: Item[])" />
      </outline>
      <outline text="&lt;b&gt;Cursor&lt;/b&gt;">
        <outline text="WF.editItemName(item: Item)" _note="Moves cursor to the end of the item’s name." />
        <outline text="WF.editItemNote(item: Item)" _note="Moves cursor to the end of the item’s note." />
      </outline>
      <outline text="&lt;b&gt;Search&lt;/b&gt;">
        <outline text="WF.search(query: string)" />
        <outline text="WF.currentSearchQuery(): string | null" />
        <outline text="WF.clearSearch()" />
      </outline>
      <outline text="&lt;b&gt;Settings&lt;/b&gt;">
        <outline text="WF.completedVisible(): boolean" />
        <outline text="WF.toggleCompletedVisible()" />
      </outline>
      <outline text="&lt;b&gt;Sharing and Exporting&lt;/b&gt;">
        <outline text="WF.showShareDialog(item: Item)" />
        <outline text="WF.showExportDialog(items: Item[])" />
        <outline text="WF.exportText(items: Item[]): string" />
        <outline text="WF.exportHTML(items: Item[]): string" />
        <outline text="WF.exportOPML(items: Item[]): string" />
      </outline>
      <outline text="&lt;b&gt;Messages and Alerts&lt;/b&gt;">
        <outline text="WF.showMessage(html: string, isError?: boolean)" />
        <outline text="WF.hideMessage()" />
        <outline text="WF.showAlertDialog(html: string, title?: string)" />
        <outline text="WF.hideDialog()" />
      </outline>
      <outline text="&lt;b&gt;Interop&lt;/b&gt;">
        <outline text="WF.getItemDOMElement(item: Item): HTMLElement" _note="&lt;b&gt;Note: &lt;/b&gt;deprecated as of May 28th. Use Item.getElement()." />
      </outline>
      <outline text="&lt;b&gt;Events&lt;/b&gt;" _note="&lt;b&gt;Warning: &lt;/b&gt;very experimental and likely to change!">
        <outline text="Define a global function WFEventListener(eventName: string). This will be called on when a bunch of interesting events happen." />
        <outline text="Some example event names:" _note="These are likely to change in the future!">
          <outline text="document_ready" />
          <outline text="zoom--in" />
          <outline text="zoom--out" />
          <outline text="expand" />
          <outline text="collapse" />
          <outline text="edit" />
          <outline text="bullet-menu--opened" />
          <outline text="bullet-menu--closed" />
        </outline>
      </outline>
    </outline>
    <outline _complete="true" text="Scheduled for release on September 25th">
      <outline text="#bug WF.editItemNote doesn’t work" />
    </outline>
    <outline text="Roadmap">
      <outline text="A way to get search results" />
      <outline text="A way to perform search in the background" />
      <outline text="Change WF.insertText() to behave like paste, i.e. support rich text and OPML" />
      <outline text="WF.toggleBold(), WF.toggleItalic(), WF.toggleUnderline()" />
      <outline _complete="true" text="Make all starred functions work for saved searches" />
      <outline _complete="true" text="Add search parameter to WF.zoomTo()" />
      <outline text="#bug WF.zoomIn breaks when item is not on screen">
        <outline text="Possible solution: remove the argument and always zoom in on focused item." />
      </outline>
      <outline text="#bug WF.setItemName/WF.setItemNote don't work when item is not on screen" />
      <outline text="#bug WF.clearSearch() doesn't work when the search query is only whitespace" />
      <outline text="#bug WF.setSelection retains focus on previous item" />
      <outline text="#bug WF.createItem(item, -1) creates an item at priority 0 location, but sync errors show up until the new item is deleted (have not tested if moving the item, changing text, etc. might also fix whatever is going wrong)" />
      <outline text="#utility Functions to convert between the full IDs and the short IDs used in the URLs" />
      <outline text="Rename WF.completeItem() to WF.toggleCompleted()" />
      <outline text="Option to search a list of items by ID" />
      <outline text="Option to select all search results" />
    </outline>
    <outline text="Deprecated – use provided replacement">
      <outline text="undo_redo.startOperationBatch">
        <outline text="use WF.editGroup(() =&amp;gt; {...})" />
      </outline>
      <outline text="undo_redo.finishOperationBatch">
        <outline text="use WF.editGroup(() =&amp;gt; {...})" />
      </outline>
      <outline text="getSelectedItems">
        <outline text="Use WF.getSelection()" />
      </outline>
      <outline text="addToItemSelection">
        <outline text="Use WF.setSelection()" />
      </outline>
      <outline text="clearItemSelection">
        <outline text="Use WF.setSelection()" />
      </outline>
      <outline text="focusFirstChildOfSelected">
        <outline text="Use WF.editItemName" />
      </outline>
      <outline text="addItemToTopOfSelected">
        <outline text="Use WF.createItem" />
      </outline>
      <outline text="childrenAreInReadOnlyTree">
        <outline text="Only used in sorting script to generate an error message to the user.  A nice-to-have, but not required." />
        <outline text="Use Item.isReadOnly()" />
      </outline>
      <outline text="getPlainText: method on ContentText">
        <outline text="Use WF.getNameInPlainText and WF.getNoteInPlainText" />
      </outline>
    </outline>
    <outline text="Deprecated – will provide replacement before removing">
      <outline text="SOURCE_VERSION" />
      <outline text="eventEmitter: location_history.eventEmitter" />
      <outline text="getMatchingKnownProjectIdForTruncatedProjectId: method on AllProjectTreesHelper">
        <outline text="getAllProjectTreesHelper().getMatchingKnownProjectIdForTruncatedProjectId(truncatedId)" />
      </outline>
      <outline text="applyLocalMoveForProjectReferences" />
      <outline text="blurFocusedContent" />
      <outline text="htmlEscapeText" />
      <outline text="htmlEscapeTextForContent" />
      <outline text="selectOnActivePage" />
      <outline text="getRootDescendantTagCounts" />
      <outline text="tagInfoMap: property on TagCounter" />
      <outline text="Item.getTagManager().descendantTagCounts" />
      <outline text="descendentTagCounts.tagInfoMap[tagName].canonicalName" />
    </outline>
    <outline text="Will be removed soon – if you need these, please comment describing your use case">
      <outline text="getProjectReferenceFromDomProject" />
      <outline text="getActivePage" />
      <outline text="getAllProjectTreesHelper" />
    </outline>
    <outline text="Removed – if you need these, please comment describing your use case ">
      <outline text="JQuery.getProject" />
      <outline text="JQuery.moveCursorToEnd" />
      <outline text="JQuery.getVisibleChildren" />
      <outline text="JQuery.hasVisibleChildren" />
      <outline text="$(&quot;#searchBox&quot;)" />
      <outline text="IS_IOS" />
      <outline text="IS_CHROME" />
      <outline text="IS_FIREFOX" />
      <outline text="IS_MOBILE" />
      <outline text="IS_MAC_OS" />
    </outline>
    <outline text="Comments">
      <outline text="Requests from FreezerburnVinny">
        <outline text="Instead of modifying WF.insertText, add something such as &quot;WF.insertRichText&quot; that will behave like paste, interpreting the contents to support things like OPML" _note="This way, there's always a way to insert raw text into the tree without having to worry about something being interpreted in a way that the developer didn't want" />
        <outline text="WF.getItemTags should return a concatenation of WF.getItemNameTags and WF.getItemNoteTags" _note="The name implies that all tags from the item will be returned, and it seems odd to have an alias for another function in the API" />
        <outline text="Ability to generate a customized &quot;view&quot; of existing nodes" _note="Kind of like a custom way to provide search, The plugin can pick nodes that will show up in the custom view based on whatever criteria it wants" />
        <outline text="Ability to create an item that has the same projectid as another item, and place it into the tree such that when editing it/its children, both items with the same projectid will be edited" />
      </outline>
      <outline text="by michi">
        <outline text="Insert text at caret .">
          <outline text="I want the same function as Ctrl(⌘)+v of PC shortcut key or &quot;Paste&quot; on mobile context menu." />
          <outline text="For example">
            <outline text="WF.insertAtCaret(String)">
              <outline text="String is plain text or OPML text." />
            </outline>
            <outline text="Before">
              <outline text="item[CARET]1 " />
              <outline text="item2" />
            </outline>
            <outline text="After use WF.insertAtCaret(&quot;A\nitem3\n item4\n  ITEM&quot;)" _note="A&#10;item3&#10; item4&#10;  ITEM">
              <outline text="itemA" />
              <outline text="item3">
                <outline text="item4">
                  <outline text="ITEM[CARET]1" />
                </outline>
              </outline>
              <outline text="item2" />
            </outline>
          </outline>
          <outline text="There are bugs in Paste function now.">
            <outline text="Even if there is a space at the beginning of the line, it is not indented. All items are pasted at the same level.">
              <outline text="Clipboard contents" _note="item1&#10; item2&#10;  item3" />
              <outline text="After current paste">
                <outline text="item1" />
                <outline text="item2" />
                <outline text="item3" />
              </outline>
              <outline text="After past paste">
                <outline text="item1">
                  <outline text="item2">
                    <outline text="item3" />
                  </outline>
                </outline>
              </outline>
            </outline>
            <outline text="If paste multiple lines text, caret move to end of last item. Caret should be at beginning of the last item.">
              <outline text="Before paset">
                <outline text="aaa[CARET]AAA" />
                <outline text="bbb" />
              </outline>
              <outline text="Clipboard contents" _note="CCC&#10;DDD" />
              <outline text="After paset">
                <outline text="aaaCCC" />
                <outline text="DDD" />
                <outline text="AAA[CARET]" />
                <outline text="bbb" />
              </outline>
              <outline text="My hope">
                <outline text="aaaCCC" />
                <outline text="DDD" />
                <outline text="[CARET]AAA" />
                <outline text="bbb" />
              </outline>
            </outline>
            <outline text="If paste multiple lines text at Item with children,  It is pasted in a place different from Caret.">
              <outline text="Before paset">
                <outline text="item1[CARET] ">
                  <outline text="item2" />
                </outline>
              </outline>
              <outline text="Clipboard contents" _note="CCC&#10;DDD" />
              <outline text="After current paste">
                <outline text="item1 ">
                  <outline text="item2" />
                </outline>
                <outline text="CCC" />
                <outline text="DDD[CARET]" />
              </outline>
              <outline text="After past paste" _note="&quot;DDD&quot; may have been under &quot;item2&quot;">
                <outline text="item1CCC">
                  <outline text="DDD[CARET]" />
                  <outline text="item2" />
                </outline>
              </outline>
            </outline>
          </outline>
        </outline>
      </outline>
    </outline>
  </outline>
  <outline _complete="true" text="GravitApp">
    <outline text="Bugs">
      <outline text="Fix ability to beat initial load to display friends" />
      <outline text="Fix expired token issue" />
      <outline text="Eventually need to paginate number of friends or number of events (large numbers = breaking)" />
    </outline>
    <outline text="Features">
      <outline text="Friends system">
        <outline text="Incorporate new FB.login to force new permissions" />
        <outline text="Create add friend functionality on event" />
        <outline text="&quot;confirm invite&quot; modal" />
        <outline text="Notification on invite">
          <outline text="Web push notification?" />
          <outline text="Messenger bot?" />
          <outline text="email?" />
        </outline>
      </outline>
      <outline text="Mapping/routing" />
      <outline text="Messenger bot" />
    </outline>
  </outline>
</body>
